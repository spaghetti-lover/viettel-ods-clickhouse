{"version":3,"file":"module.js","mappings":";8JAAA,MAyEIA,EAAY,WAChB,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,CAAC,EAAEG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,CAAC,EAAEK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,GAAG,IAAIC,GAAK,CAAC,EAAE,IAAIC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,GAAG,GAAG,IAAIC,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,IAAIC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAA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G,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAA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EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK1C,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,KAAKvE,EAAEuE,GAAK,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,GAAGlE,GAAKL,EAAE,CAAC,EAAE,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,IAAIA,EAAEc,EAAI,CAAC,EAAE,IAAI,CAAC,GAAGL,IAAMT,EAAEc,EAAI,CAAC,EAAE,KAAKd,EAAE4E,GAAK,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,MAAM5E,EAAE4C,EAAI,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,OAAO5C,EAAEsB,EAAI,CAAC,EAAE,MAAM,CAAC,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAIC,GAAK,CAAC,IAAI,CAAC,EAAE,MAAM1C,EAAEgD,EAAI,CAAC,EAAE,MAAM,CAAC,GAAGzB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,IAAIC,EAAI,IAAI,GAAG,IAAI,GAAG,IAAIC,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAA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AAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EA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,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,IAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,IAAI,IAAIE,GAAK,CAAC,GAAGnB,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAA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KAAK,EAAE,OAAO,GAEd,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,MAAO,UAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,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ACA,YACA,QACA,QACA,WACA,UACA,MACA,UACA,QACA,oBACA,qBACA,uBACA,QACA,SACA,OAEA,SAEA,gBAEEsD,GAAwBtD,GAAc,CACxC,yBACA,kBACA,uBAEEuD,GAAgBvD,GAAc,CAChC,OACA,qCACA,yBAEEwD,GAAkBxD,GAAc,CAElC,qBAEA,WACA,cACA,oBAEA,yBAEA,2BAGSyD,GAAW,CACpBl6E,KAAM,WACNm6E,iBAAkB,CACdR,kBACAC,gBAAiB,IAAIA,MAAoBE,MAA0BD,IACnEE,yBACAC,iBACAC,mBACAG,iBC9JgB,CAEpB,MACA,MACA,MACA,KACA,MACA,uBACA,KACA,UACA,KACA,OACA,OACA,UACA,WACA,SACA,QACA,OACA,UACA,UACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,YACA,MACA,OACA,OACA,QACA,WACA,SACA,OACA,SACA,KACA,SACA,KACA,QACA,YACA,OACA,KACA,OACA,UACA,OACA,QACA,SACA,QACA,UACA,MACA,KACA,MACA,OACA,QACA,KACA,KACA,KACA,QACA,QACA,OACA,YACA,YACA,QACA,QACA,YACA,UACA,QACA,SACA,OACA,SACA,MACA,OACA,QACA,cACA,OACA,KACA,QACA,OACA,YACA,QACA,SACA,QACA,OACA,QACA,SACA,OACA,SAEA,OAEA,OACA,OACA,QACA,KACA,MACA,QACA,UACA,WACA,UACA,WACA,iBDoDIC,kBClDiB,CAErB,QACA,OACA,QACA,OACA,WACA,YACA,WACA,QACA,MACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,aACA,aACA,UACA,SACA,SACA,OACA,YD2BIC,sBEhKiB,CAErB,kBACA,8BACA,qBACA,sBACA,eACA,oBACA,wBACA,sBACA,qBACA,qBAEA,YACA,YACA,MACA,OACA,QACA,UACA,YACA,aACA,MACA,MACA,mBACA,aACA,cACA,aACA,MACA,UACA,WAEA,YACA,YACA,mBACA,MACA,UACA,SACA,UACA,QACA,UACA,cACA,aACA,MACA,MACA,aACA,MAEA,wBACA,mBACA,mBACA,iBAGA,eACA,eACA,kBACA,iBACA,sBACA,2BACA,gBACA,SACA,cACA,UACA,eAEA,YAGA,mBACA,gBACA,YAEA,eACA,UACA,OACA,WACA,WACA,YACA,aACA,sBACA,cACA,WACA,aACA,YAEA,mBACA,WACA,UACA,eACA,eACA,gBACA,iBACA,kBACA,WACA,iBAEA,QAEA,iBAEA,qBACA,qBACA,WACA,UACA,cACA,eACA,YACA,aACA,cACA,iBACA,YACA,yBACA,cACA,kBACA,kBACA,mBACA,cACA,gBACA,eACA,YACA,gBACA,eACA,cACA,cACA,UACA,aACA,cACA,YACA,YACA,kBACA,cACA,qBACA,kBACA,iBACA,eACA,0BACA,aACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,aACA,YACA,cACA,iBACA,yBACA,iBACA,aACA,mBACA,eACA,eACA,YACA,cACA,gBACA,gBACA,aACA,WACA,eACA,YACA,OACA,OAEA,mBACA,MACA,OACA,SACA,SAEA,iBACA,kBACA,0BACA,oBAEA,gBACA,UACA,eACA,gBACA,mBAEA,eACA,aACA,sBACA,aACA,qBACA,mBACA,4BACA,mBACA,iBAEA,MACA,OACA,SACA,SACA,cACA,OACA,OACA,MACA,QACA,MACA,KACA,MACA,QACA,WACA,QACA,MACA,cACA,gBACA,cACA,WACA,gBACA,MACA,QACA,QACA,OACA,UACA,QACA,MACA,OACA,OACA,QACA,MACA,OACA,OACA,QACA,MACA,OACA,OACA,QACA,QACA,eAEA,cACA,aACA,YACA,OACA,MACA,kBACA,kBAEA,qBACA,0BACA,mBACA,kBACA,eACA,sBACA,oBACA,WACA,oBACA,iBAEA,OACA,aACA,eACA,YACA,QACA,aAEA,eAEA,OACA,YACA,aACA,aACA,cACA,SACA,UACA,WACA,WAEA,QACA,cACA,cACA,mBACA,MACA,uBACA,wBACA,SACA,kBACA,YACA,SACA,cACA,cACA,WACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,YACA,yBACA,eACA,kBACA,iBACA,qBACA,eACA,iBACA,gBACA,UACA,SACA,UACA,QACA,OACA,QACA,+BACA,UACA,QACA,cACA,SACA,SACA,YACA,YACA,YACA,iBACA,SACA,YACA,OACA,UACA,QAEA,eACA,OACA,UACA,WACA,WACA,YACA,aACA,cACA,aAEA,oBACA,UACA,SACA,YACA,gBACA,gBACA,iBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,eACA,cACA,cAEA,gBAEA,WACA,KACA,SACA,SAGA,MACA,UACA,SACA,UACA,OACA,QACA,YACA,aACA,uBACA,QACA,eACA,wBACA,OACA,MACA,MACA,OACA,MACA,YACA,SACA,aACA,cACA,MACA,MACA,SACA,WACA,UACA,WAEA,YAEA,UACA,QACA,OACA,QACA,aACA,UACA,SAGA,WACA,WACA,SACA,SACA,SACA,wBACA,QACA,MAEA,eACA,eACA,oBACA,OACA,WACA,WACA,MACA,YACA,YACA,kBACA,OACA,SACA,QACA,oBACA,MACA,iBACA,UACA,mBACA,SACA,oBACA,OACA,YACA,oBACA,mBACA,oBACA,oBACA,kBACA,mBACA,oBACA,mBACA,mBACA,OACA,OAEA,YACA,WACA,mBACA,kBAEA,eACA,sBAEA,MACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,MACA,OACA,UACA,MACA,QACA,KACA,MACA,OACA,QACA,KACA,MACA,UACA,OACA,QACA,MACA,OACA,OACA,MACA,OAEA,eACA,iBACA,iBAEA,SAEA,QACA,OACA,SACA,QACA,OACA,QACA,UACA,QACA,OACA,QACA,QACA,SACA,QAEA,mBACA,0BACA,cAEA,OACA,SACA,MAEA,MACA,QACA,MACA,MACA,SACA,MACA,YACA,aACA,cACA,MACA,aACA,OACA,YACA,QACA,eACA,kBACA,kBACA,OACA,kBACA,aAEA,eACA,QACA,cACA,OACA,mBACA,KACA,WACA,OACA,OACA,YAEA,iBACA,+BAEA,UAE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A,kCACA,uBACA,+BACA,0BACA,4BACA,wBACA,yBACA,2BACA,2BACA,6BACA,+BACA,iCACA,gCACA,cACA,gBACA,oCACA,yBACA,+BACA,uBACA,gBACA,kBACA,iBACA,kEACA,mBACA,sCACA,8BACA,yBACA,2BACA,sBACA,oBACA,0BACA,+BACA,yBACA,wBACA,kBACA,iBACA,UACA,iCACA,4BACA,aACA,sBACA,oBACA,kBACA,gCACA,qBACA,2BACA,wBACA,0BACA,yBACA,YACA,yBACA,cACA,gBACA,eACA,kBACA,4BACA,YACA,cACA,kCACA,uBACA,gBACA,cACA,qBACA,gBACA,uBACA,kCACA,gCACA,iBACA,eACA,uBACA,sBACA,kBACA,wBACA,gBACA,wBACA,iCACA,gBACA,eACA,iBACA,sBACA,sBACA,iCACA,eACA,uCACA,sBACA,wBACA,mCACA,gCACA,uCACA,eACA,kBACA,OACA,QACA,UACA,UACA,QACA,aACA,OACA,OACA,OACA,UACA,gBACA,UACA,yBACA,iDACA,SACA,WACA,SACA,SACA,iCACA,YACA,8BACA,iBACA,cACA,0BACA,0BACA,gBACA,eACA,WACA,WACA,aACA,oBACA,6CACA,iBACA,SACA,wBACA,+CACA,UAEE,GAAwBA,GAAc,CAAC,cAAe,eAAgB,oBACtE,GAAgBA,GAAc,CAChC,OACA,qCACA,yBAEE,GAAkBA,GAAc,CAClC,YACA,YACA,WACA,2BAES2F,GAAM,CACfp8E,KAAM,MACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBCrQgB,CAEpB,WACA,MACA,QACA,QACA,MACA,WACA,QACA,QACA,MACA,MACA,KACA,aACA,YACA,UACA,KACA,aACA,QACA,gBACA,MACA,YACA,SACA,QACA,UACA,SACA,aACA,KACA,QACA,OACA,SACA,UACA,cACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,aACA,SACA,SACA,UACA,SACA,SACA,YACA,UACA,aACA,aACA,WACA,WACA,QACA,YACA,SACA,QACA,UACA,eACA,mBACA,eACA,iBACA,iBACA,eACA,oBACA,mBACA,eACA,SACA,QACA,OACA,WACA,oBACA,mBACA,MACA,OACA,aACA,WACA,SACA,SACA,kBACA,iBACA,aACA,UACA,UACA,WACA,aACA,SACA,YACA,aACA,WACA,aACA,gBACA,cACA,UACA,WACA,aACA,WACA,KACA,WACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,SACA,WACA,aACA,MACA,WACA,SACA,QACA,SACA,QACA,SACA,YACA,YACA,YACA,UACA,SACA,OACA,UACA,WACA,WACA,UACA,SACA,QACA,YACA,OACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,WACA,UACA,YACA,MACA,SACA,KACA,OACA,QACA,UACA,QACA,UACA,OACA,eACA,SACA,OACA,OACA,OACA,QACA,WACA,KACA,YACA,SACA,KACA,YACA,YACA,YACA,QACA,YACA,aACA,MACA,WACA,UACA,QACA,QACA,cACA,SACA,YACA,YACA,OACA,KACA,SACA,SACA,YACA,UACA,MACA,OACA,OACA,OACA,MACA,QACA,WACA,QACA,UACA,WACA,QACA,OACA,OACA,QACA,WACA,QACA,YACA,SACA,YACA,iBACA,UACA,WACA,OACA,UACA,WACA,OACA,aACA,eACA,WACA,cACA,eACA,SACA,UACA,WACA,OACA,WACA,QACA,SACA,MACA,MACA,YACA,UACA,KACA,UACA,UACA,WACA,aACA,aACA,aACA,OACA,UACA,aACA,OACA,UACA,OACA,QACA,WACA,OACA,KACA,MACA,SACA,MACA,YACA,KACA,OACA,eACA,WACA,SACA,KACA,QACA,MACA,QACA,OACA,aACA,UACA,SACA,WACA,YACA,OACA,YACA,cACA,eACA,aACA,WACA,OACA,UACA,YACA,OACA,WACA,YACA,UACA,UACA,UACA,SACA,aACA,YACA,UACA,OACA,SACA,QACA,UACA,QACA,OACA,OACA,QACA,WACA,aACA,cACA,UACA,UACA,SACA,SACA,QACA,WACA,UACA,WACA,SACA,qBACA,SACA,UACA,SACA,QACA,OACA,WACA,gBACA,aACA,cACA,kBACA,kBACA,gBACA,WACA,UACA,MACA,YACA,OACA,SACA,aACA,MACA,MACA,YACA,SACA,aACA,SACA,SACA,SACA,UACA,SACA,WACA,SACA,YACA,WACA,UACA,eACA,MACA,SACA,SACA,OACA,OACA,SACA,WACA,MACA,QACA,UACA,WACA,QACA,WACA,YACA,SACA,WACA,OACA,WACA,SACA,QACA,YACA,UACA,UACA,SACA,SACA,UACA,SACA,cACA,QACA,aACA,OACA,KACA,cACA,UACA,OACA,WACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,YACA,QACA,SACA,WACA,UACA,OACA,UACA,OACA,WACA,UACA,OACA,WACA,QACA,QACA,OACA,UACA,MACA,QACA,aACA,YACA,gBACA,OACA,SD1IIC,kBC4IiB,CAErB,QACA,SACA,SACA,OACA,UACA,QACA,OACA,YACA,OACA,OACA,WACA,SACA,MACA,UACA,SACA,mBACA,QACA,SACA,SACA,UACA,MACA,OACA,OACA,OACA,UACA,WACA,eACA,kBACA,QACA,OACA,QACA,WACA,UACA,WACA,OACA,OACA,YACA,YACA,UACA,cDpLIC,sBDvQiB,CAErB,YACA,MACA,cACA,QACA,YACA,aACA,kBACA,YACA,WACA,UACA,MACA,SACA,MACA,kBACA,kBACA,eACA,YACA,YACA,aACA,iBACA,YACA,UACA,aACA,WACA,WACA,WACA,SACA,cACA,MACA,WACA,gBACA,SACA,WAEA,MACA,SACA,OACA,WACA,YACA,cACA,aACA,cACA,YACA,MACA,eACA,cACA,aACA,aACA,cACA,QACA,YACA,OACA,OACA,QACA,QACA,SACA,YACA,QACA,SACA,SACA,SACA,eACA,QACA,cACA,UACA,OACA,mBACA,MACA,WACA,gBACA,oBACA,mBACA,SACA,MACA,OACA,MACA,kBACA,mBACA,YACA,aACA,MACA,UACA,aACA,YACA,gBACA,YACA,OACA,eACA,uBACA,iBACA,WACA,kBACA,SACA,cACA,eACA,UACA,QACA,aACA,SACA,mBACA,aACA,aACA,eACA,cACA,UACA,kBACA,MACA,UACA,YACA,QACA,qBACA,kBACA,UACA,WACA,OACA,QACA,QACA,cACA,MACA,WACA,OACA,gBACA,qBACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,aACA,cACA,aACA,eACA,aACA,aACA,WACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,KACA,SACA,mBACA,QACA,eACA,kBACA,QACA,OACA,QACA,MACA,kBACA,cACA,mBACA,MACA,SACA,kBACA,MACA,QACA,YACA,iBACA,eACA,WACA,aACA,eACA,YACA,YACA,qBACA,MACA,SACA,MACA,OACA,eACA,UACA,YACA,WACA,SACA,MACA,QACA,WACA,UACA,cACA,gBACA,UACA,cACA,OACA,SACA,WACA,UACA,eACA,iBACA,eACA,cACA,qBACA,iBACA,gBACA,SACA,UACA,MACA,UACA,QACA,QACA,kBACA,OACA,QACA,WACA,mBACA,mBACA,SACA,kBACA,OACA,MACA,OACA,UACA,QACA,OACA,QACA,UACA,SACA,WACA,SACA,UACA,UACA,UACA,YACA,aACA,eACA,MACA,OACA,aACA,eACA,YACA,YACA,mBACA,gBACA,gBACA,WACA,UACA,UACA,UACA,SACA,gBACA,WACA,WACA,YACA,iBACA,eACA,mBACA,aACA,YACA,OACA,aACA,kBACA,WACA,QACA,UACA,YACA,cACA,QACA,cACA,QACA,QACA,qBACA,iBACA,qBACA,wBACA,uBACA,uCACA,OACA,WACA,gBACA,eACA,gBACA,aACA,YACA,cACA,aACA,YACA,gBACA,WACA,QACA,WACA,SACA,eACA,UACA,cACA,iBACA,eACA,OACA,gBACA,cAEA,aACA,aACA,SACA,WAGA,OACA,aACA,QACA,MACA,OACA,aACA,cACA,aACA,YACA,kBAEA,QCvDIC,YAAa,CAAC,MACdC,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,IAAK,IAAK,OACvC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAM,KAAM,MAAOC,eAAe,IAEzEC,WAAY,CAAC,SACbC,WAAY,CAAEt9C,MAAO,MAAO8+C,KAAM,OAClCtB,WAAY,CAAEC,YAAY,EAAMC,MAAO,CAAC,MACxCqB,WAAY,CAAE/+C,MAAO,MAAO8+C,KAAM,OAClCf,UAAW,CACP,KACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGRW,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KEpSvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,OACA,QACA,WACA,SACA,eACA,uCACA,QACA,SACA,uBACA,kBACA,gBACA,eAGA,cACA,SAEA,MAEA,aACA,4BACA,aACA,SACA,SAEA,oBAEE,GAAyBA,GAAc,CAAC,8BACxC,GAAwBA,GAAc,CAExC,uCAEA,SACA,mBACA,gCAEA,cAEA,aAEA,cACA,eACA,iBACA,gBACA,gBACA,gDACA,eACA,uCACA,gBACA,sFAEA,mBAEA,uBACA,qBAEA,kBACA,iDACA,0CACA,iDACA,8CACA,wBACA,OACA,QACA,iJACA,yDACA,iEACA,4CACA,2EACA,uBACA,4BACA,yGACA,gCACA,uCACA,gBACA,cACA,+CACA,iBACA,iCACA,UACA,kBACA,iBACA,oBACA,iCACA,iBACA,uBACA,uBACA,2HACA,+DACA,sBACA,sBAEA,eACA,wCACA,sCACA,qJACA,eACA,UACA,mIACA,uDACA,aACA,OACA,UACA,gBACA,UACA,yBACA,4BACA,sJACA,wCACA,YACA,iBACA,+GACA,wCACA,0BACA,aACA,iDACA,wDACA,4BACA,mBACA,kBACA,0BACA,MACA,wBACA,iDAEE,GAAwBA,GAAc,CAAC,cAAe,eAAgB,oBACtE,GAAgBA,GAAc,CAChC,OACA,qCACA,gCACA,yBAEE,GAAkBA,GAAc,CAClC,YACA,YACA,WACA,2BAGS8F,GAAO,CAChBv8E,KAAM,OACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBC3JgB,CAIpB,SACA,YACA,SACA,SACA,WACA,MACA,QACA,MACA,WACA,QACA,QACA,MACA,MACA,SACA,WACA,QACA,YACA,aACA,KACA,MACA,aACA,YACA,SACA,SACA,aACA,gBACA,aACA,SACA,QACA,UACA,OACA,OACA,aACA,KACA,QACA,OACA,SACA,cACA,OACA,OACA,QACA,KACA,QACA,UACA,UACA,aACA,SACA,UACA,SACA,UACA,cACA,WACA,SACA,aACA,YACA,UACA,kBACA,aACA,WACA,aACA,WACA,UACA,WACA,OACA,QACA,YACA,SACA,WACA,QACA,OACA,YACA,UACA,eACA,eACA,iBACA,iBACA,eACA,oBACA,mBACA,eACA,SACA,QACA,WACA,oBACA,mBACA,MACA,OACA,aACA,WACA,SACA,SACA,kBACA,iBACA,aACA,aACA,UACA,UACA,WACA,QACA,SACA,aACA,SACA,WACA,aACA,YACA,OACA,WACA,aACA,SACA,gBACA,cACA,UACA,WACA,aACA,WACA,KACA,WACA,OACA,UACA,OACA,OACA,SACA,QACA,SACA,WACA,aACA,MACA,WACA,SACA,WACA,QACA,SACA,QACA,SACA,YACA,YACA,YACA,UACA,SACA,OACA,SACA,WACA,UACA,QACA,SACA,QACA,YACA,OACA,QACA,cACA,MACA,UACA,SACA,OACA,WACA,OACA,OACA,WACA,WACA,UACA,YACA,MACA,SACA,KACA,OACA,QACA,QACA,UACA,OACA,WACA,eACA,SACA,OACA,OACA,OACA,QAEA,WACA,KACA,SACA,YACA,aACA,KACA,UACA,YACA,YACA,YACA,QACA,UACA,YACA,MACA,WACA,UACA,SACA,QACA,QACA,cACA,SACA,YACA,YACA,YACA,YACA,OACA,KACA,SACA,YACA,UACA,OACA,OACA,OACA,aACA,gBACA,cACA,cACA,iBACA,aACA,aACA,aACA,OACA,MACA,OACA,QACA,MACA,WACA,aACA,UACA,OACA,QACA,OACA,SACA,OACA,QACA,WACA,UACA,QACA,YACA,YACA,iBACA,WACA,UACA,OACA,WACA,MACA,SACA,OACA,aACA,OACA,UACA,eACA,WACA,QACA,cACA,eACA,aACA,SACA,UACA,WACA,SACA,QACA,OACA,WACA,QACA,SACA,YACA,MACA,WACA,QACA,QACA,SACA,MACA,YACA,UACA,KACA,UACA,UACA,WACA,aACA,aACA,aACA,OACA,UACA,aACA,MACA,UACA,YACA,QACA,OACA,QACA,WACA,OACA,SACA,KACA,MACA,SACA,MACA,YACA,OACA,KACA,OACA,OACA,WACA,SACA,KACA,QACA,aACA,WACA,MACA,QACA,OACA,UACA,aACA,UACA,SACA,OACA,WACA,YACA,OACA,YACA,cACA,eACA,aACA,UACA,WACA,OACA,UACA,eACA,kBACA,kBACA,SACA,aACA,YACA,OACA,OACA,WACA,UACA,UACA,UACA,QACA,SACA,aACA,YACA,UACA,YACA,QACA,QACA,OACA,kBACA,SACA,OACA,QACA,WACA,aACA,cACA,UACA,cACA,UACA,SACA,SACA,QACA,WACA,UACA,SACA,qBACA,SACA,YACA,UACA,SACA,MACA,QACA,WACA,SACA,UACA,MACA,aACA,YACA,OACA,MACA,MACA,YACA,OACA,SACA,SACA,aACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,YACA,WACA,UACA,eACA,MACA,SACA,SACA,OACA,OACA,OACA,SACA,WACA,MACA,QACA,iBACA,oBACA,UACA,QACA,WACA,YACA,SACA,WACA,YACA,UACA,UACA,cACA,cACA,QACA,aACA,cACA,MACA,OACA,aACA,KACA,cACA,WACA,UACA,OACA,aACA,OACA,WACA,WACA,OACA,OACA,QACA,SACA,OACA,UACA,SACA,QACA,SACA,WACA,MACA,QACA,MACA,OACA,SACA,QACA,QACA,SACA,WACA,UACA,OACA,UACA,aACA,OACA,WACA,OACA,OACA,WACA,QACA,QACA,OACA,SACA,UACA,UACA,UACA,QACA,aACA,SACA,gBACA,UACA,aACA,YACA,cACA,aACA,YACA,WACA,gBACA,WACA,QACA,SACA,eACA,WACA,UACA,cACA,eACA,YACA,OACA,QACA,MACA,QDnVIC,kBCqViB,CAErB,QACA,SACA,SACA,MACA,OACA,UACA,QACA,OACA,YACA,OACA,OACA,WACA,OACA,SACA,WACA,UACA,MACA,SACA,mBACA,QACA,UACA,MACA,UACA,OACA,UACA,OACA,QACA,WACA,OACA,YACA,YACA,UACA,aACA,ODvXIC,sBE7JiB,CAGrB,YACA,MACA,OACA,cACA,QACA,YACA,YACA,aACA,QACA,aACA,kBACA,QACA,WACA,gBACA,iBACA,UACA,MACA,SACA,MACA,kBACA,kBAEA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,OACA,aACA,SACA,cACA,MACA,UACA,WACA,MACA,WACA,gBACA,SACA,WAEA,MACA,SACA,OACA,WACA,YACA,cACA,aACA,cACA,YACA,UACA,wBACA,aACA,QACA,OACA,OACA,QACA,QACA,gBACA,gBACA,aACA,SACA,YACA,SACA,QACA,SACA,eACA,cACA,OACA,UACA,cACA,mBACA,MACA,WACA,mBACA,SACA,WACA,MACA,OACA,MACA,UACA,UACA,WACA,oBACA,mBACA,MACA,UACA,aACA,gBACA,YACA,YACA,OACA,kBACA,iBACA,kBACA,mBACA,iBACA,cACA,eACA,aACA,UACA,aACA,SACA,YACA,aACA,gBACA,YACA,gBACA,cACA,cACA,UACA,mBACA,SACA,UACA,cACA,iBACA,cACA,eACA,MACA,UACA,YACA,QACA,kBACA,qBACA,qBACA,uBACA,eACA,UACA,WACA,WACA,WACA,YACA,cACA,cACA,cACA,eACA,MACA,WACA,OACA,qBACA,qBACA,mBACA,cACA,gBACA,WACA,kBACA,aACA,iBACA,YACA,gBACA,WACA,qBACA,SACA,SACA,QACA,YACA,UACA,aACA,YACA,SACA,aACA,cACA,aACA,eACA,cACA,aACA,aACA,OACA,WACA,QACA,QACA,OACA,SACA,KACA,OACA,mBACA,SACA,QACA,MACA,QACA,OACA,QACA,kBACA,MACA,cACA,mBACA,MACA,SACA,MACA,QACA,YACA,iBACA,SACA,aACA,YACA,gBACA,SACA,eACA,WACA,qBACA,MACA,SACA,MACA,eACA,UACA,KACA,WACA,SACA,MACA,QACA,WACA,UACA,UACA,cACA,SACA,OACA,eACA,eACA,iBACA,gBACA,SACA,UACA,MACA,QACA,kBACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,MACA,OACA,UACA,QACA,OACA,QACA,UACA,SACA,WACA,SACA,YACA,aACA,eACA,MACA,OACA,mBACA,gBACA,oBACA,gBACA,UACA,UACA,UACA,YACA,eACA,aACA,YACA,aACA,OACA,kBACA,QACA,WACA,QACA,QACA,aACA,aACA,QACA,mBACA,qBACA,wBACA,iBACA,wBACA,WACA,OACA,OACA,gBACA,aACA,YACA,cACA,aACA,YACA,gBACA,WACA,QACA,SACA,eACA,UACA,cACA,MACA,eACA,OACA,QAEA,aACA,2BACA,sBACA,wBACA,mBACA,0BACA,qBACA,yBACA,oBACA,wBACA,mBACA,aACA,YACA,gBACA,eACA,mBACA,WAEA,SAEA,YACA,aACA,cACA,MACA,aACA,OACA,YACA,QACA,eACA,OACA,kBACA,aAEA,QF/KIkC,qBAAqB,EACrBjC,YAAa,CAAC,MACdC,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,IAAK,MAClC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAM,KAAM,MAAOC,eAAe,IAEzEC,WAAY,CAAC,SACbC,WAAY,CAAEt9C,MAAO,MAAO8+C,KAAM,OAClCtB,WAAY,CAAEC,YAAY,EAAMC,MAAO,CAAC,MACxCqB,WAAY,CAAE/+C,MAAO,MAAO8+C,KAAM,OAClCf,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAE1DW,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGzKvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,iBACA,SACA,SACA,eACA,iBACA,QACA,SAEA,eACA,UAGA,2BACA,SACA,iBAEA,MAEA,cAEE,GAAyBA,GAAc,CACzC,iEAEE,GAAwBA,GAAc,CAGxC,SAEA,cAEA,cAEA,yBAEA,WAEA,cACA,+BACA,kBACA,4BACA,iBACA,kBACA,YACA,kBACA,uBACA,wBAEA,4DACA,iCACA,4BAEA,wCACA,yBAEA,6CACA,0BAEA,sEACA,mDAEA,kDACA,4BAEA,8DACA,wBACA,aAEA,cACA,wBAEA,UACA,oCACA,gCACA,OACA,qBACA,qFACA,uBACA,WACA,kBACA,kBACA,UACA,OACA,QACA,cACA,UACA,oBAEA,iCACA,mCACA,yBACA,YACA,oBACA,WACA,SACA,QACA,MACA,mBAEA,UACA,UACA,yBAEE,GAAwBA,GAAc,CACxC,wBACA,eACA,oBAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,gCACA,sDACA,kBACA,YACA,cAEE,GAAkBA,GAAc,CAClC,kCACA,aACA,yBACA,6BAESgG,GAAS,CAClBz8E,KAAM,SACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBC7IgB,CAMpB,MACA,UACA,UACA,MACA,MACA,KACA,MACA,SACA,aACA,OACA,OACA,OACA,QACA,UACA,SACA,aACA,SACA,UACA,aACA,OACA,WACA,SACA,WACA,KACA,OACA,MACA,SACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SACA,KACA,YACA,YACA,OACA,KACA,UACA,UACA,QACA,MACA,OACA,SACA,KACA,OACA,KACA,QACA,QACA,eACA,cACA,UACA,UACA,aACA,YACA,SACA,OACA,OACA,YACA,YACA,QACA,OACA,KACA,WACA,OACA,QACA,SACA,UACA,QACA,WACA,OACA,QACA,SACA,QD6DIC,kBC3DiB,CAKrB,QACA,SACA,SACA,MACA,YACA,OACA,OACA,UACA,SACA,QACA,OACA,OACA,WACA,MACA,UACA,SACA,OACA,QACA,SACA,SACA,OACA,UACA,OACA,MACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,UACA,WACA,WACA,OACA,OACA,UACA,OACA,MAEA,UACA,WACA,MACA,OACA,MACA,QACA,SACA,WACA,SACA,SACA,OACA,OACA,eACA,eACA,cACA,eACA,YACA,cACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,YACA,WACA,OACA,YACA,WDnBIC,sBE/IiB,CAMrB,MACA,OACA,MACA,kBACA,MACA,YACA,QACA,uBACA,YACA,QACA,wBACA,kBACA,YACA,SACA,SACA,UACA,eACA,UACA,eACA,YACA,aACA,kBACA,eACA,cACA,YACA,eACA,iBACA,0BACA,sBACA,iBACA,iBACA,oBACA,gBACA,eACA,iBACA,YACA,gBACA,gBACA,gBACA,sBACA,kBACA,eACA,iBACA,kBACA,iBACA,gBACA,kBACA,mBACA,eACA,eACA,gBACA,qBACA,eACA,cACA,aACA,gBACA,kBACA,kBACA,eACA,cACA,cACA,YACA,aACA,kBACA,QACA,OACA,OACA,QACA,MACA,SACA,MACA,YACA,gBACA,UACA,YACA,aACA,SACA,eACA,UACA,WACA,UACA,cACA,OACA,OACA,UACA,UACA,aACA,MACA,aACA,kBACA,UACA,SACA,YACA,mBACA,WACA,gBACA,OACA,MACA,MACA,QACA,WACA,aACA,YACA,aACA,kBACA,kBACA,mBACA,eACA,oBACA,yBACA,gBACA,eACA,iBACA,kBACA,kBACA,eACA,UACA,sBACA,gBACA,gBACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,aACA,MACA,UACA,aACA,YACA,YACA,SACA,SACA,UACA,iCACA,uBACA,oBACA,6BACA,kBACA,oBACA,uBACA,uBACA,0BACA,2BACA,6BACA,4BACA,SACA,iBACA,qBACA,mBACA,sBACA,oBACA,mBACA,iBACA,kBACA,gBACA,oBACA,iBACA,iBACA,mBACA,kBACA,gBACA,yBACA,eACA,eACA,OACA,YACA,aACA,gCACA,sBACA,mBACA,4BACA,iBACA,mBACA,sBACA,sBACA,SACA,YACA,UACA,YACA,aACA,YACA,aACA,sBACA,QACA,WACA,WACA,WACA,MACA,QACA,OACA,MACA,YACA,OACA,OACA,SACA,WACA,QACA,UACA,QACA,OACA,mBACA,SACA,4BACA,qBACA,eACA,iBACA,cACA,cACA,cACA,WACA,YACA,mBACA,OACA,YACA,QACA,MACA,kBACA,sBACA,kBACA,UACA,iBACA,SACA,UACA,iBACA,mBACA,wBACA,OACA,WACA,WACA,0BACA,eACA,UACA,OACA,2BACA,uBACA,yBACA,qCACA,yBACA,yBACA,uBACA,yBACA,uBACA,2BACA,sBACA,MACA,YACA,OACA,qBACA,eACA,eACA,kBACA,aACA,mBACA,mBACA,mBACA,mBACA,QACA,iBACA,WACA,QACA,QACA,SACA,UACA,UACA,kBACA,0BAEA,aACA,oBACA,gBACA,uBACA,8BACA,eACA,oBACA,yBACA,sBACA,mBACA,oBACA,uBACA,YACA,mBACA,cACA,aACA,sBACA,qBACA,iBACA,iBACA,wBACA,YACA,aACA,SACA,YACA,WACA,eACA,OACA,WACA,QACA,MACA,QACA,wBACA,OACA,gBACA,MACA,SACA,kBACA,cACA,SACA,cACA,OACA,UACA,YACA,iBACA,iBACA,cACA,aACA,6BACA,WACA,eACA,cACA,eACA,gBACA,eACA,WACA,cACA,gBACA,yBACA,aACA,gBACA,gBACA,mBACA,eACA,eACA,eACA,cACA,aACA,gBACA,WACA,eACA,eACA,iBACA,eACA,qBACA,iBACA,gBACA,oBACA,YACA,WACA,WACA,cACA,WACA,YACA,YACA,gBACA,eACA,eACA,cACA,cACA,eACA,oBACA,cACA,WACA,gBACA,aACA,YACA,kBACA,mBACA,kBACA,WACA,iBACA,cACA,aACA,eACA,gBACA,aACA,WACA,KACA,MACA,QACA,OACA,QACA,OACA,SACA,QACA,MACA,YACA,YACA,iBACA,mBACA,MACA,aACA,cACA,cACA,mBACA,WACA,aACA,MACA,SACA,MACA,aACA,mBACA,mBACA,OACA,SACA,gBACA,cACA,aACA,cACA,MACA,SACA,SACA,aACA,MACA,OACA,QACA,YACA,WACA,YACA,UACA,gBACA,mBACA,kBACA,MACA,SACA,kBACA,eACA,MACA,wBACA,sBACA,mBACA,eACA,iBACA,gBACA,gBACA,iBACA,aACA,0BACA,oBACA,2BACA,yBACA,uBACA,cACA,iBACA,cACA,0BACA,oBACA,wBACA,yBACA,yBACA,2BACA,iBACA,sBACA,oBACA,0BACA,wBACA,0BACA,4BACA,YACA,qBACA,KACA,WACA,WACA,MACA,QACA,oBACA,uBACA,uBACA,kBACA,cACA,sBACA,oBACA,oBACA,iBACA,SACA,SACA,UACA,WACA,gBACA,gBACA,UACA,UACA,SACA,QACA,WACA,YACA,WACA,gBACA,YACA,iBACA,oBACA,yBACA,cACA,mBACA,sBACA,eACA,YACA,SACA,gBACA,iBACA,qBACA,oBACA,iBACA,iBACA,wBACA,wBACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,SACA,aACA,UACA,qBACA,UACA,QACA,iBACA,QACA,eACA,aACA,MACA,cACA,OACA,QACA,SACA,MACA,WACA,eACA,UACA,UACA,SACA,OACA,mBACA,oBACA,gBACA,sBACA,eACA,oBACA,OACA,iBACA,cACA,uBACA,OACA,UACA,MACA,WACA,YACA,QACA,aACA,oBACA,OACA,cACA,QACA,SACA,aACA,cACA,eACA,WACA,aACA,eACA,qBACA,kBACA,gBACA,SACA,SACA,WACA,iBACA,gBACA,cACA,YACA,kBACA,SACA,YACA,qBACA,WACA,SACA,MACA,WACA,UACA,kBACA,aACA,MACA,iBACA,oBACA,WACA,gBACA,kBACA,cACA,QACA,UACA,YACA,YACA,eACA,UACA,aACA,SACA,WACA,UACA,kBACA,eACA,kBACA,aACA,YACA,aACA,eACA,WACA,WACA,wBACA,YACA,OACA,QACA,eACA,eACA,SACA,QACA,QACA,QACA,UACA,gBACA,YACA,cACA,SACA,eACA,QACA,OACA,aACA,OACA,WACA,UACA,WACA,cACA,kBACA,mBACA,qBACA,oBACA,UACA,OACA,UACA,aACA,eACA,YACA,MACA,OACA,WAEA,OACA,WAEA,OACA,cFtgBIkC,qBAAqB,EACrBjC,YAAa,CAAC,KAAM,MACpBC,YAAa,CACT,KACA,QACA,CAAEC,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,SACbC,WAAY,CAAEwB,KAAM,KAEpBtB,WAAY,CAAEC,YAAY,EAAM2B,SAAU,CAAC,KAAMzB,OAAQ,CAAC,MAC1DI,UAAW,CAEP,KACA,IACA,KACA,IACA,IAEA,IACA,IACA,IACA,KACA,KAEA,KAEA,KAEA,KAEA,MAEA,IAEA,KACA,KAEA,KACA,MACA,MACA,OACA,MAEA,IACA,KACA,KACA,MAEA,KACA,KAEA,MACA,QAGRW,cAAe,CACXW,qBAAsB,CAAC,MACvBV,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGzMvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,UACA,aACA,gBACA,QAKA,sBACA,SAEA,MAEA,aACA,4BACA,aACA,kBAGA,qCAGA,2BACA,2BAEE,GAAyBA,GAAc,CACzC,wDAEE,GAAwBA,GAAc,CAExC,6CAEA,SAEA,cAEA,yBAEA,cACA,YAEA,mBAEA,QACA,SACA,MACA,WACA,OACA,QACA,OACA,YACA,YACA,eAEE,GAAwBA,GAAc,CAAC,2BACvC,GAAgBA,GAAc,CAChC,OACA,qCACA,uBAEA,mBAEE,GAAkBA,GAAc,CAAC,2BAE1BoG,GAAO,CAChB78E,KAAM,OACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBCtFgB,CAGpB,MACA,QACA,QACA,UACA,UACA,MACA,SACA,SACA,UACA,UACA,SACA,UACA,YACA,gBACA,aACA,UACA,UACA,UACA,cACA,UACA,cACA,WACA,OACA,YACA,WACA,MACA,eACA,WACA,UACA,YACA,aACA,OACA,cACA,YACA,UACA,aACA,YACA,SACA,UACA,YACA,UACA,SACA,SACA,OACA,aACA,QACA,SACA,YACA,YACA,eACA,OACA,gBACA,SACA,QACA,UACA,SACA,cACA,cACA,QACA,MACA,OACA,WACA,QACA,QACA,OACA,WACA,OACA,QACA,UACA,OACA,UACA,eACA,WACA,QACA,SACA,QACA,OACA,SACA,UACA,UACA,SACA,eACA,eACA,YACA,QACA,cACA,aACA,OACA,SACA,aACA,aACA,QACA,OACA,WACA,UACA,eACA,eACA,SACA,SACA,SACA,UACA,cACA,WACA,UACA,OACA,QACA,SACA,UACA,SACA,OACA,QACA,kBACA,SACA,OACA,SACA,OACA,gBACA,SACA,OACA,SACA,MACA,aACA,SACA,cACA,SACA,SACA,gBACA,YACA,aACA,UACA,QACA,eACA,YACA,OACA,YACA,SACA,QACA,WACA,MACA,MACA,MACA,eACA,aACA,OACA,QACA,OACA,aACA,YACA,QACA,SACA,WACA,cACA,OACA,QACA,QACA,MACA,OACA,SACA,aACA,QACA,OACA,WACA,SACA,MACA,aACA,WACA,UACA,UACA,gBACA,OACA,QACA,SACA,QACA,OACA,QACA,UACA,UACA,cACA,OAEA,MACA,QACA,MACA,KACA,gBACA,UACA,OACA,KACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,UACA,eACA,oBACA,SACA,WACA,SACA,WACA,WACA,OACA,OACA,MACA,WACA,SACA,WACA,WACA,QACA,QACA,YACA,MACA,OACA,OACA,WACA,QACA,QACA,WACA,SACA,KACA,SACA,KACA,QACA,SACA,YACA,OACA,KACA,OACA,UACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,OACA,KACA,KACA,KACA,QACA,MACA,QACA,OACA,cACA,YACA,UACA,YACA,WACA,YACA,QACA,QACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QACA,cACA,OACA,KACA,YACA,UACA,OACA,WACA,YACA,QACA,aACA,SACA,OACA,QACA,eACA,SACA,OACA,QACA,SACA,OACA,SACA,OACA,SACA,QACA,WACA,QACA,QACA,aACA,UACA,UACA,aACA,YACA,UACA,QACA,QACA,OACA,OAEA,WACA,eACA,MACA,MACA,MACA,UACA,OACA,SACA,WACA,cACA,gBDnOIC,kBCqOiB,CAErB,QACA,SACA,SACA,UACA,OACA,OACA,UACA,SACA,QACA,MACA,UACA,WACA,MACA,UACA,YACA,WACA,SACA,YACA,WDxPIC,sBExFiB,CAGrB,MACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,UACA,OACA,MACA,UAEA,MACA,YACA,QACA,WACA,MACA,QACA,KACA,MACA,QACA,OACA,WACA,KACA,OACA,WACA,MACA,QACA,UACA,OACA,QACA,YACA,aACA,qBACA,OACA,MACA,OACA,MACA,QACA,eAEA,iBACA,WACA,aACA,OACA,aAEA,SACA,OAEA,aACA,OACA,WACA,cACA,WACA,WACA,MACA,UACA,aACA,YACA,UACA,gBACA,qBACA,OACA,WACA,SACA,QACA,iBACA,WACA,UACA,SACA,YACA,UACA,mBACA,QACA,iBACA,aACA,OAEA,cACA,WACA,KACA,YACA,SACA,SACA,MAEA,QACA,SACA,mBACA,MACA,SACA,YACA,iBACA,SACA,MACA,SACA,QACA,cACA,gBACA,kBACA,UACA,UACA,QACA,QACA,SACA,cACA,SACA,QACA,OACA,QACA,SACA,eACA,YACA,SACA,QACA,iBACA,iBACA,SACA,UACA,OACA,QACA,YACA,UACA,QACA,QACA,aACA,SACA,YACA,YACA,OACA,QACA,WACA,QAEA,OACA,eACA,YACA,cACA,oBACA,mBAEA,cACA,cACA,QACA,mBACA,eACA,OACA,cACA,iBACA,MACA,UACA,MACA,OACA,OACA,gBACA,UAEA,MACA,eACA,cACA,OACA,QACA,YACA,aACA,oBACA,MACA,MACA,QACA,aACA,oBACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,aACA,cACA,MACA,UACA,WACA,WAEA,UACA,SACA,aACA,kBACA,aACA,QAEA,OACA,MACA,cACA,aACA,OACA,aACA,aACA,YACA,eACA,SFtHIC,YAAa,CAAC,MACdC,YAAa,CAAC,QAAS,SACvBI,WAAY,CAAC,MACbO,cAAe,CAAC,CAAEV,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAC/DW,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAAM,IAAK,OAE3DW,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG/FtB,SAAS,GAAY3wC,GACxB,OAAOA,EAAOr7B,KAAI,CAACzJ,EAAOmD,KACtB,MAAMs1E,EAAY3zC,EAAO3hC,EAAI,IAAMswE,GACnC,GAAI3+D,GAAQm/D,IAAIj0E,IAA6B,MAAnBy4E,EAAUp4E,KAEhC,OAAO1B,OAAO4d,OAAO5d,OAAO4d,OAAO,CAAC,EAAGvc,GAAQ,CAAE7F,KAAMo5E,GAAUgB,yBAErE,MAAM4C,EAAYryC,EAAO3hC,EAAI,IAAMswE,GACnC,OAAI3+D,GAAQu/D,OAAOr0E,IAA6B,MAAnBm3E,EAAU92E,KAE5B1B,OAAO4d,OAAO5d,OAAO4d,OAAO,CAAC,EAAGvc,GAAQ,CAAE7F,KAAMo5E,GAAUgB,yBAE9Dv0E,CAAK,GAEpB,CChBO,MCID,GAAiBoyE,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,eACA,WACA,QACA,SACA,uBAGA,kEACA,0CACA,SACA,0BAEA,MAEA,cAEE,GAAyBA,GAAc,CACzC,0DAEE,GAAwBA,GAAc,CAExC,yFAEA,iCAEA,8CAEA,qCAEA,4CACA,+BACA,yCACA,4BACA,cACA,gBACA,iBACA,uBACA,4BAEA,mBAEA,iBACA,yBACA,cACA,iBACA,kBACA,eACA,uBACA,iBACA,eACA,aACA,aACA,UACA,gBACA,cACA,eACA,gBACA,QACA,SACA,cACA,OACA,mBACA,cACA,aACA,iBACA,SACA,4BACA,kBACA,eACA,kBACA,eACA,mBACA,cACA,kBACA,gBACA,uBACA,iBACA,sBACA,cACA,qBACA,WACA,gBACA,aACA,gBACA,aACA,eACA,iBACA,YACA,gBACA,cACA,eACA,YACA,YACA,UACA,UACA,QACA,kBACA,4BACA,QACA,UACA,OACA,iBACA,iBACA,OACA,mBACA,wBACA,kBACA,aACA,iBACA,UACA,oBACA,oBACA,oBACA,eACA,cACA,eACA,cACA,eACA,oBACA,gBACA,cACA,WACA,SACA,WACA,YACA,oBACA,mBACA,yBACA,YACA,eACA,WACA,gBACA,kBACA,OACA,2BACA,yBACA,eACA,mBACA,qBACA,qBACA,qBACA,yBACA,iBACA,eACA,oBACA,uBACA,oBACA,uBACA,sBACA,2BACA,wBACA,uBACA,oBACA,sBACA,mBACA,mBACA,iBACA,cACA,4BACA,eACA,cACA,cACA,eACA,qBACA,uBACA,cACA,aACA,eACA,wBACA,YACA,eACA,mBACA,qBACA,mBACA,yBACA,2BACA,sBACA,eACA,sBACA,kBACA,sBACA,wBACA,mBACA,eACA,gBACA,2BACA,uBACA,eACA,qBACA,sBACA,eACA,aACA,mBACA,oBACA,cACA,uBACA,oBACA,cACA,gBACA,uBACA,iBACA,gBACA,wBACA,oBACA,WACA,SACA,qBACA,mBACA,gBACA,cACA,oBACA,oBACA,kBACA,eACA,aACA,mBACA,mBACA,eACA,MACA,WACA,YACA,SACA,aACA,aACA,cACA,aAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,6BACA,2BAEE,GAAgBA,GAAc,CAChC,OACA,8BACA,uBACA,eACA,sCAEA,kBAEE,GAAkBA,GAAc,CAClC,gDACA,gBACA,yBACA,kBAGSsG,GAAU,CACnB/8E,KAAM,UACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBD9QgB,CAEpB,aACA,MACA,MACA,QACA,UACA,MACA,KACA,MACA,aACA,SACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,YACA,aACA,WACA,UACA,SACA,QACA,eACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,UACA,SACA,mBACA,OACA,WACA,gBACA,WACA,cACA,MACA,gBACA,OACA,OACA,OACA,OACA,SACA,WACA,UACA,SACA,SACA,OACA,UACA,QACA,QACA,MACA,QACA,UACA,OACA,WACA,UACA,QACA,QACA,SACA,gBACA,mBACA,cACA,cACA,KACA,SACA,oBACA,oBACA,KACA,QACA,SACA,QACA,QACA,cACA,SACA,YACA,WACA,OACA,KACA,UACA,OACA,MACA,OACA,OACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,YACA,iBACA,OACA,OACA,eACA,0BACA,gCACA,QACA,WACA,qBACA,gBACA,MACA,WACA,UACA,MACA,qBACA,OACA,SACA,KACA,WACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,gBACA,kBACA,YACA,WACA,UACA,YACA,QACA,QACA,OACA,QACA,aACA,YACA,gBACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,YACA,SACA,QACA,QACA,aACA,OACA,SACA,UACA,qBACA,SACA,YACA,YACA,MACA,OACA,SACA,OACA,UACA,WACA,MACA,eACA,WACA,aACA,iBACA,sBACA,mBACA,MACA,WACA,oBACA,mBACA,qBACA,gBACA,QACA,aACA,OACA,KACA,WACA,UACA,OACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,SACA,OACA,QACA,QACA,SACA,OACA,QACA,MACA,aACA,YCuDIC,kBDrDiB,CAErB,SACA,SACA,MACA,OACA,YACA,OACA,YACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,OACA,WACA,WACA,aACA,YACA,aACA,YACA,gBACA,mBACA,UACA,YACA,OACA,WACA,OACA,YACA,WACA,UACA,WACA,YACA,UACA,eACA,UACA,QCMIC,sBChRiB,CAErB,UACA,aACA,UACA,SACA,UACA,OACA,QACA,YACA,UACA,UACA,WACA,WACA,cACA,SACA,aACA,UACA,cACA,eACA,gBACA,iBACA,MACA,OACA,MACA,SACA,MACA,MACA,MACA,YACA,QACA,WACA,eACA,kBACA,kBACA,OACA,aACA,eACA,MACA,SACA,aACA,cACA,UACA,SACA,YACA,MACA,cACA,OACA,cACA,WACA,UACA,WACA,MACA,OACA,UACA,cACA,cACA,OACA,OACA,QACA,YACA,MACA,kBACA,YACA,aACA,OACA,UACA,mBACA,cACA,MACA,eACA,eACA,gBACA,cACA,cACA,WACA,SACA,yBACA,YACA,gBACA,OACA,aACA,MACA,MACA,QACA,WACA,UACA,aACA,YACA,YACA,UACA,mBACA,gBACA,cACA,cACA,MACA,SACA,UACA,MACA,aACA,eACA,QACA,cACA,QACA,SACA,aACA,cACA,YACA,gBACA,WACA,WACA,MACA,SACA,QACA,SACA,eACA,eACA,aACA,oBACA,oBACA,eACA,gBACA,qBACA,aACA,gBACA,cACA,eACA,cACA,YACA,cACA,aACA,aACA,mBACA,sBACA,aACA,aACA,cACA,cACA,eACA,WACA,cACA,YACA,eACA,aACA,aACA,WACA,iBACA,QACA,QACA,SACA,UACA,KACA,YACA,SACA,MACA,QACA,OACA,QACA,OACA,cACA,QACA,eACA,WACA,WACA,WACA,mBACA,kBACA,MACA,YACA,aACA,MACA,OACA,MACA,eACA,MACA,aACA,cACA,KACA,MACA,QACA,QACA,eACA,iBACA,gBACA,UACA,OACA,oBACA,eACA,iBACA,UACA,QACA,OACA,cACA,QACA,eACA,cACA,MACA,OACA,OACA,OACA,MACA,QACA,UACA,QACA,OACA,SACA,cACA,gBACA,kBACA,UACA,WACA,MACA,WACA,cACA,cACA,YACA,UACA,UACA,aACA,QACA,aACA,sBACA,QACA,iBACA,YACA,QACA,OACA,aACA,UACA,UACA,aACA,0BACA,uBACA,4BACA,WAEA,WACA,UDqCIE,YAAa,CACT,WACA,WACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAEt9C,MAAO,IAAK8+C,KAAM,IAAKW,sBAAsB,GAC3D7B,cAAe,CACX,CAAEC,MAAO,sBACT,CAAEX,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDI,WAAY,CAAEC,YAAY,GAC1BK,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,IACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,KACA,IACA,OAEJC,YAAW,IAEfU,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KEhTvB,GAAiBrD,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,kEACA,0CACA,SACA,0BAEA,QAEE,GAAyBA,GAAc,CAAC,6CACxC,GAAwBA,GAAc,CAExC,yFAEA,iCAEA,8CAEA,qCAEA,cACA,eACA,6BACA,gBACA,mBACA,gBACA,iBACA,uBAEA,mBAEA,iBACA,cACA,iBACA,iBACA,sBACA,kBACA,uBACA,eACA,mBACA,aACA,aACA,gBACA,SACA,cACA,OACA,mBACA,4BACA,+BACA,cACA,iBACA,QACA,SACA,kBACA,eACA,kBACA,kBACA,eACA,uBACA,mBACA,wBACA,cACA,gBACA,kCACA,oBACA,iBACA,cACA,qBACA,WACA,gBACA,aACA,gBACA,gBACA,aACA,qBACA,iBACA,sBACA,YACA,cACA,gCACA,kBACA,eACA,YACA,YACA,UACA,UACA,QACA,QACA,UACA,OACA,eACA,oBACA,iBACA,OACA,YACA,wBACA,WACA,2BACA,cACA,kBACA,iBACA,UACA,oBACA,oBACA,eACA,cACA,eACA,QACA,eACA,gBACA,gBACA,cACA,UACA,SACA,WACA,wBACA,YACA,oBACA,mBACA,YACA,eACA,qBACA,WACA,kBACA,OACA,mBACA,qBACA,qBACA,iBACA,eACA,uBACA,oBACA,uBACA,wBACA,oBACA,sBACA,mBACA,mBACA,iBACA,cACA,eACA,cACA,cACA,qBACA,uBACA,cACA,aACA,qBACA,mBACA,eACA,kBACA,sBACA,wBACA,mBACA,eACA,gBACA,uBACA,sBACA,gBACA,aACA,mBACA,cACA,oBACA,cACA,gBACA,iBACA,gBACA,WACA,kBACA,0BACA,gBACA,cACA,oBACA,yBACA,eACA,aACA,QACA,sBACA,mBACA,kBACA,gBACA,MACA,KAGA,UACA,QACA,OACA,SACA,SACA,UAEE,GAAwBA,GAAc,CAAC,2BACvC,GAAgBA,GAAc,CAChC,OACA,8BACA,uBACA,uBACA,sCAEA,kBAEE,GAAkBA,GAAc,CAClC,kCACA,gBACA,yBACA,kBAGSwG,GAAQ,CACjBj9E,KAAM,QACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBC3OgB,CAEpB,aACA,MACA,MACA,QACA,UACA,MACA,KACA,MACA,aACA,SACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,YACA,aACA,WACA,UACA,SACA,QACA,OACA,YACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,UACA,SACA,aACA,OACA,WACA,gBACA,WACA,cACA,MACA,OACA,OACA,OACA,OACA,SACA,QACA,WACA,UACA,SACA,SACA,OACA,UACA,QACA,QACA,cACA,MACA,QACA,UACA,OACA,WACA,WACA,YACA,MACA,QACA,QACA,WACA,SACA,SACA,gBACA,mBACA,cACA,cACA,KACA,SACA,KACA,QACA,SACA,QACA,QACA,cACA,SACA,KACA,YACA,WACA,OACA,iBACA,kBACA,KACA,UACA,OACA,aACA,MACA,OACA,OACA,MACA,aACA,UACA,OACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,YACA,iBACA,OACA,OACA,OACA,eACA,cACA,gCACA,QACA,WACA,qBACA,gBACA,MACA,WACA,UACA,MACA,qBACA,YACA,QACA,OACA,KACA,KACA,WACA,kBACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,YACA,eACA,UACA,YACA,QACA,QACA,OACA,OACA,QACA,aACA,YACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,QACA,QACA,MACA,OACA,aACA,SACA,UACA,qBACA,SACA,YACA,YACA,MACA,OACA,SACA,UACA,WACA,MACA,eACA,WACA,aACA,iBACA,sBACA,mBACA,MACA,WACA,SACA,gBACA,SACA,QACA,aACA,OACA,KACA,WACA,UACA,OACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,SACA,UACA,OACA,QACA,QACA,SACA,OACA,QACA,MACA,aACA,YDOIC,kBCLiB,CAErB,SACA,SACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,WACA,WACA,aACA,YACA,aACA,YACA,gBACA,mBACA,UACA,YACA,OACA,WACA,OACA,OACA,YACA,WACA,UACA,WACA,YACA,UACA,eACA,UACA,QD5CIC,sBE7OiB,CAErB,MACA,OACA,UACA,UACA,cACA,cAEA,YACA,QACA,OACA,OACA,QACA,MACA,YACA,MACA,cACA,SACA,UACA,YACA,aACA,SACA,UACA,oBACA,sBACA,mBACA,kBACA,kBACA,OACA,OACA,UACA,OACA,cACA,mBACA,UACA,WACA,eACA,YACA,WACA,SACA,YACA,gBACA,OACA,UACA,aACA,MACA,MACA,QACA,QACA,YACA,UACA,eACA,eACA,eACA,oBACA,eACA,UACA,WACA,OACA,WACA,cACA,WACA,WACA,MACA,UACA,aACA,YACA,YACA,UACA,UACA,aACA,MACA,MACA,MACA,aACA,UACA,eACA,QACA,cACA,cACA,QACA,SACA,eACA,mBACA,aACA,cACA,YACA,gBACA,iBACA,qBACA,2BACA,wBACA,+BACA,aACA,WACA,WACA,eACA,WACA,cACA,gBACA,MACA,OACA,cACA,KACA,SAEA,YACA,YACA,aACA,aACA,SACA,QACA,0BACA,0BACA,sBACA,oBACA,qBACA,uBACA,0BACA,gCACA,iCACA,wBACA,wBACA,qCACA,oCACA,wBACA,2BACA,6BACA,yBACA,2BACA,sBACA,uBACA,WACA,KACA,eACA,UACA,iBACA,iBACA,UACA,SACA,cACA,UACA,eACA,UACA,SACA,aACA,oBACA,oBACA,gBACA,gBACA,qBACA,aACA,eACA,cACA,YACA,cACA,aACA,mBACA,sBACA,cACA,iBACA,gBACA,cACA,aACA,cACA,eACA,oBACA,gCACA,cACA,WACA,oBACA,oBACA,aACA,YACA,eACA,aACA,aACA,MACA,WACA,iBACA,aACA,QACA,OACA,QACA,OACA,SACA,OACA,aACA,KACA,YACA,YACA,iBACA,SACA,MACA,QACA,OACA,QACA,OACA,QACA,WACA,WACA,WACA,kBACA,QACA,MACA,cACA,eACA,YACA,cACA,YACA,gBACA,cACA,aACA,YACA,MACA,YACA,cACA,MACA,MACA,SACA,MACA,QACA,YACA,kBACA,aACA,eACA,aACA,MACA,SACA,WACA,aACA,MACA,YACA,QACA,SACA,MACA,eAEA,MACA,eACA,aACA,cACA,KACA,QACA,UACA,WACA,MACA,QACA,uBACA,eACA,UACA,QACA,UACA,OACA,eACA,OACA,SACA,eACA,cACA,iBACA,gBACA,oBACA,eACA,SACA,UACA,UACA,QACA,QACA,gBACA,QACA,YACA,aACA,OACA,QACA,SACA,cACA,SACA,eACA,OACA,OACA,OACA,MACA,QACA,UACA,cACA,kBACA,QACA,OACA,UACA,cACA,eACA,YACA,YACA,qBACA,cACA,aACA,cACA,gBACA,aACA,gBACA,eACA,cACA,cACA,qBACA,cACA,cACA,YACA,kBACA,qBACA,aACA,sBACA,qBACA,eACA,kBACA,qBACA,kBACA,iBACA,uBACA,mBACA,kBACA,gBACA,cACA,aACA,cACA,aACA,oBACA,cACA,YACA,kBACA,iBACA,0BACA,2BACA,qBACA,eACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,kBACA,mBACA,qBACA,eACA,cACA,qBACA,sBACA,mBACA,kBACA,YACA,kBACA,iBACA,cACA,UACA,gBACA,YACA,mBACA,aACA,eACA,WACA,cACA,YACA,OACA,OACA,mBACA,wBACA,MACA,SACA,aACA,cACA,cACA,SACA,UACA,SACA,YACA,kBACA,UACA,MACA,UACA,cACA,MACA,OACA,cACA,cACA,WACA,YACA,eACA,gBACA,YACA,UACA,aACA,OACA,WACA,QACA,aACA,sBACA,QACA,iBACA,YACA,QAEA,WACA,WACA,gBACA,OACA,aACA,cACA,6BACA,SACA,UACA,WACA,WACA,UACA,6BACA,oCACA,OACA,UACA,aACA,gBAEA,OACA,YFvLIE,YAAa,CACT,WACA,CAAEC,MAAO,WAAYC,SAAU,CAAC,MAChC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAEt9C,MAAO,IAAK8+C,KAAM,IAAKW,sBAAsB,GAC3D7B,cAAe,CACX,CAAEC,MAAO,sBACT,CAAEX,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDI,WAAY,CAAEC,YAAY,GAC1BK,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,IACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,IACA,OAEJC,YAAW,IAEfU,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG/QvB,GAAiBrD,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,kEACA,0CACA,SACA,0BAEA,QAEE,GAAyBA,GAAc,CAAC,6CACxC,GAAwBA,GAAc,CAExC,yFAEA,iCAEA,8CAEA,qCAEA,cACA,eACA,6BACA,gBACA,mBACA,gBACA,iBACA,uBAEA,mBAEA,iBAEA,iBACA,uBACA,iBAEA,aACA,aACA,gBACA,cACA,iBACA,SACA,kBACA,eACA,wBACA,cACA,kBACA,cACA,qBACA,WACA,gBACA,aACA,sBACA,YACA,kBACA,YACA,YACA,UACA,QAEA,QACA,eACA,oBACA,iBACA,OACA,YACA,2BACA,cACA,iBACA,UACA,oBACA,eACA,cACA,eACA,QACA,SACA,WACA,wBACA,YACA,oBACA,mBACA,YACA,eACA,qBACA,WACA,kBACA,OACA,mBACA,qBACA,qBACA,iBACA,eACA,uBACA,oBACA,mBACA,mBACA,iBACA,cACA,eACA,cACA,cACA,cACA,aACA,qBACA,mBACA,eACA,kBACA,mBACA,eACA,gBACA,cACA,oBACA,cACA,gBACA,iBACA,gBAEA,QACA,sBACA,mBACA,kBACA,gBAEA,QAEE,GAAwBA,GAAc,CAAC,2BACvC,GAAgBA,GAAc,CAChC,OACA,8BACA,uBACA,uBACA,sCAEA,kBAEE,GAAkBA,GAAc,CAClC,kCACA,gBACA,yBACA,kBAGSyG,GAAO,CAChBl9E,KAAM,OACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBCzKgB,CAEpB,MACA,MACA,QACA,UACA,MACA,QACA,KACA,MACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,aACA,WACA,UACA,SACA,QACA,eACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,SACA,OACA,WACA,WACA,cACA,MACA,SACA,OACA,OACA,OACA,SACA,WACA,UACA,SACA,SACA,OACA,UACA,QACA,QACA,MACA,QACA,UACA,OACA,WACA,YACA,QACA,QACA,SACA,SACA,gBACA,mBACA,cACA,cACA,KACA,SACA,QACA,KACA,QACA,SACA,QACA,QACA,SACA,YACA,WACA,OACA,KACA,UACA,OACA,MACA,OACA,OACA,UACA,QACA,OACA,OACA,QACA,SACA,QACA,OACA,YACA,iBACA,OACA,OACA,eACA,QACA,WACA,qBACA,gBACA,MACA,UACA,MACA,qBACA,OACA,KACA,KACA,WACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,YACA,UACA,YACA,QACA,OACA,YACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,MACA,OACA,qBACA,SACA,MACA,OACA,UACA,MACA,eACA,WACA,aACA,iBACA,sBACA,mBACA,MACA,WACA,iBACA,SACA,gBACA,QACA,cACA,aACA,OACA,KACA,WACA,UACA,OACA,mBACA,QACA,SACA,SACA,WACA,QACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,SACA,UACA,OACA,QACA,QACA,SACA,OACA,QACA,MACA,aACA,YDpBIC,kBCsBiB,CAErB,SACA,SACA,MACA,OACA,OACA,UACA,OACA,YACA,OACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,WACA,WACA,aACA,YACA,YACA,gBACA,mBACA,UACA,YACA,WACA,OACA,OACA,YACA,WACA,UACA,WACA,YACA,UACA,eACA,UACA,QDlEIC,sBE3KiB,CAKrB,MACA,OACA,UACA,UACA,cACA,cAEA,YACA,QACA,OACA,OACA,QACA,MACA,YACA,MACA,cACA,UACA,YACA,aACA,SACA,UACA,SACA,SACA,QACA,SACA,OACA,OACA,OACA,UACA,YACA,cACA,mBACA,UACA,WACA,eACA,YACA,WACA,SACA,YACA,gBACA,OACA,UACA,aACA,MACA,MACA,QACA,QACA,YACA,UACA,eACA,yBACA,eACA,eACA,oBACA,eACA,UACA,WACA,OACA,WACA,cACA,WACA,WACA,MACA,UACA,aACA,YACA,YACA,SACA,eACA,UACA,aACA,cACA,cACA,MACA,MACA,SACA,UACA,KACA,MACA,aACA,UACA,QACA,cACA,cACA,QACA,SACA,eACA,mBACA,aACA,cACA,YACA,gBACA,KACA,aACA,WACA,WACA,WACA,eACA,WACA,KACA,MACA,OACA,KACA,SACA,QAEA,aACA,aACA,YACA,YACA,cACA,QACA,SACA,WACA,eACA,UACA,iBACA,iBACA,UACA,eACA,UACA,UACA,SACA,SACA,aACA,gBACA,oBACA,oBACA,gBACA,qBACA,aACA,eACA,cACA,YACA,cACA,gBACA,aACA,mBACA,sBACA,cACA,iBACA,gBACA,cACA,aACA,cACA,eACA,cACA,WACA,oBACA,oBACA,YACA,eACA,aACA,MACA,WACA,iBACA,aACA,UACA,QACA,KACA,OACA,QACA,OACA,YACA,SACA,OACA,KACA,YACA,YACA,iBACA,SACA,MACA,QACA,OACA,QACA,OACA,KACA,QACA,WACA,WACA,WACA,kBACA,MACA,MACA,cACA,MACA,MACA,QACA,SACA,MACA,QACA,YACA,MACA,aACA,KACA,UACA,MACA,MACA,YACA,QACA,SACA,MACA,eACA,eAEA,MACA,gBACA,eACA,aACA,cACA,KACA,OACA,WACA,MACA,QACA,UACA,QACA,UACA,OACA,eACA,OACA,SACA,eACA,cACA,iBACA,gBACA,oBACA,eACA,SACA,UACA,UACA,QACA,aACA,QACA,YACA,aACA,OACA,QACA,SACA,cACA,SACA,eACA,SACA,SACA,MACA,OACA,OACA,OACA,MACA,QACA,MACA,QACA,OACA,MACA,SACA,aACA,cACA,cACA,SACA,UACA,SACA,YACA,kBACA,UACA,MACA,UACA,cACA,MACA,yBACA,mBACA,0BACA,kBACA,mBACA,0BACA,yBACA,oBACA,iBACA,yBACA,oBACA,aACA,eACA,OACA,cACA,cACA,WACA,YACA,eACA,gBACA,YACA,UACA,aACA,YACA,OACA,WACA,QACA,aACA,aACA,sBACA,QACA,iBACA,QAEA,WACA,WACA,gBACA,OACA,aACA,cACA,6BACA,UACA,WACA,WACA,UACA,cACA,OACA,UACA,aACA,gBAEA,OACA,YFxJIE,YAAa,CACT,WACA,CAAEC,MAAO,WAAYC,SAAU,CAAC,MAChC,CAAED,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAEt9C,MAAO,IAAK8+C,KAAM,IAAKW,sBAAsB,GAC3D7B,cAAe,CACX,CAAEC,MAAO,sBACT,CAAEX,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDI,WAAY,CAAEC,YAAY,GAC1BK,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,IACA,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,IACA,OAEJC,YAAW,IAEfU,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG9MvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,cACA,SAEA,MAEA,aACA,0BACA,aACA,SAEA,OACA,SACA,cAEEyF,GAAiBzF,GAAc,CAEjC,SAEA,cAEA,aAEA,SACA,cACA,oBACA,cACA,qBACA,oBACA,kBACA,eACA,uBACA,eACA,kBACA,gBACA,aACA,qBACA,aACA,UACA,mBACA,UACA,QACA,QACA,UACA,SACA,uBACA,YACA,kBACA,oBACA,SAEA,MACA,qBACA,OACA,uBAEE,GAAwBA,GAAc,CAAC,cAAe,eAAgB,oBACtE,GAAgBA,GAAc,CAAC,OAAQ,8BAA+B,eACtE,GAAkBA,GAAc,CAAC,oCAE1B0G,GAAO,CAChBn9E,KAAM,OACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoBsC,IACzCnC,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBCtFgB,CAEpB,SACA,MACA,QACA,UACA,MACA,MACA,QACA,KACA,MACA,KACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,KACA,OACA,OACA,OACA,UACA,UACA,aACA,SACA,YACA,UACA,WACA,aACA,QACA,SACA,UACA,WACA,UACA,YACA,UACA,YACA,SACA,UACA,OACA,WACA,WACA,KACA,OACA,OACA,UACA,OACA,MACA,QACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,SACA,QACA,UACA,QACA,YACA,MACA,QACA,OACA,MACA,WACA,SACA,QACA,QACA,SACA,MACA,OACA,SACA,KACA,SACA,QACA,KACA,UACA,YACA,QACA,QACA,SACA,QACA,SACA,YACA,OACA,KACA,YACA,aACA,OACA,MACA,OACA,WACA,QACA,WACA,OACA,OACA,MACA,UACA,QACA,OACA,QACA,MACA,MACA,UACA,UACA,eACA,QACA,QACA,UACA,YACA,OACA,KACA,KACA,MACA,YACA,OACA,QACA,SACA,SACA,SACA,KACA,SACA,UACA,KACA,QACA,SACA,QACA,OACA,QACA,YACA,WACA,OACA,OACA,YACA,UACA,UACA,UACA,YACA,QACA,YACA,SACA,QACA,MACA,QACA,SACA,SACA,UACA,SACA,YACA,SACA,QACA,OACA,WACA,MACA,OACA,YACA,YACA,SACA,QACA,SACA,OACA,OACA,MACA,OACA,OACA,QACA,aACA,SACA,SACA,OACA,OACA,KACA,OACA,cACA,UACA,OACA,WACA,YACA,QACA,QACA,SACA,UACA,SACA,QACA,SACA,SACA,MACA,OACA,QACA,WACA,QACA,SACA,SACA,MACA,OACA,OACA,QACA,QACA,SACA,OACA,SACA,OACA,ODtHIC,kBCwHiB,GDvHjBC,sBExFiB,CAErB,QACA,MACA,OACA,UACA,YACA,YACA,eACA,YACA,sBACA,eACA,iBACA,cACA,iBACA,eACA,gBACA,eACA,eACA,kBACA,eACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,eACA,eACA,gBACA,gBACA,aACA,aACA,YACA,gBACA,iBACA,iBACA,cACA,OACA,OACA,QACA,MACA,SACA,gBACA,gBACA,UACA,YACA,UACA,SACA,UACA,YACA,WACA,UACA,OACA,cACA,eACA,YACA,WACA,YACA,WACA,SACA,UACA,WACA,iBACA,sBACA,wBACA,MACA,QACA,QACA,SACA,YACA,OACA,kBACA,eACA,mBACA,gBACA,kBACA,mBACA,gBACA,oBACA,iBACA,oBACA,iBACA,SACA,cACA,UACA,aACA,kBAEA,eACA,cACA,MACA,cACA,QACA,WACA,YACA,QACA,YACA,kBACA,QACA,aACA,SACA,UACA,UACA,SACA,WACA,YACA,WACA,WACA,WACA,MACA,aACA,OACA,QACA,SACA,KACA,MACA,QACA,QACA,MACA,OACA,SACA,OACA,SACA,kBACA,gBACA,eACA,gBACA,sBACA,MACA,YACA,QACA,WACA,YACA,aACA,UACA,SACA,UACA,YACA,QACA,SACA,MACA,OACA,aACA,gBACA,qBACA,sBACA,gBACA,eACA,eACA,aACA,gBACA,gBACA,iBACA,gBACA,gBACA,QACA,eACA,KACA,cACA,WACA,WACA,QACA,UACA,SACA,OACA,kBACA,kBACA,cACA,iBACA,kBACA,iBACA,eACA,iBACA,aACA,gBACA,iBACA,gBACA,cACA,SACA,UACA,UACA,QACA,aACA,QACA,SACA,cACA,eACA,OACA,MACA,QACA,OACA,SACA,aACA,cACA,kBACA,gBACA,YACA,aACA,mBACA,SACA,WACA,MACA,MACA,QACA,UACA,SACA,YACA,SACA,SACA,WACA,WACA,WACA,OACA,QAEA,QACA,OACA,WACA,eACA,gBACA,UACA,WACA,iBACA,cAIA,QFzIIE,YAAa,CAAC,QAAS,SACvBI,WAAY,CAAC,MACbL,YAAa,CAAC,KAAM,MACpBQ,WAAY,CAAEC,YAAY,EAAM2B,SAAU,CAAC,KAAM1B,MAAO,CAAC,MACzDI,iBAAkB,CAAC,IAAK,MACxBC,UAAW,CAAC,IAAK,KAAM,IAAK,OAEhCW,cAAe,CACXC,oBGhGF,GAAiBzF,GAAc,CAAC,qCAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,eACA,sBACA,SACA,uBACA,kBAGA,2BACA,SAEA,MAEA,eACA,4BACA,aAEA,cAEE,GAAyBA,GAAc,CACzC,+HAEE,GAAwBA,GAAc,CAExC,mHACA,2BAEA,gBAEA,qBAEA,aAEA,cACA,MACA,oDACA,SACA,YACA,gBAEA,iBAEA,aACA,QACA,aACA,UACA,SACA,YACA,OACA,eAEE,GAAwBA,GAAc,CAAC,cAAe,QAAS,cAC/D,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,6CAEA,0BAEE,GAAkBA,GAAc,CAClC,kCACA,YACA,2BAES2G,GAAQ,CACjBp9E,KAAM,QACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBCtFgB,CAGpB,MACA,QACA,YACA,MACA,QACA,MACA,MACA,QACA,KACA,MACA,KACA,YACA,SACA,MACA,QACA,UACA,QACA,OACA,OACA,QACA,OACA,KACA,OAEA,OACA,UACA,UACA,OACA,UACA,cACA,YACA,QACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,YACA,WACA,WACA,UACA,WACA,cACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,cACA,WACA,OACA,MACA,UACA,UACA,SACA,SACA,OACA,gBACA,WACA,OACA,WACA,UACA,OACA,QACA,QACA,MACA,SACA,SACA,YACA,aACA,YACA,UACA,SACA,OACA,WACA,QACA,QACA,QACA,MACA,SACA,QACA,OACA,OACA,WACA,UACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,aACA,KACA,YACA,KACA,YACA,QACA,UACA,YACA,UACA,WACA,SACA,eACA,YACA,YACA,WACA,OACA,aACA,KACA,YACA,OACA,WACA,QACA,UACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,UACA,QACA,OACA,OACA,MACA,MACA,SACA,SACA,QACA,MACA,QACA,SACA,MACA,OACA,SACA,QACA,WACA,OACA,MACA,WACA,SACA,MACA,aACA,SACA,MACA,SACA,OACA,SACA,UACA,UACA,cACA,cACA,cACA,gBACA,YACA,SACA,SACA,eACA,WACA,YACA,UACA,KACA,KACA,OACA,SACA,OACA,WACA,SACA,KACA,SACA,UACA,QACA,WACA,eACA,SACA,UACA,SACA,MACA,aACA,UACA,kBACA,YACA,aACA,YACA,SACA,OACA,YACA,SACA,QACA,UACA,YACA,SACA,QACA,QACA,OACA,SACA,MACA,YACA,MACA,YACA,SACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,MACA,SACA,OACA,YACA,MACA,MACA,MACA,SACA,UACA,SACA,OACA,WACA,WACA,eACA,MACA,QACA,QACA,OACA,SACA,OACA,SACA,MACA,UACA,UACA,UACA,WACA,WACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,cACA,eACA,gBACA,UACA,MACA,UACA,UACA,QACA,MACA,MACA,OACA,OACA,gBACA,gBACA,kBACA,kBACA,KACA,WACA,UACA,gBACA,UACA,OACA,MACA,MACA,MACA,QACA,QACA,SACA,WACA,YACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,WACA,SACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,UACA,QACA,OACA,QDzNIC,kBC2NiB,CAErB,QACA,aACA,SACA,YACA,eACA,YACA,OACA,oBACA,YACA,YACA,YACA,OACA,UACA,SACA,QACA,MACA,eACA,gBACA,OACA,wBACA,gBACA,6BACA,qBACA,gBACA,QACA,QACA,cACA,SACA,WACA,WACA,YACA,MACA,YACA,SACA,UACA,YD/PIC,sBExFiB,CAGrB,MACA,OACA,OACA,OACA,QACA,SACA,OACA,MACA,OACA,MACA,QACA,KACA,MACA,MACA,QACA,QACA,YACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,QACA,eAEA,MACA,SACA,UACA,QACA,OACA,QACA,cACA,YACA,UACA,YACA,iBACA,gBACA,UACA,OACA,QACA,UACA,SACA,YACA,QACA,OACA,QACA,uBACA,iBACA,mBACA,QACA,QACA,SACA,eAEA,aACA,eACA,oBACA,aACA,UACA,UACA,WACA,iBACA,iBACA,WACA,WACA,kBACA,kBACA,QACA,kBACA,kBACA,UACA,eACA,UACA,eACA,kBACA,gBACA,gBACA,QACA,YAEA,WACA,QAEA,WACA,aACA,OACA,cACA,UACA,UACA,YACA,WACA,kBACA,kBACA,WACA,YACA,cACA,eACA,mBACA,mBACA,mBACA,kBACA,UACA,UACA,UACA,gBACA,SACA,gBACA,WACA,WACA,YACA,gBACA,iBACA,eACA,kBACA,gBACA,gBACA,YACA,SAEA,YACA,cACA,aAEA,cACA,UACA,gBACA,+BACA,MAEA,sBAEA,aACA,sBACA,cACA,aACA,cACA,gBACA,aACA,kBACA,qBACA,yBACA,iBAEA,iBACA,YACA,QACA,UACA,aACA,eACA,iBACA,kBACA,OACA,eACA,aACA,aACA,YACA,SACA,WACA,eACA,aACA,YACA,YACA,WACA,QACA,WACA,UACA,cACA,eACA,WACA,eAEA,SACA,OACA,WACA,QAEA,WACA,QACA,SACA,MACA,OAEA,cACA,WACA,aACA,MACA,OACA,UAEA,MACA,UACA,OACA,SACA,SACA,QACA,YACA,aACA,YACA,aACA,QACA,WACA,WACA,cACA,OACA,MACA,SACA,MACA,kBACA,kBACA,eACA,OACA,aACA,iBACA,aACA,UACA,YACA,YACA,WACA,WACA,WACA,sBACA,iBACA,eACA,gBACA,aACA,gBACA,sBACA,mBACA,sBACA,qBACA,sBACA,iBACA,SACA,aACA,cACA,MACA,UACA,WACA,WAGA,cACA,MACA,aACA,OACA,QACA,kBACA,aAEA,QACA,WACA,MACA,WACA,QAEA,KACA,mBACA,aACA,WACA,YF/KIE,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,MAC7B,CAAED,MAAO,MAAOC,SAAU,CAAC,OAK/BE,WAAY,CAAC,SACbC,WAAY,CAAEwB,KAAM,MACpBlB,cAAe,CAAC,CAAEC,MAAO,kCACzBL,WAAY,CAAE4B,SAAU,CAAC,KAAM1B,MAAO,CAAC,MACvCK,UAAW,CACP,KACA,KACA,IACA,KACA,KAEA,KACA,KACA,KACA,IACA,MAEJC,YAQR,SAAqBpyC,GACjB,IAAIk0C,EAAwBvF,GAC5B,OAAO3uC,EAAOr7B,KAAIzJ,GAEV8U,GAAQm/D,IAAIj0E,IAAU8U,GAAQi/D,GAAGiF,GAC1Br6E,OAAO4d,OAAO5d,OAAO4d,OAAO,CAAC,EAAGvc,GAAQ,CAAE7F,KAAMo5E,GAAUS,oBAEjEM,GAAWt0E,EAAM7F,QACjB6+E,EAAwBh5E,GAErBA,IAEf,GAlBI43E,cAAe,CACXW,qBAAsB,CAAC,KACvBV,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGtHtB,MCGD,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,4BACA,SACA,SACA,eACA,WACA,QACA,SACA,uBACA,wDAGA,cACA,SACA,iBAEA,MAEA,cAEE,GAAyBA,GAAc,CACzC,gFAEE,GAAwBA,GAAc,CAExC,0DACA,6CAEA,gBACA,mBAEA,cAEA,qBAEA,yBAEA,iCACA,gCACA,kBACA,YACA,+BACA,4BACA,iBACA,gBACA,uBACA,wBAEA,0BAEA,aACA,QAEA,QACA,kBACA,kBACA,mBACA,iBACA,2BACA,eACA,sBACA,kBACA,6BACA,sBACA,iBACA,cACA,cACA,iBACA,qBACA,0BACA,iBACA,uBACA,wBACA,eACA,kBACA,oBACA,aACA,gBACA,aACA,eACA,iBACA,eACA,mBACA,qBACA,eACA,mBACA,kCACA,+BACA,2BACA,6BACA,gBACA,aACA,aACA,qBACA,aACA,UACA,QACA,OACA,aACA,QACA,UACA,SACA,kBACA,OACA,uBACA,gCACA,cACA,mBACA,8BACA,kBACA,gBACA,uBACA,mBACA,8BACA,uBACA,+BACA,eACA,wBACA,sDACA,kBACA,wBACA,yBACA,gBACA,gCACA,qBACA,cACA,2BACA,gCACA,gDACA,gBACA,oBACA,sBACA,oBACA,mCACA,gCACA,4BACA,8BACA,gCACA,2CACA,cACA,cACA,sBACA,aACA,UACA,UACA,qBACA,iBACA,YACA,iBACA,kBACA,gBACA,cACA,qBACA,iBACA,4BACA,qBACA,gBACA,aACA,gBACA,aACA,gBACA,qCACA,gBACA,sBACA,uBACA,aACA,cACA,iBACA,mBACA,YACA,eACA,YACA,cACA,gBACA,cACA,kBACA,oBACA,kBACA,iCACA,8BACA,0BACA,4BACA,iBACA,eACA,YACA,YACA,oBACA,YACA,UACA,UACA,QACA,QACA,wBACA,SACA,OACA,OACA,OACA,SACA,0BACA,UACA,sBACA,iBACA,4BACA,UACA,oBACA,yCACA,SACA,WACA,oBACA,wBACA,YACA,iBACA,cACA,kBACA,WACA,4BACA,kBACA,OACA,oBACA,WACA,WAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAkBA,GAAc,CAClC,cACA,8CACA,iFACA,wBACA,kBACA,kCAEA,gDAEA,yBACA,uBACA,oBAGS6G,GAAa,CACtBt9E,KAAM,aACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBCzQgB,CAEpB,MACA,UACA,UACA,MACA,MACA,KACA,MACA,aACA,gBACA,UACA,SACA,OACA,OACA,OACA,QACA,UACA,YACA,SACA,eACA,aACA,SACA,QACA,kBACA,eACA,eACA,iBACA,eACA,oBACA,eACA,MACA,UACA,aACA,OACA,WACA,KACA,OACA,MACA,SACA,SACA,QACA,QACA,SACA,MACA,UACA,SACA,OACA,OACA,QACA,QACA,SACA,OACA,QACA,KACA,YACA,QACA,QACA,YACA,OACA,KACA,SACA,OACA,UACA,UACA,OACA,OACA,QACA,YACA,iBACA,SACA,QACA,UACA,MACA,UACA,OACA,SACA,SACA,KACA,OACA,KACA,QACA,MACA,QACA,OACA,WACA,UACA,UACA,aACA,YACA,QACA,MACA,SACA,SACA,eACA,UACA,OACA,YACA,QACA,cACA,OACA,KACA,WACA,OACA,QACA,SACA,OACA,QACA,SACA,WACA,UACA,OACA,QACA,SACA,OACA,SACA,UACA,QDqJIC,kBCnJiB,CAErB,QACA,SACA,MACA,cACA,OACA,UACA,OACA,YACA,oBACA,UACA,MACA,SACA,OACA,QACA,MACA,UACA,WACA,QACA,UACA,OACA,QACA,YACA,OACA,WACA,OACA,OACA,YACA,cACA,UACA,MACA,QDoHIC,sBD3QiB,CAIrB,MACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,UACA,MACA,OACA,OACA,MACA,OACA,UACA,MACA,MACA,YACA,QACA,MACA,MACA,KACA,MACA,QACA,YACA,MACA,KACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,aACA,QACA,eAEA,MACA,QACA,aACA,QACA,mBACA,cACA,MACA,SACA,YACA,SACA,UACA,OACA,SACA,QACA,OACA,QACA,MACA,YACA,eACA,UACA,cACA,qBACA,WACA,cACA,gBACA,iBACA,eACA,iBACA,iBACA,wBACA,wBACA,SACA,UACA,UACA,QACA,OACA,QACA,aACA,UACA,cACA,aACA,kBACA,kBACA,SACA,SACA,YACA,WACA,SACA,YACA,OACA,SACA,QAEA,YACA,aACA,QACA,UACA,eACA,aACA,SACA,SACA,UACA,WACA,SACA,QACA,MACA,eACA,UACA,WACA,QACA,UACA,WACA,SACA,SACA,SACA,SACA,aACA,SACA,YACA,OAEA,YACA,aACA,UACA,SACA,eACA,UACA,WACA,UACA,YAEA,eACA,iBACA,iBACA,wBACA,wBAEA,UACA,UACA,YACA,eAGA,kBACA,eACA,eACA,oBACA,WACA,YACA,aACA,UACA,WACA,eACA,gBACA,mBACA,YACA,iBACA,YACA,gBACA,YACA,iBACA,mBACA,MACA,WACA,eACA,iBACA,sBACA,YACA,eACA,wBAEA,aACA,YACA,aAEA,OACA,YACA,MACA,SACA,SACA,WACA,WACA,SACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,QACA,SACA,QACA,QAEA,SACA,YACA,SACA,OACA,WACA,aACA,mBACA,mBACA,UACA,UACA,UACA,cAEA,QAEA,oBACA,wBACA,oBACA,mBACA,SACA,UACA,mBACA,kBACA,YACA,YACA,QACA,aACA,cACA,iBACA,oBACA,WACA,YACA,YACA,cACA,YACA,WACA,UACA,aACA,aACA,UACA,gBACA,uBAEA,OAEA,gBACA,sBACA,kBACA,wBACA,gCACA,UACA,eACA,qBACA,6BACA,gBACA,sBACA,8BACA,SACA,eACA,qBACA,6BACA,SACA,aACA,YACA,aACA,YACA,YACA,WACA,QACA,UACA,eACA,WACA,qBACA,6BACA,8BACA,QACA,eAEA,gBACA,YACA,uBACA,4BACA,qBACA,oBACA,qBACA,aACA,kBACA,qBACA,0BACA,eACA,eACA,mBACA,oBACA,oBACA,uBACA,mBACA,sBACA,mBACA,yBACA,4BACA,yBACA,4BACA,sBACA,wBACA,2BACA,eACA,YACA,gBACA,oBACA,kBACA,qBACA,eACA,WACA,sBACA,2BACA,oBACA,mBACA,oBACA,YACA,iBACA,oBACA,yBACA,cACA,kBACA,mBACA,uBACA,0BACA,mBACA,iBACA,oBACA,cACA,cACA,UACA,WACA,eAEA,UACA,UACA,UACA,SAGA,WACA,WACA,QACA,SAEA,YACA,eACA,YACA,aACA,aACA,eACA,cACA,cACA,iBACA,kBACA,gBACA,eACA,gBACA,kBACA,cACA,cACA,kBACA,aACA,SAEA,UACA,QACA,YACA,YACA,aACA,cACA,QACA,YACA,YAGA,YACA,MACA,UACA,SACA,UACA,WACA,UACA,WACA,OACA,QACA,YACA,aACA,YACA,aACA,QACA,WACA,YACA,mBACA,WACA,kBACA,MACA,MACA,OACA,kBACA,kBACA,eACA,YACA,sBACA,OACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WAEA,SACA,aACA,cACA,aACA,MACA,UACA,WACA,WACA,UACA,WACA,SAEA,YACA,aACA,cACA,MACA,aACA,OACA,YACA,QACA,eACA,OACA,aAEA,kBACA,sBAEA,aACA,aACA,kBACA,kBACA,mBACA,gBACA,eACA,iBACA,kBACA,eACA,cACA,2BACA,uBACA,yBACA,qCACA,yBACA,yBACA,uBACA,yBACA,uBACA,2BACA,sBACA,qBACA,mBACA,mBACA,mBACA,mBACA,cACA,kBACA,iBACA,mBACA,0BACA,oBACA,wBACA,kBACA,oBACA,2BACA,qBACA,sBACA,qBACA,iCACA,qBACA,yBACA,8BACA,uBACA,cACA,qBACA,4BACA,qCACA,yBACA,kBACA,kBACA,wBACA,wBACA,iBACA,yBACA,0BACA,oBACA,kBACA,iBACA,cACA,qBACA,gCACA,0BACA,+BACA,wBACA,0BACA,mBACA,yBACA,wBACA,oBACA,8BACA,wBACA,yBACA,yBACA,sBACA,2BACA,iCACA,kBACA,mBACA,mBACA,+BACA,0BACA,yBACA,sBACA,mBACA,0BACA,wBACA,0BACA,4BACA,YACA,qBACA,yBACA,2BACA,kCACA,iBACA,kBACA,sBACA,eACA,oBACA,cACA,kBACA,kBACA,aACA,iBACA,aACA,kBACA,aACA,aACA,eACA,2BACA,wBACA,oBACA,qBACA,qBACA,cACA,2BACA,OACA,UAEA,yBACA,4BACA,uBACA,eACA,kBACA,yBACA,mBACA,0BACA,qBACA,yBACA,4BACA,wBACA,+BACA,uBACA,oBACA,8BACA,wBACA,iBACA,mCACA,oCACA,qCACA,sCACA,0BACA,2BACA,4BACA,qBACA,mBACA,2BACA,qBACA,uBACA,gCACA,8BACA,kBACA,kBACA,oBACA,0BACA,0BACA,yBACA,gCACA,0BACA,qCACA,8BACA,sCACA,+BACA,iCACA,0BACA,YACA,eACA,eACA,eACA,yBACA,oBACA,oBACA,aACA,sBACA,eACA,uBACA,uBACA,mBACA,iBACA,gCACA,+BACA,6BACA,4BACA,iCACA,yCACA,yCACA,sCACA,sCACA,mCACA,mCACA,8BACA,oBACA,gBACA,iBACA,kBACA,eACA,iBACA,gBACA,qBACA,gBACA,uBACA,yBACA,uBACA,8BACA,4BACA,mCACA,kBACA,yBACA,kBACA,sBACA,uBACA,aAEA,qCACA,0BACA,iCAEA,gCACA,mCACA,qCACA,wCACA,wBAEA,oBAEA,QC/ZIkC,qBAAqB,EACrBjC,YAAa,CAAC,MACdC,YAAa,CACT,KACA,CAAEC,MAAO,QAASC,SAAU,CAAC,OAC7B,CAAED,MAAO,WAAYC,SAAU,CAAC,KAAMC,eAAe,GACrD,CAAEF,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,CAAEH,MAAO,QAASC,SAAU,CAAC,QAC1CG,WAAY,CAAEwB,KAAM,KACpBtB,WAAY,CAAE4B,SAAU,CAAC,MACzBrB,UAAW,CAEP,IACA,IACA,KACA,MACA,IAEA,KAEA,IACA,IACA,IACA,IACA,KACA,KAEA,MACA,MACA,OACA,OAEA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KAEA,IACA,KACA,KACA,KACA,MACA,KACA,MACA,KAEA,KAEA,MACA,MAEA,KACA,MACA,MACA,OAEA,IACA,KACA,KACA,MAEA,MAEA,KAEA,MACA,KACA,KAEA,KACA,KACA,MACA,MACA,OACA,OACA,QACA,QAEA,KACA,IAGA,MACA,MACA,MACA,MACA,OAEJiC,iBAAiB,GAErBtB,cAAe,CACXW,qBAAsB,CAAC,KAAM,KAC7BV,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KExXvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,UACA,eACA,WACA,QACA,SAGA,cACA,SAEA,QAEE,GAAyBA,GAAc,CACzC,mFAEE,GAAwBA,GAAc,CAExC,0CAEA,SAEA,gBAEA,yBAEA,cACA,qBACA,eACA,gBACA,YACA,gBACA,eACA,OACA,SAEA,mBAEA,QACA,iBACA,kBACA,2BACA,cACA,0BACA,kBACA,eACA,aACA,UACA,UACA,sBACA,sBACA,QACA,OACA,SACA,QACA,SACA,OACA,kBACA,mBACA,2BACA,yBACA,wBACA,kBACA,eACA,iBACA,eACA,mBACA,gBACA,cACA,aACA,UACA,iBACA,gBACA,iBACA,gBACA,aACA,eACA,aACA,yBACA,iBACA,cACA,YACA,YACA,OACA,UACA,UACA,QACA,QACA,OACA,UACA,4BACA,QACA,SACA,WACA,cACA,4BACA,8BACA,OACA,sBACA,aACA,kBACA,iBACA,aACA,YACA,oBACA,SACA,WAEE,GAAwBA,GAAc,CAAC,cAAe,SAAU,YAAa,UAC7E,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAkBA,GAAc,CAElC,UAEA,eACA,iBAEA,2BAGS+G,GAAW,CACpBx9E,KAAM,WACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBChJgB,CAEpB,SACA,SACA,MACA,iBACA,MACA,KACA,MACA,gBACA,SACA,UACA,SACA,OACA,QACA,SACA,aACA,SACA,QACA,UACA,aACA,UACA,SACA,OACA,UACA,WACA,KACA,SACA,SACA,UACA,aACA,WACA,QACA,MACA,UACA,SACA,OACA,OACA,gBACA,gBACA,QACA,WACA,SACA,QACA,KACA,YACA,QACA,OACA,KACA,SACA,WACA,UACA,OACA,QACA,YACA,iBACA,MACA,OACA,QACA,UACA,MACA,MACA,UACA,OACA,QACA,MACA,UACA,SACA,MACA,MACA,KACA,OACA,OACA,QACA,QACA,WACA,WACA,YACA,UACA,cACA,UACA,UACA,UACA,aACA,YACA,SACA,UACA,UACA,UACA,WACA,OACA,SACA,QACA,MACA,OACA,OACA,YACA,KACA,MACA,WACA,OACA,SACA,QACA,UACA,SACA,UAEA,gBACA,iBACA,eACA,aACA,cACA,WACA,SACA,eACA,aACA,mBACA,eACA,eACA,UACA,aACA,aACA,kBAEA,WACA,aACA,WACA,SACA,aAEA,SACA,MACA,YACA,aACA,YACA,OACA,OACA,UACA,MAEA,gBACA,cACA,YACA,WACA,uBACA,oBACA,gBAEA,QACA,OACA,OACA,OAEA,WACA,YACA,SACA,MAEA,MACA,OACA,WACA,QACA,WACA,MACA,UACA,WACA,WACA,YACA,UACA,UAGA,eACA,aACA,WAEA,OACA,OACA,MACA,YAEA,eDpCIC,kBC6CiB,CAErB,QACA,SACA,SACA,OACA,oBACA,YACA,UACA,MACA,OACA,OACA,OACA,UACA,QACA,UACA,WACA,WACA,OACA,UACA,WDhEIC,sBElJiB,CAErB,YACA,8BACA,MACA,QACA,UACA,MACA,SACA,MACA,kBACA,cACA,aACA,MACA,WACA,UAEA,QACA,eACA,gBACA,mBACA,iBACA,WAEA,UACA,SACA,WACA,UAEA,WACA,SACA,WACA,QACA,MACA,OACA,SAEA,aACA,eACA,mBACA,eACA,eACA,oBACA,WACA,qBACA,uBACA,iBACA,UACA,WACA,YACA,aACA,UACA,UACA,eACA,WACA,iBACA,WACA,UACA,YACA,gBACA,qBACA,4BACA,kBACA,uBACA,4BACA,WACA,eACA,QAEA,UACA,WACA,eACA,cACA,WACA,UACA,cACA,YACA,YACA,eACA,YACA,aACA,cACA,aACA,cACA,sBACA,gBACA,eACA,YACA,aACA,eACA,cACA,cACA,oBACA,aACA,cACA,cACA,YACA,kBACA,aACA,aACA,cACA,cACA,aACA,eACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,gBACA,kBACA,iBACA,cACA,kBACA,aACA,cACA,aACA,YACA,kBACA,cACA,wBACA,0BACA,OACA,kBACA,cACA,eACA,iBACA,aACA,UACA,UACA,WACA,WACA,aACA,YACA,mBACA,sBACA,eACA,eACA,iBACA,WACA,YACA,YACA,aACA,iBACA,aACA,cACA,aACA,cACA,UACA,gBACA,aACA,YACA,OACA,UACA,UACA,OACA,UACA,UACA,OACA,UACA,UACA,eAEA,WACA,YACA,WACA,MACA,MACA,OACA,OAEA,MACA,oBACA,kBACA,cAEA,gBACA,sBACA,oBACA,kCACA,yBACA,aACA,iBAEA,MACA,OACA,OACA,OACA,QACA,OACA,UACA,OACA,MACA,MACA,UACA,OACA,QACA,SACA,MACA,QACA,KACA,MACA,MACA,KACA,QACA,UACA,SACA,QACA,MACA,OACA,OACA,MACA,SACA,QAEA,gBAEA,QACA,YACA,QACA,qBACA,cACA,mBACA,YACA,MACA,UACA,SACA,QACA,aACA,UACA,OACA,QACA,MACA,SACA,QACA,OACA,OACA,QACA,aACA,eACA,WACA,cACA,gBACA,eACA,eACA,iBACA,gBACA,SACA,UACA,YACA,UACA,QACA,UACA,aACA,SACA,SACA,YACA,UACA,YACA,OACA,QAEA,oBACA,gBACA,WACA,YACA,aACA,UACA,aACA,WACA,aACA,YACA,YACA,cACA,aACA,cAEA,MACA,QACA,YACA,aACA,cACA,aACA,MACA,OACA,UACA,MACA,SACA,MACA,YACA,QACA,eACA,kBACA,kBACA,OACA,kBACA,aACA,cACA,aACA,MACA,WACA,UAEA,OACA,UACA,UACA,UACA,YACA,kBACA,sBAEA,wBACA,0BACA,uBACA,kBACA,oBACA,uBACA,iBACA,aAEA,sBACA,mBACA,oBACA,iBACA,kBACA,eACA,kBACA,2BACA,yBACA,uBACA,sBACA,iBACA,cACA,6BACA,0BACA,gCACA,qBACA,kBACA,oBACA,mBACA,uBACA,eACA,YACA,OACA,WFtMIE,YAAa,CAAC,SACdI,WAAY,CAAC,SACbC,WAAY,CAAEt9C,MAAO,KACrBw9C,WAAY,CAAE4B,SAAU,CAAC,MACzBrB,UAAW,CACP,IACA,IACA,IACA,KACA,MACA,IACA,IAEA,IACA,KACA,KACA,KACA,OAGRW,cAAe,CACXW,qBAAsB,CAAC,MACvBV,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGrKvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,UACA,aACA,gBACA,QAGA,oCACA,SAGA,qCAGA,2BACA,2BAEE,GAAyBA,GAAc,CAAC,4CACxC,GAAwBA,GAAc,CAExC,0EAEA,yBAEA,cACA,cACA,0BACA,YACA,gBACA,eAEA,iBAEA,eACA,iBACA,aACA,kBACA,kBACA,gBACA,gBACA,YACA,eACA,eAEA,cACA,QACA,YACA,UAEA,WACA,UACA,gBACA,cACA,cACA,oBACA,oBACA,iBACA,iBACA,YACA,WACA,UACA,gBACA,mBACA,QACA,eACA,oBACA,iBACA,iBACA,kBACA,sBACA,cACA,qBACA,aACA,kBAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,6CAEA,4BACA,sCAEE,GAAkBA,GAAc,CAClC,YACA,YACA,cACA,2BAGSgH,GAAQ,CACjBz9E,KAAM,QACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfyC,aAAa,EACbtC,iBCzHgB,CAEpB,MACA,QACA,MACA,QACA,UACA,MACA,OACA,MACA,UACA,KACA,MACA,KACA,gBACA,UACA,OACA,SACA,UACA,KACA,QACA,UACA,OACA,SACA,QACA,QACA,UACA,YACA,UACA,UACA,aACA,SACA,UACA,UACA,SACA,UACA,cACA,UACA,cACA,aACA,OACA,SACA,QACA,OACA,UACA,eACA,eACA,oBACA,eACA,OACA,WACA,YACA,MACA,eACA,UACA,SACA,YACA,OACA,WACA,MACA,cACA,YACA,WACA,aACA,MACA,OACA,SACA,UACA,SACA,WACA,SACA,SACA,WACA,WACA,UACA,QACA,QACA,SACA,SACA,aACA,QACA,cACA,YACA,MACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,QACA,QACA,WACA,OACA,KACA,SACA,SACA,KACA,QACA,UACA,QACA,SACA,cACA,YACA,OACA,KACA,QACA,OACA,OACA,aACA,UACA,OACA,UACA,OACA,OACA,QACA,OACA,QACA,WACA,OACA,QACA,UACA,QACA,UACA,QACA,SACA,QACA,OACA,YACA,aACA,UACA,KACA,MACA,OACA,QACA,KACA,OACA,SACA,UACA,KACA,QACA,MACA,QACA,eACA,OACA,WACA,UACA,YACA,QACA,YACA,cACA,aACA,UACA,UACA,WACA,YACA,UACA,aACA,aACA,QACA,QACA,QACA,eACA,eACA,UACA,SACA,aACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,OACA,QACA,WACA,SACA,MACA,OACA,SACA,SACA,SACA,OACA,YACA,QACA,kBACA,eACA,OACA,OACA,SACA,OACA,OACA,SACA,QACA,aACA,SACA,WACA,SACA,YACA,QACA,SACA,gBACA,YACA,aACA,OACA,KACA,QACA,WACA,cACA,eACA,OACA,OACA,WACA,YACA,YACA,UACA,SACA,UACA,SACA,QACA,MACA,OACA,QACA,OACA,SACA,OAEA,UACA,YACA,WACA,WACA,UACA,OACA,WACA,aACA,aACA,SACA,UACA,cACA,SACA,UACA,gBACA,QACA,WACA,eACA,QACA,cACA,cACA,SACA,QACA,QACA,gBACA,SACA,SACA,KACA,WACA,SACA,YACA,OACA,OACA,QACA,WACA,YACA,cDhJIC,kBCkJiB,CAErB,QACA,SACA,SACA,UACA,OACA,OACA,OACA,MACA,UACA,SACA,QACA,MACA,UACA,WACA,OACA,MACA,UACA,OACA,QACA,WACA,SACA,SACA,gBACA,gBACA,YACA,UACA,WD7KIC,sBE3HiB,CAKrB,wBACA,oBACA,MACA,UACA,SACA,UACA,WACA,UACA,eACA,cACA,OACA,QACA,QACA,QACA,WACA,mBACA,YACA,aACA,QACA,QACA,cACA,WACA,cACA,WACA,OACA,aACA,MACA,SACA,OACA,MACA,SACA,aACA,aACA,oBACA,WAEA,MACA,SACA,aACA,cACA,MACA,UACA,WACA,WAEA,YACA,aACA,MACA,OACA,YACA,QACA,eACA,OACA,aAEA,QACA,iBACA,iBACA,eACA,kBACA,aACA,YACA,YACA,iBACA,eACA,eACA,cACA,iBACA,aACA,UACA,WACA,UACA,QACA,aAEA,aACA,aACA,aACA,cACA,kBACA,mBACA,WACA,aACA,aAEA,aACA,eACA,eACA,oBACA,oBACA,mBACA,WACA,cACA,sBACA,YACA,WACA,aACA,WACA,MACA,aACA,YACA,YACA,UACA,gBACA,qBACA,OACA,WACA,YACA,mBACA,gBACA,iBACA,mBACA,SACA,QACA,iBACA,WACA,MACA,UACA,SACA,iBACA,mBACA,mBACA,oBACA,UACA,eACA,oBACA,mBACA,QACA,YACA,cACA,cACA,eACA,iBACA,UACA,aACA,SACA,OAEA,YACA,kBACA,oBACA,mBACA,aACA,iBACA,UAEA,MACA,OACA,QACA,YACA,aACA,QACA,OACA,QACA,cACA,OACA,QACA,QACA,SACA,MACA,YACA,UACA,aACA,SACA,QACA,cACA,OACA,OACA,UACA,cACA,mBACA,MACA,SACA,YACA,OACA,MACA,OACA,MACA,QACA,kBACA,mBACA,eACA,UAEA,MACA,MACA,QACA,YACA,cACA,QACA,SACA,gBACA,gBACA,WACA,SACA,OACA,MACA,QACA,UACA,SACA,eACA,0BACA,yBACA,kBACA,QACA,QACA,YACA,SACA,cACA,QACA,OACA,SACA,cACA,KACA,SACA,MACA,QACA,QACA,OACA,QACA,OACA,QACA,aACA,eACA,MACA,MACA,8BACA,eACA,QACA,WACA,MACA,OACA,eACA,UACA,YACA,KACA,OACA,aACA,mBACA,WACA,WACA,MACA,QACA,SACA,UACA,cACA,OACA,QACA,SACA,UACA,iBACA,qBACA,cACA,iBACA,SACA,UACA,UACA,QACA,OACA,QACA,OACA,QACA,gBACA,YACA,MACA,OACA,OACA,YACA,aACA,qBACA,OACA,SACA,MACA,OACA,UACA,QACA,qBACA,QACA,OACA,QACA,SACA,YACA,kBACA,MACA,OACA,SACA,iBACA,mBACA,YACA,OACA,UACA,aACA,SACA,QACA,WACA,QACA,QACA,OACA,UACA,eACA,QACA,gBACA,eACA,cACA,YACA,aACA,eACA,cACA,eACA,WACA,WAEA,OAEA,WACA,UFpMIC,YAAa,CAAC,MACdC,YAAa,CACT,QACA,QACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,GACxD,CAAEF,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAEmC,sBAAsB,GACpC7B,cAAe,CAAC,CAAEV,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAC/DW,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,KAAM,IAAK,KAAM,MAC7DC,YAOR,SAAqBpyC,GACjB,OAAOA,EAAOr7B,KAAI,CAACzJ,EAAOmD,KACtB,MAAMg0E,EAAYryC,EAAO3hC,EAAI,IAAMswE,GAC7BgF,EAAY3zC,EAAO3hC,EAAI,IAAMswE,GAEnC,OAAI3+D,GAAQs/D,OAAOp0E,IAAUy4E,EAAUt+E,OAASo5E,GAAU8F,WAE/C16E,OAAO4d,OAAO5d,OAAO4d,OAAO,CAAC,EAAGvc,GAAQ,CAAE7F,KAAMo5E,GAAUgB,yBAGlD,UAAfv0E,EAAMK,MAAoBL,EAAM7F,OAASo5E,GAAUS,kBAC1B,eAAnBmD,EAAU92E,MAA4C,eAAnBo4E,EAAUp4E,KAKhDL,EAHQrB,OAAO4d,OAAO5d,OAAO4d,OAAO,CAAC,EAAGvc,GAAQ,CAAE7F,KAAMo5E,GAAUkE,WAAYp3E,KAAML,EAAMq8B,KAGrF,GAEpB,GAvBIu7C,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KG3ItB,MCGD,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,QACA,SAGA,0EACA,eACA,SAEA,QAEE,GAAyBA,GAAc,CAAC,oDACxC,GAAwBA,GAAc,CAExC,iDAEA,qEAEA,cAEA,cAEA,yBAEA,cACA,eACA,gBACA,kBACA,YAEA,eAEE,GAAwBA,GAAc,CAAC,cAAe,SAAU,cAEhE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAkBA,GAAc,CAClC,gDACA,kCACA,cAESkH,GAAS,CAClB39E,KAAM,SACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBCnEgB,CAIpB,QACA,SACA,MACA,QACA,MACA,QACA,MACA,MACA,SACA,UACA,KACA,MACA,SACA,gBACA,SACA,QACA,UACA,KACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,WACA,aACA,SACA,QACA,UACA,eACA,eACA,oBACA,WACA,UACA,aACA,WACA,SACA,OACA,SACA,WACA,KACA,OACA,OACA,OACA,MACA,SACA,SACA,UACA,YACA,SACA,UACA,OACA,SACA,QACA,YACA,MACA,UACA,OACA,OACA,YACA,OACA,QACA,SACA,KACA,SACA,YACA,KACA,QACA,UACA,YACA,QACA,SACA,UACA,YACA,OACA,KACA,SACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,eACA,UACA,KACA,MACA,UACA,UACA,OACA,QACA,KACA,SACA,KACA,OACA,OACA,KACA,QACA,SACA,QACA,OACA,YACA,OACA,SACA,YACA,UACA,QACA,QACA,QACA,YACA,aACA,SACA,UACA,UACA,SACA,UACA,WACA,YACA,QACA,WACA,MACA,OACA,YACA,SACA,MACA,QACA,OACA,YACA,OACA,OACA,KACA,cACA,UACA,YACA,QACA,SACA,SACA,QACA,SACA,SACA,OACA,UACA,OACA,QACA,SACA,OACA,WDpFIC,kBCsFiB,CAMrB,MACA,QACA,OACA,YACA,UACA,MACA,UACA,mBACA,QACA,UACA,WACA,OACA,OACA,UACA,qBDzGIC,sBDrEiB,CAErB,MACA,UACA,OACA,WACA,SACA,OACA,MACA,SACA,MACA,QACA,oBACA,SACA,OACA,aACA,SACA,iBACA,QACA,QACA,SACA,SACA,QACA,SACA,aACA,UACA,QACA,QACA,OACA,UACA,2BACA,4BACA,gBACA,mBACA,iBACA,SACA,YACA,gBACA,OACA,SACA,UACA,WACA,QACA,WAEA,MACA,QACA,eACA,MACA,MACA,MACA,QAEA,OACA,OACA,WACA,YACA,YACA,WAEA,aACA,OACA,aACA,eACA,YACA,QACA,MACA,OACA,cACA,aACA,YAEA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,UACA,MACA,OACA,UACA,MACA,QACA,KACA,MACA,MACA,QACA,OACA,MACA,KACA,MACA,QACA,UACA,MACA,OACA,OACA,MACA,OACA,QAEA,OACA,aACA,oBACA,oBACA,eACA,cACA,cACA,aACA,cACA,eACA,WACA,YACA,YACA,aACA,aACA,mBACA,oBACA,YACA,YAEA,QCrDIE,YAAa,CACT,QACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,KAAMC,eAAe,IAIvDC,WAAY,CAAC,QAAS,KAAM,MAE5BG,WAAY,CAAEC,YAAY,EAAM2B,SAAU,CAAC,KAAM1B,MAAO,CAAC,IAAK,IAAK,MACnEK,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,MAAO,OAEnEW,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KEhFvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,4BACA,SACA,SACA,eACA,WACA,QACA,SACA,uBAGA,cACA,SAEA,QAEE,GAAyBA,GAAc,CAAC,sDACxC,GAAwBA,GAAc,CAExC,0BAEA,SACA,mBAEA,cAEA,aAEA,cACA,aACA,gBACA,gBACA,YACA,iBACA,uBACA,YACA,kCACA,eAEA,iBAEA,eAEE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAkBA,GAAc,CAClC,gDACA,2BAES9tE,GAAM,CACf3I,KAAM,MACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBC3EgB,CAEpB,MACA,WACA,QACA,MACA,MACA,KACA,MACA,aACA,aACA,KACA,SACA,gBACA,QACA,UACA,OACA,KACA,OACA,SACA,WACA,OACA,QACA,QACA,WACA,UACA,SACA,SACA,YACA,UACA,aACA,gBACA,SACA,QACA,OACA,UACA,kBACA,kCACA,eACA,eACA,iBACA,mCACA,eACA,SACA,QACA,aACA,MACA,UACA,UACA,SACA,QACA,OACA,WACA,gBACA,aACA,WACA,OACA,UACA,OACA,UACA,WACA,SACA,QACA,SACA,OACA,UACA,SACA,WACA,QACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,WACA,MACA,SACA,QACA,QACA,SACA,OACA,OACA,WACA,KACA,YACA,QACA,QACA,cACA,SACA,YACA,OACA,KACA,WACA,QACA,UACA,UACA,OACA,OACA,aACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,UACA,MACA,KACA,OACA,MACA,OACA,SACA,KACA,MACA,KACA,OACA,OACA,QACA,MACA,QACA,OACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,QACA,QACA,OACA,YACA,MACA,aACA,cACA,UACA,SACA,SACA,UACA,SACA,QACA,WACA,SACA,MACA,OACA,YACA,QACA,SACA,SACA,SACA,SACA,YACA,eACA,MACA,UACA,OACA,WACA,MACA,eACA,WACA,aACA,QACA,SACA,cACA,YACA,SACA,cACA,QACA,cACA,OACA,gBACA,kBACA,KACA,WACA,cACA,QACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,QACA,QACA,SACA,WACA,SACA,SACA,UACA,QDzHIC,kBC2HiB,CAErB,QACA,SACA,sBACA,iBACA,SACA,OACA,UACA,oBACA,eACA,OACA,yBACA,oBACA,YACA,OACA,OACA,MACA,UACA,SACA,QACA,MACA,UACA,WACA,WACA,wBACA,gBACA,kCACA,6BACA,qBACA,qBACA,gBACA,QACA,QACA,UACA,WACA,OACA,YACA,YACA,WDjKIC,sBE7EiB,CAErB,WAEA,OACA,aACA,eACA,YACA,aAEA,WACA,oBACA,iBACA,UACA,cACA,mBACA,eACA,cACA,MACA,MACA,KACA,MACA,QACA,OACA,QACA,OACA,UACA,eAEA,YACA,kBACA,QACA,QACA,UACA,YACA,kBACA,OACA,UACA,YACA,eAEA,eACA,eACA,YACA,oBACA,iBAMA,QACA,MACA,MACA,MACA,MAIA,aACA,cACA,WACA,UACA,UACA,SACA,eACA,YACA,aACA,OACA,aACA,iBACA,aACA,UACA,YACA,YACA,WACA,WACA,WACA,kBACA,kBAMA,OAEA,WACA,SAEA,QACA,MACA,MACA,MACA,OACA,OACA,QFlBIE,YAAa,CACT,CAAEC,MAAO,WAAYC,SAAU,CAAC,IAAK,OACrC,CAAED,MAAO,SAAUC,SAAU,CAAC,KAAMC,eAAe,IAEvDC,WAAY,CAAC,QAAS,MACtBG,WAAY,CAAEC,YAAY,GAC1BM,UAAW,CAAC,OAEhBW,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGrFvB,GAAiBrD,GAAc,CAAC,4BAEhC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,4BACA,SACA,SACA,eACA,WACA,QACA,SACA,uBAGA,cACA,SAEA,MAEA,kBACA,WACA,oBACA,qBACA,cACA,UACA,SACA,WAEE,GAAyBA,GAAc,CAAC,iCACxC,GAAwBA,GAAc,CAExC,0CAEA,SAEA,cAEA,yBAEA,0BACA,6BACA,0BACA,4BACA,YACA,kCACA,iBACA,UAEA,iBAEA,eACA,0BACA,aACA,gBACA,cACA,cACA,yBACA,YACA,YAEA,UACA,UACA,kBACA,0BACA,MACA,iBACA,kBACA,4BACA,gBACA,cACA,WACA,gBACA,cACA,oBACA,qBACA,mBACA,gCACA,cACA,eACA,gBACA,eACA,iBACA,aACA,qBACA,mBACA,iBACA,iBAIE,GAAwBA,GAAc,CACxC,yBACA,0BACA,+BAGE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,uBACA,+CAEE,GAAkBA,GAAc,CAClC,kCAEA,2BAESmH,GAAQ,CACjB59E,KAAM,QACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBC1HgB,CAEpB,SACA,MACA,QACA,QACA,MACA,QACA,UACA,MACA,MACA,KACA,MACA,KACA,gBACA,YACA,UACA,OACA,KACA,OACA,UACA,OACA,WACA,SACA,UACA,UACA,SACA,YACA,cACA,aACA,cACA,SACA,QACA,OACA,UACA,eACA,eACA,OACA,aACA,UACA,SACA,UACA,SACA,OACA,OACA,WACA,aACA,WACA,cACA,SACA,OACA,OACA,QACA,WACA,MACA,QACA,SACA,SACA,YACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,YACA,MACA,OACA,OACA,YACA,QACA,UACA,SACA,WACA,QACA,WACA,SACA,SACA,SACA,KACA,YACA,UACA,QACA,QACA,SACA,YACA,WACA,OACA,UACA,KACA,KACA,YACA,OACA,OACA,aACA,cACA,OACA,MACA,OACA,OACA,UACA,UACA,OACA,QACA,OACA,QACA,QACA,UACA,QACA,UACA,UACA,kBACA,eACA,WACA,UACA,OACA,MACA,MACA,OACA,OACA,KACA,OACA,MACA,OACA,QACA,SACA,KACA,SACA,OACA,KACA,MACA,OACA,SACA,KACA,QACA,aACA,QACA,SACA,OACA,WACA,YACA,aACA,UACA,OACA,OACA,UACA,MACA,UACA,YACA,YACA,UACA,aACA,aACA,QACA,SACA,QACA,OACA,YACA,UACA,SACA,aACA,QACA,UACA,WACA,YACA,SACA,QACA,OACA,QACA,WACA,SACA,MACA,OACA,UACA,SACA,SACA,UACA,WACA,OACA,SACA,eACA,UACA,MACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,cACA,OACA,OACA,OACA,OACA,YACA,KACA,WACA,cACA,OACA,OACA,UACA,YACA,cACA,gBACA,QACA,SACA,UACA,YACA,SACA,SACA,MACA,OACA,QACA,QACA,QACA,OACA,WACA,QACA,SACA,UACA,OACA,OACA,QACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QDjHIC,kBCmHiB,CAGrB,SACA,MACA,UACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,cACA,UACA,UACA,gBACA,WACA,YACA,OACA,YACA,UACA,OACA,MACA,QACA,MACA,OACA,WACA,YACA,WACA,OACA,YACA,aACA,aACA,cACA,QACA,aACA,WACA,YDxJIC,sBE5HiB,CAOrB,MACA,OACA,YACA,YACA,kBACA,uBACA,oBACA,aACA,YACA,iBACA,YACA,iBACA,eACA,kBACA,aACA,YACA,YACA,iBACA,eACA,aACA,cACA,OACA,OACA,QACA,cACA,MACA,MACA,WACA,YACA,oBACA,eACA,wBACA,oBACA,oBACA,uBACA,cACA,kBACA,qBACA,cACA,aACA,iBACA,sBACA,iCACA,cACA,YACA,WACA,UACA,cACA,OACA,OACA,OACA,UACA,cACA,WACA,MACA,WACA,WACA,YACA,QACA,eACA,SACA,YACA,WACA,oBACA,kBACA,OACA,MACA,OACA,oBACA,QACA,WACA,YACA,aACA,QACA,YACA,kBACA,eACA,iBACA,iBACA,eACA,oBACA,mBACA,eACA,OACA,WACA,YACA,cACA,aACA,aACA,MACA,eACA,cACA,cACA,UACA,aACA,MACA,MACA,IACA,aACA,mBACA,kCACA,QACA,MACA,UACA,WACA,SACA,cACA,UACA,QACA,SACA,kBACA,gBACA,YACA,cACA,cACA,iBACA,qBACA,qBACA,wBACA,wBACA,WACA,kBACA,kBACA,oBACA,yBACA,+BACA,gBACA,sBACA,YACA,iBACA,6BACA,0BACA,0BACA,yBACA,iBACA,qBACA,WACA,wBACA,mBACA,cACA,YACA,WACA,YACA,cACA,cACA,OACA,yBACA,KACA,QACA,WACA,2BACA,mBACA,qBACA,YACA,cACA,iBACA,SACA,gBACA,sBACA,iBACA,oBACA,cACA,eACA,sBACA,cACA,aACA,aACA,YACA,aACA,WACA,MACA,oBACA,aACA,OACA,mBACA,0BACA,yBACA,kBACA,QACA,SACA,uBACA,yBACA,0BACA,oBACA,UACA,KACA,YACA,iBACA,MACA,QACA,OACA,QACA,OACA,QACA,aACA,kBACA,MACA,UACA,aACA,cACA,aACA,mBACA,WACA,YACA,aACA,eACA,MACA,SACA,MACA,QACA,mBACA,cACA,MACA,SACA,SACA,MACA,QACA,eACA,wBACA,UACA,MACA,SACA,aACA,YACA,aACA,MACA,YACA,QACA,SACA,oBACA,WACA,qBACA,kBACA,iBACA,iBACA,eACA,KACA,WACA,MACA,QACA,cACA,UACA,UACA,OACA,SACA,OACA,SACA,aACA,eACA,iBACA,qBACA,cACA,kBACA,iBACA,eACA,UACA,iBACA,aACA,SACA,SACA,UACA,UACA,MACA,QACA,aACA,OACA,QACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,oBACA,MACA,WACA,QACA,UACA,uBACA,qBACA,QACA,aACA,eACA,oBACA,oBACA,oBACA,OACA,cACA,SACA,aACA,cACA,SACA,UACA,cACA,YACA,cACA,YACA,cACA,cACA,gBACA,cACA,aACA,gBACA,eACA,cACA,cACA,cACA,cACA,mBACA,YACA,kBACA,gBACA,sBACA,eACA,kBACA,oBACA,mBACA,mBACA,kBACA,gBACA,cACA,aACA,YACA,cACA,aACA,YACA,kBACA,gBACA,gBACA,mBACA,qBACA,eACA,cACA,WACA,YACA,YACA,aACA,YACA,gBACA,mBACA,aACA,WACA,YACA,OACA,UACA,UACA,OACA,UACA,UACA,SACA,YACA,MACA,MACA,OACA,cACA,qBACA,gBACA,kBACA,UACA,YACA,YACA,eACA,mBACA,mBACA,UACA,UACA,sBACA,sBACA,cACA,SACA,gBACA,gBACA,aACA,kBACA,yBACA,eACA,cACA,UACA,YACA,iBACA,mBACA,YACA,OACA,aACA,WACA,MACA,WACA,SACA,QACA,aACA,aACA,uBACA,mBACA,wBACA,mBACA,mBACA,uBACA,oBACA,OACA,sBACA,oBACA,WACA,UACA,WACA,UACA,OACA,eACA,eACA,wBACA,wBACA,gBACA,YACA,WACA,OACA,eACA,MACA,MACA,WAEA,aACA,QACA,OACA,eACA,OACA,UACA,QFhTIC,YAAa,CAAC,KAAM,MAGpBC,YAAa,CACT,CAAEC,MAAO,QAASC,SAAU,CAAC,OAC7B,CAAED,MAAO,SAAUC,SAAU,CAAC,KAAMC,eAAe,IAGvDC,WAAY,CAAC,SACbG,WAAY,CAAEC,YAAY,GAC1BM,UAAW,CACP,IACA,KACA,KACA,IACA,KAEA,IACA,IACA,MAIRW,cAAe,CACXC,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGvJvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,OACA,OACA,OACA,QACA,WACA,SACA,SACA,eACA,WACA,SACA,uBACA,4BACA,SAGA,gBACA,SAEA,MAEA,eACA,oDACA,aAEA,yCAEE,GAAyBA,GAAc,CAAC,iBACxC,GAAwBA,GAAc,CAExC,wCAEA,SACA,mBAEA,gBAEA,yBAEA,cACA,MACA,0BACA,eAEA,iBAEA,oCAEA,kBACA,iBACA,4BAEA,KACA,MAEA,iCACA,gBACA,YACA,gBACA,aACA,qBACA,oBACA,eACA,gBACA,mBACA,aACA,cACA,WACA,iBACA,gBACA,qBACA,SACA,qBACA,oBACA,4BACA,2BACA,4BACA,kBACA,cACA,cACA,mBACA,sBACA,UACA,wBACA,oBACA,oBACA,0BACA,eACA,WACA,aACA,yBACA,yBACA,WACA,+BACA,0BACA,gBACA,gCACA,6BACA,eACA,YACA,aACA,oBACA,OACA,WACA,kBACA,iBACA,mBACA,WACA,qBACA,gBACA,aACA,uBACA,uBACA,oBACA,mBACA,yBACA,iBACA,eACA,UACA,YACA,mBACA,iBACA,oBACA,WACA,yBACA,0BACA,QACA,YACA,kBACA,wBACA,QACA,WACA,eACA,QACA,aACA,eACA,oBACA,UACA,SACA,qBACA,UACA,kBACA,qBACA,YACA,qBACA,mBACA,YACA,4BACA,QACA,oBACA,UACA,yBACA,2BACA,oBACA,gBACA,UACA,uBACA,qBACA,oBACA,qBACA,qBACA,6BACA,qBACA,SACA,SACA,aACA,OACA,QACA,WACA,OACA,SACA,uBACA,kBACA,sBACA,OACA,6BACA,WACA,eACA,6BACA,uBACA,cACA,UACA,qBACA,UACA,eACA,gBACA,eACA,YACA,gBACA,aACA,gBACA,qBACA,kBACA,iBACA,gBACA,UACA,QACA,iBACA,WACA,8BACA,UACA,OACA,oBACA,OACA,iBACA,aACA,YACA,0BAEE,GAAwBA,GAAc,CAAC,cAAe,SAAU,cAChE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBAEA,0BAEE,GAAkBA,GAAc,CAClC,gDACA,2BAGSoH,GAAc,CACvB79E,KAAM,cACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBC3OgB,CAGpB,MACA,MACA,QACA,MACA,MACA,KACA,MACA,gBACA,SACA,QACA,UACA,QACA,SACA,OACA,KACA,UACA,QACA,aACA,QACA,YACA,WACA,UACA,SACA,SACA,UACA,aACA,WACA,gBACA,WACA,UACA,SACA,QACA,UACA,eACA,eACA,oBACA,eACA,SACA,WACA,OACA,aACA,UACA,UACA,SACA,OACA,OACA,OACA,WACA,cACA,OACA,OACA,SACA,SACA,OACA,UACA,SACA,OACA,WACA,QACA,OACA,aACA,MACA,UACA,WACA,gBACA,OACA,OACA,WACA,OACA,QACA,QACA,SACA,WACA,WACA,cACA,kBACA,KACA,KACA,QACA,QACA,SACA,YACA,OACA,KACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,UACA,eACA,MACA,OACA,SACA,KACA,MACA,UACA,KACA,OACA,iBACA,YACA,aACA,UACA,SACA,KACA,QACA,QACA,OACA,UACA,QACA,OACA,UACA,QACA,OACA,YACA,SACA,YACA,OACA,WACA,cACA,aACA,cACA,UACA,WACA,SACA,SACA,SACA,QACA,WACA,WACA,aACA,OACA,OACA,SACA,gBACA,SACA,yBACA,iCACA,0BACA,eACA,MACA,UACA,WACA,OACA,aACA,cACA,QACA,cACA,WACA,OACA,KACA,MACA,OACA,cACA,UACA,WACA,cACA,UACA,QACA,SACA,UACA,SACA,aACA,MACA,OACA,SACA,OACA,UACA,QACA,QACA,OACA,eACA,YAEA,WDwDIC,kBCtDiB,CAErB,SACA,MACA,OACA,OACA,YACA,OACA,YACA,iBACA,MACA,UACA,SACA,QACA,MACA,UACA,WACA,QACA,UACA,WACA,YACA,OACA,WACA,OACA,YACA,YACA,WD6BIC,sBE7OiB,CAGrB,wBACA,MACA,eACA,QACA,YACA,WACA,cACA,MACA,MACA,QACA,SACA,MACA,MACA,OAEA,YACA,cACA,MACA,aACA,OACA,kBACA,kBACA,eACA,gCACA,+BAEA,SACA,WACA,aACA,iBACA,oBACA,kBACA,cACA,YACA,cACA,eACA,gBACA,SACA,aACA,YAEA,OACA,UACA,QACA,WACA,cACA,YAEA,aACA,kBACA,eACA,UACA,mBACA,mBACA,gBACA,eACA,0BACA,uBACA,sBACA,mBACA,gBACA,eACA,sBACA,YACA,kBACA,WACA,SACA,WACA,gBACA,aACA,iBACA,qBACA,wBAEA,gBACA,iBACA,gBAEA,aACA,gBACA,aACA,aACA,WACA,uBAEA,cACA,oBACA,mBACA,sBACA,UACA,WACA,eACA,gBACA,WACA,WACA,qBACA,oBACA,0BACA,MACA,UACA,UACA,aACA,SACA,QACA,yBACA,eACA,cACA,oBACA,iBACA,gBACA,mBACA,OACA,OACA,SACA,aACA,aACA,cAEA,MACA,OACA,OACA,OACA,OACA,UACA,MACA,MACA,UACA,MACA,QACA,MACA,QACA,KACA,QACA,UACA,OACA,QACA,OACA,MACA,OACA,SACA,MACA,SACA,WACA,MACA,QAEA,WACA,WACA,eACA,eACA,mBACA,aACA,WACA,iBACA,qBACA,QACA,UACA,UACA,YACA,YACA,eACA,iBACA,oBACA,eACA,iBACA,0BACA,0BACA,YACA,oBACA,gBACA,iBACA,oBACA,YACA,cACA,qBACA,iBACA,mBACA,mBACA,YACA,YACA,cACA,iBACA,iBACA,aACA,UACA,YACA,eAEA,aACA,QACA,OACA,aACA,uBAEA,cACA,iBACA,eACA,wBACA,eACA,oBACA,YACA,gBACA,mBACA,gBACA,iBACA,cACA,aACA,aACA,eACA,kBACA,WACA,aACA,YACA,cACA,cACA,OACA,UACA,YAEA,QACA,YACA,SACA,YACA,aACA,SACA,OACA,MACA,QACA,QACA,WACA,YACA,UACA,YACA,UACA,QACA,QACA,UACA,QACA,MACA,aACA,gBACA,QACA,YACA,YACA,OACA,UACA,QAEA,aACA,UACA,aACA,kBACA,aACA,cACA,kBACA,WACA,WACA,qBACA,eACA,qBACA,yBACA,aACA,aACA,gBACA,eACA,kBACA,iBACA,cACA,gBACA,qCACA,cACA,UACA,YACA,SACA,YACA,wBACA,QACA,kBACA,eACA,kBACA,aAEA,gBACA,aACA,SACA,YACA,cACA,kBACA,cACA,iBACA,eACA,gBACA,UACA,YAEA,kBACA,YACA,oBACA,SAEA,WACA,UFlEIkC,qBAAqB,EACrBhC,YAAa,CAAC,CAAEC,MAAO,QAASC,SAAU,CAAC,OAC3CE,WAAY,CAAC,QAAS,MACtBC,WAAY,CAAEt9C,MAAO,KAAM8+C,KAAM,OACjCtB,WAAY,CAAEE,MAAO,CAAC,KAAMC,OAAQ,CAAC,MACrCI,UAAW,CACP,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEJwC,wBAAyB,CAAC,OAG9B7B,cAAe,CACXW,qBAAsB,CAAC,MACvBV,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGxQvB,GAAiBrD,GAAc,CAAC,0CAChC,GAAkBA,GAAc,CAElC,OACA,OACA,QACA,WACA,SACA,eACA,WACA,QACA,SAGA,yBACA,SACA,iBACA,0BAEA,MAEA,4DACA,4CAEE,GAAyBA,GAAc,CACzC,uFAEE,GAAwBA,GAAc,CAExC,cAEA,SAEA,gBAEA,qCAEA,uBACA,eACA,6BACA,gBACA,kBACA,SACA,mBAEA,mBAEA,iBACA,WACA,2BACA,iBACA,iBACA,sBACA,aACA,aACA,gBACA,kBACA,cACA,kBACA,kBACA,SACA,uBACA,cACA,OACA,SACA,mBACA,4BACA,+BACA,sBACA,cACA,iBACA,yBACA,QACA,SACA,kBACA,eACA,eACA,cACA,mBACA,kBACA,uBACA,cACA,cACA,qBACA,WACA,kBACA,kBACA,gBACA,gBACA,aACA,YACA,gBACA,iBACA,qBACA,YACA,YACA,YACA,UACA,UACA,QACA,QACA,QACA,UACA,OACA,kBACA,kBACA,YACA,wBACA,WACA,2BACA,cACA,kBACA,iBACA,UACA,oBACA,uBACA,oBACA,oBACA,cACA,eACA,UACA,qBACA,QACA,eACA,gBACA,gBACA,cACA,UACA,mBACA,qBACA,SACA,WACA,wBACA,YACA,oBACA,mBACA,YACA,eACA,qBACA,WACA,kBACA,OACA,qBACA,iBACA,eACA,uBACA,uBACA,uBACA,wBACA,oBACA,mBACA,mBACA,iBACA,cACA,eACA,cACA,qBACA,uBACA,cACA,aACA,qBACA,mBACA,eACA,kBACA,sBACA,wBACA,mBACA,eACA,gBACA,uBACA,sBACA,gBACA,aACA,mBACA,cACA,oBACA,cACA,iBACA,gBACA,WACA,oBACA,kBACA,0BACA,iBACA,gBACA,cACA,oBACA,yBACA,gBACA,eACA,mBACA,aACA,gBACA,kBACA,gBACA,MACA,KAEA,UACA,QACA,OACA,SACA,SACA,UAEE,GAAwBA,GAAc,CACxC,yBACA,SACA,YACA,UAEE,GAAgBA,GAAc,CAChC,OACA,qCACA,uBACA,sCAEA,kBAEE,GAAkBA,GAAc,CAClC,YACA,YACA,gBACA,yBACA,kBAESsH,GAAgB,CACzB/9E,KAAM,gBACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBC9OgB,CAMpB,MACA,MACA,QACA,UACA,MACA,KACA,MACA,aACA,SACA,UACA,UACA,OACA,KACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,YACA,aACA,WACA,UACA,SACA,QACA,eACA,eACA,oBACA,eACA,SACA,WACA,YACA,WACA,kBACA,aACA,aACA,UACA,UACA,UACA,SACA,OACA,WACA,gBACA,WACA,cACA,MACA,OACA,OACA,OACA,OACA,SACA,WACA,UACA,SACA,SACA,OACA,UACA,aACA,QACA,QACA,MACA,QACA,sBACA,yBACA,UACA,OACA,OACA,WACA,QACA,QACA,SACA,uBACA,gBACA,mBACA,cACA,cACA,KACA,SACA,KACA,QACA,SACA,QACA,QACA,cACA,SACA,KACA,6BACA,YACA,WACA,OACA,UACA,OACA,MACA,OACA,OACA,UACA,QACA,OACA,OACA,QACA,QACA,OACA,YACA,iBACA,OACA,OACA,eACA,QACA,WACA,QACA,qBACA,gBACA,MACA,WACA,UACA,mBACA,MACA,qBACA,mBACA,OACA,KACA,WACA,SACA,aACA,KACA,QACA,MACA,QACA,UACA,OACA,UACA,YACA,QACA,QACA,OACA,QACA,aACA,SACA,UACA,SACA,SACA,UACA,UACA,WACA,SACA,SACA,QACA,kBACA,kBACA,sBACA,QACA,SACA,UACA,qBACA,SACA,YACA,YACA,YACA,MACA,OACA,SACA,UACA,WACA,MACA,iBACA,oBACA,YACA,sBACA,eACA,eACA,iBACA,mBACA,WACA,aACA,gBACA,QACA,aACA,OACA,KACA,WACA,UACA,OACA,YACA,OACA,QACA,SACA,SACA,SACA,QACA,MACA,QACA,WACA,WACA,gBACA,QACA,SACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,MACA,aACA,YD2BIC,kBCzBiB,CAErB,SACA,SACA,MACA,OACA,OACA,YACA,WACA,MACA,UACA,mBACA,SACA,OACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,OACA,WACA,WACA,aACA,YACA,aACA,YACA,gBACA,mBACA,UACA,YACA,OACA,WACA,OACA,OACA,YACA,WACA,UACA,WACA,WACA,YACA,UACA,eACA,QDtBIC,sBEhPiB,CAgBrB,MACA,OACA,UACA,UACA,cACA,cACA,YACA,wBACA,mCACA,gCACA,iCACA,8BACA,oBACA,QACA,OACA,OACA,QACA,MACA,MACA,SACA,UACA,YACA,SACA,UACA,OACA,OACA,UACA,OACA,mBACA,cACA,UACA,WACA,eACA,YACA,UACA,SACA,YACA,gBACA,OACA,UACA,aACA,MACA,MACA,QACA,YACA,UACA,eACA,eACA,eACA,oBACA,eACA,UACA,WACA,OACA,WACA,WACA,cACA,WACA,aACA,MACA,UACA,aACA,YACA,YACA,SACA,UACA,UACA,aACA,MACA,cACA,MACA,qBACA,MACA,UACA,QACA,QACA,cACA,QACA,SACA,aACA,cACA,YACA,gBACA,iBACA,qBACA,qBACA,uBACA,qBACA,mBACA,sBACA,kBACA,4BACA,gBACA,oBACA,oBACA,kBACA,sBACA,kBACA,iBACA,2BACA,aACA,aACA,WACA,WACA,eACA,MACA,YACA,OACA,cACA,KACA,SACA,YACA,YACA,aACA,aACA,UACA,SACA,QACA,WACA,KACA,UACA,WACA,6BACA,2BACA,6BACA,yBACA,uBACA,yBACA,kBACA,sBACA,oBACA,sBACA,sBACA,gBACA,cACA,kBACA,gBACA,kBACA,qBACA,mBACA,qBACA,MACA,WACA,aACA,QACA,OACA,QACA,OACA,SACA,OACA,KACA,YACA,iBACA,SACA,MACA,QACA,OACA,OACA,QACA,QACA,MACA,MACA,SACA,cACA,MACA,SACA,MACA,QACA,YACA,iBACA,MACA,MACA,YACA,QACA,SACA,eACA,eACA,kBACA,kBACA,KACA,QACA,WACA,MACA,QACA,UACA,QACA,UACA,OACA,OACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,YACA,aACA,OACA,QACA,SACA,SACA,cACA,OACA,OACA,UACA,OACA,MACA,QACA,QACA,UACA,cACA,kBACA,QACA,OACA,SACA,aACA,cACA,cACA,UACA,SACA,YACA,kBACA,MACA,WACA,MACA,OACA,WACA,cACA,cACA,YACA,eACA,gBACA,cACA,YACA,UACA,UACA,UACA,YACA,aACA,eACA,OACA,QACA,WACA,QACA,QACA,iBACA,YACA,QAEA,WACA,WACA,gBACA,OACA,SACA,WACA,UACA,WACA,aACA,UACA,OACA,UACA,aACA,QFrCIE,YAAa,CACT,WACA,WACA,CAAEC,MAAO,SAAUC,SAAU,CAAC,IAAK,KAAMC,eAAe,IAE5DC,WAAY,CAAC,MACbC,WAAY,CAAEt9C,MAAO,IAAK8+C,KAAM,IAAKW,sBAAsB,GAC3D7B,cAAe,CACX,CAAEC,MAAO,qBACT,CAAEX,MAAO,KAAMC,SAAU,CAAC,KAAMC,eAAe,IAEnDU,iBAAkB,CAAC,KAAM,KACzBC,UAAW,CACP,KACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,OAEJC,YAAW,IAEfU,cAAe,CACXW,qBAAsB,CAAC,KAAM,MAAO,OACpCV,eAAgB,IAAI,MAA2B,IAC/CpC,sBAAqB,KGlRvB,GAAiBrD,GAAc,CAAC,4BAChC,GAAkBA,GAAc,CAElC,mBACA,OACA,QACA,WACA,SACA,eACA,WACA,UACA,QACA,SACA,uBAGA,qDACA,qBACA,SAEA,MACA,aACA,oDACA,cACA,iBACA,aACA,qBACA,6BACA,iCAEE,GAAyBA,GAAc,CACzC,uDACA,gFAEE,GAAwBA,GAAc,CAExC,gEAEA,SAEA,cAEA,yBAEA,0BACA,YACA,YACA,+BACA,sBACA,eACA,gBACA,4BACA,gBACA,6CACA,oBACA,mCACA,oBACA,iCACA,+BACA,uBACA,wBACA,gBACA,gBACA,+BAEA,+BAcA,gBACA,wBACA,mBACA,iBACA,uBACA,uBACA,oBACA,iBACA,oBACA,uBACA,0BACA,uBACA,iCACA,aACA,kBACA,0BACA,yBACA,aACA,0BACA,eACA,6BACA,iBACA,gBACA,uBACA,cACA,cACA,4BACA,eACA,YACA,aACA,aACA,aACA,kBACA,QACA,OACA,SACA,YACA,iBACA,yBACA,oBACA,kBACA,2BACA,wBACA,wBACA,qBACA,kBACA,qBACA,yBACA,wBACA,2BACA,wBACA,kCACA,cACA,mBACA,2BACA,0BACA,cACA,2BACA,gBACA,8BACA,kBACA,wBACA,eACA,eACA,6BACA,gBACA,aACA,cACA,cACA,mBACA,SACA,oBACA,0BACA,uBACA,oBACA,uBACA,0BACA,6BACA,0BACA,gBACA,qBACA,kBACA,6BACA,kBACA,oBACA,0BACA,iBACA,iBACA,kBACA,iBACA,gBACA,uBACA,gBACA,gBACA,qBACA,kBACA,gBACA,sBACA,sBACA,mBACA,gBACA,mBACA,uBACA,sBACA,yBACA,sBACA,YACA,iBACA,yBACA,wBACA,YACA,yBACA,cACA,gBACA,sBACA,aACA,aACA,cACA,WACA,YACA,YACA,YACA,iBACA,oBACA,eACA,UACA,MACA,kBACA,aACA,SACA,OACA,QACA,MACA,SACA,cACA,WACA,eACA,mBACA,iBACA,mCACA,sCACA,gCACA,0BACA,uBACA,uBACA,oBACA,iBACA,uBACA,cACA,oBACA,aACA,wBACA,wBACA,0BACA,wBACA,eACA,6BACA,kBACA,aACA,oBACA,kBACA,eACA,4BACA,6BACA,0BACA,yBACA,aACA,2BACA,eACA,iBACA,wBACA,cACA,gCACA,mCACA,cACA,eACA,cACA,YACA,aACA,oBACA,sBACA,aACA,iBACA,aACA,kBACA,6BACA,kBACA,gBACA,eACA,aACA,QACA,eACA,WACA,aACA,sBACA,kBAEE,GAAwBA,GAAc,CAAC,cAAe,QAAS,SAAU,cACzE,GAAgBA,GAAc,CAChC,eACA,+CACA,2BAEE,GAAkBA,GAAc,CAClC,yBACA,kDAESuH,GAAY,CACrBh+E,KAAM,YACNm6E,iBAAkB,CACdR,eAAc,GACdC,gBAAiB,IAAI,MAAoB,MAA2B,IACpEG,sBAAqB,GACrBC,cAAa,GACbC,gBAAe,GACfG,iBCzSgB,CAIpB,UACA,MACA,QACA,MACA,MACA,KACA,UACA,KACA,OACA,OACA,QACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,eACA,eACA,oBACA,eACA,WACA,SACA,WACA,OACA,OACA,SACA,QACA,YACA,MACA,OACA,OACA,QACA,QACA,YACA,SACA,QACA,KACA,YACA,QACA,SACA,YACA,OACA,KACA,QACA,OACA,UACA,OACA,OACA,YACA,iBACA,QACA,UACA,MACA,OACA,KACA,KACA,KACA,QACA,eACA,UACA,SACA,SACA,QACA,QACA,MACA,OACA,SACA,SACA,SACA,MACA,OACA,QACA,QACA,cACA,OACA,KACA,UACA,OACA,WACA,QACA,SACA,SACA,QACA,SACA,OACA,OACA,WACA,QACA,OAEA,WD0MIC,kBCxMiB,CACrB,SACA,UACA,UACA,MACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,SACA,SACA,mBACA,OACA,UACA,OACA,YACA,SACA,OACA,SACA,YACA,UACA,OACA,WACA,OACA,YACA,gBACA,gBACA,YACA,eACA,UACA,SACA,QACA,YACA,YDqKIC,sBE3SiB,CAkBrB,MACA,OACA,QACA,aACA,iBACA,YACA,wBACA,oBACA,+BACA,4BACA,6BACA,eACA,0BACA,uBACA,wBACA,4BACA,yBACA,YACA,eACA,YACA,gBACA,kBACA,0BACA,iBACA,eACA,qBACA,iBACA,gBACA,aACA,cACA,kBACA,kBACA,mBACA,iBACA,WACA,YACA,aACA,UACA,aACA,UACA,aACA,YACA,YACA,UACA,aACA,YACA,UACA,mBACA,mBACA,kBACA,QACA,OACA,QACA,OACA,QACA,QACA,oCACA,+BACA,MACA,uBACA,uBACA,gBACA,aACA,SACA,aACA,sBACA,uBACA,uBACA,eACA,gBACA,SACA,QACA,YACA,eACA,gBACA,SACA,aACA,UACA,cACA,UACA,SACA,aACA,UACA,cACA,wBACA,uBACA,OACA,OACA,OACA,OACA,YACA,aACA,YACA,MACA,OACA,WACA,UACA,YACA,uBACA,WACA,SACA,YACA,2BACA,yBACA,WACA,mBACA,eACA,OACA,MACA,OACA,MACA,QACA,WACA,YACA,aACA,YACA,kBACA,0BACA,iBACA,mBACA,eACA,qBACA,iBACA,eACA,iBACA,kBACA,0BACA,kBACA,oBACA,sBACA,eACA,oBACA,sBACA,eACA,kBACA,oBACA,wBACA,2BACA,4BACA,mCACA,iCACA,kBACA,YACA,aACA,UACA,WACA,UACA,SACA,oBACA,oBACA,UACA,cACA,UACA,aACA,OACA,eACA,UACA,cACA,WACA,aACA,MACA,eACA,6BACA,uBACA,2CACA,UACA,8BACA,YACA,SACA,cACA,UACA,QACA,8BACA,YACA,MACA,oBACA,UACA,kBACA,wBACA,WACA,oBACA,oBACA,qBACA,SACA,WACA,wBACA,WACA,cACA,OACA,WACA,YACA,oBACA,oBACA,aACA,MACA,iBACA,cACA,eACA,aACA,aACA,OACA,SACA,SACA,MACA,SACA,QACA,YACA,eACA,UACA,SACA,eACA,gBACA,WACA,YACA,aACA,UACA,aACA,UACA,gBACA,aACA,YACA,UACA,6BACA,aACA,gBACA,YACA,qBACA,UACA,mBACA,mBACA,kBACA,yBACA,yBACA,WACA,MACA,WACA,gBACA,mBACA,aACA,OACA,QACA,OACA,SACA,MACA,OACA,WACA,WACA,UACA,KACA,YACA,iBACA,MACA,gBACA,wBACA,QACA,OACA,QACA,oCACA,MACA,UACA,aACA,yBACA,qBACA,qBACA,SACA,MACA,MACA,UACA,kBACA,MACA,OACA,YACA,iBACA,WACA,SACA,YACA,QACA,SACA,aACA,MACA,OACA,aACA,mBACA,6BACA,gBACA,gBACA,cACA,cACA,eACA,WACA,aACA,YACA,YACA,eACA,kBACA,kBACA,KACA,qBACA,iBACA,oBACA,WACA,MACA,QACA,eACA,6BACA,gBACA,2BACA,wBACA,6BACA,UACA,SACA,UACA,OACA,kBACA,SACA,eACA,eACA,cACA,iBACA,gBACA,oBACA,YACA,YACA,aACA,iBACA,UACA,aACA,WACA,WACA,WACA,YACA,YACA,SACA,UACA,oCACA,qCACA,4CACA,kCACA,4BACA,qBACA,cACA,UACA,QACA,QACA,QACA,aACA,OACA,QACA,kBACA,8BACA,OACA,OACA,OACA,OACA,0BACA,OACA,WACA,cACA,OACA,WACA,cACA,OACA,MACA,OACA,OACA,UACA,QACA,QACA,aACA,iBACA,OACA,SACA,UACA,YACA,YACA,eACA,WACA,cACA,WACA,YACA,aACA,cACA,aACA,cACA,eACA,YACA,gBACA,eACA,cACA,cACA,aACA,cACA,cACA,qBACA,0BACA,sBACA,sBACA,aACA,qBACA,qBACA,uBACA,kBACA,gBACA,YACA,mBACA,gBACA,cACA,eACA,WACA,iBACA,aACA,aACA,eACA,eACA,YACA,aACA,cACA,UACA,gBACA,mBACA,WACA,YACA,OACA,UACA,UACA,OACA,UACA,UACA,4CACA,8BACA,aACA,SACA,aACA,cACA,mBACA,SACA,wBACA,kBACA,SACA,YACA,MACA,UACA,uBACA,2BACA,+BACA,4CACA,uCACA,4BACA,sBACA,0BACA,gCACA,2BACA,gCACA,mCACA,mCACA,2CACA,wCACA,sCACA,uCACA,qCACA,4CACA,8BACA,2BACA,oCACA,2BACA,oCACA,gCACA,sCACA,yBACA,8CACA,gCACA,qCACA,iBACA,gCACA,mCACA,kCACA,sCACA,iCACA,sCACA,uCACA,2BACA,qBACA,4BACA,yCACA,0BACA,mCACA,oCACA,yBACA,gCACA,gBACA,6CACA,qCACA,cACA,mBACA,+BACA,iBACA,6BACA,8BACA,MACA,OACA,kBACA,eACA,kBACA,aACA,UACA,WACA,uBACA,eACA,gBACA,WACA,YACA,aACA,UACA,aACA,UACA,OACA,aACA,YACA,aACA,YACA,eACA,cACA,UACA,YACA,UACA,OACA,eACA,mBACA,mBACA,kBACA,aACA,SACA,YACA,OACA,WACA,QACA,QACA,2BACA,2BACA,WACA,wBACA,wBACA,iBACA,gBACA,iBACA,cACA,iBACA,gBACA,iBACA,gBACA,mBACA,kBACA,cACA,mBACA,uBACA,u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","sources":["webpack://grafana-clickhouse-datasource/../node_modules/js-sql-parser/dist/parser/sqlParser.js","webpack://grafana-clickhouse-datasource/../node_modules/moo/moo.js","webpack://grafana-clickhouse-datasource/../node_modules/nearley/lib/nearley.js","webpack://grafana-clickhouse-datasource/../node_modules/pgsql-ast-parser/index.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/classes/comparator.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/classes/range.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/classes/semver.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/clean.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/cmp.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/coerce.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/compare-build.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/compare-loose.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/compare.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/diff.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/eq.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/gt.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/gte.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/inc.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/lt.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/lte.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/major.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/minor.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/neq.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/parse.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/patch.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/prerelease.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/rcompare.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/rsort.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/satisfies.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/sort.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/functions/valid.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/index.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/constants.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/debug.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/identifiers.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/lrucache.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/parse-options.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/internal/re.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/gtr.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/intersects.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/ltr.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/max-satisfying.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/min-satisfying.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/min-version.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/outside.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/simplify.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/subset.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/to-comparators.js","webpack://grafana-clickhouse-datasource/../node_modules/semver/ranges/valid.js","webpack://grafana-clickhouse-datasource/external amd \"@emotion/css\"","webpack://grafana-clickhouse-datasource/external amd \"@grafana/data\"","webpack://grafana-clickhouse-datasource/external amd \"@grafana/runtime\"","webpack://grafana-clickhouse-datasource/external amd \"@grafana/ui\"","webpack://grafana-clickhouse-datasource/external amd \"lodash\"","webpack://grafana-clickhouse-datasource/external amd \"module\"","webpack://grafana-clickhouse-datasource/external amd \"react\"","webpack://grafana-clickhouse-datasource/external amd \"rxjs\"","webpack://grafana-clickhouse-datasource/webpack/bootstrap","webpack://grafana-clickhouse-datasource/webpack/runtime/compat get default export","webpack://grafana-clickhouse-datasource/webpack/runtime/define property getters","webpack://grafana-clickhouse-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-clickhouse-datasource/webpack/runtime/make namespace object","webpack://grafana-clickhouse-datasource/webpack/runtime/publicPath","webpack://grafana-clickhouse-datasource/./node_modules/grafana-public-path.js","webpack://grafana-clickhouse-datasource/./types/queryBuilder.ts","webpack://grafana-clickhouse-datasource/./types/sql.ts","webpack://grafana-clickhouse-datasource/./data/ast.ts","webpack://grafana-clickhouse-datasource/./data/adHocFilter.ts","webpack://grafana-clickhouse-datasource/../node_modules/@grafana/schema/dist/esm/common/common.gen.js","webpack://grafana-clickhouse-datasource/./data/logs.ts","webpack://grafana-clickhouse-datasource/./otel.ts","webpack://grafana-clickhouse-datasource/./data/sqlGenerator.ts","webpack://grafana-clickhouse-datasource/./utils/version.ts","webpack://grafana-clickhouse-datasource/./data/utils.ts","webpack://grafana-clickhouse-datasource/./selectors.ts","webpack://grafana-clickhouse-datasource/./components/LogsContextPanel.tsx","webpack://grafana-clickhouse-datasource/./data/CHDatasource.ts","webpack://grafana-clickhouse-datasource/./components/ui/CertificationKey.tsx","webpack://grafana-clickhouse-datasource/./types/config.ts","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/GenericConfigSection.tsx","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/ConfigSection.tsx","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/ConfigSubSection.tsx","webpack://grafana-clickhouse-datasource/./components/experimental/ConfigSection/DataSourceDescription.tsx","webpack://grafana-clickhouse-datasource/./components/Divider.tsx","webpack://grafana-clickhouse-datasource/./labels.ts","webpack://grafana-clickhouse-datasource/./components/configEditor/DefaultDatabaseTableConfig.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/QuerySettingsConfig.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/OtelVersionSelect.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/LabeledInput.tsx","webpack://grafana-clickhouse-datasource/./styles.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/Switch.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/LogsConfig.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/DurationUnitSelect.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/TracesConfig.tsx","webpack://grafana-clickhouse-datasource/./components/configEditor/HttpHeadersConfig.tsx","webpack://grafana-clickhouse-datasource/./views/CHConfigEditorHooks.ts","webpack://grafana-clickhouse-datasource/./components/configEditor/AliasTableConfig.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/utils.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/EditorTypeSwitcher.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/ColumnsEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/ColumnSelect.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/OrderByEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/LimitEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/FilterEditor.tsx","webpack://grafana-clickhouse-datasource/./hooks/useUniqueMapKeys.ts","webpack://grafana-clickhouse-datasource/./data/columnFilters.ts","webpack://grafana-clickhouse-datasource/./hooks/useBuilderOptionChanges.ts","webpack://grafana-clickhouse-datasource/./hooks/useColumns.ts","webpack://grafana-clickhouse-datasource/./hooks/useBuilderOptionsState.ts","webpack://grafana-clickhouse-datasource/./hooks/useIsNewQuery.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/LogsQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/logsQueryBuilderHooks.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/ModeSwitch.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/AggregateEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/GroupByEditor.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/TimeSeriesQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/timeSeriesQueryBuilderHooks.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/TableQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/SqlPreview.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/DatabaseTableSelect.tsx","webpack://grafana-clickhouse-datasource/./hooks/useDatabases.ts","webpack://grafana-clickhouse-datasource/./hooks/useTables.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/QueryTypeSwitcher.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/TraceIdInput.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/TraceQueryBuilder.tsx","webpack://grafana-clickhouse-datasource/./components/queryBuilder/views/traceQueryBuilderHooks.ts","webpack://grafana-clickhouse-datasource/./components/queryBuilder/QueryBuilder.tsx","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/expandPhrases.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/token.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/bigquery/bigquery.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/bigquery/bigquery.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/bigquery/bigquery.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2/db2.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2/db2.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2/db2.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2i/db2i.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2i/db2i.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/db2i/db2i.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/duckdb/duckdb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/duckdb/duckdb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/duckdb/duckdb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/hive/hive.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/hive/hive.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/hive/hive.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/likeMariaDb.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/mariadb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/mariadb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mariadb/mariadb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mysql/mysql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mysql/mysql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/mysql/mysql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/tidb/tidb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/tidb/tidb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/tidb/tidb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/n1ql/n1ql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/n1ql/n1ql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/n1ql/n1ql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/plsql/plsql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/plsql/plsql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/plsql/plsql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/postgresql/postgresql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/postgresql/postgresql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/postgresql/postgresql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/redshift/redshift.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/redshift/redshift.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/redshift/redshift.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/spark/spark.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/spark/spark.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/spark/spark.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sqlite/sqlite.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sqlite/sqlite.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sqlite/sqlite.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sql/sql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sql/sql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/sql/sql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/trino/trino.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/trino/trino.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/trino/trino.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/transactsql/transactsql.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/transactsql/transactsql.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/transactsql/transactsql.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/singlestoredb/singlestoredb.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/singlestoredb/singlestoredb.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/singlestoredb/singlestoredb.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/snowflake/snowflake.formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/snowflake/snowflake.keywords.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/languages/snowflake/snowflake.functions.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/utils.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/regexUtil.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/regexFactory.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/lineColFromIndex.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/TokenizerEngine.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/NestedComment.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/Tokenizer.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/dialect.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/config.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Params.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/lexer/disambiguateTokens.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/LexerAdapter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/ast.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/grammar.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/parser/createParser.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Layout.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/tabularStyle.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Indentation.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/InlineLayout.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/ExpressionFormatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/formatter/Formatter.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/validateConfig.js","webpack://grafana-clickhouse-datasource/../node_modules/sql-formatter/dist/esm/sqlFormatter.js","webpack://grafana-clickhouse-datasource/./components/sqlProvider.ts","webpack://grafana-clickhouse-datasource/./ch-parser/types.ts","webpack://grafana-clickhouse-datasource/./ch-parser/helpers.ts","webpack://grafana-clickhouse-datasource/./ch-parser/lexer.ts","webpack://grafana-clickhouse-datasource/./ch-parser/pluginMacros.ts","webpack://grafana-clickhouse-datasource/./ch-parser/parser.ts","webpack://grafana-clickhouse-datasource/./components/suggestions.ts","webpack://grafana-clickhouse-datasource/./data/validate.ts","webpack://grafana-clickhouse-datasource/./hooks/useSchemaSuggestionsProvider.ts","webpack://grafana-clickhouse-datasource/./components/QueryToolbox.tsx","webpack://grafana-clickhouse-datasource/./components/SqlEditor.tsx","webpack://grafana-clickhouse-datasource/./data/migration.ts","webpack://grafana-clickhouse-datasource/./views/CHQueryEditor.tsx","webpack://grafana-clickhouse-datasource/./module.ts","webpack://grafana-clickhouse-datasource/./views/CHConfigEditor.tsx","webpack://grafana-clickhouse-datasource/./tracking.ts"],"sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar sqlParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,4],$V2=[2,4],$V3=[1,11],$V4=[1,10],$V5=[2,16],$V6=[1,14],$V7=[1,15],$V8=[1,16],$V9=[6,8],$Va=[2,146],$Vb=[1,19],$Vc=[1,20],$Vd=[16,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Ve=[16,18,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vf=[2,160],$Vg=[1,29],$Vh=[6,8,14,17,146,150,152,154],$Vi=[1,42],$Vj=[1,60],$Vk=[1,52],$Vl=[1,59],$Vm=[1,61],$Vn=[1,62],$Vo=[1,63],$Vp=[1,64],$Vq=[1,65],$Vr=[1,58],$Vs=[1,53],$Vt=[1,54],$Vu=[1,55],$Vv=[1,56],$Vw=[1,57],$Vx=[1,43],$Vy=[1,44],$Vz=[1,45],$VA=[1,34],$VB=[1,66],$VC=[16,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$VD=[6,8,14,17,150,152,154],$VE=[2,143],$VF=[1,75],$VG=[1,76],$VH=[6,8,14,17,43,133,138,144,146,150,152,154],$VI=[1,81],$VJ=[1,78],$VK=[1,79],$VL=[1,80],$VM=[1,82],$VN=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,107,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VO=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,107,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VP=[1,103],$VQ=[1,101],$VR=[1,102],$VS=[1,97],$VT=[1,98],$VU=[1,99],$VV=[1,100],$VW=[1,104],$VX=[1,105],$VY=[1,106],$VZ=[1,107],$V_=[1,108],$V$=[1,109],$V01=[2,103],$V11=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V21=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V31=[1,110],$V41=[1,117],$V51=[2,64],$V61=[1,118],$V71=[16,35,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V81=[16,29,35,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,119,195],$V91=[1,164],$Va1=[17,43],$Vb1=[2,59],$Vc1=[1,173],$Vd1=[1,171],$Ve1=[1,172],$Vf1=[6,8,138,146],$Vg1=[16,35,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vh1=[6,8,14,17,138,144,146,150,152,154],$Vi1=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vj1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vk1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,79,81,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vl1=[16,35,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vm1=[16,35,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vn1=[16,35,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vo1=[71,74,77],$Vp1=[16,35,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vq1=[1,233],$Vr1=[1,234],$Vs1=[6,8,14,17],$Vt1=[6,8,14,17,43,157],$Vu1=[1,251],$Vv1=[1,247],$Vw1=[2,197],$Vx1=[1,256],$Vy1=[1,257],$Vz1=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],$VA1=[1,259],$VB1=[1,262],$VC1=[1,263],$VD1=[1,264],$VE1=[1,265],$VF1=[2,174],$VG1=[1,261],$VH1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],$VI1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],$VJ1=[2,199],$VK1=[1,271],$VL1=[6,8,14,17,135,138,144,146,150,152,154],$VM1=[1,280],$VN1=[2,179],$VO1=[170,173],$VP1=[2,210],$VQ1=[1,290],$VR1=[1,291],$VS1=[1,292],$VT1=[1,302],$VU1=[1,311],$VV1=[1,312],$VW1=[6,8,14,17,138,146,150,152,154],$VX1=[1,322],$VY1=[2,204],$VZ1=[1,328],$V_1=[16,152],$V$1=[6,8,14,17,152,154],$V02=[1,354];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"main\":3,\"selectClause\":4,\"semicolonOpt\":5,\"EOF\":6,\"unionClause\":7,\";\":8,\"unionClauseNotParenthesized\":9,\"unionClauseParenthesized\":10,\"order_by_opt\":11,\"limit_opt\":12,\"selectClauseParenthesized\":13,\"UNION\":14,\"distinctOpt\":15,\"(\":16,\")\":17,\"SELECT\":18,\"highPriorityOpt\":19,\"maxStateMentTimeOpt\":20,\"straightJoinOpt\":21,\"sqlSmallResultOpt\":22,\"sqlBigResultOpt\":23,\"sqlBufferResultOpt\":24,\"sqlCacheOpt\":25,\"sqlCalcFoundRowsOpt\":26,\"selectExprList\":27,\"selectDataSetOpt\":28,\"ALL\":29,\"DISTINCT\":30,\"DISTINCTROW\":31,\"HIGH_PRIORITY\":32,\"MAX_STATEMENT_TIME\":33,\"=\":34,\"NUMERIC\":35,\"STRAIGHT_JOIN\":36,\"SQL_SMALL_RESULT\":37,\"SQL_BIG_RESULT\":38,\"SQL_BUFFER_RESULT\":39,\"SQL_CACHE\":40,\"SQL_NO_CACHE\":41,\"SQL_CALC_FOUND_ROWS\":42,\",\":43,\"selectExpr\":44,\"*\":45,\"SELECT_EXPR_STAR\":46,\"expr\":47,\"selectExprAliasOpt\":48,\"AS\":49,\"IDENTIFIER\":50,\"STRING\":51,\"string\":52,\"number\":53,\"EXPONENT_NUMERIC\":54,\"HEX_NUMERIC\":55,\"boolean\":56,\"TRUE\":57,\"FALSE\":58,\"null\":59,\"NULL\":60,\"literal\":61,\"place_holder\":62,\"function_call\":63,\"function_call_param_list\":64,\"function_call_param\":65,\"identifier\":66,\"DOT\":67,\"identifier_list\":68,\"case_expr_opt\":69,\"when_then_list\":70,\"WHEN\":71,\"THEN\":72,\"case_when_else\":73,\"ELSE\":74,\"case_when\":75,\"CASE\":76,\"END\":77,\"simple_expr_prefix\":78,\"+\":79,\"simple_expr\":80,\"-\":81,\"~\":82,\"!\":83,\"BINARY\":84,\"expr_list\":85,\"ROW\":86,\"EXISTS\":87,\"{\":88,\"}\":89,\"bit_expr\":90,\"|\":91,\"&\":92,\"<<\":93,\">>\":94,\"/\":95,\"DIV\":96,\"MOD\":97,\"%\":98,\"^\":99,\"not_opt\":100,\"NOT\":101,\"escape_opt\":102,\"ESCAPE\":103,\"predicate\":104,\"IN\":105,\"BETWEEN\":106,\"AND\":107,\"SOUNDS\":108,\"LIKE\":109,\"REGEXP\":110,\"comparison_operator\":111,\">=\":112,\">\":113,\"<=\":114,\"<\":115,\"<>\":116,\"!=\":117,\"sub_query_data_set_opt\":118,\"ANY\":119,\"boolean_primary\":120,\"IS\":121,\"boolean_extra\":122,\"UNKNOWN\":123,\"&&\":124,\"||\":125,\"OR\":126,\"XOR\":127,\"where_opt\":128,\"WHERE\":129,\"group_by_opt\":130,\"group_by\":131,\"roll_up_opt\":132,\"WITH\":133,\"ROLLUP\":134,\"GROUP_BY\":135,\"group_by_order_by_item_list\":136,\"order_by\":137,\"ORDER_BY\":138,\"group_by_order_by_item\":139,\"sort_opt\":140,\"ASC\":141,\"DESC\":142,\"having_opt\":143,\"HAVING\":144,\"limit\":145,\"LIMIT\":146,\"OFFSET\":147,\"procedure_opt\":148,\"procedure\":149,\"PROCEDURE\":150,\"for_update_lock_in_share_mode_opt\":151,\"FOR\":152,\"UPDATE\":153,\"LOCK\":154,\"SHARE\":155,\"MODE\":156,\"FROM\":157,\"table_references\":158,\"partitionOpt\":159,\"escaped_table_reference\":160,\"table_reference\":161,\"OJ\":162,\"join_inner_cross\":163,\"INNER\":164,\"CROSS\":165,\"left_right\":166,\"LEFT\":167,\"RIGHT\":168,\"out_opt\":169,\"OUTER\":170,\"left_right_out_opt\":171,\"join_table\":172,\"JOIN\":173,\"table_factor\":174,\"join_condition\":175,\"on_join_condition\":176,\"NATURAL\":177,\"join_condition_opt\":178,\"ON\":179,\"USING\":180,\"partition_names\":181,\"PARTITION\":182,\"aliasOpt\":183,\"index_or_key\":184,\"INDEX\":185,\"KEY\":186,\"for_opt\":187,\"identifier_list_opt\":188,\"index_hint_list_opt\":189,\"index_hint_list\":190,\"index_hint\":191,\"USE\":192,\"IGNORE\":193,\"FORCE\":194,\"PLACE_HOLDER\":195,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\";\",14:\"UNION\",16:\"(\",17:\")\",18:\"SELECT\",29:\"ALL\",30:\"DISTINCT\",31:\"DISTINCTROW\",32:\"HIGH_PRIORITY\",33:\"MAX_STATEMENT_TIME\",34:\"=\",35:\"NUMERIC\",36:\"STRAIGHT_JOIN\",37:\"SQL_SMALL_RESULT\",38:\"SQL_BIG_RESULT\",39:\"SQL_BUFFER_RESULT\",40:\"SQL_CACHE\",41:\"SQL_NO_CACHE\",42:\"SQL_CALC_FOUND_ROWS\",43:\",\",45:\"*\",46:\"SELECT_EXPR_STAR\",49:\"AS\",50:\"IDENTIFIER\",51:\"STRING\",54:\"EXPONENT_NUMERIC\",55:\"HEX_NUMERIC\",57:\"TRUE\",58:\"FALSE\",60:\"NULL\",67:\"DOT\",71:\"WHEN\",72:\"THEN\",74:\"ELSE\",76:\"CASE\",77:\"END\",79:\"+\",81:\"-\",82:\"~\",83:\"!\",84:\"BINARY\",86:\"ROW\",87:\"EXISTS\",88:\"{\",89:\"}\",91:\"|\",92:\"&\",93:\"<<\",94:\">>\",95:\"/\",96:\"DIV\",97:\"MOD\",98:\"%\",99:\"^\",101:\"NOT\",103:\"ESCAPE\",105:\"IN\",106:\"BETWEEN\",107:\"AND\",108:\"SOUNDS\",109:\"LIKE\",110:\"REGEXP\",112:\">=\",113:\">\",114:\"<=\",115:\"<\",116:\"<>\",117:\"!=\",119:\"ANY\",121:\"IS\",123:\"UNKNOWN\",124:\"&&\",125:\"||\",126:\"OR\",127:\"XOR\",129:\"WHERE\",133:\"WITH\",134:\"ROLLUP\",135:\"GROUP_BY\",138:\"ORDER_BY\",141:\"ASC\",142:\"DESC\",144:\"HAVING\",146:\"LIMIT\",147:\"OFFSET\",150:\"PROCEDURE\",152:\"FOR\",153:\"UPDATE\",154:\"LOCK\",155:\"SHARE\",156:\"MODE\",157:\"FROM\",162:\"OJ\",164:\"INNER\",165:\"CROSS\",167:\"LEFT\",168:\"RIGHT\",170:\"OUTER\",173:\"JOIN\",177:\"NATURAL\",179:\"ON\",180:\"USING\",182:\"PARTITION\",185:\"INDEX\",186:\"KEY\",192:\"USE\",193:\"IGNORE\",194:\"FORCE\",195:\"PLACE_HOLDER\"},\nproductions_: [0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[48,0],[48,2],[48,1],[48,2],[48,1],[52,1],[53,1],[53,1],[53,1],[56,1],[56,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[63,4],[64,3],[64,1],[65,0],[65,1],[65,1],[65,2],[65,1],[66,1],[66,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[90,1],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[100,0],[100,1],[102,0],[102,2],[104,1],[104,6],[104,6],[104,6],[104,4],[104,5],[104,4],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[118,1],[118,1],[120,1],[120,4],[120,3],[120,6],[122,1],[122,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[174,3],[62,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n return {nodeType: 'Main', value: $$[$0-2], hasSemicolon: $$[$0-1]}; \nbreak;\ncase 3: case 144:\n this.$ = true \nbreak;\ncase 4:\n this.$ = false \nbreak;\ncase 5: case 13: case 14: case 15: case 17: case 19: case 21: case 23: case 25: case 27: case 30: case 31: case 32: case 51: case 52: case 53: case 54: case 55: case 60: case 61: case 63: case 69: case 73: case 80: case 81: case 82: case 83: case 89: case 90: case 104: case 106: case 107: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122: case 123: case 127: case 129: case 140: case 142: case 147: case 153: case 154: case 156: case 161: case 163: case 164: case 175: case 176: case 177: case 178: case 180: case 189: case 191: case 193: case 194: case 202: case 203: case 209: case 211:\n this.$ = $$[$0] \nbreak;\ncase 6:\n this.$ = $$[$0-2], this.$.orderBy = $$[$0-1], this.$.limit = $$[$0]; \nbreak;\ncase 7: case 8:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] }; \nbreak;\ncase 9:\n this.$ = { type: 'SelectParenthesized', value: $$[$0-1] }; \nbreak;\ncase 10: case 11:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] } \nbreak;\ncase 12:\n\n        this.$ = {\n          type: 'Select',\n          distinctOpt: $$[$0-10],\n          highPriorityOpt: $$[$0-9],\n          maxStateMentTimeOpt: $$[$0-8],\n          straightJoinOpt: $$[$0-7],\n          sqlSmallResultOpt: $$[$0-6],\n          sqlBigResultOpt: $$[$0-5],\n          sqlBufferResultOpt: $$[$0-4],\n          sqlCacheOpt: $$[$0-3],\n          sqlCalcFoundRowsOpt: $$[$0-2],\n          selectItems: $$[$0-1],\n          from: $$[$0].from,\n          partition: $$[$0].partition,\n          where: $$[$0].where,\n          groupBy: $$[$0].groupBy,\n          having: $$[$0].having,\n          orderBy: $$[$0].orderBy,\n          limit: $$[$0].limit,\n          procedure: $$[$0].procedure,\n          updateLockMode: $$[$0].updateLockMode\n        }\n      \nbreak;\ncase 16: case 18: case 20: case 22: case 24: case 26: case 28: case 29: case 33: case 59: case 68: case 72: case 103: case 105: case 139: case 141: case 143: case 146: case 152: case 155: case 160: case 162: case 165: case 174: case 179: case 188: case 197: case 204: case 208: case 210:\n this.$ = null \nbreak;\ncase 34:\n $$[$0-2].value.push($$[$0]); \nbreak;\ncase 35:\n this.$ = { type: 'SelectExpr', value: [ $$[$0] ] } \nbreak;\ncase 36: case 37: case 64:\n this.$ = { type: 'Identifier', value: $$[$0] } \nbreak;\ncase 38:\n this.$ = $$[$0-1]; this.$.alias = $$[$0].alias; this.$.hasAs = $$[$0].hasAs; \nbreak;\ncase 39: case 199:\n this.$ = {alias: null, hasAs: null} \nbreak;\ncase 40: case 42:\n this.$ = {alias: $$[$0], hasAs: true} \nbreak;\ncase 41:\n this.$ = {alias: $$[$0], hasAs: false} \nbreak;\ncase 43:\n this.$ = {alias: $$[$01], hasAs: false} \nbreak;\ncase 44:\n this.$ = { type: 'String', value: $$[$0] } \nbreak;\ncase 45: case 46: case 47:\n this.$ = { type: 'Number', value: $$[$0] } \nbreak;\ncase 48:\n this.$ = { type: 'Boolean', value: 'TRUE' } \nbreak;\ncase 49:\n this.$ = { type: 'Boolean', value: 'FALSE' } \nbreak;\ncase 50:\n this.$ = { type: 'Null', value: 'null' } \nbreak;\ncase 56:\n this.$ = {type: 'FunctionCall', name: $$[$0-3], params: $$[$0-1]} \nbreak;\ncase 57:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 58:\n this.$ = [$$[$0]]; \nbreak;\ncase 62:\n this.$ = { type: 'FunctionCallParam', distinctOpt: $$[$0-1], value: $$[$0] } \nbreak;\ncase 65:\n this.$ = $$[$0-2]; $$[$0-2].value += '.' + $$[$0] \nbreak;\ncase 66:\n this.$ = { type: 'IdentifierList', value: [ $$[$0] ] } \nbreak;\ncase 67: case 171:\n this.$ = $$[$0-2]; $$[$0-2].value.push($$[$0]); \nbreak;\ncase 70:\n this.$ = { type: 'WhenThenList', value: [ { when: $$[$0-2], then: $$[$0] } ] }; \nbreak;\ncase 71:\n this.$ = $$[$0-4]; this.$.value.push({ when: $$[$0-2], then: $$[$0] }); \nbreak;\ncase 74:\n this.$ = { type: 'CaseWhen', caseExprOpt: $$[$0-3], whenThenList: $$[$0-2], else: $$[$0-1] } \nbreak;\ncase 75: case 76: case 77: case 78: case 79:\n this.$ = { type: 'Prefix', prefix: $$[$0-1], value: $$[$0] } \nbreak;\ncase 84:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-1] } \nbreak;\ncase 85:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-2], hasRow: true } \nbreak;\ncase 86:\n this.$ = { type: 'SubQuery', value: $$[$0-1] } \nbreak;\ncase 87:\n this.$ = { type: 'SubQuery', value: $$[$0-1], hasExists: true } \nbreak;\ncase 88:\n this.$ = { type: 'IdentifierExpr', identifier: $$[$0-2], value: $$[$0-1] } \nbreak;\ncase 91:\n this.$ = { type: 'BitExpression', operator: '|', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 92:\n this.$ = { type: 'BitExpression', operator: '&', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 93:\n this.$ = { type: 'BitExpression', operator: '<<', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 94:\n this.$ = { type: 'BitExpression', operator: '>>', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 95:\n this.$ = { type: 'BitExpression', operator: '+', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 96:\n this.$ = { type: 'BitExpression', operator: '-', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 97:\n this.$ = { type: 'BitExpression', operator: '*', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 98:\n this.$ = { type: 'BitExpression', operator: '/', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 99:\n this.$ = { type: 'BitExpression', operator: 'DIV', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 100:\n this.$ = { type: 'BitExpression', operator: 'MOD', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 101:\n this.$ = { type: 'BitExpression', operator: '%', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 102:\n this.$ = { type: 'BitExpression', operator: '^', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 108:\n this.$ = { type: 'InSubQueryPredicate', hasNot: $$[$0-4], left: $$[$0-5] ,right: $$[$0-1] } \nbreak;\ncase 109:\n this.$ = { type: 'InExpressionListPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 110:\n this.$ = { type: 'BetweenPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: { left: $$[$0-2], right: $$[$0] } } \nbreak;\ncase 111:\n this.$ = { type: 'SoundsLikePredicate', hasNot: false, left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 112:\n this.$ = { type: 'LikePredicate', hasNot: $$[$0-3], left: $$[$0-4], right: $$[$0-1], escape: $$[$0] } \nbreak;\ncase 113:\n this.$ = { type: 'RegexpPredicate', hasNot: $$[$0-2], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 124:\n this.$ = { type: 'IsNullBooleanPrimary', hasNot: $$[$0-1] , value: $$[$0-3] } \nbreak;\ncase 125:\n this.$ = { type: 'ComparisonBooleanPrimary', left: $$[$0-2], operator: $$[$0-1], right: $$[$0] } \nbreak;\ncase 126:\n this.$ = { type: 'ComparisonSubQueryBooleanPrimary', operator: $$[$0-4], subQueryOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 128:\n this.$ = { type: 'BooleanExtra', value: $$[$0] } \nbreak;\ncase 130:\n this.$ = { type: 'IsExpression', hasNot: $$[$0-1], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 131:\n this.$ = { type: 'NotExpression', value: $$[$0] } \nbreak;\ncase 132: case 135:\n this.$ = { type: 'AndExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 133: case 134:\n this.$ = { type: 'OrExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 136:\n this.$ = { type: 'XORExpression', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 137:\n this.$ = { type: 'ExpressionList', value: [ $$[$0] ] } \nbreak;\ncase 138: case 213:\n this.$ = $$[$0-2]; this.$.value.push($$[$0]); \nbreak;\ncase 145:\n this.$ = { type: 'GroupBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 148:\n this.$ = { type: 'OrderBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 149: case 195:\n this.$ = [ $$[$0] ] \nbreak;\ncase 150:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); \nbreak;\ncase 151:\n this.$ = { type: 'GroupByOrderByItem', value: $$[$0-1], sortOpt: $$[$0] } \nbreak;\ncase 157:\n this.$ = { type: 'Limit', value: [ $$[$0] ] } \nbreak;\ncase 158:\n this.$ = { type: 'Limit', value: [ $$[$0-2], $$[$0] ] } \nbreak;\ncase 159:\n this.$ = { type: 'Limit', value: [ $$[$0], $$[$0-2] ], offsetMode: true } \nbreak;\ncase 166:\n this.$ = $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 167:\n this.$ = $$[$0-3] + ' ' + $$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 168:\n this.$ = {} \nbreak;\ncase 169:\n this.$ = { from: $$[$0-8], partition: $$[$0-7], where: $$[$0-6], groupBy: $$[$0-5], having: $$[$0-4], orderBy: $$[$0-3], limit: $$[$0-2], procedure: $$[$0-1], updateLockMode: $$[$0] } \nbreak;\ncase 170:\n this.$ = { type: 'TableReferences', value: [ $$[$0] ] } \nbreak;\ncase 172:\n this.$ = { type: 'TableReference', value: $$[$0] } \nbreak;\ncase 173:\n this.$ = { type: 'TableReference', hasOj: true, value: $$[$0-1] } \nbreak;\ncase 181:\n this.$ = { leftRight: null, outOpt: null } \nbreak;\ncase 182:\n this.$ = { leftRight: $$[$0-1], outOpt: $$[$0] } \nbreak;\ncase 183:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-2], left: $$[$0-3], right: $$[$0], condition: null } \nbreak;\ncase 184:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-3], left: $$[$0-4], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 185:\n this.$ = { type: 'StraightJoinTable', left: $$[$0-3], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 186:\n this.$ = { type: 'LeftRightJoinTable', leftRight: $$[$0-4], outOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 187:\n this.$ = { type: 'NaturalJoinTable', leftRight: $$[$0-2].leftRight, outOpt: $$[$0-2].outOpt, left: $$[$0-4], right: $$[$0] } \nbreak;\ncase 190:\n this.$ = { type: 'OnJoinCondition', value: $$[$0] } \nbreak;\ncase 192:\n this.$ = { type: 'UsingJoinCondition', value: $$[$0-1] } \nbreak;\ncase 196:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]) \nbreak;\ncase 198:\n this.$ = { type: 'Partitions', value: $$[$0-1] } \nbreak;\ncase 200:\n this.$ = { hasAs: true, alias: $$[$0] } \nbreak;\ncase 201:\n this.$ = { hasAs: false, alias: $$[$0] } \nbreak;\ncase 205: case 206: case 207:\n this.$ = { type: 'ForOptIndexHint', value: $$[$0] } \nbreak;\ncase 212:\n this.$ = { type: 'IndexHintList', value: [ $$[$0] ] } \nbreak;\ncase 214:\n this.$ = { type: 'UseIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 215:\n this.$ = { type: 'IgnoreIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 216:\n this.$ = { type: 'ForceIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 217:\n this.$ = { type: 'TableFactor', value: $$[$0-3], partition: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 218:\n this.$ = { type: 'TableFactor', value: { type: 'SubQuery', value: $$[$0-2] }, alias: $$[$0].alias, hasAs: $$[$0].hasAs} \nbreak;\ncase 219:\n this.$ = $$[$0-1]; this.$.hasParentheses = true \nbreak;\ncase 220:\n this.$ = { type: 'TableFactor', value: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 221:\n this.$ = { type: 'PlaceHolder', value: $$[$0], param: $$[$0].slice(2, -1)} \nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,9:5,10:6,13:7,16:$V0,18:$V1},{1:[3]},{5:9,6:$V2,8:$V3,14:$V4},{5:12,6:$V2,8:$V3},o([16,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V5,{15:13,29:$V6,30:$V7,31:$V8}),o($V9,[2,5]),o([6,8,146],$Va,{11:17,137:18,138:$Vb}),{14:$Vc},{4:21,18:$V1},{6:[1,22]},{15:23,18:$V5,29:$V6,30:$V7,31:$V8},{6:[2,3]},{6:[1,24]},o($Vd,[2,18],{19:25,32:[1,26]}),o($Ve,[2,13]),o($Ve,[2,14]),o($Ve,[2,15]),o($V9,$Vf,{12:27,145:28,146:$Vg}),o($Vh,[2,147]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:30,139:31,195:$VB},{15:67,16:$V5,29:$V6,30:$V7,31:$V8},{17:[1,68]},{1:[2,1]},{4:69,9:70,18:$V1},{1:[2,2]},o($VC,[2,20],{20:71,33:[1,72]}),o($Vd,[2,17]),o($V9,[2,6]),o($VD,[2,161]),{35:[1,73]},o($Vh,$VE,{132:74,43:$VF,133:$VG}),o($VH,[2,149]),o($VH,[2,152],{140:77,107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM,141:[1,83],142:[1,84]}),o($VN,[2,129],{111:86,34:[1,87],112:[1,88],113:[1,89],114:[1,90],115:[1,91],116:[1,92],117:[1,93],121:[1,85]}),{16:$Vi,35:$Vj,47:94,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VO,[2,123]),o($VO,[2,107],{100:95,45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,101:$V$,105:$V01,106:$V01,109:$V01,110:$V01,108:[1,96]}),o($V11,[2,90]),o($V21,[2,80]),o($V21,[2,81],{67:$V31}),o($V21,[2,82]),o($V21,[2,83]),{4:112,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:111,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:[1,114]},{16:[1,115]},{50:$V41,66:116},o($V21,[2,89]),o($V21,[2,51]),o($V21,[2,52]),o($V21,[2,53]),o($V21,[2,54]),o($V21,[2,55]),o([6,8,14,17,34,36,43,45,49,50,51,67,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194],$V51,{16:$V61}),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:119,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:120,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:121,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:122,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:123,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,47:125,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,69:124,71:[2,68],75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,44]),o($V21,[2,45]),o($V21,[2,46]),o($V21,[2,47]),o($V21,[2,48]),o($V21,[2,49]),o($V21,[2,50]),o($V21,[2,221]),{10:127,13:126,16:$V0},o([6,8,14,138,146],[2,9]),o($V9,[2,10],{14:$V4}),o($V9,[2,11]),o($V71,[2,22],{21:128,36:[1,129]}),{34:[1,130]},o($VD,[2,157],{43:[1,131],147:[1,132]}),o($Vh,[2,148]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,139:133,195:$VB},{134:[1,134]},o($VH,[2,151]),{16:$Vi,35:$Vj,47:135,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:136,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:137,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:138,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:139,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VH,[2,153]),o($VH,[2,154]),o([57,58,60,123],$V01,{100:140,101:$V$}),{16:$Vi,29:[1,143],35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:141,118:142,119:[1,144],195:$VB},o($V81,[2,114]),o($V81,[2,115]),o($V81,[2,116]),o($V81,[2,117]),o($V81,[2,118]),o($V81,[2,119]),o($V81,[2,120]),o($VN,[2,131]),{105:[1,145],106:[1,146],109:[1,147],110:[1,148]},{109:[1,149]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:150,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:151,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:152,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:153,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:154,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:155,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:156,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:157,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:158,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:159,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:160,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:161,195:$VB},o([57,58,60,105,106,109,110,123],[2,104]),{50:[1,162]},{17:[1,163],43:$V91},{17:[1,165]},o($Va1,[2,137],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:166,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{4:167,18:$V1},{16:$Vi,35:$Vj,47:168,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,67:$V31,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o([6,8,14,16,17,35,36,43,50,51,54,55,57,58,60,67,76,79,81,82,83,84,86,87,88,89,101,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194,195],$V51),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,64:169,65:170,47:174,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($V21,[2,75]),o($V21,[2,76]),o($V21,[2,77]),o($V21,[2,78]),o($V21,[2,79]),{70:175,71:[1,176]},{71:[2,69],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vf1,[2,7],{14:$Vc}),o($Vf1,[2,8]),o($Vg1,[2,24],{22:177,37:[1,178]}),o($V71,[2,21]),{35:[1,179]},{35:[1,180]},{35:[1,181]},o($VH,[2,150]),o($Vh1,[2,144]),o($VN,[2,132]),o($Vi1,[2,133],{107:$VI,124:$VJ}),o($Vi1,[2,134],{107:$VI,124:$VJ}),o($VN,[2,135]),o($Vi1,[2,136],{107:$VI,124:$VJ}),{56:184,57:$Vo,58:$Vp,60:[1,183],122:182,123:[1,185]},o($VO,[2,125]),{16:[1,186]},{16:[2,121]},{16:[2,122]},{16:[1,187]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:188,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:189,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:190,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:191,195:$VB},o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,91],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,92],{45:$VP,79:$VQ,81:$VR,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,93],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,94],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,95],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,96],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($V11,[2,97]),o($V11,[2,98]),o($V11,[2,99]),o($V11,[2,100]),o($V11,[2,101]),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,102],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o([6,8,14,16,17,34,35,36,43,45,49,50,51,54,55,57,58,60,67,71,72,74,76,77,79,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],[2,65]),o($V21,[2,84]),{16:$Vi,35:$Vj,47:192,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,86]),{17:[1,193],43:$V91},{17:[1,194]},{89:[1,195],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{17:[1,196],43:[1,197]},o($Va1,[2,58]),o($Va1,[2,60]),o($Va1,[2,61]),{16:$Vi,35:$Vj,47:198,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Va1,[2,63],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{71:[1,200],73:199,74:[1,201],77:[2,72]},{16:$Vi,35:$Vj,47:202,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vl1,[2,26],{23:203,38:[1,204]}),o($Vg1,[2,23]),o($VC,[2,19]),o($VD,[2,158]),o($VD,[2,159]),o($VN,[2,130]),o($VO,[2,124]),o($VN,[2,127]),o($VN,[2,128]),{4:205,18:$V1},{4:206,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:207,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,107:[1,208]},o($VO,[2,105],{102:209,103:[1,210]}),o($VO,[2,113],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($VO,[2,111],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($Va1,[2,138],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($V21,[2,85]),o($V21,[2,87]),o($V21,[2,88]),o([6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194],[2,56]),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,47:174,65:211,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($Va1,[2,62],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{77:[1,212]},{16:$Vi,35:$Vj,47:213,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:214,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{72:[1,215],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vm1,[2,28],{24:216,39:[1,217]}),o($Vl1,[2,25]),{17:[1,218]},{17:[1,219]},{17:[1,220],43:$V91},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:221,195:$VB},o($VO,[2,112]),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:222,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},o($Va1,[2,57]),o($V21,[2,74]),{72:[1,223],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{77:[2,73],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{16:$Vi,35:$Vj,47:224,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vn1,[2,29],{25:225,40:[1,226],41:[1,227]}),o($Vm1,[2,27]),o($VO,[2,126]),o($VO,[2,108]),o($VO,[2,109]),o($VO,[2,110]),o($VO,[2,106]),{16:$Vi,35:$Vj,47:228,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vo1,[2,70],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vp1,[2,33],{26:229,42:[1,230]}),o($Vn1,[2,30]),o($Vn1,[2,31]),o($Vo1,[2,71],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,27:231,35:$Vj,44:232,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vp1,[2,32]),o($Vs1,[2,168],{28:236,43:[1,237],157:[1,238]}),o($Vt1,[2,35]),o($Vt1,[2,36]),o($Vt1,[2,37]),o($Vt1,[2,39],{48:239,49:[1,240],50:[1,241],51:[1,242],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vs1,[2,12]),{16:$Vi,35:$Vj,44:243,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$Vk,63:252,66:250,88:$Vv1,158:244,160:245,161:246,172:249,174:248},o($Vt1,[2,38]),{50:[1,253],51:[1,254]},o($Vt1,[2,41]),o($Vt1,[2,43]),o($Vt1,[2,34]),o([6,8,14,17,129,135,138,144,146,150,152,154],$Vw1,{159:255,43:$Vx1,182:$Vy1}),o($Vz1,[2,170]),o($Vz1,[2,172],{163:258,166:260,36:$VA1,164:$VB1,165:$VC1,167:$VD1,168:$VE1,173:$VF1,177:$VG1}),{162:[1,266]},o($VH1,[2,193]),o($VH1,[2,194]),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],$Vw1,{159:267,67:$V31,182:$Vy1}),{4:268,16:$Vu1,18:$V1,50:$Vk,63:252,66:250,88:$Vv1,158:269,160:245,161:246,172:249,174:248},o($VI1,$VJ1,{183:270,66:272,49:$VK1,50:$V41}),o($Vt1,[2,40]),o($Vt1,[2,42]),o($VL1,[2,139],{128:273,129:[1,274]}),{16:$Vu1,50:$Vk,63:252,66:250,88:$Vv1,160:275,161:246,172:249,174:248},{16:[1,276]},{173:[1,277]},{16:$Vu1,50:$Vk,63:252,66:250,174:278},{169:279,170:$VM1,173:$VN1},{166:282,167:$VD1,168:$VE1,171:281,173:[2,181]},{173:[2,175]},{173:[2,176]},o($VO1,[2,177]),o($VO1,[2,178]),{16:$Vu1,50:$Vk,63:252,66:250,161:283,172:249,174:248},o($VI1,$VJ1,{66:272,183:284,49:$VK1,50:$V41}),{17:[1,285]},{17:[1,286],43:$Vx1},o($VH1,$VP1,{189:287,190:288,191:289,192:$VQ1,193:$VR1,194:$VS1}),{50:$V41,66:293},o($VI1,[2,201],{67:$V31}),o($Vh1,[2,141],{130:294,131:295,135:[1,296]}),{16:$Vi,35:$Vj,47:297,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vz1,[2,171]),{50:$V41,66:299,181:298},{16:$Vu1,50:$Vk,63:252,66:250,174:300},{176:301,179:$VT1},{173:[1,303]},{173:[2,180]},{173:[1,304]},{169:305,170:$VM1,173:$VN1},{36:$VA1,89:[1,306],163:258,164:$VB1,165:$VC1,166:260,167:$VD1,168:$VE1,173:$VF1,177:$VG1},o($VH1,$VP1,{190:288,191:289,189:307,192:$VQ1,193:$VR1,194:$VS1}),o($VH1,$VJ1,{66:272,183:308,49:$VK1,50:$V41}),o($VH1,[2,219]),o($VH1,[2,220]),o($VH1,[2,211]),o($VH1,[2,212]),{184:310,185:$VU1,186:$VV1},{184:313,185:$VU1,186:$VV1},{184:314,185:$VU1,186:$VV1},o($VI1,[2,200],{67:$V31}),o($VW1,[2,155],{143:315,144:[1,316]}),o($Vh1,[2,142]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:317,139:31,195:$VB},o($VL1,[2,140],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{17:[1,318],43:[1,319]},o($Va1,[2,195],{67:$V31}),o([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,183],{175:320,176:321,179:$VT1,180:$VX1}),o($VH1,[2,185]),{16:$Vi,35:$Vj,47:323,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$Vk,63:252,66:250,161:324,172:249,174:248},{16:$Vu1,50:$Vk,63:252,66:250,174:325},{173:[2,182]},o($Vz1,[2,173]),o($VH1,[2,217]),o($VH1,[2,218]),{191:326,192:$VQ1,193:$VR1,194:$VS1},{16:$VY1,152:$VZ1,187:327},o($V_1,[2,202]),o($V_1,[2,203]),{16:$VY1,152:$VZ1,187:329},{16:$VY1,152:$VZ1,187:330},o($Vh,$Va,{137:18,11:331,138:$Vb}),{16:$Vi,35:$Vj,47:332,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vh1,$VE,{132:333,43:$VF,133:$VG}),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,198]),{50:$V41,66:334},o($VH1,[2,184]),o($VH1,[2,191]),{16:[1,335]},o($VH1,[2,190],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{36:$VA1,163:258,164:$VB1,165:$VC1,166:260,167:$VD1,168:$VE1,173:$VF1,175:336,176:321,177:$VG1,179:$VT1,180:$VX1},o($VH1,[2,187]),o($VH1,[2,213]),{16:[1,337]},{135:[1,340],138:[1,339],173:[1,338]},{16:[1,341]},{16:[1,342]},o($VD,$Vf,{145:28,12:343,146:$Vg}),o($VW1,[2,156],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vh1,[2,145]),o($Va1,[2,196],{67:$V31}),{50:$V41,66:345,68:344},o($VH1,[2,186]),{17:[2,208],50:$V41,66:345,68:347,188:346},{16:[2,205]},{16:[2,206]},{16:[2,207]},{50:$V41,66:345,68:348},{50:$V41,66:345,68:349},o($V$1,[2,162],{148:350,149:351,150:[1,352]}),{17:[1,353],43:$V02},o($Va1,[2,66],{67:$V31}),{17:[1,355]},{17:[2,209],43:$V02},{17:[1,356],43:$V02},{17:[1,357],43:$V02},o($Vs1,[2,165],{151:358,152:[1,359],154:[1,360]}),o($V$1,[2,163]),{50:[1,362],63:361},o($VH1,[2,192]),{50:$V41,66:363},o($VH1,[2,214]),o($VH1,[2,215]),o($VH1,[2,216]),o($Vs1,[2,169]),{153:[1,364]},{105:[1,365]},o($V$1,[2,164]),{16:$V61},o($Va1,[2,67],{67:$V31}),o($Vs1,[2,166]),{155:[1,366]},{156:[1,367]},o($Vs1,[2,167])],\ndefaultActions: {11:[2,3],22:[2,1],24:[2,2],143:[2,121],144:[2,122],262:[2,175],263:[2,176],280:[2,180],305:[2,182],338:[2,205],339:[2,206],340:[2,207]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:/* skip sql comments */\nbreak;\ncase 2:/* skip sql comments */\nbreak;\ncase 3:/* skip whitespace */\nbreak;\ncase 4:return 195\nbreak;\ncase 5:return 50\nbreak;\ncase 6:return 50\nbreak;\ncase 7:return 50\nbreak;\ncase 8:return 18\nbreak;\ncase 9:return 29\nbreak;\ncase 10:return 119\nbreak;\ncase 11:return 30\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 32\nbreak;\ncase 14:return 33\nbreak;\ncase 15:return 36\nbreak;\ncase 16:return 37\nbreak;\ncase 17:return 38\nbreak;\ncase 18:return 39\nbreak;\ncase 19:return 40\nbreak;\ncase 20:return 41\nbreak;\ncase 21:return 42\nbreak;\ncase 22:return 46\nbreak;\ncase 23:return 49\nbreak;\ncase 24:return 57\nbreak;\ncase 25:return 58\nbreak;\ncase 26:return 60\nbreak;\ncase 27:return 'COLLATE'\nbreak;\ncase 28:return 84\nbreak;\ncase 29:return 86\nbreak;\ncase 30:return 87\nbreak;\ncase 31:return 76\nbreak;\ncase 32:return 71\nbreak;\ncase 33:return 72\nbreak;\ncase 34:return 74\nbreak;\ncase 35:return 77\nbreak;\ncase 36:return 96\nbreak;\ncase 37:return 97\nbreak;\ncase 38:return 101\nbreak;\ncase 39:return 106\nbreak;\ncase 40:return 105\nbreak;\ncase 41:return 108\nbreak;\ncase 42:return 109\nbreak;\ncase 43:return 103\nbreak;\ncase 44:return 110\nbreak;\ncase 45:return 121\nbreak;\ncase 46:return 123\nbreak;\ncase 47:return 107\nbreak;\ncase 48:return 126\nbreak;\ncase 49:return 127\nbreak;\ncase 50:return 157\nbreak;\ncase 51:return 182\nbreak;\ncase 52:return 192\nbreak;\ncase 53:return 185\nbreak;\ncase 54:return 186\nbreak;\ncase 55:return 152\nbreak;\ncase 56:return 173\nbreak;\ncase 57:return 138\nbreak;\ncase 58:return 135\nbreak;\ncase 59:return 193\nbreak;\ncase 60:return 194\nbreak;\ncase 61:return 164\nbreak;\ncase 62:return 165\nbreak;\ncase 63:return 179\nbreak;\ncase 64:return 180\nbreak;\ncase 65:return 167\nbreak;\ncase 66:return 168\nbreak;\ncase 67:return 170\nbreak;\ncase 68:return 177\nbreak;\ncase 69:return 129\nbreak;\ncase 70:return 141\nbreak;\ncase 71:return 142\nbreak;\ncase 72:return 133\nbreak;\ncase 73:return 134\nbreak;\ncase 74:return 144\nbreak;\ncase 75:return 147\nbreak;\ncase 76:return 150\nbreak;\ncase 77:return 153\nbreak;\ncase 78:return 154\nbreak;\ncase 79:return 155\nbreak;\ncase 80:return 156\nbreak;\ncase 81:return 162\nbreak;\ncase 82:return 146\nbreak;\ncase 83:return 14\nbreak;\ncase 84:return 43\nbreak;\ncase 85:return 34\nbreak;\ncase 86:return 16\nbreak;\ncase 87:return 17\nbreak;\ncase 88:return 82\nbreak;\ncase 89:return 117\nbreak;\ncase 90:return 83\nbreak;\ncase 91:return 91\nbreak;\ncase 92:return 92\nbreak;\ncase 93:return 79\nbreak;\ncase 94:return 81\nbreak;\ncase 95:return 45\nbreak;\ncase 96:return 95\nbreak;\ncase 97:return 98\nbreak;\ncase 98:return 99\nbreak;\ncase 99:return 94\nbreak;\ncase 100:return 112\nbreak;\ncase 101:return 113\nbreak;\ncase 102:return 93\nbreak;\ncase 103:return '<=>'\nbreak;\ncase 104:return 114\nbreak;\ncase 105:return 116\nbreak;\ncase 106:return 115\nbreak;\ncase 107:return 88\nbreak;\ncase 108:return 89\nbreak;\ncase 109:return 8\nbreak;\ncase 110:return 51\nbreak;\ncase 111:return 51\nbreak;\ncase 112:return 55\nbreak;\ncase 113:return 35\nbreak;\ncase 114:return 54\nbreak;\ncase 115:return 50\nbreak;\ncase 116:return 67\nbreak;\ncase 117:return 51\nbreak;\ncase 118:return 51\nbreak;\ncase 119:return 50\nbreak;\ncase 120:return 6\nbreak;\ncase 121:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:[/][*](.|\\n)*?[*][/])/i,/^(?:[-][-]\\s.*\\n)/i,/^(?:[#]\\s.*\\n)/i,/^(?:\\s+)/i,/^(?:[$][{](.+?)[}])/i,/^(?:[`][a-zA-Z0-9_\\u0080-\\uFFFF]*[`])/i,/^(?:[\\w]+[\\u0080-\\uFFFF]+[0-9a-zA-Z_\\u0080-\\uFFFF]*)/i,/^(?:[\\u0080-\\uFFFF][0-9a-zA-Z_\\u0080-\\uFFFF]*)/i,/^(?:SELECT\\b)/i,/^(?:ALL\\b)/i,/^(?:ANY\\b)/i,/^(?:DISTINCT\\b)/i,/^(?:DISTINCTROW\\b)/i,/^(?:HIGH_PRIORITY\\b)/i,/^(?:MAX_STATEMENT_TIME\\b)/i,/^(?:STRAIGHT_JOIN\\b)/i,/^(?:SQL_SMALL_RESULT\\b)/i,/^(?:SQL_BIG_RESULT\\b)/i,/^(?:SQL_BUFFER_RESULT\\b)/i,/^(?:SQL_CACHE\\b)/i,/^(?:SQL_NO_CACHE\\b)/i,/^(?:SQL_CALC_FOUND_ROWS\\b)/i,/^(?:([a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*\\.){1,2}\\*)/i,/^(?:AS\\b)/i,/^(?:TRUE\\b)/i,/^(?:FALSE\\b)/i,/^(?:NULL\\b)/i,/^(?:COLLATE\\b)/i,/^(?:BINARY\\b)/i,/^(?:ROW\\b)/i,/^(?:EXISTS\\b)/i,/^(?:CASE\\b)/i,/^(?:WHEN\\b)/i,/^(?:THEN\\b)/i,/^(?:ELSE\\b)/i,/^(?:END\\b)/i,/^(?:DIV\\b)/i,/^(?:MOD\\b)/i,/^(?:NOT\\b)/i,/^(?:BETWEEN\\b)/i,/^(?:IN\\b)/i,/^(?:SOUNDS\\b)/i,/^(?:LIKE\\b)/i,/^(?:ESCAPE\\b)/i,/^(?:REGEXP\\b)/i,/^(?:IS\\b)/i,/^(?:UNKNOWN\\b)/i,/^(?:AND\\b)/i,/^(?:OR\\b)/i,/^(?:XOR\\b)/i,/^(?:FROM\\b)/i,/^(?:PARTITION\\b)/i,/^(?:USE\\b)/i,/^(?:INDEX\\b)/i,/^(?:KEY\\b)/i,/^(?:FOR\\b)/i,/^(?:JOIN\\b)/i,/^(?:ORDER\\s+BY\\b)/i,/^(?:GROUP\\s+BY\\b)/i,/^(?:IGNORE\\b)/i,/^(?:FORCE\\b)/i,/^(?:INNER\\b)/i,/^(?:CROSS\\b)/i,/^(?:ON\\b)/i,/^(?:USING\\b)/i,/^(?:LEFT\\b)/i,/^(?:RIGHT\\b)/i,/^(?:OUTER\\b)/i,/^(?:NATURAL\\b)/i,/^(?:WHERE\\b)/i,/^(?:ASC\\b)/i,/^(?:DESC\\b)/i,/^(?:WITH\\b)/i,/^(?:ROLLUP\\b)/i,/^(?:HAVING\\b)/i,/^(?:OFFSET\\b)/i,/^(?:PROCEDURE\\b)/i,/^(?:UPDATE\\b)/i,/^(?:LOCK\\b)/i,/^(?:SHARE\\b)/i,/^(?:MODE\\b)/i,/^(?:OJ\\b)/i,/^(?:LIMIT\\b)/i,/^(?:UNION\\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\\|)/i,/^(?:&)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:\\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:;)/i,/^(?:['](\\\\.|[^'])*['])/i,/^(?:[\"](\\\\.|[^\"])*[\"])/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?[eE][-][0-9]+(\\.[0-9]+)?)/i,/^(?:[a-zA-Z_\\u0080-\\uFFFF][a-zA-Z0-9_\\u0080-\\uFFFF]*)/i,/^(?:\\.)/i,/^(?:[\"][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[\"])/i,/^(?:['][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*['])/i,/^(?:([`])(?:(?=(\\\\?))\\2.)*?\\1)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();if (!sqlParser) {\n  sqlParser = {};\n}\n\nfunction Sql() {\n  this.buffer = '';\n}\n\nsqlParser.stringify = function(ast) {\n  var sql = new Sql();\n  sql.travelMain(ast);\n  return sql.buffer;\n};\n\nSql.prototype.travel = function(ast) {\n  if (!ast) return;\n\n  if (typeof ast === 'string') {\n    return this.append(ast);\n  }\n\n  var processor = this['travel' + ast.type];\n  processor.call(this, ast);\n};\n\nvar noSuffixFlag = false;\nSql.prototype.appendKeyword = function(keyword, noPrefix, noSuffix) {\n  if (noSuffixFlag) {\n    noPrefix = true;\n    noSuffixFlag = false;\n  }\n  if (noPrefix) {\n    this.buffer += keyword.toUpperCase();\n  } else {\n    this.buffer += ' ' + keyword.toUpperCase();\n  }\n\n  if (noSuffix) {\n    noSuffixFlag = true;\n  }\n};\nSql.prototype.append = function(word, noPrefix, noSuffix) {\n  if (noSuffixFlag) {\n    noPrefix = true;\n    noSuffixFlag = false;\n  }\n  if (noPrefix) {\n    this.buffer += word;\n  } else {\n    this.buffer += ' ' + word;\n  }\n\n  if (noSuffix) {\n    noSuffixFlag = true;\n  }\n};\nSql.prototype.travelMain = function(ast) {\n  this.travel(ast.value);\n  if (ast.hasSemicolon) {\n    this.append(';', true);\n  }\n};\nSql.prototype.travelSelect = function(ast) {\n  this.appendKeyword('select');\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  if (ast.highPriorityOpt) {\n    this.appendKeyword(ast.highPriorityOpt);\n  }\n  if (ast.maxStateMentTimeOpt) {\n    this.append('MAX_STATEMENT_TIME = ' + ast.maxStateMentTimeOpt);\n  }\n  if (ast.straightJoinOpt) {\n    this.appendKeyword(ast.straightJoinOpt);\n  }\n  if (ast.sqlSmallResultOpt) {\n    this.appendKeyword(ast.sqlSmallResultOpt);\n  }\n  if (ast.sqlBigResultOpt) {\n    this.appendKeyword(ast.sqlBigResultOpt);\n  }\n  if (ast.sqlBufferResultOpt) {\n    this.appendKeyword(ast.sqlBufferResultOpt);\n  }\n  if (ast.sqlCacheOpt) {\n    this.appendKeyword(ast.sqlCacheOpt);\n  }\n  if (ast.sqlCalcFoundRowsOpt) {\n    this.appendKeyword(ast.sqlCalcFoundRowsOpt);\n  }\n  if (ast.selectItems) {\n    this.travelSelectExpr(ast.selectItems);\n  }\n  if (ast.from) {\n    this.appendKeyword('from');\n    this.travel(ast.from);\n  }\n  if (ast.partition) {\n    this.travel(ast.partition);\n  }\n  if (ast.where) {\n    this.appendKeyword('where');\n    this.travel(ast.where);\n  }\n  if (ast.groupBy) {\n    this.travel(ast.groupBy);\n  }\n  if (ast.having) {\n    this.appendKeyword('having');\n    this.travel(ast.having);\n  }\n  if (ast.orderBy) {\n    this.travel(ast.orderBy);\n  }\n  if (ast.limit) {\n    this.travel(ast.limit);\n  }\n  if (ast.procedure) {\n    this.appendKeyword('procedure');\n    this.travel(ast.procedure);\n  }\n  if (ast.updateLockMode) {\n    this.appendKeyword(ast.updateLockMode);\n  }\n};\nSql.prototype.travelSelectExpr = function(ast) {\n  var exprList = ast.value;\n  for (var i = 0; i < exprList.length; i++) {\n    if (typeof ast === 'string') {\n      this.append(exprList[i]);\n    } else {\n      this.travel(exprList[i]);\n      if (exprList[i].alias) {\n        if (exprList[i].hasAs) {\n          this.appendKeyword('as');\n        }\n        this.travel(exprList[i].alias);\n      }\n    }\n    if (i !== exprList.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelIsExpression = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('in');\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.append(ast.right);\n};\nSql.prototype.travelNotExpression = function(ast) {\n  this.appendKeyword('not');\n  this.travel(ast.value);\n};\nSql.prototype.travelOrExpression = Sql.prototype.travelAndExpression = Sql.prototype.travelXORExpression = function(\n  ast\n) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelNull = Sql.prototype.travelBoolean = Sql.prototype.travelBooleanExtra = function(\n  ast\n) {\n  this.appendKeyword(ast.value);\n};\nSql.prototype.travelNumber = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelString = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelFunctionCall = function(ast) {\n  this.append(ast.name);\n  this.append('(', true, true);\n  var params = ast.params;\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    this.travel(param);\n    if (i !== params.length - 1) {\n      this.append(',', true);\n    }\n  }\n  this.append(')', true);\n};\nSql.prototype.travelFunctionCallParam = function(ast) {\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  this.travel(ast.value);\n};\nSql.prototype.travelIdentifier = function(ast) {\n  this.append(ast.value);\n};\nSql.prototype.travelIdentifierList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelWhenThenList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.appendKeyword('when');\n    this.travel(list[i].when);\n    this.appendKeyword('then');\n    this.travel(list[i].then);\n  }\n};\nSql.prototype.travelCaseWhen = function(ast) {\n  this.appendKeyword('case');\n  if (ast.caseExprOpt) {\n    this.travel(ast.caseExprOpt);\n  }\n  this.travel(ast.whenThenList);\n  if (ast.else) {\n    this.appendKeyword('else');\n    this.travel(ast.else);\n  }\n  this.appendKeyword('end');\n};\nSql.prototype.travelPrefix = function(ast) {\n  this.appendKeyword(ast.prefix);\n  this.travel(ast.value);\n};\nSql.prototype.travelSimpleExprParentheses = function(ast) {\n  if (ast.hasRow) {\n    this.appendKeyword('row');\n  }\n  this.append('(', false, true);\n  this.travel(ast.value);\n  this.append(')', true);\n};\nSql.prototype.travelSubQuery = function(ast) {\n  if (ast.hasExists) {\n    this.appendKeyword('exists');\n  }\n  this.append('(', false, true);\n  this.travel(ast.value);\n  this.append(')', true);\n};\nSql.prototype.travelIdentifierExpr = function(ast) {\n  this.append('{');\n  this.travel(ast.identifier);\n  this.travel(ast.value);\n  this.append('}');\n};\nSql.prototype.travelBitExpression = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelInSubQueryPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('in');\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelInExpressionListPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('in');\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelBetweenPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('between');\n  this.travel(ast.right.left);\n  this.appendKeyword('and');\n  this.travel(ast.right.right);\n};\nSql.prototype.travelSoundsLikePredicate = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('sounds');\n  this.appendKeyword('like');\n  this.travel(ast.right);\n};\nSql.prototype.travelLikePredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('like');\n  this.travel(ast.right);\n  if (ast.escape) {\n    this.appendKeyword('escape');\n    this.travel(ast.escape);\n  }\n};\nSql.prototype.travelRegexpPredicate = function(ast) {\n  this.travel(ast.left);\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('regexp');\n  this.travel(ast.right);\n};\nSql.prototype.travelIsNullBooleanPrimary = function(ast) {\n  this.travel(ast.value);\n  this.appendKeyword('is');\n  if (ast.hasNot) {\n    this.appendKeyword('not');\n  }\n  this.appendKeyword('null');\n};\nSql.prototype.travelComparisonBooleanPrimary = function(ast) {\n  this.travel(ast.left);\n  this.append(ast.operator);\n  this.travel(ast.right);\n};\nSql.prototype.travelComparisonSubQueryBooleanPrimary = function(ast) {\n  this.travel(ast.left);\n  this.append(ast.operator);\n  this.appendKeyword(ast.subQueryOpt);\n  this.append('(', false, true);\n  this.travel(ast.right);\n  this.append(')');\n};\nSql.prototype.travelExpressionList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelGroupBy = function(ast) {\n  this.appendKeyword('group by');\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelOrderBy = function(ast) {\n  this.appendKeyword('order by');\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  if (ast.rollUp) {\n    this.appendKeyword('with rollup');\n  }\n};\nSql.prototype.travelGroupByOrderByItem = function(ast) {\n  this.travel(ast.value);\n  if (ast.sortOpt) {\n    this.appendKeyword(ast.sortOpt);\n  }\n};\nSql.prototype.travelLimit = function(ast) {\n  this.appendKeyword('limit');\n  var list = ast.value;\n  if (list.length === 1) {\n    this.append(list[0]);\n  } else if (list.length === 2) {\n    if (ast.offsetMode) {\n      this.append(list[1]);\n      this.append('offset');\n      this.append(list[0]);\n    } else {\n      this.append(list[0]);\n      this.append(',', true);\n      this.append(list[1]);\n    }\n  }\n};\nSql.prototype.travelTableReferences = function(ast) {\n  var list = ast.value;\n  if (ast.TableReferences) {\n    this.append('(', false, true);\n  }\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  if (ast.TableReferences) {\n    this.append(')');\n  }\n};\nSql.prototype.travelTableReference = function(ast) {\n  if (ast.hasOj) {\n    this.append('{');\n    this.appendKeyword('oj');\n    this.travel(ast.value);\n    this.append('}');\n  } else {\n    this.travel(ast.value);\n  }\n};\nSql.prototype.travelInnerCrossJoinTable = function(ast) {\n  this.travel(ast.left);\n  if (ast.innerCrossOpt) {\n    this.appendKeyword(ast.innerCrossOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n  if (ast.condition) {\n    this.travel(ast.condition);\n  }\n};\nSql.prototype.travelStraightJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('straight_join');\n  this.travel(ast.right);\n  this.travel(ast.condition);\n};\nSql.prototype.travelLeftRightJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword(ast.leftRight);\n  if (ast.outOpt) {\n    this.appendKeyword(ast.outOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n  this.travel(ast.condition);\n};\nSql.prototype.travelNaturalJoinTable = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('natural');\n  if (ast.leftRight) {\n    this.appendKeyword(ast.leftRight);\n  }\n  if (ast.outOpt) {\n    this.appendKeyword(ast.outOpt);\n  }\n  this.appendKeyword('join');\n  this.travel(ast.right);\n};\nSql.prototype.travelOnJoinCondition = function(ast) {\n  this.appendKeyword('on');\n  this.travel(ast.value);\n};\nSql.prototype.travelUsingJoinCondition = function(ast) {\n  this.appendKeyword('using');\n  this.appendKeyword('(', false, true);\n  this.travel(ast.value);\n  this.appendKeyword(')');\n};\nSql.prototype.travelPartitions = function(ast) {\n  this.appendKeyword('partition');\n  this.appendKeyword('(', false, true);\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelForOptIndexHint = function(ast) {\n  this.appendKeyword('for');\n  this.appendKeyword(ast.value);\n};\nSql.prototype.travelIndexList = function(ast) {\n  var list = ast.value;\n  for (var i = 0; i < list.length; i++) {\n    this.travel(list[i]);\n    if (i !== list.length - 1) {\n      this.append(',', true);\n    }\n  }\n};\nSql.prototype.travelUseIndexHint = function(ast) {\n  this.appendKeyword('use');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelIgnoreIndexHint = function(ast) {\n  this.appendKeyword('ignore');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelForceIndexHint = function(ast) {\n  this.appendKeyword('force');\n  this.appendKeyword(ast.indexOrKey);\n  if (ast.forOpt) {\n    this.travel(ast.forOpt);\n  }\n  this.appendKeyword('(', false, true);\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n  this.appendKeyword(')');\n};\nSql.prototype.travelTableFactor = function(ast) {\n  this.travel(ast.value);\n  if (ast.partition) {\n    this.travel(ast.partition);\n  }\n  if (ast.alias) {\n    if (ast.hasAs) {\n      this.appendKeyword('as');\n    }\n    this.travel(ast.alias);\n  }\n  if (ast.indexHintOpt) {\n    this.travel(ast.indexHintOpt);\n  }\n};\nSql.prototype.travelUnion = function(ast) {\n  this.travel(ast.left);\n  this.appendKeyword('UNION');\n  if (ast.distinctOpt) {\n    this.appendKeyword(ast.distinctOpt);\n  }\n  this.travel(ast.right);\n};\nSql.prototype.travelSelectParenthesized = function(ast) {\n  this.appendKeyword('(');\n  this.travel(ast.value);\n  this.appendKeyword(')');\n};\nSql.prototype.travelPlaceHolder = function (ast) {\n  if (ast.value) {\n    this.travel(ast.value);\n  }\n};var root = this\n// AMD / RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n    define([], function () {\n        return sqlParser;\n    });\n}\n// Node.js\nelse if (typeof module !== 'undefined' && module.exports) {\n    module.exports = sqlParser;\n}\n// included directly via <script> tag\nelse {\n    root.sqlParser = sqlParser;\n}\n\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function pad(s, length) {\n    if (s.length > length) {\n      return s\n    }\n    return Array(length - s.length + 1).join(\" \") + s\n  }\n\n  function lastNLines(string, numLines) {\n    var position = string.length\n    var lineBreaks = 0;\n    while (true) {\n      var idx = string.lastIndexOf(\"\\n\", position - 1)\n      if (idx === -1) {\n        break;\n      } else {\n        lineBreaks++\n      }\n      position = idx\n      if (lineBreaks === numLines) {\n        break;\n      }\n      if (position === 0) {\n        break;\n      }\n    }\n    var startPosition = \n      lineBreaks < numLines ?\n      0 : \n      position + 1\n    return string.substring(startPosition).split(\"\\n\")\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n\n    // Use a JavaScript Map to map keywords to their corresponding token type\n    // unless Map is unsupported, then fall back to using an Object:\n    var isMap = typeof Map !== 'undefined'\n    var reverseMap = isMap ? new Map : Object.create(null)\n\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        if (isMap) {\n          reverseMap.set(keyword, tokenType)\n        } else {\n          reverseMap[keyword] = tokenType\n        }\n      })\n    }\n    return function(k) {\n      return isMap ? reverseMap.get(k) : reverseMap[k]\n    }\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedText = info ? info.queuedText: \"\";\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedText: this.queuedText,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      var err = new Error(this.formatError(token, \"invalid syntax\"))\n      throw err;\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    \n    var numLinesAround = 2\n    var firstDisplayedLine = Math.max(token.line - numLinesAround, 1)\n    var lastDisplayedLine = token.line + numLinesAround\n    var lastLineDigits = String(lastDisplayedLine).length\n    var displayedLines = lastNLines(\n        this.buffer, \n        (this.line - token.line) + numLinesAround + 1\n      )\n      .slice(0, 5)\n    var errorLines = []\n    errorLines.push(message + \" at line \" + token.line + \" col \" + token.col + \":\")\n    errorLines.push(\"\")\n    for (var i = 0; i < displayedLines.length; i++) {\n      var line = displayedLines[i]\n      var lineNo = firstDisplayedLine + i\n      errorLines.push(pad(String(lineNo), lastLineDigits) + \"  \" + line);\n      if (lineNo === token.line) {\n        errorLines.push(pad(\"\", lastLineDigits + token.col + 1) + \"^\")\n      }\n    }\n    return errorLines.join(\"\\n\")\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"moo\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unbox = exports.doubleQuoted = exports.box = exports.track = exports.tracking = exports.trackingComments = exports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\nconst keywords_1 = __webpack_require__(3);\n// build keywords\nconst keywordsMap = {};\nfor (const k of keywords_1.sqlKeywords) {\n    keywordsMap['kw_' + k.toLowerCase()] = k;\n}\nconst caseInsensitiveKeywords = (map) => {\n    const transform = (0, moo_1.keywords)(map);\n    return (text) => transform(text.toUpperCase());\n};\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    word: {\n        match: /[eE](?!')[A-Za-z0-9_]*|[a-df-zA-DF-Z_][A-Za-z0-9_]*/,\n        type: caseInsensitiveKeywords(keywordsMap),\n        value: x => x.toLowerCase(),\n    },\n    wordQuoted: {\n        match: /\"(?:[^\"\\*]|\"\")+\"/,\n        type: () => 'quoted_word',\n        value: x => x.substring(1, x.length - 1),\n    },\n    string: {\n        match: /'(?:[^']|\\'\\')*'/,\n        value: x => {\n            return x.substring(1, x.length - 1)\n                .replace(/''/g, '\\'');\n        },\n    },\n    eString: {\n        match: /\\b(?:e|E)'(?:[^'\\\\]|[\\r\\n\\s]|(?:\\\\\\s)|(?:\\\\\\n)|(?:\\\\.)|(?:\\'\\'))+'/,\n        value: x => {\n            return x.substring(2, x.length - 1)\n                .replace(/''/g, '\\'')\n                .replace(/\\\\([\\s\\n])/g, (_, x) => x)\n                .replace(/\\\\./g, m => JSON.parse('\"' + m + '\"'));\n        },\n    },\n    qparam: {\n        match: /\\$\\d+/,\n    },\n    commentLine: /\\-\\-.*?$[\\s\\r\\n]*/,\n    commentFullOpen: /\\/\\*/,\n    commentFullClose: /\\*\\/[\\s\\r\\n]*/,\n    star: '*',\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    // word: /[a-zA-Z][A-Za-z0-9_\\-]*/,\n    lparen: '(',\n    rparen: ')',\n    lbracket: '[',\n    rbracket: ']',\n    semicolon: ';',\n    dot: /\\.(?!\\d)/,\n    op_cast: '::',\n    op_colon: ':',\n    op_plus: '+',\n    op_eq: '=',\n    op_neq: {\n        match: /(?:!=)|(?:\\<\\>)/,\n        value: () => '!=',\n    },\n    op_membertext: '->>',\n    op_member: '->',\n    op_minus: '-',\n    op_div: /\\//,\n    op_not_ilike: /\\!~~\\*/,\n    op_not_like: /\\!~~/,\n    op_ilike: /~~\\*/,\n    op_like: /~~/,\n    op_mod: '%',\n    op_exp: '^',\n    op_additive: {\n        // group other additive operators\n        match: ['||', '-', '#-', '&&'],\n    },\n    op_compare: {\n        // group other comparison operators\n        // ... to add: \"IN\" and \"NOT IN\" that are matched by keywords\n        match: ['>', '>=', '<', '<=', '@>', '<@', '?', '?|', '?&', '#>>', '>>', '<<', '~', '~*', '!~', '!~*', '@@'],\n    },\n    ops_others: {\n        // referenced as (any other operator) in https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-PRECEDENCE\n        // see also https://www.postgresql.org/docs/9.0/functions-math.html\n        match: ['|', '&', '^', '#'],\n    },\n    codeblock: {\n        match: /\\$\\$(?:.|[\\s\\t\\n\\v\\f\\r])*?\\$\\$/s,\n        lineBreaks: true,\n        value: (x) => x.substring(2, x.length - 2),\n    },\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    let commentFull = null;\n    while (tok = next.call(exports.lexer)) {\n        // js regex can't be recursive, so we'll keep track of nested opens (/*) and closes (*/).\n        if (tok.type === 'commentFullOpen') {\n            if (commentFull === null) { // initial open - start collecting content\n                commentFull = {\n                    nested: 0,\n                    offset: tok.offset,\n                    text: tok.text\n                };\n                continue;\n            }\n            commentFull.nested++;\n        }\n        if (commentFull != null) {\n            // collect comment content\n            commentFull.text += tok.text;\n            if (tok.type === 'commentFullClose') {\n                if (commentFull.nested === 0) { // finish comment, if not nested\n                    comments === null || comments === void 0 ? void 0 : comments.push(makeComment(commentFull));\n                    commentFull = null;\n                    continue;\n                }\n                commentFull.nested--;\n            }\n            continue;\n        }\n        if (tok.type === 'space') {\n            continue;\n        }\n        if (tok.type === 'commentLine') {\n            comments === null || comments === void 0 ? void 0 : comments.push(makeComment(tok));\n            continue;\n        }\n        break;\n    }\n    if (trackingLoc && tok) {\n        const start = tok.offset;\n        const loc = {\n            start,\n            end: start + tok.text.length,\n        };\n        tok._location = loc;\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\nlet comments = null;\nconst makeComment = ({ offset, text }) => ({\n    _location: { start: offset, end: offset + text.length },\n    comment: text,\n});\nfunction trackingComments(act) {\n    if (comments) {\n        throw new Error('WAT ? Recursive comments tracking 🤔🤨 ?');\n    }\n    try {\n        comments = [];\n        const ast = act();\n        return { comments, ast };\n    }\n    finally {\n        comments = null;\n    }\n}\nexports.trackingComments = trackingComments;\nlet trackingLoc = false;\nfunction tracking(act) {\n    if (trackingLoc) {\n        return act();\n    }\n    try {\n        trackingLoc = true;\n        return act();\n    }\n    finally {\n        trackingLoc = false;\n    }\n}\nexports.tracking = tracking;\nfunction track(xs, ret) {\n    if (!trackingLoc || !ret || typeof ret !== 'object') {\n        return ret;\n    }\n    const start = seek(xs, true);\n    const end = seek(xs, false);\n    if (!start || !end) {\n        return ret;\n    }\n    if (start === end) {\n        ret._location = start;\n    }\n    else {\n        const loc = {\n            start: start.start,\n            end: end.end,\n        };\n        ret._location = loc;\n    }\n    return ret;\n}\nexports.track = track;\nconst literal = Symbol('_literal');\nconst doubleQuotedSym = Symbol('_doublequoted');\nfunction box(xs, value, doubleQuoted) {\n    if (!trackingLoc && !doubleQuoted) {\n        return value;\n    }\n    return track(xs, { [literal]: value, [doubleQuotedSym]: doubleQuoted });\n}\nexports.box = box;\nfunction unwrapNoBox(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrapNoBox(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return e;\n}\nfunction doubleQuoted(value) {\n    const uw = unwrapNoBox(value);\n    if (typeof value === 'object' && (uw === null || uw === void 0 ? void 0 : uw[doubleQuotedSym])) {\n        return { doubleQuoted: true };\n    }\n    return undefined;\n}\nexports.doubleQuoted = doubleQuoted;\nfunction unbox(value) {\n    var _a;\n    if (typeof value === 'object') {\n        return (_a = value === null || value === void 0 ? void 0 : value[literal]) !== null && _a !== void 0 ? _a : value;\n    }\n    return value;\n}\nexports.unbox = unbox;\nfunction seek(xs, start) {\n    if (!xs) {\n        return null;\n    }\n    if (Array.isArray(xs)) {\n        const diff = start ? 1 : -1;\n        for (let i = start ? 0 : xs.length - 1; i >= 0 && i < xs.length; i += diff) {\n            const v = seek(xs[i], start);\n            if (v) {\n                return v;\n            }\n        }\n        return null;\n    }\n    if (typeof xs !== 'object') {\n        return null;\n    }\n    return xs._location;\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AstDefaultMapper = exports.arrayNilMap = exports.assignChanged = exports.astMapper = void 0;\nconst utils_1 = __webpack_require__(6);\n/**\n * Builds an AST modifier based on the default implementation, merged with the one you provide.\n *\n * Example of a modifier that renames all reference to columns 'foo' to 'bar'\n * ```ts\n *  const mapper = astMapper(b => ({\n *       ref: a => assignChanged(a, {\n *           name: a.name === 'foo'\n *               ? 'bar'\n *               : a.name\n *       })\n *   }));\n *\n * const modified = mapper.statement(myStatementToModify);\n * ```\n */\nfunction astMapper(modifierBuilder) {\n    const instance = new AstDefaultMapper();\n    instance.wrapped = modifierBuilder(instance);\n    return instance;\n}\nexports.astMapper = astMapper;\n/**\n * An helper function that returns a copy of an object with modified properties\n * (similar to Object.assign()), but ONLY if thos properties have changed.\n * Will return the original object if not.\n */\nfunction assignChanged(orig, assign) {\n    if (!orig) {\n        return orig;\n    }\n    let changed = false;\n    for (const k of Object.keys(assign)) {\n        if (orig[k] !== assign[k]) {\n            changed = true;\n            break;\n        }\n    }\n    if (!changed) {\n        return orig;\n    }\n    return (0, utils_1.trimNullish)({\n        ...orig,\n        ...assign,\n    }, 0);\n}\nexports.assignChanged = assignChanged;\n/**\n * An helper function that returns a map of an array, but:\n * - It will return the original array if it is null-ish\n * - It will remove all null-ish entries\n * - It will return the original array if nothing has changed\n */\nfunction arrayNilMap(collection, mapper) {\n    if (!(collection === null || collection === void 0 ? void 0 : collection.length)) {\n        return collection;\n    }\n    let changed = false;\n    let ret = collection;\n    for (let i = 0; i < collection.length; i++) {\n        const orig = collection[i];\n        const val = mapper(orig);\n        if (!changed && (!val || val !== orig)) {\n            changed = true;\n            ret = collection.slice(0, i);\n        }\n        if (!val) {\n            continue;\n        }\n        if (changed) {\n            ret.push(val);\n        }\n    }\n    return ret;\n}\nexports.arrayNilMap = arrayNilMap;\nfunction withAccepts(val) {\n    switch (val === null || val === void 0 ? void 0 : val.type) {\n        case 'select':\n        case 'delete':\n        case 'insert':\n        case 'update':\n        case 'union':\n        case 'union all':\n        case 'with':\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Can be used to modify an AST.\n *\n * You will have to override functions that you're interested in to use this class.\n *\n * Example: Will remove all references in\n */\nclass AstDefaultMapper {\n    super() {\n        return new SkipModifier(this);\n    }\n    statement(val) {\n        switch (val.type) {\n            case 'alter table':\n                return this.alterTable(val);\n            case 'alter index':\n                return this.alterIndex(val);\n            case 'commit':\n            case 'start transaction':\n            case 'rollback':\n                return this.transaction(val);\n            case 'create index':\n                return this.createIndex(val);\n            case 'create table':\n                return this.createTable(val);\n            case 'truncate table':\n                return this.truncateTable(val);\n            case 'delete':\n                return this.delete(val);\n            case 'insert':\n                return this.insert(val);\n            case 'with':\n                return this.with(val);\n            case 'with recursive':\n                return this.withRecursive(val);\n            case 'select':\n                return this.selection(val);\n            case 'update':\n                return this.update(val);\n            case 'create extension':\n                return this.createExtension(val);\n            case 'tablespace':\n                return this.tablespace(val);\n            case 'set':\n                return this.setGlobal(val);\n            case 'set timezone':\n                return this.setTimezone(val);\n            case 'set names':\n                return this.setNames(val);\n            case 'create sequence':\n                return this.createSequence(val);\n            case 'alter sequence':\n                return this.alterSequence(val);\n            case 'begin':\n                return this.begin(val);\n            case 'drop table':\n            case 'drop index':\n            case 'drop sequence':\n            case 'drop type':\n            case 'drop trigger':\n                return this.drop(val);\n            case 'create enum':\n                return this.createEnum(val);\n            case 'alter enum':\n                return this.alterEnum(val);\n            case 'create composite type':\n                return this.createCompositeType(val);\n            case 'union':\n            case 'union all':\n                return this.union(val);\n            case 'show':\n                return this.show(val);\n            case 'prepare':\n                return this.prepare(val);\n            case 'deallocate':\n                return this.deallocate(val);\n            case 'create view':\n                return this.createView(val);\n            case 'create materialized view':\n                return this.createMaterializedView(val);\n            case 'refresh materialized view':\n                return this.refreshMaterializedView(val);\n            case 'create schema':\n                return this.createSchema(val);\n            case 'raise':\n                return this.raise(val);\n            case 'comment':\n                return this.comment(val);\n            case 'do':\n                return this.do(val);\n            case 'create function':\n                return this.createFunction(val);\n            case 'drop function':\n                return this.dropFunction(val);\n            case 'values':\n                return this.values(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    comment(val) {\n        // not really supported :/\n        return val;\n    }\n    createView(val) {\n        const query = this.select(val.query);\n        if (!query) {\n            return null;\n        }\n        const ref = this.tableRef(val.name);\n        if (!ref) {\n            return null;\n        }\n        return assignChanged(val, {\n            query,\n            name: ref,\n        });\n    }\n    createMaterializedView(val) {\n        const query = this.select(val.query);\n        if (!query) {\n            return null;\n        }\n        const ref = this.tableRef(val.name);\n        if (!ref) {\n            return null;\n        }\n        return assignChanged(val, {\n            query,\n            name: ref,\n        });\n    }\n    refreshMaterializedView(val) {\n        return val;\n    }\n    do(val) {\n        return val;\n    }\n    createFunction(val) {\n        // process arguments\n        const args = arrayNilMap(val.arguments, a => {\n            const type = this.dataType(a.type);\n            return assignChanged(a, { type });\n        });\n        // process return type\n        let returns;\n        if (val.returns) {\n            switch (val.returns.kind) {\n                case 'table':\n                    returns = assignChanged(val.returns, {\n                        columns: arrayNilMap(val.returns.columns, v => {\n                            const type = this.dataType(v.type);\n                            return type && assignChanged(v, { type });\n                        })\n                    });\n                    break;\n                case undefined:\n                case null:\n                case 'array':\n                    returns = this.dataType(val.returns);\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(val.returns);\n            }\n        }\n        return assignChanged(val, {\n            returns,\n            arguments: args,\n        });\n    }\n    dropFunction(val) {\n        const args = arrayNilMap(val.arguments, a => {\n            const type = this.dataType(a.type);\n            return assignChanged(a, { type });\n        });\n        return assignChanged(val, {\n            arguments: args,\n        });\n    }\n    show(val) {\n        return val;\n    }\n    createEnum(val) {\n        return val;\n    }\n    alterEnum(val) {\n        return val;\n    }\n    createCompositeType(val) {\n        const attributes = arrayNilMap(val.attributes, a => assignChanged(a, {\n            dataType: this.dataType(a.dataType),\n        }));\n        return assignChanged(val, { attributes });\n    }\n    drop(val) {\n        return val;\n    }\n    alterSequence(seq) {\n        if (seq.change.type === 'set options') {\n            if (seq.change.as) {\n                this.dataType(seq.change.as);\n            }\n        }\n        return seq;\n    }\n    begin(begin) {\n        return begin;\n    }\n    createSequence(seq) {\n        if (seq.options.as) {\n            this.dataType(seq.options.as);\n        }\n        return seq;\n    }\n    tablespace(val) {\n        return val;\n    }\n    setGlobal(val) {\n        return val;\n    }\n    setTimezone(val) {\n        return val;\n    }\n    setNames(val) {\n        return val;\n    }\n    update(val) {\n        if (!val) {\n            return val;\n        }\n        const table = this.tableRef(val.table);\n        if (!table) {\n            return null; // nothing to update\n        }\n        const from = val.from && this.from(val.from);\n        const where = val.where && this.expr(val.where);\n        const sets = arrayNilMap(val.sets, x => this.set(x));\n        if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {\n            return null; // nothing to update\n        }\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        return assignChanged(val, {\n            table,\n            where,\n            sets,\n            from,\n            returning,\n        });\n    }\n    insert(val) {\n        var _a, _b;\n        const into = this.tableRef(val.into);\n        if (!into) {\n            return null; // nowhere to insert into\n        }\n        const select = val.insert && this.select(val.insert);\n        if (!select) {\n            // nothing to insert\n            return null;\n        }\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        let on = (_a = val.onConflict) === null || _a === void 0 ? void 0 : _a.on;\n        switch (on === null || on === void 0 ? void 0 : on.type) {\n            case 'on constraint':\n                // nothing to do\n                break;\n            case 'on expr':\n                on = assignChanged(on, {\n                    exprs: arrayNilMap(on.exprs, e => this.expr(e)),\n                });\n                break;\n            case null:\n            case undefined:\n                break;\n            default:\n                throw utils_1.NotSupported.never(on);\n        }\n        let ocdo = (_b = val.onConflict) === null || _b === void 0 ? void 0 : _b.do;\n        if (ocdo && ocdo !== 'do nothing') {\n            const sets = arrayNilMap(ocdo.sets, x => this.set(x));\n            if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {\n                ocdo = 'do nothing';\n            }\n            else if (ocdo.sets !== sets) {\n                ocdo = { sets };\n            }\n        }\n        return assignChanged(val, {\n            into,\n            insert: select,\n            returning,\n            onConflict: !ocdo ? val.onConflict : assignChanged(val.onConflict, {\n                do: ocdo,\n                on,\n            }),\n        });\n    }\n    raise(val) {\n        return assignChanged(val, {\n            formatExprs: val.formatExprs && arrayNilMap(val.formatExprs, x => this.expr(x)),\n            using: val.using && arrayNilMap(val.using, u => {\n                return assignChanged(u, {\n                    value: this.expr(u.value),\n                });\n            }),\n        });\n    }\n    delete(val) {\n        const from = this.tableRef(val.from);\n        if (!from) {\n            return null; // nothing to delete\n        }\n        const where = val.where && this.expr(val.where);\n        const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));\n        return assignChanged(val, {\n            where,\n            returning,\n            from,\n        });\n    }\n    createSchema(val) {\n        return val;\n    }\n    createTable(val) {\n        const columns = arrayNilMap(val.columns, col => {\n            switch (col.kind) {\n                case 'column':\n                    return this.createColumn(col);\n                case 'like table':\n                    return this.likeTable(col);\n                default:\n                    throw utils_1.NotSupported.never(col);\n            }\n        });\n        if (!(columns === null || columns === void 0 ? void 0 : columns.length)) {\n            return null; // no column to create\n        }\n        return assignChanged(val, {\n            columns,\n        });\n    }\n    likeTable(col) {\n        const like = this.tableRef(col.like);\n        if (!like) {\n            return null;\n        }\n        return assignChanged(col, { like });\n    }\n    truncateTable(val) {\n        return val;\n    }\n    constraint(c) {\n        switch (c.type) {\n            case 'not null':\n            case 'null':\n            case 'primary key':\n            case 'unique':\n            case 'add generated':\n                return c;\n            case 'default': {\n                const def = this.expr(c.default);\n                if (!def) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    default: def,\n                });\n            }\n            case 'check': {\n                const def = this.expr(c.expr);\n                if (!def) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    expr: def,\n                });\n            }\n            case 'reference': {\n                const foreignTable = this.tableRef(c.foreignTable);\n                if (!foreignTable) {\n                    return null;\n                }\n                return assignChanged(c, {\n                    foreignTable,\n                });\n            }\n            default:\n                throw utils_1.NotSupported.never(c);\n        }\n    }\n    set(st) {\n        const value = this.expr(st.value);\n        if (!value) {\n            return null;\n        }\n        return assignChanged(st, {\n            value,\n        });\n    }\n    // =========================================\n    // ================ STUFF ==================\n    // =========================================\n    /** Called when a data type definition is encountered */\n    dataType(dataType) {\n        return dataType;\n    }\n    /** Called when an alias of a table is created */\n    tableRef(st) {\n        return st;\n    }\n    transaction(val) {\n        return val;\n    }\n    createExtension(val) {\n        return val;\n    }\n    createIndex(val) {\n        const expressions = arrayNilMap(val.expressions, e => {\n            const expression = this.expr(e.expression);\n            if (expression === e.expression) {\n                return e;\n            }\n            if (!expression) {\n                return null; // no more index expression\n            }\n            return {\n                ...e,\n                expression,\n            };\n        });\n        if (!(expressions === null || expressions === void 0 ? void 0 : expressions.length)) {\n            return null; // no columns to create index on\n        }\n        return assignChanged(val, {\n            expressions,\n        });\n    }\n    prepare(st) {\n        const statement = this.statement(st.statement);\n        if (!statement) {\n            return null;\n        }\n        return assignChanged(st, {\n            args: arrayNilMap(st.args, a => this.dataType(a)),\n            statement,\n        });\n    }\n    deallocate(st) {\n        return st;\n    }\n    // =========================================\n    // ============== ALTER INDEX ==============\n    // =========================================\n    alterIndex(st) {\n        // not much as of today...might improve this in the future\n        return st;\n    }\n    // =========================================\n    // ============== ALTER TABLE ==============\n    // =========================================\n    alterTable(st) {\n        var _a;\n        const table = this.tableRef(st.table);\n        if (!table) {\n            return null; // no table\n        }\n        let changes = [];\n        let hasChanged = false;\n        for (let i = 0; i < (((_a = st.changes) === null || _a === void 0 ? void 0 : _a.length) || 0); i++) {\n            const currentChange = st.changes[i];\n            const change = this.tableAlteration(currentChange, st.table);\n            hasChanged = hasChanged || (change != currentChange);\n            if (!!change) {\n                changes.push(change);\n            }\n        }\n        if (!changes.length) {\n            return null; // no change left\n        }\n        if (!hasChanged) {\n            return st;\n        }\n        return assignChanged(st, {\n            table,\n            changes,\n        });\n    }\n    tableAlteration(change, table) {\n        switch (change.type) {\n            case 'add column':\n                return this.addColumn(change, table);\n            case 'add constraint':\n                return this.addConstraint(change, table);\n            case 'alter column':\n                return this.alterColumn(change, table);\n            case 'rename':\n                return this.renameTable(change, table);\n            case 'rename column':\n                return this.renameColumn(change, table);\n            case 'rename constraint':\n                return this.renameConstraint(change, table);\n            case 'drop column':\n                return this.dropColumn(change, table);\n            case 'drop constraint':\n                return this.dropConstraint(change, table);\n            case 'owner':\n                return this.setTableOwner(change, table);\n            default:\n                throw utils_1.NotSupported.never(change);\n        }\n    }\n    dropColumn(change, table) {\n        return change;\n    }\n    dropConstraint(change, table) {\n        return change;\n    }\n    setTableOwner(change, table) {\n        return change;\n    }\n    renameConstraint(change, table) {\n        return change;\n    }\n    renameColumn(change, table) {\n        return change;\n    }\n    renameTable(change, table) {\n        return change;\n    }\n    alterColumn(change, inTable) {\n        let alter;\n        switch (change.alter.type) {\n            case 'set default':\n                alter = this.setColumnDefault(change.alter, inTable, change.column);\n                break;\n            case 'set type':\n                alter = this.setColumnType(change.alter, inTable, change.column);\n                break;\n            case 'drop default':\n            case 'set not null':\n            case 'drop not null':\n                alter = this.alterColumnSimple(change.alter, inTable, change.column);\n                break;\n            case 'add generated':\n                alter = this.alterColumnAddGenerated(change.alter, inTable, change.column);\n                break;\n            default:\n                throw utils_1.NotSupported.never(change.alter);\n        }\n        if (!alter) {\n            return null; // no more alter\n        }\n        return assignChanged(change, {\n            alter,\n        });\n    }\n    setColumnType(alter, inTable, inColumn) {\n        const dataType = this.dataType(alter.dataType);\n        return assignChanged(alter, {\n            dataType,\n        });\n    }\n    alterColumnAddGenerated(alter, inTable, inColumn) {\n        return alter;\n    }\n    alterColumnSimple(alter, inTable, inColumn) {\n        return alter;\n    }\n    setColumnDefault(alter, inTable, inColumn) {\n        const def = this.expr(alter.default);\n        if (!def) {\n            return null; // no more default to set\n        }\n        return assignChanged(alter, {\n            default: def,\n        });\n    }\n    addConstraint(change, inTable) {\n        return change;\n    }\n    addColumn(change, inTable) {\n        const column = this.createColumn(change.column);\n        if (!column) {\n            return null; // no more column to add\n        }\n        return assignChanged(change, {\n            column,\n        });\n    }\n    createColumn(col) {\n        var _a;\n        // to be overriden\n        const dataType = this.dataType(col.dataType);\n        if (!dataType) {\n            return null; // no data type => remove column\n        }\n        const constraints = (_a = arrayNilMap(col.constraints, m => this.constraint(m))) !== null && _a !== void 0 ? _a : undefined;\n        return assignChanged(col, {\n            dataType,\n            constraints,\n        });\n    }\n    // =========================================\n    // ============== SELECTIONS ==============\n    // =========================================\n    select(val) {\n        switch (val.type) {\n            case 'select':\n                return this.selection(val);\n            case 'union':\n            case 'union all':\n                return this.union(val);\n            case 'with':\n                return this.with(val);\n            case 'values':\n                return this.values(val);\n            case 'with recursive':\n                return this.withRecursive(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    selection(val) {\n        var _a, _b;\n        const from = arrayNilMap(val.from, c => this.from(c));\n        const columns = arrayNilMap(val.columns, c => this.selectionColumn(c));\n        const where = val.where && this.expr(val.where);\n        const groupBy = arrayNilMap(val.groupBy, c => this.expr(c));\n        const having = val.having && this.expr(val.having);\n        const orderBy = this.orderBy(val.orderBy);\n        const limit = assignChanged(val.limit, {\n            limit: this.expr((_a = val.limit) === null || _a === void 0 ? void 0 : _a.limit),\n            offset: this.expr((_b = val.limit) === null || _b === void 0 ? void 0 : _b.offset),\n        });\n        return assignChanged(val, {\n            from,\n            columns,\n            where,\n            groupBy,\n            having,\n            orderBy,\n            limit,\n        });\n    }\n    orderBy(orderBy) {\n        return arrayNilMap(orderBy, c => {\n            const by = this.expr(c.by);\n            if (!by) {\n                return null;\n            }\n            if (by === c.by) {\n                return c;\n            }\n            return {\n                ...c,\n                by,\n            };\n        });\n    }\n    union(val) {\n        const left = this.select(val.left);\n        const right = this.select(val.right);\n        if (!left || !right) {\n            return left !== null && left !== void 0 ? left : right;\n        }\n        return assignChanged(val, {\n            left,\n            right\n        });\n    }\n    with(val) {\n        const bind = arrayNilMap(val.bind, s => {\n            const statement = this.statement(s.statement);\n            return withAccepts(statement)\n                ? assignChanged(s, { statement })\n                : null;\n        });\n        // no bindngs\n        if (!bind) {\n            return null;\n        }\n        const _in = this.statement(val.in);\n        if (!withAccepts(_in)) {\n            return null;\n        }\n        return assignChanged(val, {\n            bind,\n            in: _in,\n        });\n    }\n    withRecursive(val) {\n        const statement = this.union(val.bind);\n        if (!statement) {\n            return null;\n        }\n        // 'with recursive' only accepts unions\n        if (statement.type !== 'union' && statement.type !== 'union all') {\n            return null;\n        }\n        const _in = this.statement(val.in);\n        if (!withAccepts(_in)) {\n            return null;\n        }\n        return assignChanged(val, {\n            bind: statement,\n            in: _in,\n        });\n    }\n    from(from) {\n        switch (from.type) {\n            case 'table':\n                return this.fromTable(from);\n            case 'statement':\n                return this.fromStatement(from);\n            case 'call':\n                return this.fromCall(from);\n            default:\n                throw utils_1.NotSupported.never(from);\n        }\n    }\n    fromCall(from) {\n        const call = this.call(from);\n        if (!call || call.type !== 'call') {\n            return null;\n        }\n        return assignChanged(from, call);\n    }\n    fromStatement(from) {\n        const statement = this.select(from.statement);\n        if (!statement) {\n            return null; // nothing to select from\n        }\n        const join = from.join && this.join(from.join);\n        return assignChanged(from, {\n            statement,\n            join,\n        });\n    }\n    values(from) {\n        const values = arrayNilMap(from.values, x => arrayNilMap(x, y => this.expr(y)));\n        if (!(values === null || values === void 0 ? void 0 : values.length)) {\n            return null; // nothing to select from\n        }\n        return assignChanged(from, {\n            values,\n        });\n    }\n    join(join) {\n        const on = join.on && this.expr(join.on);\n        if (!on && !join.using) {\n            return join;\n        }\n        return assignChanged(join, {\n            on,\n        });\n    }\n    fromTable(from) {\n        const nfrom = this.tableRef(from.name);\n        if (!nfrom) {\n            return null; // nothing to select from\n        }\n        const join = from.join && this.join(from.join);\n        return assignChanged(from, {\n            name: nfrom,\n            join,\n        });\n    }\n    selectionColumn(val) {\n        const expr = this.expr(val.expr);\n        if (!expr) {\n            return null; // not selected anymore\n        }\n        return assignChanged(val, {\n            expr,\n        });\n    }\n    // =========================================\n    // ============== EXPRESSIONS ==============\n    // =========================================\n    expr(val) {\n        if (!val) {\n            return val;\n        }\n        switch (val.type) {\n            case 'binary':\n                return this.binary(val);\n            case 'unary':\n                return this.unary(val);\n            case 'ref':\n                return this.ref(val);\n            case 'string':\n            case 'numeric':\n            case 'integer':\n            case 'boolean':\n            case 'constant':\n            case 'null':\n                return this.constant(val);\n            case 'list':\n            case 'array':\n                return this.array(val);\n            case 'array select':\n                return this.arraySelect(val);\n            case 'call':\n                return this.call(val);\n            case 'cast':\n                return this.cast(val);\n            case 'case':\n                return this.case(val);\n            case 'member':\n                return this.member(val);\n            case 'arrayIndex':\n                return this.arrayIndex(val);\n            case 'ternary':\n                return this.ternary(val);\n            case 'select':\n            case 'union':\n            case 'union all':\n            case 'with':\n            case 'with recursive':\n                return this.select(val);\n            case 'keyword':\n                return this.valueKeyword(val);\n            case 'parameter':\n                return this.parameter(val);\n            case 'extract':\n                return this.extract(val);\n            case 'overlay':\n                return this.callOverlay(val);\n            case 'substring':\n                return this.callSubstring(val);\n            case 'values':\n                return this.values(val);\n            case 'default':\n                return this.default(val);\n            default:\n                throw utils_1.NotSupported.never(val);\n        }\n    }\n    arraySelect(val) {\n        const select = this.select(val.select);\n        if (!select) {\n            return null;\n        }\n        return assignChanged(val, { select });\n    }\n    extract(st) {\n        const from = this.expr(st.from);\n        if (!from) {\n            return null;\n        }\n        return assignChanged(st, { from });\n    }\n    valueKeyword(val) {\n        return val;\n    }\n    ternary(val) {\n        const value = this.expr(val.value);\n        const lo = this.expr(val.lo);\n        const hi = this.expr(val.hi);\n        if (!value || !lo || !hi) {\n            return null; // missing a branch\n        }\n        return assignChanged(val, {\n            value,\n            lo,\n            hi,\n        });\n    }\n    parameter(st) {\n        return st;\n    }\n    arrayIndex(val) {\n        const array = this.expr(val.array);\n        const index = this.expr(val.index);\n        if (!array || !index) {\n            return null;\n        }\n        return assignChanged(val, {\n            array,\n            index,\n        });\n    }\n    member(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    case(val) {\n        const value = val.value && this.expr(val.value);\n        const whens = arrayNilMap(val.whens, w => {\n            const when = this.expr(w.when);\n            const value = this.expr(w.value);\n            if (!when || !value) {\n                return null;\n            }\n            return assignChanged(w, {\n                value,\n                when,\n            });\n        });\n        if (!(whens === null || whens === void 0 ? void 0 : whens.length)) {\n            return null; // no case\n        }\n        const els = val.else && this.expr(val.else);\n        return assignChanged(val, {\n            value,\n            whens,\n            else: els,\n        });\n    }\n    cast(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    call(val) {\n        var _a;\n        const args = arrayNilMap(val.args, a => this.expr(a));\n        if (!args) {\n            return null;\n        }\n        const orderBy = this.orderBy(val.orderBy);\n        const filter = this.expr(val.filter);\n        const withinGroupList = val.withinGroup ? [val.withinGroup] : undefined;\n        const withinGroup = (_a = this.orderBy(withinGroupList)) === null || _a === void 0 ? void 0 : _a[0];\n        return assignChanged(val, {\n            args,\n            orderBy,\n            filter,\n            withinGroup,\n        });\n    }\n    callSubstring(val) {\n        return assignChanged(val, {\n            value: this.expr(val.value),\n            from: this.expr(val.from),\n            for: this.expr(val.for),\n        });\n    }\n    callOverlay(val) {\n        return assignChanged(val, {\n            value: this.expr(val.value),\n            placing: this.expr(val.placing),\n            from: this.expr(val.from),\n            for: this.expr(val.for),\n        });\n    }\n    array(val) {\n        const expressions = arrayNilMap(val.expressions, a => this.expr(a));\n        if (!expressions) {\n            return null;\n        }\n        return assignChanged(val, {\n            expressions,\n        });\n    }\n    constant(value) {\n        return value;\n    }\n    default(value) {\n        return value;\n    }\n    /** Called when a reference is used */\n    ref(val) {\n        return val;\n    }\n    unary(val) {\n        const operand = this.expr(val.operand);\n        if (!operand) {\n            return null;\n        }\n        return assignChanged(val, {\n            operand,\n        });\n    }\n    binary(val) {\n        const left = this.expr(val.left);\n        const right = this.expr(val.right);\n        if (!left || !right) {\n            return null;\n        }\n        return assignChanged(val, {\n            left,\n            right,\n        });\n    }\n}\nexports.AstDefaultMapper = AstDefaultMapper;\n// ====== auto implement the replace mechanism\nconst proto = AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(proto, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                var _a;\n                if (this.skipNext) {\n                    this.skipNext = false;\n                    return orig.apply(this, args);\n                }\n                const impl = (_a = this.wrapped) === null || _a === void 0 ? void 0 : _a[k];\n                if (!impl) {\n                    return orig.apply(this, args);\n                }\n                return impl.apply(this.wrapped, args);\n            };\n        }\n    });\n}\n// ====== auto implement the skip mechanism\nclass SkipModifier extends AstDefaultMapper {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n}\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(SkipModifier.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                this.parent.skipNext = true;\n                return orig.apply(this.parent, args);\n            };\n        }\n    });\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sqlKeywords = void 0;\n// https://www.postgresql.org/docs/current/sql-keywords-appendix.html\n// $('table.table').children('tbody').children().toArray().filter(x => { const txt = $($(x).children()[1]).text(); return txt.includes('reserved') && !txt.includes('non-reserved')}).map(x => $($(x).children()[0]).text())\nexports.sqlKeywords = [\n    \"ALL\", \"ANALYSE\", \"ANALYZE\", \"AND\", \"ANY\", \"ARRAY\", \"AS\", \"ASC\", \"ASYMMETRIC\", \"AUTHORIZATION\", \"BINARY\", \"BOTH\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLLATION\", \"CONCURRENTLY\", \"CONSTRAINT\", \"CREATE\", \"CROSS\", \"CURRENT_CATALOG\", \"CURRENT_DATE\", \"CURRENT_ROLE\", \"CURRENT_SCHEMA\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"CURRENT_USER\", \"DEFAULT\", \"DEFERRABLE\", \"DESC\", \"DISTINCT\", \"DO\", \"ELSE\", \"END\", \"EXCEPT\", \"FALSE\", \"FETCH\", \"FOR\", \"FOREIGN\", \"FREEZE\", \"FROM\", \"FULL\", \"GRANT\", \"GROUP\", \"HAVING\", \"ILIKE\", \"IN\", \"INITIALLY\", \"INNER\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"LATERAL\", \"LEADING\", \"LEFT\", \"LIKE\", \"LIMIT\", \"LOCALTIME\", \"LOCALTIMESTAMP\", \"NATURAL\", \"NOT\", \"NOTNULL\", \"NULL\", \"OFFSET\", \"ON\", \"ONLY\", \"OR\", \"ORDER\", \"OUTER\", \"OVERLAPS\", \"PLACING\", \"PRIMARY\", \"REFERENCES\", \"RETURNING\", \"RIGHT\", \"SELECT\", \"SESSION_USER\", \"SIMILAR\", \"SOME\", \"SYMMETRIC\", \"TABLE\", \"TABLESAMPLE\", \"THEN\", \"TO\", \"TRAILING\", \"TRUE\", \"UNION\", \"UNIQUE\", \"USER\", \"USING\", \"VARIADIC\", \"VERBOSE\", \"WHEN\", \"WHERE\", \"WINDOW\", \"WITH\"\n    // added manually\n    ,\n    \"PRECISION\"\n];\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intervalToString = exports.normalizeInterval = exports.buildInterval = void 0;\nconst types = [\n    ['years', 12],\n    ['months', 30],\n    ['days', 24],\n    ['hours', 60],\n    ['minutes', 60],\n    ['seconds', 1000],\n    ['milliseconds', 0],\n];\nfunction* unwrap(k) {\n    if (typeof k[1] === 'number') {\n        yield k;\n    }\n    else {\n        for (const v of k) {\n            yield* unwrap(v);\n        }\n    }\n}\nfunction buildInterval(orig, vals) {\n    var _a;\n    const ret = {};\n    if (vals === 'invalid') {\n        throw new Error(`invalid input syntax for type interval: \"${orig}\"`);\n    }\n    for (const [k, v] of unwrap(vals)) {\n        ret[k] = ((_a = ret[k]) !== null && _a !== void 0 ? _a : 0) + v;\n    }\n    return ret;\n}\nexports.buildInterval = buildInterval;\n/** Returns a normalized copy of the given interval */\nfunction normalizeInterval(value) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const ret = { ...value };\n    // trim non-integers\n    for (let i = 0; i < types.length; i++) {\n        const [k, mul] = types[i];\n        const v = (_a = ret[k]) !== null && _a !== void 0 ? _a : 0;\n        const int = v >= 0\n            ? Math.floor(v)\n            : Math.ceil(v);\n        if (!v || int === v) {\n            continue;\n        }\n        const nk = (_b = types[i + 1]) === null || _b === void 0 ? void 0 : _b[0];\n        if (nk) {\n            ret[nk] = ((_c = ret[nk]) !== null && _c !== void 0 ? _c : 0) + mul * (v - int);\n        }\n        ret[k] = int;\n    }\n    if (ret.months || ret.years) {\n        const m = ((_d = ret.months) !== null && _d !== void 0 ? _d : 0) + ((_e = ret.years) !== null && _e !== void 0 ? _e : 0) * 12;\n        ret.months = m % 12;\n        ret.years = (m - ret.months) / 12;\n    }\n    // normalize time\n    let t = ((_f = ret.hours) !== null && _f !== void 0 ? _f : 0) * 3600\n        + ((_g = ret.minutes) !== null && _g !== void 0 ? _g : 0) * 60\n        + ((_h = ret.seconds) !== null && _h !== void 0 ? _h : 0)\n        + ((_j = ret.milliseconds) !== null && _j !== void 0 ? _j : 0) / 1000;\n    let sign = 1;\n    if (t < 0) {\n        sign = -1;\n        t = -t;\n    }\n    if (t >= 3600) {\n        ret.hours = sign * Math.floor(t / 3600);\n        t -= sign * ret.hours * 3600;\n    }\n    else {\n        delete ret.hours;\n    }\n    if (t >= 60) {\n        ret.minutes = sign * Math.floor(t / 60);\n        t -= sign * ret.minutes * 60;\n    }\n    else {\n        delete ret.minutes;\n    }\n    if (t > 0) {\n        ret.seconds = sign * Math.floor(t);\n        t -= sign * ret.seconds;\n    }\n    else {\n        delete ret.seconds;\n    }\n    if (t > 0) {\n        ret.milliseconds = sign * Math.round(t * 1000);\n    }\n    else {\n        delete ret.milliseconds;\n    }\n    // trim zeros.\n    for (const [k] of types) {\n        if (!ret[k]) {\n            delete ret[k];\n        }\n    }\n    return ret;\n}\nexports.normalizeInterval = normalizeInterval;\n/** Interval value to postgres string representation  */\nfunction intervalToString(value) {\n    var _a, _b, _c;\n    value = normalizeInterval(value);\n    const ret = [];\n    if (value.years) {\n        ret.push(value.years === 1 ? '1 year' : value.years + ' years');\n    }\n    if (value.months) {\n        ret.push(value.months === 1 ? '1 month' : value.months + ' months');\n    }\n    if (value.days) {\n        ret.push(value.days === 1 ? '1 day' : value.days + ' days');\n    }\n    if (value.hours || value.minutes || value.seconds || value.milliseconds) {\n        let time = `${num((_a = value.hours) !== null && _a !== void 0 ? _a : 0)}:${num((_b = value.minutes) !== null && _b !== void 0 ? _b : 0)}:${num((_c = value.seconds) !== null && _c !== void 0 ? _c : 0)}`;\n        if (value.milliseconds) {\n            time = time + (value.milliseconds / 1000).toString().substr(1);\n        }\n        if (neg(value.hours) || neg(value.minutes) || neg(value.seconds) || neg(value.milliseconds)) {\n            time = '-' + time;\n        }\n        ret.push(time);\n    }\n    return ret.join(' ');\n}\nexports.intervalToString = intervalToString;\nfunction num(v) {\n    v = Math.abs(v);\n    return v < 10 ? '0' + v : v.toString();\n}\nfunction neg(v) {\n    return v && v < 0;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.astVisitor = void 0;\nconst ast_mapper_1 = __webpack_require__(2);\nclass Visitor {\n    super() {\n        return new SkipVisitor(this);\n    }\n}\n// =============== auto implement the mapper\nconst mapperProto = ast_mapper_1.AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(mapperProto)) {\n    const orig = mapperProto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(Visitor.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                const impl = this.visitor[k];\n                if (!impl) {\n                    // just ignore & forward call to mapper\n                    return orig.apply(this, args);\n                }\n                // return first argument\n                // ...which means \"I dont wana change anything\"\n                //    in the ast-modifier language.\n                impl.apply(this.visitor, args);\n                return args[0];\n            };\n        }\n    });\n}\n// ====== auto implement the skip mechanism\nclass SkipVisitor {\n    constructor(parent) {\n        this.parent = parent;\n    }\n}\nfor (const k of Object.getOwnPropertyNames(mapperProto)) {\n    const orig = mapperProto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    Object.defineProperty(SkipVisitor.prototype, k, {\n        configurable: false,\n        get() {\n            return function (...args) {\n                return orig.apply(this.parent, args);\n            };\n        }\n    });\n}\n/**\n * Builds an AST visitor based on the default implementation, merged with the one you provide.\n *\n * Example of visitor which counts references to a column 'foo':\n *\n * ```ts\n * let cnt = 0;\n * const visitor = astVisitor(v => ({\n *      ref: r => {\n *          if (r.name === 'foo') {\n *              cnt++;\n *          }\n *          v.super().ref(r);\n *      }\n *  }));\n *\n * visitor.statement(myStatementToCount);\n * console.log(`${cnt} references to foo !`);\n * ```\n */\nfunction astVisitor(visitorBuilder) {\n    return (0, ast_mapper_1.astMapper)(m => {\n        const ret = new Visitor();\n        ret.mapper = m;\n        ret.visitor = visitorBuilder(ret);\n        return ret;\n    });\n}\nexports.astVisitor = astVisitor;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimNullish = exports.NotSupported = void 0;\nclass NotSupported extends Error {\n    constructor(what) {\n        super('Not supported' + (what ? ': ' + what : ''));\n    }\n    static never(value, msg) {\n        return new NotSupported(`${msg !== null && msg !== void 0 ? msg : ''} ${JSON.stringify(value)}`);\n    }\n}\nexports.NotSupported = NotSupported;\nfunction trimNullish(value, depth = 5) {\n    if (depth < 0)\n        return value;\n    if (value instanceof Array) {\n        value.forEach(x => trimNullish(x, depth - 1));\n    }\n    if (typeof value !== 'object' || value instanceof Date)\n        return value;\n    if (!value) {\n        return value;\n    }\n    for (const k of Object.keys(value)) {\n        const val = value[k];\n        if (val === undefined || val === null)\n            delete value[k];\n        else\n            trimNullish(val, depth - 1);\n    }\n    return value;\n}\nexports.trimNullish = trimNullish;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeInterval = exports.intervalToString = exports.toSql = exports.astMapper = exports.assignChanged = exports.arrayNilMap = exports.astVisitor = exports.parseWithComments = exports.parseIntervalLiteral = exports.parseGeometricLiteral = exports.parseArrayLiteral = exports.parseFirst = exports.parse = void 0;\nvar parser_1 = __webpack_require__(8);\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parser_1.parse; } });\nObject.defineProperty(exports, \"parseFirst\", { enumerable: true, get: function () { return parser_1.parseFirst; } });\nObject.defineProperty(exports, \"parseArrayLiteral\", { enumerable: true, get: function () { return parser_1.parseArrayLiteral; } });\nObject.defineProperty(exports, \"parseGeometricLiteral\", { enumerable: true, get: function () { return parser_1.parseGeometricLiteral; } });\nObject.defineProperty(exports, \"parseIntervalLiteral\", { enumerable: true, get: function () { return parser_1.parseIntervalLiteral; } });\nObject.defineProperty(exports, \"parseWithComments\", { enumerable: true, get: function () { return parser_1.parseWithComments; } });\nvar ast_visitor_1 = __webpack_require__(5);\nObject.defineProperty(exports, \"astVisitor\", { enumerable: true, get: function () { return ast_visitor_1.astVisitor; } });\nvar ast_mapper_1 = __webpack_require__(2);\nObject.defineProperty(exports, \"arrayNilMap\", { enumerable: true, get: function () { return ast_mapper_1.arrayNilMap; } });\nObject.defineProperty(exports, \"assignChanged\", { enumerable: true, get: function () { return ast_mapper_1.assignChanged; } });\nObject.defineProperty(exports, \"astMapper\", { enumerable: true, get: function () { return ast_mapper_1.astMapper; } });\nvar to_sql_1 = __webpack_require__(19);\nObject.defineProperty(exports, \"toSql\", { enumerable: true, get: function () { return to_sql_1.toSql; } });\n__exportStar(__webpack_require__(21), exports);\nvar interval_builder_1 = __webpack_require__(4);\nObject.defineProperty(exports, \"intervalToString\", { enumerable: true, get: function () { return interval_builder_1.intervalToString; } });\nObject.defineProperty(exports, \"normalizeInterval\", { enumerable: true, get: function () { return interval_builder_1.normalizeInterval; } });\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGeometricLiteral = exports.parseIntervalLiteral = exports.parseArrayLiteral = exports.parse = exports.parseWithComments = exports.parseFirst = void 0;\nconst nearley_1 = __webpack_require__(9);\nconst main_ne_1 = __importDefault(__webpack_require__(10));\nconst array_ne_1 = __importDefault(__webpack_require__(11));\nconst geometric_ne_1 = __importDefault(__webpack_require__(13));\nconst interval_ne_1 = __importDefault(__webpack_require__(15));\nconst interval_iso_ne_1 = __importDefault(__webpack_require__(17));\nconst interval_builder_1 = __webpack_require__(4);\nconst lexer_1 = __webpack_require__(1);\nlet sqlCompiled;\nlet arrayCompiled;\nlet geometricCompiled;\nlet intervalTextCompiled;\nlet intervalIsoCompiled;\n/** Parse the first SQL statement in the given text (discards the rest), and return its AST */\nfunction parseFirst(sql) {\n    const first = parse(sql);\n    return first[0];\n}\nexports.parseFirst = parseFirst;\n/** Parse an AST from SQL, and get the comments */\nfunction parseWithComments(sql, options) {\n    return (0, lexer_1.trackingComments)(() => parse(sql, options));\n}\nexports.parseWithComments = parseWithComments;\nfunction parse(sql, optEntry) {\n    if (!sqlCompiled) {\n        sqlCompiled = nearley_1.Grammar.fromCompiled(main_ne_1.default);\n    }\n    const entry = typeof optEntry === 'string'\n        ? optEntry\n        : optEntry === null || optEntry === void 0 ? void 0 : optEntry.entry;\n    const opts = typeof optEntry === 'string' ? null : optEntry;\n    // parse sql\n    const doParse = () => _parse(sql, sqlCompiled, entry);\n    let parsed = (opts === null || opts === void 0 ? void 0 : opts.locationTracking)\n        ? (0, lexer_1.tracking)(doParse)\n        : doParse();\n    // always return an array of statements.\n    if (typeof optEntry !== 'string' && !Array.isArray(parsed)) {\n        parsed = [parsed];\n    }\n    return parsed;\n}\nexports.parse = parse;\nfunction parseArrayLiteral(sql) {\n    if (!arrayCompiled) {\n        arrayCompiled = nearley_1.Grammar.fromCompiled(array_ne_1.default);\n    }\n    return _parse(sql, arrayCompiled);\n}\nexports.parseArrayLiteral = parseArrayLiteral;\nfunction parseIntervalLiteral(literal) {\n    if (literal.startsWith('P')) {\n        if (!intervalIsoCompiled) {\n            intervalIsoCompiled = nearley_1.Grammar.fromCompiled(interval_iso_ne_1.default);\n        }\n        return (0, interval_builder_1.buildInterval)(literal, _parse(literal, intervalIsoCompiled));\n    }\n    else {\n        if (!intervalTextCompiled) {\n            intervalTextCompiled = nearley_1.Grammar.fromCompiled(interval_ne_1.default);\n        }\n        const low = literal.toLowerCase(); // full text syntax is case insensitive\n        return (0, interval_builder_1.buildInterval)(literal, _parse(low, intervalTextCompiled));\n    }\n}\nexports.parseIntervalLiteral = parseIntervalLiteral;\nfunction parseGeometricLiteral(sql, type) {\n    if (!geometricCompiled) {\n        geometricCompiled = nearley_1.Grammar.fromCompiled(geometric_ne_1.default);\n    }\n    return _parse(sql, geometricCompiled, type);\n}\nexports.parseGeometricLiteral = parseGeometricLiteral;\nfunction _parse(sql, grammar, entry) {\n    try {\n        grammar.start = entry !== null && entry !== void 0 ? entry : 'main';\n        const parser = new nearley_1.Parser(grammar);\n        parser.feed(sql);\n        const asts = parser.finish();\n        if (!asts.length) {\n            throw new Error('Unexpected end of input');\n        }\n        else if (asts.length !== 1) {\n            throw new Error(`💀 Ambiguous SQL syntax: Please file an issue stating the request that has failed at https://github.com/oguimbal/pgsql-ast-parser:\n\n        ${sql}\n\n        `);\n        }\n        return asts[0];\n    }\n    catch (e) {\n        if (typeof (e === null || e === void 0 ? void 0 : e.message) !== 'string') {\n            throw e;\n        }\n        let msg = e.message;\n        // remove all the stack crap of nearley parser\n        let begin = null;\n        const parts = [];\n        const reg = /A (.+) token based on:/g;\n        let m;\n        while (m = reg.exec(msg)) {\n            begin = begin !== null && begin !== void 0 ? begin : msg.substr(0, m.index);\n            parts.push(`    - A \"${m[1]}\" token`);\n        }\n        if (begin) {\n            msg = begin + parts.join('\\n') + '\\n\\n';\n        }\n        e.message = msg;\n        throw e;\n    }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"nearley\");\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst lexer_1 = __webpack_require__(1);\nconst lexer_2 = __webpack_require__(1);\n// usage ex:  replace track(whatever) with debug(track)(whatever)\nfunction debug(fn) {\n    fn = fn || ((x) => x);\n    return ((x, ...args) => {\n        debugger;\n        return fn(x, ...args);\n    });\n}\nfunction asName(val) {\n    return asNameWithColumns(val, undefined);\n}\nfunction asNameWithColumns(val, columns) {\n    const name = toStr(val);\n    if (!columns || columns.length === 0) {\n        return (0, lexer_2.track)(val, { name });\n    }\n    return (0, lexer_2.track)(val, {\n        name,\n        columns: columns.map(c => ({ name: toStr(c) })),\n    });\n}\nfunction asLit(val) {\n    const value = toStr(val);\n    return (0, lexer_2.track)(val, { value });\n}\nfunction unwrap(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrap(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return (0, lexer_2.unbox)(e);\n}\nconst get = (i) => (x) => (0, lexer_2.track)(x, x[i]);\nconst last = (x) => Array.isArray(x) ? (0, lexer_2.track)(x[x.length - 1], x[x.length - 1]) : x;\nconst trim = (x) => x && x.trim();\nconst value = (x) => x && x.value;\nfunction flatten(e) {\n    if (Array.isArray(e)) {\n        const ret = [];\n        for (const i of e) {\n            ret.push(...flatten(i));\n        }\n        return ret;\n    }\n    if (!e) {\n        return [];\n    }\n    return [e];\n}\nfunction asStr(value) {\n    var _a;\n    value = (0, lexer_2.unbox)(value);\n    return (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;\n}\nfunction flattenStr(e) {\n    const fl = flatten((0, lexer_2.unbox)(e));\n    return fl.filter(x => !!x)\n        .map(x => asStr(x))\n        .filter(x => typeof x === 'string')\n        .map(x => x.trim())\n        .filter(x => !!x);\n}\nfunction toStr(e, join) {\n    return flattenStr(e).join(join || '');\n}\nfunction fromEntries(vals) {\n    const ret = {};\n    for (const [k, v] of vals) {\n        ret[k] = v;\n    }\n    return ret;\n}\nconst kwSensitivity = { sensitivity: 'accent' };\nconst eqInsensitive = (a, b) => a.localeCompare(b, undefined, kwSensitivity) === 0;\nconst notReservedKw = (kw) => (x, _, rej) => {\n    const val = asStr(x[0]);\n    if (eqInsensitive(val, kw)) {\n        return (0, lexer_2.box)(x, kw);\n    }\n    return rej;\n};\nconst kw = notReservedKw;\nconst anyKw = (...kw) => {\n    const kwSet = new Set(kw);\n    return (x, _, rej) => {\n        const val = typeof x[0] === 'string' ? x[0] : x[0].value;\n        return kwSet.has(val) ? val : rej;\n    };\n};\nfunction setSeqOpts(ret, opts) {\n    const defs = new Set();\n    const unboxed = opts.map(lexer_2.unbox);\n    for (const [k, v] of unboxed) {\n        if (defs.has(k)) {\n            throw new Error('conflicting or redundant options');\n        }\n        defs.add(k);\n        ret[k] = (0, lexer_2.unbox)(v);\n    }\n}\n;\n;\n;\n;\nconst grammar = {\n    Lexer: lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"lparen\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"rparen\", \"symbols\": [(lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"float\"] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"number\", \"symbols\": [\"number$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"dot\", \"symbols\": [(lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot)], \"postprocess\": id },\n        { \"name\": \"float\", \"symbols\": [(lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)], \"postprocess\": x => (0, lexer_2.box)(x, parseFloat(unwrap(x))) },\n        { \"name\": \"int\", \"symbols\": [(lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": x => (0, lexer_2.box)(x, parseInt(unwrap(x), 10)) },\n        { \"name\": \"comma\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma)], \"postprocess\": id },\n        { \"name\": \"star\", \"symbols\": [(lexer_1.lexerAny.has(\"star\") ? { type: \"star\" } : star)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value) },\n        { \"name\": \"string$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"string\") ? { type: \"string\" } : string)] },\n        { \"name\": \"string$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"eString\") ? { type: \"eString\" } : eString)] },\n        { \"name\": \"string\", \"symbols\": [\"string$subexpression$1\"], \"postprocess\": x => (0, lexer_2.box)(x, unwrap(x[0]).value) },\n        { \"name\": \"ident\", \"symbols\": [\"word\"], \"postprocess\": get(0) },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary)], \"postprocess\": x => (0, lexer_2.box)(x, 'primary') },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": x => (0, lexer_2.box)(x, 'unique') },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"quoted_word\") ? { type: \"quoted_word\" } : quoted_word)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value, true) },\n        { \"name\": \"word\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": x => (0, lexer_2.box)(x, x[0].value) },\n        { \"name\": \"collist_paren\", \"symbols\": [\"lparen\", \"collist\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"collist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"collist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"collist$ebnf$1\", \"symbols\": [\"collist$ebnf$1\", \"collist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"collist\", \"symbols\": [\"ident\", \"collist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"kw_between\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('between') },\n        { \"name\": \"kw_conflict\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('conflict') },\n        { \"name\": \"kw_nothing\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nothing') },\n        { \"name\": \"kw_begin\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('begin') },\n        { \"name\": \"kw_if\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('if') },\n        { \"name\": \"kw_exists\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('exists') },\n        { \"name\": \"kw_key\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('key') },\n        { \"name\": \"kw_index\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('index') },\n        { \"name\": \"kw_extension\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('extension') },\n        { \"name\": \"kw_schema\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('schema') },\n        { \"name\": \"kw_nulls\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nulls') },\n        { \"name\": \"kw_first\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('first') },\n        { \"name\": \"kw_last\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('last') },\n        { \"name\": \"kw_start\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('start') },\n        { \"name\": \"kw_restart\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('restart') },\n        { \"name\": \"kw_filter\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('filter') },\n        { \"name\": \"kw_commit\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('commit') },\n        { \"name\": \"kw_tablespace\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('tablespace') },\n        { \"name\": \"kw_transaction\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('transaction') },\n        { \"name\": \"kw_work\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('work') },\n        { \"name\": \"kw_read\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('read') },\n        { \"name\": \"kw_write\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('write') },\n        { \"name\": \"kw_isolation\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('isolation') },\n        { \"name\": \"kw_level\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('level') },\n        { \"name\": \"kw_serializable\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('serializable') },\n        { \"name\": \"kw_rollback\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rollback') },\n        { \"name\": \"kw_insert\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('insert') },\n        { \"name\": \"kw_value\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('value') },\n        { \"name\": \"kw_values\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('values') },\n        { \"name\": \"kw_update\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('update') },\n        { \"name\": \"kw_column\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('column') },\n        { \"name\": \"kw_set\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('set') },\n        { \"name\": \"kw_version\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('version') },\n        { \"name\": \"kw_alter\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('alter') },\n        { \"name\": \"kw_rename\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rename') },\n        { \"name\": \"kw_sequence\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('sequence') },\n        { \"name\": \"kw_temp\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('temp') },\n        { \"name\": \"kw_temporary\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('temporary') },\n        { \"name\": \"kw_add\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('add') },\n        { \"name\": \"kw_owner\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('owner') },\n        { \"name\": \"kw_owned\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('owned') },\n        { \"name\": \"kw_including\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('including') },\n        { \"name\": \"kw_excluding\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('excluding') },\n        { \"name\": \"kw_none\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('none') },\n        { \"name\": \"kw_drop\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('drop') },\n        { \"name\": \"kw_operator\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('operator') },\n        { \"name\": \"kw_minvalue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('minvalue') },\n        { \"name\": \"kw_maxvalue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('maxvalue') },\n        { \"name\": \"kw_data\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('data') },\n        { \"name\": \"kw_type\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('type') },\n        { \"name\": \"kw_trigger\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('trigger') },\n        { \"name\": \"kw_delete\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('delete') },\n        { \"name\": \"kw_cache\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cache') },\n        { \"name\": \"kw_cascade\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cascade') },\n        { \"name\": \"kw_no\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('no') },\n        { \"name\": \"kw_timestamp\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('timestamp') },\n        { \"name\": \"kw_cycle\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cycle') },\n        { \"name\": \"kw_function\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('function') },\n        { \"name\": \"kw_returns\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('returns') },\n        { \"name\": \"kw_language\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('language') },\n        { \"name\": \"kw_out\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('out') },\n        { \"name\": \"kw_inout\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('inout') },\n        { \"name\": \"kw_variadic\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('variadic') },\n        { \"name\": \"kw_action\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('action') },\n        { \"name\": \"kw_restrict\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('restrict') },\n        { \"name\": \"kw_truncate\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('truncate') },\n        { \"name\": \"kw_increment\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('increment') },\n        { \"name\": \"kw_by\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('by') },\n        { \"name\": \"kw_row\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('row') },\n        { \"name\": \"kw_rows\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('rows') },\n        { \"name\": \"kw_next\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('next') },\n        { \"name\": \"kw_match\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('match') },\n        { \"name\": \"kw_replace\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('replace') },\n        { \"name\": \"kw_recursive\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('recursive') },\n        { \"name\": \"kw_view\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('view') },\n        { \"name\": \"kw_cascaded\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('cascaded') },\n        { \"name\": \"kw_unlogged\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('unlogged') },\n        { \"name\": \"kw_global\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('global') },\n        { \"name\": \"kw_option\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('option') },\n        { \"name\": \"kw_materialized\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('materialized') },\n        { \"name\": \"kw_partial\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('partial') },\n        { \"name\": \"kw_partition\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('partition') },\n        { \"name\": \"kw_simple\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('simple') },\n        { \"name\": \"kw_generated\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('generated') },\n        { \"name\": \"kw_always\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('always') },\n        { \"name\": \"kw_identity\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('identity') },\n        { \"name\": \"kw_name\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('name') },\n        { \"name\": \"kw_enum\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('enum') },\n        { \"name\": \"kw_show\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('show') },\n        { \"name\": \"kw_ordinality\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('ordinality') },\n        { \"name\": \"kw_overriding\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('overriding') },\n        { \"name\": \"kw_over\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('over') },\n        { \"name\": \"kw_system\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('system') },\n        { \"name\": \"kw_comment\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('comment') },\n        { \"name\": \"kw_time\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('time') },\n        { \"name\": \"kw_names\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('names') },\n        { \"name\": \"kw_at\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('at') },\n        { \"name\": \"kw_zone\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('zone') },\n        { \"name\": \"kw_interval\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('interval') },\n        { \"name\": \"kw_hour\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('hour') },\n        { \"name\": \"kw_minute\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('minute') },\n        { \"name\": \"kw_local\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('local') },\n        { \"name\": \"kw_session\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('session') },\n        { \"name\": \"kw_prepare\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('prepare') },\n        { \"name\": \"kw_deallocate\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('deallocate') },\n        { \"name\": \"kw_raise\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('raise') },\n        { \"name\": \"kw_continue\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('continue') },\n        { \"name\": \"kw_share\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('share') },\n        { \"name\": \"kw_refresh\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('refresh') },\n        { \"name\": \"kw_nowait\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('nowait') },\n        { \"name\": \"kw_skip\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('skip') },\n        { \"name\": \"kw_locked\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('locked') },\n        { \"name\": \"kw_within\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": notReservedKw('within') },\n        { \"name\": \"kw_ifnotexists\", \"symbols\": [\"kw_if\", (lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not), \"kw_exists\"] },\n        { \"name\": \"kw_ifexists\", \"symbols\": [\"kw_if\", \"kw_exists\"] },\n        { \"name\": \"kw_withordinality\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"kw_ordinality\"] },\n        { \"name\": \"kw_not_null\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"kw_primary_key\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary), \"kw_key\"] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$2\", \"symbols\": [\"int\"] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"data_type$ebnf$1$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\", \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type$ebnf$1$subexpression$1$macrocall$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1$macrocall$2\", \"data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"data_type$ebnf$1$subexpression$1\", \"symbols\": [\"lparen\", \"data_type$ebnf$1$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"data_type$ebnf$1\", \"symbols\": [\"data_type$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"data_type$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"data_type$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1\"] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"data_type$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1\", \"data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type$ebnf$2$subexpression$1\", \"symbols\": [\"data_type$ebnf$2$subexpression$1$ebnf$1\"] },\n        { \"name\": \"data_type$ebnf$2\", \"symbols\": [\"data_type$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"data_type$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"data_type\", \"symbols\": [\"data_type_simple\", \"data_type$ebnf$1\", \"data_type$ebnf$2\"], \"postprocess\": x => {\n                let asArray = x[2];\n                const name = unwrap(x[0]);\n                let ret;\n                ret = {\n                    ...name,\n                    ...Array.isArray(x[1]) && x[1].length ? { config: x[1].map(unwrap) } : {},\n                };\n                if (asArray) {\n                    if (asArray[0].type === 'kw_array') {\n                        asArray = [['array']];\n                    }\n                    for (const _ of asArray[0]) {\n                        ret = {\n                            kind: 'array',\n                            arrayOf: ret,\n                        };\n                    }\n                }\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"data_type_list$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"data_type_list$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"data_type\"], \"postprocess\": last },\n        { \"name\": \"data_type_list$ebnf$1\", \"symbols\": [\"data_type_list$ebnf$1\", \"data_type_list$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"data_type_list\", \"symbols\": [\"data_type\", \"data_type_list$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_text\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_numeric\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"data_type_date\"] },\n        { \"name\": \"data_type_simple\", \"symbols\": [\"qualified_name_mark_quotes\"] },\n        { \"name\": \"data_type_numeric$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('double') },\n        { \"name\": \"data_type_numeric\", \"symbols\": [\"data_type_numeric$subexpression$1\", (lexer_1.lexerAny.has(\"kw_precision\") ? { type: \"kw_precision\" } : kw_precision)] },\n        { \"name\": \"data_type_text$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('character', 'bit') },\n        { \"name\": \"data_type_text$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('varying') },\n        { \"name\": \"data_type_text\", \"symbols\": [\"data_type_text$subexpression$1\", \"data_type_text$subexpression$2\"] },\n        { \"name\": \"data_type_date$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('timestamp', 'time') },\n        { \"name\": \"data_type_date$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"data_type_date$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('without') },\n        { \"name\": \"data_type_date$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('time') },\n        { \"name\": \"data_type_date$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('zone') },\n        { \"name\": \"data_type_date\", \"symbols\": [\"data_type_date$subexpression$1\", \"data_type_date$subexpression$2\", \"data_type_date$subexpression$3\", \"data_type_date$subexpression$4\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x, ' ') }) },\n        { \"name\": \"data_type_date$subexpression$5\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('timestamp', 'time') },\n        { \"name\": \"data_type_date$subexpression$6\", \"symbols\": [\"lparen\", \"int\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"data_type_date$subexpression$7\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"data_type_date$subexpression$7\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('without') },\n        { \"name\": \"data_type_date$subexpression$8\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('time') },\n        { \"name\": \"data_type_date$subexpression$9\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": kw('zone') },\n        { \"name\": \"data_type_date\", \"symbols\": [\"data_type_date$subexpression$5\", \"data_type_date$subexpression$6\", \"data_type_date$subexpression$7\", \"data_type_date$subexpression$8\", \"data_type_date$subexpression$9\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: `timestamp ${toStr(x[2])} time zone`, config: [(0, lexer_2.unbox)(x[1])] }) },\n        { \"name\": \"ident_aliased$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"ident\"], \"postprocess\": last },\n        { \"name\": \"ident_aliased\", \"symbols\": [\"ident_aliased$subexpression$1\"] },\n        { \"name\": \"ident_aliased\", \"symbols\": [\"ident\"], \"postprocess\": unwrap },\n        { \"name\": \"table_ref\", \"symbols\": [\"qualified_name\"], \"postprocess\": unwrap },\n        { \"name\": \"qcolumn$ebnf$1$subexpression$1\", \"symbols\": [\"dot\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"qcolumn$ebnf$1\", \"symbols\": [\"qcolumn$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"qcolumn$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"qcolumn\", \"symbols\": [\"ident\", \"dot\", \"ident\", \"qcolumn$ebnf$1\"], \"postprocess\": x => {\n                if (!x[3]) {\n                    return (0, lexer_2.track)(x, {\n                        table: (0, lexer_2.unbox)(x[0]),\n                        column: (0, lexer_2.unbox)(x[2]),\n                    });\n                }\n                return (0, lexer_2.track)(x, {\n                    schema: (0, lexer_2.unbox)(x[0]),\n                    table: (0, lexer_2.unbox)(x[2]),\n                    column: (0, lexer_2.unbox)(x[3]),\n                });\n            } },\n        { \"name\": \"table_ref_aliased$ebnf$1\", \"symbols\": [\"ident_aliased\"], \"postprocess\": id },\n        { \"name\": \"table_ref_aliased$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"table_ref_aliased\", \"symbols\": [\"table_ref\", \"table_ref_aliased$ebnf$1\"], \"postprocess\": x => {\n                const alias = unwrap(x[1]);\n                return (0, lexer_2.track)(x, {\n                    ...unwrap(x[0]),\n                    ...alias ? { alias } : {},\n                });\n            } },\n        { \"name\": \"qualified_name\", \"symbols\": [\"qname_ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x) }) },\n        { \"name\": \"qualified_name\", \"symbols\": [\"ident\", \"dot\", \"ident_extended\"], \"postprocess\": x => {\n                const schema = toStr(x[0]);\n                const name = toStr(x[2]);\n                return (0, lexer_2.track)(x, { schema, name });\n            } },\n        { \"name\": \"qualified_name\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)], \"postprocess\": x => (0, lexer_2.track)(x, { name: 'current_schema' }) },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [\"qname_ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: toStr(x), ...(0, lexer_2.doubleQuoted)(x) }) },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [\"ident\", \"dot\", \"ident_extended\"], \"postprocess\": x => {\n                const schema = toStr(x[0]);\n                const name = toStr(x[2]);\n                return (0, lexer_2.track)(x, { schema, name, ...(0, lexer_2.doubleQuoted)(x[2]) });\n            } },\n        { \"name\": \"qualified_name_mark_quotes\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)], \"postprocess\": x => (0, lexer_2.track)(x, { name: 'current_schema' }) },\n        { \"name\": \"qname_ident\", \"symbols\": [\"ident\"] },\n        { \"name\": \"qname_ident\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_precision\") ? { type: \"kw_precision\" } : kw_precision)] },\n        { \"name\": \"qname\", \"symbols\": [\"qualified_name\"], \"postprocess\": unwrap },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_analyse\") ? { type: \"kw_analyse\" } : kw_analyse)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_analyze\") ? { type: \"kw_analyze\" } : kw_analyze)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_any\") ? { type: \"kw_any\" } : kw_any)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asymmetric\") ? { type: \"kw_asymmetric\" } : kw_asymmetric)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_authorization\") ? { type: \"kw_authorization\" } : kw_authorization)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_binary\") ? { type: \"kw_binary\" } : kw_binary)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_both\") ? { type: \"kw_both\" } : kw_both)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_case\") ? { type: \"kw_case\" } : kw_case)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cast\") ? { type: \"kw_cast\" } : kw_cast)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collation\") ? { type: \"kw_collation\" } : kw_collation)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cross\") ? { type: \"kw_cross\" } : kw_cross)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_catalog\") ? { type: \"kw_current_catalog\" } : kw_current_catalog)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_date\") ? { type: \"kw_current_date\" } : kw_current_date)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_role\") ? { type: \"kw_current_role\" } : kw_current_role)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_time\") ? { type: \"kw_current_time\" } : kw_current_time)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_timestamp\") ? { type: \"kw_current_timestamp\" } : kw_current_timestamp)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_deferrable\") ? { type: \"kw_deferrable\" } : kw_deferrable)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_else\") ? { type: \"kw_else\" } : kw_else)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_end\") ? { type: \"kw_end\" } : kw_end)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_except\") ? { type: \"kw_except\" } : kw_except)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_fetch\") ? { type: \"kw_fetch\" } : kw_fetch)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_foreign\") ? { type: \"kw_foreign\" } : kw_foreign)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_freeze\") ? { type: \"kw_freeze\" } : kw_freeze)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_grant\") ? { type: \"kw_grant\" } : kw_grant)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_having\") ? { type: \"kw_having\" } : kw_having)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_ilike\") ? { type: \"kw_ilike\" } : kw_ilike)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_initially\") ? { type: \"kw_initially\" } : kw_initially)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_inner\") ? { type: \"kw_inner\" } : kw_inner)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_intersect\") ? { type: \"kw_intersect\" } : kw_intersect)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_into\") ? { type: \"kw_into\" } : kw_into)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_isnull\") ? { type: \"kw_isnull\" } : kw_isnull)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_join\") ? { type: \"kw_join\" } : kw_join)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_leading\") ? { type: \"kw_leading\" } : kw_leading)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_limit\") ? { type: \"kw_limit\" } : kw_limit)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtime\") ? { type: \"kw_localtime\" } : kw_localtime)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtimestamp\") ? { type: \"kw_localtimestamp\" } : kw_localtimestamp)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_natural\") ? { type: \"kw_natural\" } : kw_natural)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_notnull\") ? { type: \"kw_notnull\" } : kw_notnull)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_offset\") ? { type: \"kw_offset\" } : kw_offset)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_overlaps\") ? { type: \"kw_overlaps\" } : kw_overlaps)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_placing\") ? { type: \"kw_placing\" } : kw_placing)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_primary\") ? { type: \"kw_primary\" } : kw_primary)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_references\") ? { type: \"kw_references\" } : kw_references)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_select\") ? { type: \"kw_select\" } : kw_select)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_similar\") ? { type: \"kw_similar\" } : kw_similar)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_some\") ? { type: \"kw_some\" } : kw_some)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_symmetric\") ? { type: \"kw_symmetric\" } : kw_symmetric)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_tablesample\") ? { type: \"kw_tablesample\" } : kw_tablesample)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_then\") ? { type: \"kw_then\" } : kw_then)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_trailing\") ? { type: \"kw_trailing\" } : kw_trailing)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_union\") ? { type: \"kw_union\" } : kw_union)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_variadic\") ? { type: \"kw_variadic\" } : kw_variadic)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_verbose\") ? { type: \"kw_verbose\" } : kw_verbose)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_when\") ? { type: \"kw_when\" } : kw_when)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_window\") ? { type: \"kw_window\" } : kw_window)] },\n        { \"name\": \"any_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)] },\n        { \"name\": \"ident_extended\", \"symbols\": [\"ident\"] },\n        { \"name\": \"ident_extended\", \"symbols\": [\"any_keyword\"] },\n        { \"name\": \"select_statement$ebnf$1\", \"symbols\": [\"select_from\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$2\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1$ebnf$1\", \"symbols\": [\"select_having\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$3$subexpression$1\", \"symbols\": [\"select_groupby\", \"select_statement$ebnf$3$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_statement$ebnf$3\", \"symbols\": [\"select_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$4\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$5\", \"symbols\": [\"select_limit_offset\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1$ebnf$1\", \"symbols\": [\"select_skip\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement$ebnf$6$subexpression$1\", \"symbols\": [\"select_for\", \"select_statement$ebnf$6$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_statement$ebnf$6\", \"symbols\": [\"select_statement$ebnf$6$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_statement$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_statement\", \"symbols\": [\"select_what\", \"select_statement$ebnf$1\", \"select_statement$ebnf$2\", \"select_statement$ebnf$3\", \"select_statement$ebnf$4\", \"select_statement$ebnf$5\", \"select_statement$ebnf$6\"], \"postprocess\": x => {\n                let [what, from, where, _groupBy, orderBy, limit, _selectFor] = x;\n                from = unwrap(from);\n                let groupBy = _groupBy && _groupBy[0];\n                let having = _groupBy && _groupBy[1];\n                groupBy = groupBy && (groupBy.length === 1 && groupBy[0].type === 'list' ? groupBy[0].expressions : groupBy);\n                having = having && unwrap(having);\n                let selectFor = _selectFor && _selectFor[0];\n                let skip = _selectFor && _selectFor[1];\n                skip = unwrap(skip);\n                return (0, lexer_2.track)(x, {\n                    ...what,\n                    ...from ? { from: Array.isArray(from) ? from : [from] } : {},\n                    ...groupBy ? { groupBy } : {},\n                    ...having ? { having } : {},\n                    ...limit ? { limit: unwrap(limit) } : {},\n                    ...orderBy ? { orderBy } : {},\n                    ...where ? { where } : {},\n                    ...selectFor ? { for: selectFor[1] } : {},\n                    ...skip ? { skip } : {},\n                    type: 'select',\n                });\n            } },\n        { \"name\": \"select_from\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"select_from_items\"], \"postprocess\": last },\n        { \"name\": \"select_from_items$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_from_items$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_from_item\"], \"postprocess\": last },\n        { \"name\": \"select_from_items$ebnf$1\", \"symbols\": [\"select_from_items$ebnf$1\", \"select_from_items$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_from_items\", \"symbols\": [\"select_from_item\", \"select_from_items$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [...head, ...(flatten(tail) || [])];\n            } },\n        { \"name\": \"select_from_item\", \"symbols\": [\"select_from_subject\"] },\n        { \"name\": \"select_from_item\", \"symbols\": [\"select_from_item_joins\"], \"postprocess\": get(0) },\n        { \"name\": \"select_from_item_joins$subexpression$1\", \"symbols\": [\"select_from_item\"], \"postprocess\": get(0) },\n        { \"name\": \"select_from_item_joins\", \"symbols\": [\"select_from_item_joins$subexpression$1\", \"select_table_join\"], \"postprocess\": flatten },\n        { \"name\": \"select_from_item_joins\", \"symbols\": [\"lparen\", \"select_from_item_joins\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_table\"], \"postprocess\": unwrap },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"select_from_subject\", \"symbols\": [\"stb_call\"], \"postprocess\": unwrap },\n        { \"name\": \"stb_opts$ebnf$1\", \"symbols\": [\"collist_paren\"], \"postprocess\": id },\n        { \"name\": \"stb_opts$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_opts\", \"symbols\": [\"ident_aliased\", \"stb_opts$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                alias: toStr(x[0]),\n                ...x[1] && { columnNames: (0, lexer_2.unbox)(x[1]).map(asName) },\n            }) },\n        { \"name\": \"stb_table$ebnf$1\", \"symbols\": [\"stb_opts\"], \"postprocess\": id },\n        { \"name\": \"stb_table$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_table\", \"symbols\": [\"table_ref\", \"stb_table$ebnf$1\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'table',\n                    name: (0, lexer_2.track)(x, {\n                        ...x[0],\n                        ...x[1],\n                    }),\n                });\n            } },\n        { \"name\": \"stb_statement$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)], \"postprocess\": id },\n        { \"name\": \"stb_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_statement\", \"symbols\": [\"stb_statement$ebnf$1\", \"selection_paren\", \"stb_opts\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'statement',\n                statement: unwrap(x[1]),\n                ...x[0] && { lateral: true },\n                ...x[2],\n            }) },\n        { \"name\": \"select_values\", \"symbols\": [\"kw_values\", \"insert_values\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'values',\n                values: x[1],\n            }) },\n        { \"name\": \"stb_call$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_lateral\") ? { type: \"kw_lateral\" } : kw_lateral)], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call$ebnf$2\", \"symbols\": [\"kw_withordinality\"], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call$ebnf$3\", \"symbols\": [\"stb_call_alias\"], \"postprocess\": id },\n        { \"name\": \"stb_call$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call\", \"symbols\": [\"stb_call$ebnf$1\", \"expr_function_call\", \"stb_call$ebnf$2\", \"stb_call$ebnf$3\"], \"postprocess\": x => {\n                const lateral = x[0];\n                const withOrdinality = x[2];\n                const alias = x[3];\n                if (!withOrdinality && !alias) {\n                    return x[1];\n                }\n                return (0, lexer_2.track)(x, {\n                    ...x[1],\n                    ...lateral && { lateral: true },\n                    ...withOrdinality && { withOrdinality: true },\n                    alias: alias ? asNameWithColumns(alias[0], alias[1]) : undefined,\n                });\n            } },\n        { \"name\": \"stb_call_alias$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as)], \"postprocess\": id },\n        { \"name\": \"stb_call_alias$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call_alias$subexpression$1\", \"symbols\": [\"stb_call_alias$subexpression$1$ebnf$1\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"stb_call_alias$ebnf$1\", \"symbols\": [\"stb_call_alias_list\"], \"postprocess\": id },\n        { \"name\": \"stb_call_alias$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"stb_call_alias\", \"symbols\": [\"stb_call_alias$subexpression$1\", \"stb_call_alias$ebnf$1\"] },\n        { \"name\": \"stb_call_alias_list\", \"symbols\": [\"lparen\", \"stb_call_alias_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"stb_call_alias_list_raw$ebnf$1\", \"symbols\": [\"stb_call_alias_list_raw$ebnf$1\", \"stb_call_alias_list_raw$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"stb_call_alias_list_raw\", \"symbols\": [\"ident\", \"stb_call_alias_list_raw$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_table_join$ebnf$1\", \"symbols\": [\"select_table_join_clause\"], \"postprocess\": id },\n        { \"name\": \"select_table_join$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_table_join\", \"symbols\": [\"select_join_op\", (lexer_1.lexerAny.has(\"kw_join\") ? { type: \"kw_join\" } : kw_join), \"select_from_subject\", \"select_table_join$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...unwrap(x[2]),\n                join: {\n                    type: toStr(x[0], ' '),\n                    ...x[3] && unwrap(x[3]),\n                }\n            }) },\n        { \"name\": \"select_table_join_clause\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { on: last(x) }) },\n        { \"name\": \"select_table_join_clause$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"select_table_join_clause$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"select_table_join_clause$macrocall$1$ebnf$1\", \"symbols\": [\"select_table_join_clause$macrocall$1$ebnf$1\", \"select_table_join_clause$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_table_join_clause$macrocall$1\", \"symbols\": [\"select_table_join_clause$macrocall$2\", \"select_table_join_clause$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"select_table_join_clause\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"lparen\", \"select_table_join_clause$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, { using: x[2].map(asName) }) },\n        { \"name\": \"select_join_op$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_inner\") ? { type: \"kw_inner\" } : kw_inner)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$1\", \"symbols\": [\"select_join_op$subexpression$1$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'INNER JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$1\"] },\n        { \"name\": \"select_join_op$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cross\") ? { type: \"kw_cross\" } : kw_cross)], \"postprocess\": x => (0, lexer_2.box)(x, 'CROSS JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$2\"] },\n        { \"name\": \"select_join_op$subexpression$3$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$3$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left), \"select_join_op$subexpression$3$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'LEFT JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$3\"] },\n        { \"name\": \"select_join_op$subexpression$4$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$4$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right), \"select_join_op$subexpression$4$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'RIGHT JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$4\"] },\n        { \"name\": \"select_join_op$subexpression$5$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_outer\") ? { type: \"kw_outer\" } : kw_outer)], \"postprocess\": id },\n        { \"name\": \"select_join_op$subexpression$5$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_join_op$subexpression$5\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full), \"select_join_op$subexpression$5$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, 'FULL JOIN') },\n        { \"name\": \"select_join_op\", \"symbols\": [\"select_join_op$subexpression$5\"] },\n        { \"name\": \"select_what$ebnf$1\", \"symbols\": [\"select_distinct\"], \"postprocess\": id },\n        { \"name\": \"select_what$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_what$ebnf$2\", \"symbols\": [\"select_expr_list_aliased\"], \"postprocess\": id },\n        { \"name\": \"select_what$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_select\") ? { type: \"kw_select\" } : kw_select), \"select_what$ebnf$1\", \"select_what$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                columns: x[2],\n                ...x[1] && { distinct: (0, lexer_2.unbox)(x[1]) },\n            }) },\n        { \"name\": \"select_expr_list_aliased$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_expr_list_aliased$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_expr_list_item\"], \"postprocess\": last },\n        { \"name\": \"select_expr_list_aliased$ebnf$1\", \"symbols\": [\"select_expr_list_aliased$ebnf$1\", \"select_expr_list_aliased$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_expr_list_aliased\", \"symbols\": [\"select_expr_list_item\", \"select_expr_list_aliased$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_expr_list_item$ebnf$1\", \"symbols\": [\"ident_aliased\"], \"postprocess\": id },\n        { \"name\": \"select_expr_list_item$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_expr_list_item\", \"symbols\": [\"expr\", \"select_expr_list_item$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                expr: x[0],\n                ...x[1] ? { alias: asName(x[1]) } : {},\n            }) },\n        { \"name\": \"select_distinct\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": x => (0, lexer_2.box)(x, 'all') },\n        { \"name\": \"select_distinct$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": get(2) },\n        { \"name\": \"select_distinct$ebnf$1\", \"symbols\": [\"select_distinct$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_distinct$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_distinct\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct), \"select_distinct$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, x[1] || 'distinct') },\n        { \"name\": \"select_where\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"select_groupby\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group), \"kw_by\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"select_having\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_having\") ? { type: \"kw_having\" } : kw_having), \"expr\"], \"postprocess\": last },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$1\", \"symbols\": [\"select_offset\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$1\", \"symbols\": [\"select_limit\"] },\n        { \"name\": \"select_limit_offset$ebnf$1\", \"symbols\": [\"select_limit_offset$ebnf$1$subexpression$1\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$2\", \"symbols\": [\"select_offset\"] },\n        { \"name\": \"select_limit_offset$ebnf$1$subexpression$2\", \"symbols\": [\"select_limit\"] },\n        { \"name\": \"select_limit_offset$ebnf$1\", \"symbols\": [\"select_limit_offset$ebnf$1\", \"select_limit_offset$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_limit_offset\", \"symbols\": [\"select_limit_offset$ebnf$1\"], \"postprocess\": (x, rej) => {\n                const value = unwrap(x);\n                if (!Array.isArray(value)) {\n                    return (0, lexer_2.track)(x, value);\n                }\n                if (value.length != 2) {\n                    return rej;\n                }\n                const a = unwrap(value[0]);\n                const b = unwrap(value[1]);\n                if (a.offset && b.offset || a.limit && b.limit) {\n                    return rej;\n                }\n                return (0, lexer_2.track)(x, {\n                    ...a,\n                    ...b,\n                });\n            } },\n        { \"name\": \"select_offset$ebnf$1$subexpression$1\", \"symbols\": [\"kw_row\"] },\n        { \"name\": \"select_offset$ebnf$1$subexpression$1\", \"symbols\": [\"kw_rows\"] },\n        { \"name\": \"select_offset$ebnf$1\", \"symbols\": [\"select_offset$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_offset$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_offset\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_offset\") ? { type: \"kw_offset\" } : kw_offset), \"expr_nostar\", \"select_offset$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { offset: unwrap(x[1]) }) },\n        { \"name\": \"select_limit$subexpression$1\", \"symbols\": [\"select_limit_1\"] },\n        { \"name\": \"select_limit$subexpression$1\", \"symbols\": [\"select_limit_2\"] },\n        { \"name\": \"select_limit\", \"symbols\": [\"select_limit$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { limit: unwrap(x) }) },\n        { \"name\": \"select_limit_1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_limit\") ? { type: \"kw_limit\" } : kw_limit), \"expr_nostar\"], \"postprocess\": last },\n        { \"name\": \"select_limit_2$ebnf$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"select_limit_2$ebnf$1$subexpression$1\", \"symbols\": [\"kw_next\"] },\n        { \"name\": \"select_limit_2$ebnf$1\", \"symbols\": [\"select_limit_2$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_limit_2$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_limit_2$subexpression$1\", \"symbols\": [\"kw_row\"] },\n        { \"name\": \"select_limit_2$subexpression$1\", \"symbols\": [\"kw_rows\"] },\n        { \"name\": \"select_limit_2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_fetch\") ? { type: \"kw_fetch\" } : kw_fetch), \"select_limit_2$ebnf$1\", \"expr_nostar\", \"select_limit_2$subexpression$1\", (lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)], \"postprocess\": get(2) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_update\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'update' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_no\", \"kw_key\", \"kw_update\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'no key update' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_share\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'share' }) },\n        { \"name\": \"select_for$subexpression$1\", \"symbols\": [\"kw_key\", \"kw_share\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'key share' }) },\n        { \"name\": \"select_for\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"select_for$subexpression$1\"] },\n        { \"name\": \"select_skip$subexpression$1\", \"symbols\": [\"kw_nowait\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'nowait' }) },\n        { \"name\": \"select_skip$subexpression$1\", \"symbols\": [\"kw_skip\", \"kw_locked\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'skip locked' }) },\n        { \"name\": \"select_skip\", \"symbols\": [\"select_skip$subexpression$1\"] },\n        { \"name\": \"select_order_by$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order), \"kw_by\"] },\n        { \"name\": \"select_order_by$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_order_by$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"select_order_by_expr\"], \"postprocess\": last },\n        { \"name\": \"select_order_by$ebnf$1\", \"symbols\": [\"select_order_by$ebnf$1\", \"select_order_by$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_order_by\", \"symbols\": [\"select_order_by$subexpression$1\", \"select_order_by_expr\", \"select_order_by$ebnf$1\"], \"postprocess\": ([_, head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"select_order_by_expr$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"select_order_by_expr$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"select_order_by_expr$ebnf$1\", \"symbols\": [\"select_order_by_expr$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_order_by_expr$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_last\"] },\n        { \"name\": \"select_order_by_expr$ebnf$2$subexpression$1\", \"symbols\": [\"kw_nulls\", \"select_order_by_expr$ebnf$2$subexpression$1$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"select_order_by_expr$ebnf$2\", \"symbols\": [\"select_order_by_expr$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"select_order_by_expr$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"select_order_by_expr\", \"symbols\": [\"expr\", \"select_order_by_expr$ebnf$1\", \"select_order_by_expr$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                by: x[0],\n                ...x[1] && { order: toStr(x[1]).toUpperCase() },\n                ...x[2] && { nulls: toStr(x[2]).toUpperCase() },\n            }) },\n        { \"name\": \"expr\", \"symbols\": [\"expr_nostar\"], \"postprocess\": unwrap },\n        { \"name\": \"expr\", \"symbols\": [\"expr_star\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_nostar\", \"symbols\": [\"expr_paren\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_nostar\", \"symbols\": [\"expr_or\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_paren$subexpression$1\", \"symbols\": [\"expr_or_select\"] },\n        { \"name\": \"expr_paren$subexpression$1\", \"symbols\": [\"expr_list_many\"] },\n        { \"name\": \"expr_paren\", \"symbols\": [\"lparen\", \"expr_paren$subexpression$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"expr_or$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or)] },\n        { \"name\": \"expr_or$macrocall$2$macrocall$1\", \"symbols\": [\"expr_or$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_or$macrocall$2\", \"symbols\": [\"expr_or$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_or$macrocall$3\", \"symbols\": [\"expr_or\"] },\n        { \"name\": \"expr_or$macrocall$4\", \"symbols\": [\"expr_and\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$1\", \"symbols\": [\"expr_or$macrocall$3\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$2\", \"symbols\": [\"expr_or$macrocall$4\"] },\n        { \"name\": \"expr_or$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_or$macrocall$1\", \"symbols\": [\"expr_or$macrocall$1$subexpression$1\", \"expr_or$macrocall$2\", \"expr_or$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_or$macrocall$1\", \"symbols\": [\"expr_or$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_or\", \"symbols\": [\"expr_or$macrocall$1\"] },\n        { \"name\": \"expr_and$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"expr_and$macrocall$2$macrocall$1\", \"symbols\": [\"expr_and$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_and$macrocall$2\", \"symbols\": [\"expr_and$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_and$macrocall$3\", \"symbols\": [\"expr_and\"] },\n        { \"name\": \"expr_and$macrocall$4\", \"symbols\": [\"expr_not\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$1\", \"symbols\": [\"expr_and$macrocall$3\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$2\", \"symbols\": [\"expr_and$macrocall$4\"] },\n        { \"name\": \"expr_and$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_and$macrocall$1\", \"symbols\": [\"expr_and$macrocall$1$subexpression$1\", \"expr_and$macrocall$2\", \"expr_and$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_and$macrocall$1\", \"symbols\": [\"expr_and$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_and\", \"symbols\": [\"expr_and$macrocall$1\"] },\n        { \"name\": \"expr_not$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)] },\n        { \"name\": \"expr_not$macrocall$2$macrocall$1\", \"symbols\": [\"expr_not$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_not$macrocall$2\", \"symbols\": [\"expr_not$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_not$macrocall$3\", \"symbols\": [\"expr_not\"] },\n        { \"name\": \"expr_not$macrocall$4\", \"symbols\": [\"expr_eq\"] },\n        { \"name\": \"expr_not$macrocall$1$subexpression$1\", \"symbols\": [\"expr_not$macrocall$3\"] },\n        { \"name\": \"expr_not$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_not$macrocall$1\", \"symbols\": [\"expr_not$macrocall$2\", \"expr_not$macrocall$1$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                ...unwrap(x[0]),\n                operand: unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_not$macrocall$1\", \"symbols\": [\"expr_not$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_not\", \"symbols\": [\"expr_not$macrocall$1\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq)] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_neq\") ? { type: \"op_neq\" } : op_neq)] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_eq$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_eq$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_eq$macrocall$2\", \"symbols\": [\"expr_eq$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_eq$macrocall$3\", \"symbols\": [\"expr_eq\"] },\n        { \"name\": \"expr_eq$macrocall$4\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$1\", \"symbols\": [\"expr_eq$macrocall$3\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$2\", \"symbols\": [\"expr_eq$macrocall$4\"] },\n        { \"name\": \"expr_eq$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_eq$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$1$subexpression$1\", \"expr_eq$macrocall$2\", \"expr_eq$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_eq$macrocall$1\", \"symbols\": [\"expr_eq$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_eq\", \"symbols\": [\"expr_eq$macrocall$1\"] },\n        { \"name\": \"expr_star\", \"symbols\": [\"star\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'ref', name: '*' }) },\n        { \"name\": \"expr_is$subexpression$1\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_isnull\") ? { type: \"kw_isnull\" } : kw_isnull)] },\n        { \"name\": \"expr_is$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$1\", \"expr_is$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unary', op: 'IS NULL', operand: unwrap(x[0]) }) },\n        { \"name\": \"expr_is$subexpression$3\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_notnull\") ? { type: \"kw_notnull\" } : kw_notnull)] },\n        { \"name\": \"expr_is$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"kw_not_null\"] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$3\", \"expr_is$subexpression$4\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unary', op: 'IS NOT NULL', operand: unwrap(x[0]) }) },\n        { \"name\": \"expr_is$subexpression$5\", \"symbols\": [\"expr_is\"] },\n        { \"name\": \"expr_is$subexpression$5\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_is$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"expr_is$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_is$subexpression$6\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"expr_is$subexpression$6\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_is$subexpression$5\", (lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"expr_is$ebnf$1\", \"expr_is$subexpression$6\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                op: 'IS ' + flattenStr([x[2], x[3]])\n                    .join(' ')\n                    .toUpperCase(),\n                operand: unwrap(x[0]),\n            }) },\n        { \"name\": \"expr_is\", \"symbols\": [\"expr_compare\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_compare\") ? { type: \"op_compare\" } : op_compare)] },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_compare$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_compare$macrocall$2\", \"symbols\": [\"expr_compare$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_compare$macrocall$3\", \"symbols\": [\"expr_compare\"] },\n        { \"name\": \"expr_compare$macrocall$4\", \"symbols\": [\"expr_range\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$1\", \"symbols\": [\"expr_compare$macrocall$3\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$2\", \"symbols\": [\"expr_compare$macrocall$4\"] },\n        { \"name\": \"expr_compare$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_compare$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$1$subexpression$1\", \"expr_compare$macrocall$2\", \"expr_compare$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_compare$macrocall$1\", \"symbols\": [\"expr_compare$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_compare\", \"symbols\": [\"expr_compare$macrocall$1\"] },\n        { \"name\": \"expr_range$macrocall$2\", \"symbols\": [\"ops_between\"] },\n        { \"name\": \"expr_range$macrocall$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_and\") ? { type: \"kw_and\" } : kw_and)] },\n        { \"name\": \"expr_range$macrocall$4\", \"symbols\": [\"expr_range\"] },\n        { \"name\": \"expr_range$macrocall$5\", \"symbols\": [\"expr_others\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$1\", \"symbols\": [\"expr_range$macrocall$4\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$2\", \"symbols\": [\"expr_range$macrocall$4\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$3\", \"symbols\": [\"expr_range$macrocall$5\"] },\n        { \"name\": \"expr_range$macrocall$1$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_range$macrocall$1\", \"symbols\": [\"expr_range$macrocall$1$subexpression$1\", \"expr_range$macrocall$2\", \"expr_range$macrocall$1$subexpression$2\", \"expr_range$macrocall$3\", \"expr_range$macrocall$1$subexpression$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ternary',\n                value: unwrap(x[0]),\n                lo: unwrap(x[2]),\n                hi: unwrap(x[4]),\n                op: (flattenStr(x[1]).join(' ') || '<error>').toUpperCase(),\n            }) },\n        { \"name\": \"expr_range$macrocall$1\", \"symbols\": [\"expr_range$macrocall$5\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_range\", \"symbols\": [\"expr_range$macrocall$1\"] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"ops_others\") ? { type: \"ops_others\" } : ops_others)] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_others$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_others$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_others$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_others$macrocall$2\", \"symbols\": [\"expr_others$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_others$macrocall$3\", \"symbols\": [\"expr_others\"] },\n        { \"name\": \"expr_others$macrocall$4\", \"symbols\": [\"expr_like\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$1\", \"symbols\": [\"expr_others$macrocall$3\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$2\", \"symbols\": [\"expr_others$macrocall$4\"] },\n        { \"name\": \"expr_others$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_others$macrocall$1\", \"symbols\": [\"expr_others$macrocall$1$subexpression$1\", \"expr_others$macrocall$2\", \"expr_others$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_others$macrocall$1\", \"symbols\": [\"expr_others$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_others\", \"symbols\": [\"expr_others$macrocall$1\"] },\n        { \"name\": \"expr_like$macrocall$2$macrocall$2\", \"symbols\": [\"ops_like\"] },\n        { \"name\": \"expr_like$macrocall$2$macrocall$1\", \"symbols\": [\"expr_like$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_like$macrocall$2\", \"symbols\": [\"expr_like$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_like$macrocall$3\", \"symbols\": [\"expr_like\"] },\n        { \"name\": \"expr_like$macrocall$4\", \"symbols\": [\"expr_in\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$1\", \"symbols\": [\"expr_like$macrocall$3\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$2\", \"symbols\": [\"expr_like$macrocall$4\"] },\n        { \"name\": \"expr_like$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_like$macrocall$1\", \"symbols\": [\"expr_like$macrocall$1$subexpression$1\", \"expr_like$macrocall$2\", \"expr_like$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_like$macrocall$1\", \"symbols\": [\"expr_like$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_like\", \"symbols\": [\"expr_like$macrocall$1\"] },\n        { \"name\": \"expr_in$macrocall$2$macrocall$2\", \"symbols\": [\"ops_in\"] },\n        { \"name\": \"expr_in$macrocall$2$macrocall$1\", \"symbols\": [\"expr_in$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_in$macrocall$2\", \"symbols\": [\"expr_in$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_in$macrocall$3\", \"symbols\": [\"expr_in\"] },\n        { \"name\": \"expr_in$macrocall$4\", \"symbols\": [\"expr_add\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$1\", \"symbols\": [\"expr_in$macrocall$3\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$2\", \"symbols\": [\"expr_in$macrocall$4\"] },\n        { \"name\": \"expr_in$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_in$macrocall$1\", \"symbols\": [\"expr_in$macrocall$1$subexpression$1\", \"expr_in$macrocall$2\", \"expr_in$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_in$macrocall$1\", \"symbols\": [\"expr_in$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_in\", \"symbols\": [\"expr_in$macrocall$1\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_plus\") ? { type: \"op_plus\" } : op_plus)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_minus\") ? { type: \"op_minus\" } : op_minus)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_additive\") ? { type: \"op_additive\" } : op_additive)] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_add$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_add$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_add$macrocall$2\", \"symbols\": [\"expr_add$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_add$macrocall$3\", \"symbols\": [\"expr_add\"] },\n        { \"name\": \"expr_add$macrocall$4\", \"symbols\": [\"expr_mult\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_add$macrocall$3\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$2\", \"symbols\": [\"expr_add$macrocall$4\"] },\n        { \"name\": \"expr_add$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_add$macrocall$1\", \"symbols\": [\"expr_add$macrocall$1$subexpression$1\", \"expr_add$macrocall$2\", \"expr_add$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_add$macrocall$1\", \"symbols\": [\"expr_add$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_add\", \"symbols\": [\"expr_add$macrocall$1\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"star\") ? { type: \"star\" } : star)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_div\") ? { type: \"op_div\" } : op_div)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_mod\") ? { type: \"op_mod\" } : op_mod)] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_mult$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_mult$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_mult$macrocall$2\", \"symbols\": [\"expr_mult$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_mult$macrocall$3\", \"symbols\": [\"expr_mult\"] },\n        { \"name\": \"expr_mult$macrocall$4\", \"symbols\": [\"expr_exp\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$1\", \"symbols\": [\"expr_mult$macrocall$3\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$2\", \"symbols\": [\"expr_mult$macrocall$4\"] },\n        { \"name\": \"expr_mult$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_mult$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$1$subexpression$1\", \"expr_mult$macrocall$2\", \"expr_mult$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_mult$macrocall$1\", \"symbols\": [\"expr_mult$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_mult\", \"symbols\": [\"expr_mult$macrocall$1\"] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_exp\") ? { type: \"op_exp\" } : op_exp)] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_exp$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_exp$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_exp$macrocall$2\", \"symbols\": [\"expr_exp$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_exp$macrocall$3\", \"symbols\": [\"expr_exp\"] },\n        { \"name\": \"expr_exp$macrocall$4\", \"symbols\": [\"expr_unary_add\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$1\", \"symbols\": [\"expr_exp$macrocall$3\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$2\", \"symbols\": [\"expr_exp$macrocall$4\"] },\n        { \"name\": \"expr_exp$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_exp$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$1$subexpression$1\", \"expr_exp$macrocall$2\", \"expr_exp$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_exp$macrocall$1\", \"symbols\": [\"expr_exp$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_exp\", \"symbols\": [\"expr_exp$macrocall$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_plus\") ? { type: \"op_plus\" } : op_plus)] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_minus\") ? { type: \"op_minus\" } : op_minus)] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$2$subexpression$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$2\"] },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_unary_add$macrocall$2$macrocall$1\", \"symbols\": [\"kw_operator\", \"lparen\", \"ident\", \"dot\", \"expr_unary_add$macrocall$2$macrocall$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x[4], ' ') || '<error>').toUpperCase(),\n                opSchema: toStr(x[2]),\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$2\", \"symbols\": [\"expr_unary_add$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_unary_add$macrocall$3\", \"symbols\": [\"expr_unary_add\"] },\n        { \"name\": \"expr_unary_add$macrocall$4\", \"symbols\": [\"expr_various_constructs\"] },\n        { \"name\": \"expr_unary_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_unary_add$macrocall$3\"] },\n        { \"name\": \"expr_unary_add$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_unary_add$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$2\", \"expr_unary_add$macrocall$1$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'unary',\n                ...unwrap(x[0]),\n                operand: unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_unary_add$macrocall$1\", \"symbols\": [\"expr_unary_add$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_unary_add\", \"symbols\": [\"expr_unary_add$macrocall$1\"] },\n        { \"name\": \"expr_various_constructs$macrocall$2$macrocall$2\", \"symbols\": [\"various_binaries\"] },\n        { \"name\": \"expr_various_constructs$macrocall$2$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$2$macrocall$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                op: (toStr(x, ' ') || '<error>').toUpperCase()\n            }) },\n        { \"name\": \"expr_various_constructs$macrocall$2\", \"symbols\": [\"expr_various_constructs$macrocall$2$macrocall$1\"] },\n        { \"name\": \"expr_various_constructs$macrocall$3\", \"symbols\": [\"expr_various_constructs\"] },\n        { \"name\": \"expr_various_constructs$macrocall$4\", \"symbols\": [\"expr_array_index\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$1\", \"symbols\": [\"expr_various_constructs$macrocall$3\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$2\", \"symbols\": [\"expr_various_constructs$macrocall$4\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1$subexpression$2\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_various_constructs$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$1$subexpression$1\", \"expr_various_constructs$macrocall$2\", \"expr_various_constructs$macrocall$1$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'binary',\n                left: unwrap(x[0]),\n                right: unwrap(x[2]),\n                ...unwrap(x[1]),\n            }) },\n        { \"name\": \"expr_various_constructs$macrocall$1\", \"symbols\": [\"expr_various_constructs$macrocall$4\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_various_constructs\", \"symbols\": [\"expr_various_constructs$macrocall$1\"] },\n        { \"name\": \"expr_array_index$subexpression$1\", \"symbols\": [\"expr_array_index\"] },\n        { \"name\": \"expr_array_index$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_array_index\", \"symbols\": [\"expr_array_index$subexpression$1\", (lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_nostar\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'arrayIndex',\n                array: unwrap(x[0]),\n                index: unwrap(x[2]),\n            }) },\n        { \"name\": \"expr_array_index\", \"symbols\": [\"expr_member\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_member$subexpression$1\", \"symbols\": [\"expr_member\"] },\n        { \"name\": \"expr_member$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_member$subexpression$2\", \"symbols\": [\"string\"] },\n        { \"name\": \"expr_member$subexpression$2\", \"symbols\": [\"int\"] },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_member$subexpression$1\", \"ops_member\", \"expr_member$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'member',\n                operand: unwrap(x[0]),\n                op: x[1],\n                member: unwrap(x[2])\n            }) },\n        { \"name\": \"expr_member$subexpression$3\", \"symbols\": [\"expr_member\"] },\n        { \"name\": \"expr_member$subexpression$3\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_member$subexpression$3\", (lexer_1.lexerAny.has(\"op_cast\") ? { type: \"op_cast\" } : op_cast), \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: unwrap(x[0]),\n                to: x[2],\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_cast\") ? { type: \"kw_cast\" } : kw_cast), \"lparen\", \"expr_nostar\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"data_type\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: unwrap(x[2]),\n                to: x[4],\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [\"data_type\", \"string\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'cast',\n                operand: (0, lexer_2.track)(x[1], {\n                    type: 'string',\n                    value: (0, lexer_2.unbox)(x[1]),\n                }),\n                to: (0, lexer_2.unbox)(x[0]),\n            }) },\n        { \"name\": \"expr_member\", \"symbols\": [\"expr_dot\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_dot$subexpression$1\", \"symbols\": [\"word\"] },\n        { \"name\": \"expr_dot$subexpression$1\", \"symbols\": [\"star\"] },\n        { \"name\": \"expr_dot\", \"symbols\": [\"qname\", (lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), \"expr_dot$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ref',\n                table: unwrap(x[0]),\n                name: toStr(x[2])\n            }) },\n        { \"name\": \"expr_dot\", \"symbols\": [\"expr_final\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_final\", \"symbols\": [\"expr_basic\"] },\n        { \"name\": \"expr_final\", \"symbols\": [\"expr_primary\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_special_calls\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_call\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_array\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_case\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"expr_extract\"] },\n        { \"name\": \"expr_basic\", \"symbols\": [\"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'ref',\n                name: unwrap(x[0]),\n            }) },\n        { \"name\": \"expr_array$ebnf$1\", \"symbols\": [\"expr_subarray_items\"], \"postprocess\": id },\n        { \"name\": \"expr_array$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_array\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array), (lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_array$ebnf$1\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'array',\n                expressions: x[2] || [],\n            }) },\n        { \"name\": \"expr_array\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_array\") ? { type: \"kw_array\" } : kw_array), \"lparen\", \"selection\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'array select',\n                select: unwrap(x[2]),\n            }) },\n        { \"name\": \"expr_subarray$ebnf$1\", \"symbols\": [\"expr_subarray_items\"], \"postprocess\": id },\n        { \"name\": \"expr_subarray$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_subarray\", \"symbols\": [(lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket), \"expr_subarray$ebnf$1\", (lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)], \"postprocess\": get(1) },\n        { \"name\": \"expr_subarray_items$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_subarray_items$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_subarray_items$macrocall$1$ebnf$1\", \"symbols\": [\"expr_subarray_items$macrocall$1$ebnf$1\", \"expr_subarray_items$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_subarray_items$macrocall$1\", \"symbols\": [\"expr_subarray_items$macrocall$2\", \"expr_subarray_items$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_subarray_items\", \"symbols\": [\"expr_subarray_items$macrocall$1\"], \"postprocess\": x => x[0].map(unwrap) },\n        { \"name\": \"expr_subarray_items$macrocall$4\", \"symbols\": [\"expr_subarray\"] },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_subarray_items$macrocall$4\"], \"postprocess\": last },\n        { \"name\": \"expr_subarray_items$macrocall$3$ebnf$1\", \"symbols\": [\"expr_subarray_items$macrocall$3$ebnf$1\", \"expr_subarray_items$macrocall$3$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_subarray_items$macrocall$3\", \"symbols\": [\"expr_subarray_items$macrocall$4\", \"expr_subarray_items$macrocall$3$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_subarray_items\", \"symbols\": [\"expr_subarray_items$macrocall$3\"], \"postprocess\": (x) => {\n                return x[0].map((v) => {\n                    return (0, lexer_2.track)(v, {\n                        type: 'array',\n                        expressions: v[0].map(unwrap),\n                    });\n                });\n            } },\n        { \"name\": \"expr_function_call$ebnf$1\", \"symbols\": [\"expr_list_raw\"], \"postprocess\": id },\n        { \"name\": \"expr_function_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_function_call\", \"symbols\": [\"expr_fn_name\", \"lparen\", \"expr_function_call$ebnf$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'call',\n                function: unwrap(x[0]),\n                args: x[2] || [],\n            }) },\n        { \"name\": \"expr_call$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"expr_call$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_distinct\") ? { type: \"kw_distinct\" } : kw_distinct)] },\n        { \"name\": \"expr_call$ebnf$1\", \"symbols\": [\"expr_call$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$2\", \"symbols\": [\"expr_list_raw\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$3\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$4$subexpression$1\", \"symbols\": [\"kw_filter\", \"lparen\", (lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\", \"rparen\"], \"postprocess\": get(3) },\n        { \"name\": \"expr_call$ebnf$4\", \"symbols\": [\"expr_call$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$5\", \"symbols\": [\"expr_call_within_group\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call$ebnf$6\", \"symbols\": [\"expr_call_over\"], \"postprocess\": id },\n        { \"name\": \"expr_call$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call\", \"symbols\": [\"expr_fn_name\", \"lparen\", \"expr_call$ebnf$1\", \"expr_call$ebnf$2\", \"expr_call$ebnf$3\", \"rparen\", \"expr_call$ebnf$4\", \"expr_call$ebnf$5\", \"expr_call$ebnf$6\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'call',\n                function: unwrap(x[0]),\n                ...x[2] && { distinct: toStr(x[2]) },\n                args: x[3] || [],\n                ...x[4] && { orderBy: x[4] },\n                ...x[6] && { filter: unwrap(x[6]) },\n                ...x[7] && { withinGroup: x[7] },\n                ...x[8] && { over: unwrap(x[8]) },\n            }) },\n        { \"name\": \"expr_call_over$ebnf$1$subexpression$1\", \"symbols\": [\"kw_partition\", \"kw_by\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"expr_call_over$ebnf$1\", \"symbols\": [\"expr_call_over$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_call_over$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call_over$ebnf$2\", \"symbols\": [\"select_order_by\"], \"postprocess\": id },\n        { \"name\": \"expr_call_over$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_call_over\", \"symbols\": [\"kw_over\", \"lparen\", \"expr_call_over$ebnf$1\", \"expr_call_over$ebnf$2\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...x[2] && { partitionBy: x[2] },\n                ...x[3] && { orderBy: x[3] },\n            }) },\n        { \"name\": \"expr_call_within_group$subexpression$1\", \"symbols\": [\"kw_within\", (lexer_1.lexerAny.has(\"kw_group\") ? { type: \"kw_group\" } : kw_group)] },\n        { \"name\": \"expr_call_within_group$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_order\") ? { type: \"kw_order\" } : kw_order), \"kw_by\"] },\n        { \"name\": \"expr_call_within_group\", \"symbols\": [\"expr_call_within_group$subexpression$1\", \"lparen\", \"expr_call_within_group$subexpression$2\", \"select_order_by_expr\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, x[3]) },\n        { \"name\": \"expr_extract$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('extract') },\n        { \"name\": \"expr_extract\", \"symbols\": [\"expr_extract$subexpression$1\", \"lparen\", \"word\", (lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'extract',\n                field: asName(x[2]),\n                from: x[4],\n            }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"float\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'numeric', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"int\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'integer', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'string', value: (0, lexer_2.unbox)(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'boolean', value: true }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'boolean', value: false }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'null' }) },\n        { \"name\": \"expr_primary\", \"symbols\": [\"value_keyword\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'keyword', keyword: toStr(x) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"qparam\") ? { type: \"qparam\" } : qparam)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'parameter', name: toStr(x[0]) }) },\n        { \"name\": \"expr_primary\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"ops_like\", \"symbols\": [\"ops_like_keywors\"] },\n        { \"name\": \"ops_like\", \"symbols\": [\"ops_like_operators\"] },\n        { \"name\": \"ops_like_keywors$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_like_keywors$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_like_keywors$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like)] },\n        { \"name\": \"ops_like_keywors$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_ilike\") ? { type: \"kw_ilike\" } : kw_ilike)] },\n        { \"name\": \"ops_like_keywors\", \"symbols\": [\"ops_like_keywors$ebnf$1\", \"ops_like_keywors$subexpression$1\"] },\n        { \"name\": \"ops_like_operators$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_like\") ? { type: \"op_like\" } : op_like)], \"postprocess\": () => 'LIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$1\"] },\n        { \"name\": \"ops_like_operators$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"op_ilike\") ? { type: \"op_ilike\" } : op_ilike)], \"postprocess\": () => 'ILIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$2\"] },\n        { \"name\": \"ops_like_operators$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"op_not_like\") ? { type: \"op_not_like\" } : op_not_like)], \"postprocess\": () => 'NOT LIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$3\"] },\n        { \"name\": \"ops_like_operators$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"op_not_ilike\") ? { type: \"op_not_ilike\" } : op_not_ilike)], \"postprocess\": () => 'NOT ILIKE' },\n        { \"name\": \"ops_like_operators\", \"symbols\": [\"ops_like_operators$subexpression$4\"] },\n        { \"name\": \"ops_in$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_in$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_in\", \"symbols\": [\"ops_in$ebnf$1\", (lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"ops_between$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"ops_between$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"ops_between\", \"symbols\": [\"ops_between$ebnf$1\", \"kw_between\"] },\n        { \"name\": \"ops_member$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_member\") ? { type: \"op_member\" } : op_member)] },\n        { \"name\": \"ops_member$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_membertext\") ? { type: \"op_membertext\" } : op_membertext)] },\n        { \"name\": \"ops_member\", \"symbols\": [\"ops_member$subexpression$1\"], \"postprocess\": x => { var _a; return (_a = unwrap(x)) === null || _a === void 0 ? void 0 : _a.value; } },\n        { \"name\": \"expr_list_item\", \"symbols\": [\"expr_or_select\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_item\", \"symbols\": [\"expr_star\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_raw$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw$macrocall$1$ebnf$1\", \"expr_list_raw$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_list_raw$macrocall$1\", \"symbols\": [\"expr_list_raw$macrocall$2\", \"expr_list_raw$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_list_raw\", \"symbols\": [\"expr_list_raw$macrocall$1\"], \"postprocess\": ([x]) => x.map(unwrap) },\n        { \"name\": \"expr_list_raw_many$macrocall$2\", \"symbols\": [\"expr_list_item\"] },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw_many$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1\"] },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"expr_list_raw_many$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"expr_list_raw_many$macrocall$1$ebnf$1\", \"symbols\": [\"expr_list_raw_many$macrocall$1$ebnf$1\", \"expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_list_raw_many$macrocall$1\", \"symbols\": [\"expr_list_raw_many$macrocall$2\", \"expr_list_raw_many$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"expr_list_raw_many\", \"symbols\": [\"expr_list_raw_many$macrocall$1\"], \"postprocess\": ([x]) => x.map(unwrap) },\n        { \"name\": \"expr_or_select\", \"symbols\": [\"expr_nostar\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_or_select\", \"symbols\": [\"selection\"], \"postprocess\": unwrap },\n        { \"name\": \"expr_list_many\", \"symbols\": [\"expr_list_raw_many\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'list',\n                expressions: x[0],\n            }) },\n        { \"name\": \"expr_case$ebnf$1\", \"symbols\": [\"expr_nostar\"], \"postprocess\": id },\n        { \"name\": \"expr_case$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_case$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"expr_case$ebnf$2\", \"symbols\": [\"expr_case$ebnf$2\", \"expr_case_whens\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expr_case$ebnf$3\", \"symbols\": [\"expr_case_else\"], \"postprocess\": id },\n        { \"name\": \"expr_case$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_case\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_case\") ? { type: \"kw_case\" } : kw_case), \"expr_case$ebnf$1\", \"expr_case$ebnf$2\", \"expr_case$ebnf$3\", (lexer_1.lexerAny.has(\"kw_end\") ? { type: \"kw_end\" } : kw_end)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'case',\n                value: x[1],\n                whens: x[2],\n                else: x[3],\n            }) },\n        { \"name\": \"expr_case_whens\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_when\") ? { type: \"kw_when\" } : kw_when), \"expr_nostar\", (lexer_1.lexerAny.has(\"kw_then\") ? { type: \"kw_then\" } : kw_then), \"expr_nostar\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                when: x[1],\n                value: x[3],\n            }) },\n        { \"name\": \"expr_case_else\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_else\") ? { type: \"kw_else\" } : kw_else), \"expr_nostar\"], \"postprocess\": last },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1$subexpression$1\", \"symbols\": [\"word\", (lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot)] },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1\", \"symbols\": [\"expr_fn_name$subexpression$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"expr_fn_name$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"expr_fn_name$subexpression$1\", \"symbols\": [\"expr_fn_name$subexpression$1$ebnf$1\", \"word_or_keyword\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: (0, lexer_2.unbox)(unwrap(x[1])),\n                ...x[0] && { schema: toStr(x[0][0]) },\n            }) },\n        { \"name\": \"expr_fn_name\", \"symbols\": [\"expr_fn_name$subexpression$1\"] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_any\") ? { type: \"kw_any\" } : kw_any)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_some\") ? { type: \"kw_some\" } : kw_some)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_left\") ? { type: \"kw_left\" } : kw_left)] },\n        { \"name\": \"expr_fn_name$subexpression$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_right\") ? { type: \"kw_right\" } : kw_right)] },\n        { \"name\": \"expr_fn_name$subexpression$2\", \"symbols\": [\"expr_fn_name$subexpression$2$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: toStr(unwrap(x)),\n            }) },\n        { \"name\": \"expr_fn_name\", \"symbols\": [\"expr_fn_name$subexpression$2\"] },\n        { \"name\": \"word_or_keyword\", \"symbols\": [\"word\"] },\n        { \"name\": \"word_or_keyword\", \"symbols\": [\"value_keyword\"], \"postprocess\": x => (0, lexer_2.box)(x, toStr(x)) },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_catalog\") ? { type: \"kw_current_catalog\" } : kw_current_catalog)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_date\") ? { type: \"kw_current_date\" } : kw_current_date)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_role\") ? { type: \"kw_current_role\" } : kw_current_role)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_schema\") ? { type: \"kw_current_schema\" } : kw_current_schema)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_timestamp\") ? { type: \"kw_current_timestamp\" } : kw_current_timestamp)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_time\") ? { type: \"kw_current_time\" } : kw_current_time)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtimestamp\") ? { type: \"kw_localtimestamp\" } : kw_localtimestamp)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_localtime\") ? { type: \"kw_localtime\" } : kw_localtime)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"value_keyword\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"expr_special_calls\", \"symbols\": [\"spe_overlay\"] },\n        { \"name\": \"expr_special_calls\", \"symbols\": [\"spe_substring\"] },\n        { \"name\": \"spe_overlay$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('overlay') },\n        { \"name\": \"spe_overlay$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$subexpression$3\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_placing\") ? { type: \"kw_placing\" } : kw_placing), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$subexpression$4\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"expr_nostar\"] },\n        { \"name\": \"spe_overlay$ebnf$1\", \"symbols\": [\"spe_overlay$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_overlay$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_overlay\", \"symbols\": [\"spe_overlay$subexpression$1\", \"spe_overlay$subexpression$2\", \"spe_overlay$subexpression$3\", \"spe_overlay$subexpression$4\", \"spe_overlay$ebnf$1\", (lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'overlay',\n                value: x[1][1],\n                placing: x[2][1],\n                from: x[3][1],\n                ...x[4] && { for: x[4][1] },\n            }) },\n        { \"name\": \"spe_substring$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('substring') },\n        { \"name\": \"spe_substring$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$1\", \"symbols\": [\"spe_substring$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_substring$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_substring$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_for\") ? { type: \"kw_for\" } : kw_for), \"expr_nostar\"] },\n        { \"name\": \"spe_substring$ebnf$2\", \"symbols\": [\"spe_substring$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"spe_substring$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"spe_substring\", \"symbols\": [\"spe_substring$subexpression$1\", \"spe_substring$subexpression$2\", \"spe_substring$ebnf$1\", \"spe_substring$ebnf$2\", (lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'substring',\n                value: x[1][1],\n                ...x[2] && { from: x[2][1] },\n                ...x[3] && { for: x[3][1] },\n            }) },\n        { \"name\": \"various_binaries\", \"symbols\": [\"kw_at\", \"kw_time\", \"kw_zone\"], \"postprocess\": () => 'AT TIME ZONE' },\n        { \"name\": \"createtable_statement$ebnf$1\", \"symbols\": [\"createtable_modifiers\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement$ebnf$3\", \"symbols\": [\"createtable_opts\"], \"postprocess\": id },\n        { \"name\": \"createtable_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"createtable_statement$ebnf$1\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"createtable_statement$ebnf$2\", \"qname\", \"lparen\", \"createtable_declarationlist\", \"rparen\", \"createtable_statement$ebnf$3\"], \"postprocess\": x => {\n                const cols = x[6].filter((v) => 'kind' in v);\n                const constraints = x[6].filter((v) => !('kind' in v));\n                return (0, lexer_2.track)(x, {\n                    type: 'create table',\n                    ...!!x[3] ? { ifNotExists: true } : {},\n                    name: x[4],\n                    columns: cols,\n                    ...unwrap(x[1]),\n                    ...constraints.length ? { constraints } : {},\n                    ...last(x),\n                });\n            } },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"kw_unlogged\"], \"postprocess\": x => x[0] ? { unlogged: true } : {} },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_locglob\"] },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_tmp\"] },\n        { \"name\": \"createtable_modifiers\", \"symbols\": [\"m_locglob\", \"m_tmp\"], \"postprocess\": ([a, b]) => ({ ...a, ...b }) },\n        { \"name\": \"m_locglob$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"m_locglob$subexpression$1\", \"symbols\": [\"kw_global\"] },\n        { \"name\": \"m_locglob\", \"symbols\": [\"m_locglob$subexpression$1\"], \"postprocess\": x => ({ locality: toStr(x) }) },\n        { \"name\": \"m_tmp$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"m_tmp$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"m_tmp\", \"symbols\": [\"m_tmp$subexpression$1\"], \"postprocess\": x => ({ temporary: true }) },\n        { \"name\": \"createtable_declarationlist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_declarationlist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"createtable_declaration\"], \"postprocess\": last },\n        { \"name\": \"createtable_declarationlist$ebnf$1\", \"symbols\": [\"createtable_declarationlist$ebnf$1\", \"createtable_declarationlist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_declarationlist\", \"symbols\": [\"createtable_declaration\", \"createtable_declarationlist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_constraint\"] },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_column\"] },\n        { \"name\": \"createtable_declaration$subexpression$1\", \"symbols\": [\"createtable_like\"] },\n        { \"name\": \"createtable_declaration\", \"symbols\": [\"createtable_declaration$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_constraint$macrocall$2\", \"symbols\": [\"createtable_constraint_def\"] },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"word\"] },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_constraint$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createtable_constraint$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_constraint$macrocall$1\", \"symbols\": [\"createtable_constraint$macrocall$1$ebnf$1\", \"createtable_constraint$macrocall$2\"], \"postprocess\": x => {\n                const name = x[0] && asName(x[0][1]);\n                if (!name) {\n                    return (0, lexer_2.track)(x, unwrap(x[1]));\n                }\n                return (0, lexer_2.track)(x, {\n                    constraintName: name,\n                    ...unwrap(x[1]),\n                });\n            } },\n        { \"name\": \"createtable_constraint\", \"symbols\": [\"createtable_constraint$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_def_unique\"] },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_def_check\"] },\n        { \"name\": \"createtable_constraint_def\", \"symbols\": [\"createtable_constraint_foreignkey\"] },\n        { \"name\": \"createtable_constraint_def_unique$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)] },\n        { \"name\": \"createtable_constraint_def_unique$subexpression$1\", \"symbols\": [\"kw_primary_key\"] },\n        { \"name\": \"createtable_constraint_def_unique\", \"symbols\": [\"createtable_constraint_def_unique$subexpression$1\", \"lparen\", \"createtable_collist\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0], ' '),\n                columns: x[2].map(asName),\n            }) },\n        { \"name\": \"createtable_constraint_def_check\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"expr_paren\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'check',\n                expr: unwrap(x[1]),\n            }) },\n        { \"name\": \"createtable_constraint_foreignkey\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_foreign\") ? { type: \"kw_foreign\" } : kw_foreign), \"kw_key\", \"collist_paren\", \"createtable_references\"], \"postprocess\": (x) => {\n                return (0, lexer_2.track)(x, {\n                    type: 'foreign key',\n                    localColumns: x[2].map(asName),\n                    ...x[3],\n                });\n            } },\n        { \"name\": \"createtable_references$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_references$ebnf$1\", \"symbols\": [\"createtable_references$ebnf$1\", \"createtable_constraint_foreignkey_onsometing\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_references\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_references\") ? { type: \"kw_references\" } : kw_references), \"table_ref\", \"collist_paren\", \"createtable_references$ebnf$1\"], \"postprocess\": (x) => {\n                return (0, lexer_2.track)(x, {\n                    foreignTable: unwrap(x[1]),\n                    foreignColumns: x[2].map(asName),\n                    ...x[3].reduce((a, b) => ({ ...a, ...b }), {}),\n                });\n            } },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_delete\", \"createtable_constraint_on_action\"], \"postprocess\": x => (0, lexer_2.track)(x, { onDelete: last(x) }) },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_update\", \"createtable_constraint_on_action\"], \"postprocess\": x => (0, lexer_2.track)(x, { onUpdate: last(x) }) },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_full\") ? { type: \"kw_full\" } : kw_full)] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [\"kw_partial\"] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing$subexpression$1\", \"symbols\": [\"kw_simple\"] },\n        { \"name\": \"createtable_constraint_foreignkey_onsometing\", \"symbols\": [\"kw_match\", \"createtable_constraint_foreignkey_onsometing$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { match: toStr(last(x)) }) },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$1\", \"symbols\": [\"kw_no\", \"kw_action\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"createtable_constraint_on_action$subexpression$1$subexpression$1\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"createtable_constraint_on_action$subexpression$1\", \"symbols\": [\"kw_set\", \"createtable_constraint_on_action$subexpression$1$subexpression$2\"] },\n        { \"name\": \"createtable_constraint_on_action\", \"symbols\": [\"createtable_constraint_on_action$subexpression$1\"], \"postprocess\": x => toStr(x, ' ') },\n        { \"name\": \"createtable_collist$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_collist$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"createtable_collist$ebnf$1\", \"symbols\": [\"createtable_collist$ebnf$1\", \"createtable_collist$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_collist\", \"symbols\": [\"ident\", \"createtable_collist$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createtable_column$ebnf$1\", \"symbols\": [\"createtable_collate\"], \"postprocess\": id },\n        { \"name\": \"createtable_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_column$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"createtable_column$ebnf$2\", \"symbols\": [\"createtable_column$ebnf$2\", \"createtable_column_constraint\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_column\", \"symbols\": [\"word\", \"data_type\", \"createtable_column$ebnf$1\", \"createtable_column$ebnf$2\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    kind: 'column',\n                    name: asName(x[0]),\n                    dataType: x[1],\n                    ...x[2] ? { collate: x[2][1] } : {},\n                    ...x[3] && x[3].length ? { constraints: x[3] } : {},\n                });\n            } },\n        { \"name\": \"createtable_like$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_like$ebnf$1\", \"symbols\": [\"createtable_like$ebnf$1\", \"createtable_like_opt\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_like\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_like\") ? { type: \"kw_like\" } : kw_like), \"qname\", \"createtable_like$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                kind: 'like table',\n                like: x[1],\n                options: x[2],\n            }) },\n        { \"name\": \"createtable_like_opt$subexpression$1\", \"symbols\": [\"kw_including\"] },\n        { \"name\": \"createtable_like_opt$subexpression$1\", \"symbols\": [\"kw_excluding\"] },\n        { \"name\": \"createtable_like_opt\", \"symbols\": [\"createtable_like_opt$subexpression$1\", \"createtable_like_opt_val\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                verb: toStr(x[0]),\n                option: toStr(x[1]),\n            }) },\n        { \"name\": \"createtable_like_opt_val\", \"symbols\": [\"word\"], \"postprocess\": anyKw('defaults', 'constraints', 'indexes', 'storage', 'comments') },\n        { \"name\": \"createtable_like_opt_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)] },\n        { \"name\": \"createtable_column_constraint$macrocall$2\", \"symbols\": [\"createtable_column_constraint_def\"] },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"word\"] },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createtable_column_constraint$macrocall$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtable_column_constraint$macrocall$1\", \"symbols\": [\"createtable_column_constraint$macrocall$1$ebnf$1\", \"createtable_column_constraint$macrocall$2\"], \"postprocess\": x => {\n                const name = x[0] && asName(x[0][1]);\n                if (!name) {\n                    return (0, lexer_2.track)(x, unwrap(x[1]));\n                }\n                return (0, lexer_2.track)(x, {\n                    constraintName: name,\n                    ...unwrap(x[1]),\n                });\n            } },\n        { \"name\": \"createtable_column_constraint\", \"symbols\": [\"createtable_column_constraint$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'unique' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"kw_primary_key\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'primary key' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"kw_not_null\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'not null' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'null' }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default', default: unwrap(x[1]) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"expr_paren\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'check', expr: unwrap(x[1]) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"createtable_references\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'reference', ...unwrap(x) }) },\n        { \"name\": \"createtable_column_constraint_def\", \"symbols\": [\"altercol_generated\"] },\n        { \"name\": \"createtable_collate\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate), \"qualified_name\"] },\n        { \"name\": \"createtable_opts$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('inherits') },\n        { \"name\": \"createtable_opts$macrocall$2\", \"symbols\": [\"qname\"] },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtable_opts$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtable_opts$macrocall$1$ebnf$1\", \"symbols\": [\"createtable_opts$macrocall$1$ebnf$1\", \"createtable_opts$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtable_opts$macrocall$1\", \"symbols\": [\"createtable_opts$macrocall$2\", \"createtable_opts$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtable_opts\", \"symbols\": [\"createtable_opts$subexpression$1\", \"lparen\", \"createtable_opts$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, { inherits: x[2] }) },\n        { \"name\": \"createindex_statement$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_unique\") ? { type: \"kw_unique\" } : kw_unique)], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$3\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$4\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"ident\"], \"postprocess\": last },\n        { \"name\": \"createindex_statement$ebnf$5\", \"symbols\": [\"createindex_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$6\", \"symbols\": [\"createindex_with\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$7\", \"symbols\": [\"createindex_tblspace\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$7\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement$ebnf$8\", \"symbols\": [\"createindex_predicate\"], \"postprocess\": id },\n        { \"name\": \"createindex_statement$ebnf$8\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"createindex_statement$ebnf$1\", \"kw_index\", \"createindex_statement$ebnf$2\", \"createindex_statement$ebnf$3\", \"createindex_statement$ebnf$4\", (lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"table_ref\", \"createindex_statement$ebnf$5\", \"lparen\", \"createindex_expressions\", \"rparen\", \"createindex_statement$ebnf$6\", \"createindex_statement$ebnf$7\", \"createindex_statement$ebnf$8\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create index',\n                ...x[1] && { unique: true },\n                ...x[3] && { concurrently: true },\n                ...x[4] && { ifNotExists: true },\n                ...x[5] && { indexName: asName(x[5]) },\n                table: x[7],\n                ...x[8] && { using: asName(x[8]) },\n                expressions: x[10],\n                ...x[12] && { with: x[12] },\n                ...x[13] && { tablespace: unwrap(x[13]) },\n                ...x[14] && { where: unwrap(x[14]) },\n            }) },\n        { \"name\": \"createindex_expressions$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createindex_expressions$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"createindex_expression\"], \"postprocess\": last },\n        { \"name\": \"createindex_expressions$ebnf$1\", \"symbols\": [\"createindex_expressions$ebnf$1\", \"createindex_expressions$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createindex_expressions\", \"symbols\": [\"createindex_expression\", \"createindex_expressions$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"createindex_expression$subexpression$1\", \"symbols\": [\"expr_basic\"] },\n        { \"name\": \"createindex_expression$subexpression$1\", \"symbols\": [\"expr_paren\"] },\n        { \"name\": \"createindex_expression$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_collate\") ? { type: \"kw_collate\" } : kw_collate), \"qualified_name\"], \"postprocess\": last },\n        { \"name\": \"createindex_expression$ebnf$1\", \"symbols\": [\"createindex_expression$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$2\", \"symbols\": [\"qualified_name\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_asc\") ? { type: \"kw_asc\" } : kw_asc)] },\n        { \"name\": \"createindex_expression$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_desc\") ? { type: \"kw_desc\" } : kw_desc)] },\n        { \"name\": \"createindex_expression$ebnf$3\", \"symbols\": [\"createindex_expression$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\", \"symbols\": [\"kw_first\"] },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\", \"symbols\": [\"kw_last\"] },\n        { \"name\": \"createindex_expression$ebnf$4$subexpression$1\", \"symbols\": [\"kw_nulls\", \"createindex_expression$ebnf$4$subexpression$1$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"createindex_expression$ebnf$4\", \"symbols\": [\"createindex_expression$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createindex_expression$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createindex_expression\", \"symbols\": [\"createindex_expression$subexpression$1\", \"createindex_expression$ebnf$1\", \"createindex_expression$ebnf$2\", \"createindex_expression$ebnf$3\", \"createindex_expression$ebnf$4\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                expression: unwrap(x[0]),\n                ...x[1] && { collate: unwrap(x[1]) },\n                ...x[2] && { opclass: unwrap(x[2]) },\n                ...x[3] && { order: unwrap(x[3]).value },\n                ...x[4] && { nulls: unwrap(x[4]) },\n            }) },\n        { \"name\": \"createindex_predicate\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"createindex_with$macrocall$2\", \"symbols\": [\"createindex_with_item\"] },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createindex_with$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createindex_with$macrocall$1$ebnf$1\", \"symbols\": [\"createindex_with$macrocall$1$ebnf$1\", \"createindex_with$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createindex_with$macrocall$1\", \"symbols\": [\"createindex_with$macrocall$2\", \"createindex_with$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createindex_with\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"lparen\", \"createindex_with$macrocall$1\", \"rparen\"], \"postprocess\": get(2) },\n        { \"name\": \"createindex_with_item$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"createindex_with_item$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"createindex_with_item\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"createindex_with_item$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { parameter: toStr(x[0]), value: unwrap(x[2]).toString() }) },\n        { \"name\": \"createindex_tblspace\", \"symbols\": [\"kw_tablespace\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$3$subexpression$1\", \"symbols\": [\"kw_schema\", \"word\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$3\", \"symbols\": [\"createextension_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$4$subexpression$1\", \"symbols\": [\"kw_version\", \"string\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$4\", \"symbols\": [\"createextension_statement$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"string\"], \"postprocess\": last },\n        { \"name\": \"createextension_statement$ebnf$5\", \"symbols\": [\"createextension_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"createextension_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createextension_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_extension\", \"createextension_statement$ebnf$1\", \"word\", \"createextension_statement$ebnf$2\", \"createextension_statement$ebnf$3\", \"createextension_statement$ebnf$4\", \"createextension_statement$ebnf$5\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create extension',\n                ...!!x[2] ? { ifNotExists: true } : {},\n                extension: asName(x[3]),\n                ...!!x[5] ? { schema: asName(x[5]) } : {},\n                ...!!x[6] ? { version: asLit(x[6]) } : {},\n                ...!!x[7] ? { from: asLit(x[7]) } : {},\n            }) },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_start_transaction\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_commit\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_rollback\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_tablespace\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_set\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_show\"] },\n        { \"name\": \"simplestatements_all\", \"symbols\": [\"simplestatements_begin\"] },\n        { \"name\": \"simplestatements_start_transaction$subexpression$1\", \"symbols\": [\"kw_start\", \"kw_transaction\"] },\n        { \"name\": \"simplestatements_start_transaction\", \"symbols\": [\"simplestatements_start_transaction$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'start transaction' }) },\n        { \"name\": \"simplestatements_commit\", \"symbols\": [\"kw_commit\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'commit' }) },\n        { \"name\": \"simplestatements_rollback\", \"symbols\": [\"kw_rollback\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'rollback' }) },\n        { \"name\": \"simplestatements_tablespace\", \"symbols\": [\"kw_tablespace\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'tablespace',\n                tablespace: asName(x[1]),\n            }) },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_simple\"] },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_timezone\"] },\n        { \"name\": \"simplestatements_set$subexpression$1\", \"symbols\": [\"simplestatements_set_names\"] },\n        { \"name\": \"simplestatements_set\", \"symbols\": [\"kw_set\", \"simplestatements_set$subexpression$1\"], \"postprocess\": last },\n        { \"name\": \"simplestatements_set_timezone\", \"symbols\": [\"kw_time\", \"kw_zone\", \"simplestatements_set_timezone_val\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set timezone', to: x[2] }) },\n        { \"name\": \"simplestatements_set_timezone_val$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_timezone_val$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"simplestatements_set_timezone_val$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x[0]) }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"kw_local\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'local' }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"simplestatements_set_timezone_val\", \"symbols\": [\"kw_interval\", \"string\", \"kw_hour\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"kw_minute\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'interval', value: (0, lexer_2.unbox)(x[1]) }) },\n        { \"name\": \"simplestatements_set_names\", \"symbols\": [\"kw_names\", \"simplestatements_set_names_val\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set names', to: x[1] }) },\n        { \"name\": \"simplestatements_set_names_val$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_names_val\", \"symbols\": [\"simplestatements_set_names_val$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x[0]) }) },\n        { \"name\": \"simplestatements_set_simple$ebnf$1$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"simplestatements_set_simple$ebnf$1$subexpression$1\", \"symbols\": [\"kw_session\"] },\n        { \"name\": \"simplestatements_set_simple$ebnf$1\", \"symbols\": [\"simplestatements_set_simple$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"simplestatements_set_simple$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_set_simple$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq)] },\n        { \"name\": \"simplestatements_set_simple$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to)] },\n        { \"name\": \"simplestatements_set_simple\", \"symbols\": [\"simplestatements_set_simple$ebnf$1\", \"ident\", \"simplestatements_set_simple$subexpression$1\", \"simplestatements_set_val\"], \"postprocess\": x => {\n                var _a;\n                return (0, lexer_2.track)(x, {\n                    type: 'set',\n                    variable: asName(x[1]),\n                    scope: (_a = unwrap(x[0])) === null || _a === void 0 ? void 0 : _a.toLowerCase(),\n                    set: (0, lexer_2.unbox)(x[3]),\n                });\n            } },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [\"simplestatements_set_val_raw\"], \"postprocess\": unwrap },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'default' }) },\n        { \"name\": \"simplestatements_set_val$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"simplestatements_set_val_raw\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1\", \"symbols\": [\"simplestatements_set_val$ebnf$1$subexpression$1\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1$subexpression$2\", \"symbols\": [\"comma\", \"simplestatements_set_val_raw\"] },\n        { \"name\": \"simplestatements_set_val$ebnf$1\", \"symbols\": [\"simplestatements_set_val$ebnf$1\", \"simplestatements_set_val$ebnf$1$subexpression$2\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"simplestatements_set_val\", \"symbols\": [\"simplestatements_set_val_raw\", \"simplestatements_set_val$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'list',\n                values: [x[0], ...(x[1] || [])]\n            }) },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [\"simplestatements_set_val_raw$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'value', value: unwrap(x) }) },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_true\") ? { type: \"kw_true\" } : kw_true)] },\n        { \"name\": \"simplestatements_set_val_raw$subexpression$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_false\") ? { type: \"kw_false\" } : kw_false)] },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [\"simplestatements_set_val_raw$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'identifier', name: unwrap(x).value }) },\n        { \"name\": \"simplestatements_set_val_raw\", \"symbols\": [(lexer_1.lexerAny.has(\"quoted_word\") ? { type: \"quoted_word\" } : quoted_word)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'identifier', doubleQuoted: true, name: unwrap(x).value }) },\n        { \"name\": \"simplestatements_show\", \"symbols\": [\"kw_show\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'show', variable: asName(x[1]) }) },\n        { \"name\": \"create_schema$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_schema\"] },\n        { \"name\": \"create_schema$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_schema$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_schema\", \"symbols\": [\"create_schema$subexpression$1\", \"create_schema$ebnf$1\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create schema',\n                name: asName(x[2]),\n                ...!!x[1] ? { ifNotExists: true } : {},\n            }) },\n        { \"name\": \"raise_statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('debug', 'log', 'info', 'notice', 'warning', 'exception') },\n        { \"name\": \"raise_statement$ebnf$1\", \"symbols\": [\"raise_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement$ebnf$2$subexpression$1\", \"symbols\": [\"comma\", \"expr_list_raw\"], \"postprocess\": last },\n        { \"name\": \"raise_statement$ebnf$2\", \"symbols\": [\"raise_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement$ebnf$3\", \"symbols\": [\"raise_using\"], \"postprocess\": id },\n        { \"name\": \"raise_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"raise_statement\", \"symbols\": [\"kw_raise\", \"raise_statement$ebnf$1\", \"string\", \"raise_statement$ebnf$2\", \"raise_statement$ebnf$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'raise',\n                format: toStr(x[2]),\n                ...x[1] && { level: toStr(x[1]) },\n                ...x[3] && x[3].length && { formatExprs: x[3] },\n                ...x[4] && x[4].length && { using: x[4] },\n            }) },\n        { \"name\": \"raise_using$macrocall$2\", \"symbols\": [\"raise_using_one\"] },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"raise_using$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"raise_using$macrocall$1$ebnf$1\", \"symbols\": [\"raise_using$macrocall$1$ebnf$1\", \"raise_using$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"raise_using$macrocall$1\", \"symbols\": [\"raise_using$macrocall$2\", \"raise_using$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"raise_using\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_using\") ? { type: \"kw_using\" } : kw_using), \"raise_using$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"raise_using_one\", \"symbols\": [\"raise_using_what\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0]),\n                value: x[2],\n            }) },\n        { \"name\": \"raise_using_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"raise_using_what\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('message', 'detail', 'hint', 'errcode', 'column', 'constraint', 'datatype', 'schema') },\n        { \"name\": \"comment_statement\", \"symbols\": [\"kw_comment\", (lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"comment_what\", (lexer_1.lexerAny.has(\"kw_is\") ? { type: \"kw_is\" } : kw_is), \"string\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'comment',\n                comment: (0, lexer_2.unbox)(last(x)),\n                on: unwrap(x[2]),\n            }) },\n        { \"name\": \"comment_what\", \"symbols\": [\"comment_what_col\"] },\n        { \"name\": \"comment_what\", \"symbols\": [\"comment_what_nm\"] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [\"kw_materialized\", \"kw_view\"] },\n        { \"name\": \"comment_what_nm$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"word\") ? { type: \"word\" } : word)], \"postprocess\": anyKw('database', 'index', 'trigger', 'type', 'view') },\n        { \"name\": \"comment_what_nm\", \"symbols\": [\"comment_what_nm$subexpression$1\", \"qualified_name\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: toStr(x[0]),\n                name: x[1],\n            }) },\n        { \"name\": \"comment_what_col\", \"symbols\": [\"kw_column\", \"qcolumn\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'column',\n                column: last(x),\n            }) },\n        { \"name\": \"simplestatements_begin$ebnf$1$subexpression$1\", \"symbols\": [\"kw_transaction\"] },\n        { \"name\": \"simplestatements_begin$ebnf$1$subexpression$1\", \"symbols\": [\"kw_work\"] },\n        { \"name\": \"simplestatements_begin$ebnf$1\", \"symbols\": [\"simplestatements_begin$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"simplestatements_begin$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_begin$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_isol\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_writ\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2$subexpression$1\", \"symbols\": [\"simplestatements_begin_def\"] },\n        { \"name\": \"simplestatements_begin$ebnf$2\", \"symbols\": [\"simplestatements_begin$ebnf$2\", \"simplestatements_begin$ebnf$2$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"simplestatements_begin\", \"symbols\": [\"kw_begin\", \"simplestatements_begin$ebnf$1\", \"simplestatements_begin$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'begin',\n                ...x[2].reduce((a, b) => ({ ...unwrap(a), ...unwrap(b) }), {}),\n            })\n        },\n        { \"name\": \"simplestatements_begin_isol$subexpression$1\", \"symbols\": [\"kw_isolation\", \"kw_level\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_serializable\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('repeatable') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"simplestatements_begin_isol$subexpression$2$subexpression$1\", \"kw_read\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$2\", \"symbols\": [\"word\"], \"postprocess\": kw('committed') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_read\", \"simplestatements_begin_isol$subexpression$2$subexpression$2\"] },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2$subexpression$3\", \"symbols\": [\"word\"], \"postprocess\": kw('uncommitted') },\n        { \"name\": \"simplestatements_begin_isol$subexpression$2\", \"symbols\": [\"kw_read\", \"simplestatements_begin_isol$subexpression$2$subexpression$3\"] },\n        { \"name\": \"simplestatements_begin_isol\", \"symbols\": [\"simplestatements_begin_isol$subexpression$1\", \"simplestatements_begin_isol$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                isolationLevel: toStr(x[1], ' '),\n            }) },\n        { \"name\": \"simplestatements_begin_writ$subexpression$1\", \"symbols\": [\"kw_read\", \"kw_write\"] },\n        { \"name\": \"simplestatements_begin_writ$subexpression$1\", \"symbols\": [\"kw_read\", (lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)] },\n        { \"name\": \"simplestatements_begin_writ\", \"symbols\": [\"simplestatements_begin_writ$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                writeable: toStr(x, ' '),\n            }) },\n        { \"name\": \"simplestatements_begin_def$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"simplestatements_begin_def$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"simplestatements_begin_def\", \"symbols\": [\"simplestatements_begin_def$ebnf$1\", (lexer_1.lexerAny.has(\"kw_deferrable\") ? { type: \"kw_deferrable\" } : kw_deferrable)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                deferrable: !x[0]\n            }) },\n        { \"name\": \"insert_statement$subexpression$1\", \"symbols\": [\"kw_insert\", (lexer_1.lexerAny.has(\"kw_into\") ? { type: \"kw_into\" } : kw_into)] },\n        { \"name\": \"insert_statement$ebnf$1\", \"symbols\": [\"collist_paren\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [\"kw_system\"] },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_user\") ? { type: \"kw_user\" } : kw_user)] },\n        { \"name\": \"insert_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_overriding\", \"insert_statement$ebnf$2$subexpression$1$subexpression$1\", \"kw_value\"], \"postprocess\": get(1) },\n        { \"name\": \"insert_statement$ebnf$2\", \"symbols\": [\"insert_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$3$subexpression$1\", \"symbols\": [\"selection\"] },\n        { \"name\": \"insert_statement$ebnf$3$subexpression$1\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"insert_statement$ebnf$3\", \"symbols\": [\"insert_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$4$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), \"kw_conflict\", \"insert_on_conflict\"], \"postprocess\": last },\n        { \"name\": \"insert_statement$ebnf$4\", \"symbols\": [\"insert_statement$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"insert_statement$ebnf$5\", \"symbols\": [\"insert_statement$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_statement$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_statement\", \"symbols\": [\"insert_statement$subexpression$1\", \"table_ref_aliased\", \"insert_statement$ebnf$1\", \"insert_statement$ebnf$2\", \"insert_statement$ebnf$3\", \"insert_statement$ebnf$4\", \"insert_statement$ebnf$5\"], \"postprocess\": x => {\n                const columns = x[2] && x[2].map(asName);\n                const overriding = toStr(x[3]);\n                const insert = unwrap(x[4]);\n                const onConflict = x[5];\n                const returning = x[6];\n                return (0, lexer_2.track)(x, {\n                    type: 'insert',\n                    into: unwrap(x[1]),\n                    insert,\n                    ...overriding && { overriding },\n                    ...columns && { columns },\n                    ...returning && { returning },\n                    ...onConflict && { onConflict },\n                });\n            } },\n        { \"name\": \"insert_values$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"insert_values$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"insert_value\"], \"postprocess\": last },\n        { \"name\": \"insert_values$ebnf$1\", \"symbols\": [\"insert_values$ebnf$1\", \"insert_values$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"insert_values\", \"symbols\": [\"insert_value\", \"insert_values$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"insert_value\", \"symbols\": [\"lparen\", \"insert_expr_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"insert_expr_list_raw$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"insert_expr_list_raw$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"expr_or_select\"], \"postprocess\": last },\n        { \"name\": \"insert_expr_list_raw$ebnf$1\", \"symbols\": [\"insert_expr_list_raw$ebnf$1\", \"insert_expr_list_raw$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"insert_expr_list_raw\", \"symbols\": [\"expr_or_select\", \"insert_expr_list_raw$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"insert_on_conflict$ebnf$1\", \"symbols\": [\"insert_on_conflict_what\"], \"postprocess\": id },\n        { \"name\": \"insert_on_conflict$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_on_conflict\", \"symbols\": [\"insert_on_conflict$ebnf$1\", \"insert_on_conflict_do\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                ...x[0] ? { on: unwrap(x[0]) } : {},\n                ...x[1],\n            }) },\n        { \"name\": \"insert_on_conflict_what\", \"symbols\": [\"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'on expr',\n                exprs: x[1],\n            }) },\n        { \"name\": \"insert_on_conflict_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"qname\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'on constraint',\n                constraint: last(x),\n            }) },\n        { \"name\": \"insert_on_conflict_do\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"kw_nothing\"], \"postprocess\": x => ({ do: 'do nothing' }) },\n        { \"name\": \"insert_on_conflict_do$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"kw_update\", \"kw_set\"] },\n        { \"name\": \"insert_on_conflict_do$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_where\") ? { type: \"kw_where\" } : kw_where), \"expr\"], \"postprocess\": last },\n        { \"name\": \"insert_on_conflict_do$ebnf$1\", \"symbols\": [\"insert_on_conflict_do$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"insert_on_conflict_do$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"insert_on_conflict_do\", \"symbols\": [\"insert_on_conflict_do$subexpression$1\", \"update_set_list\", \"insert_on_conflict_do$ebnf$1\"], \"postprocess\": x => ({\n                do: { sets: x[1] },\n                ...x[2] && { where: x[2] },\n            }) },\n        { \"name\": \"update_statement$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from), \"select_from_subject\"], \"postprocess\": last },\n        { \"name\": \"update_statement$ebnf$1\", \"symbols\": [\"update_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement$ebnf$2\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement$ebnf$3$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"update_statement$ebnf$3\", \"symbols\": [\"update_statement$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"update_statement$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"update_statement\", \"symbols\": [\"kw_update\", \"table_ref_aliased\", \"kw_set\", \"update_set_list\", \"update_statement$ebnf$1\", \"update_statement$ebnf$2\", \"update_statement$ebnf$3\"], \"postprocess\": x => {\n                const from = unwrap(x[4]);\n                const where = unwrap(x[5]);\n                const returning = x[6];\n                return (0, lexer_2.track)(x, {\n                    type: 'update',\n                    table: unwrap(x[1]),\n                    sets: x[3],\n                    ...where ? { where } : {},\n                    ...from ? { from } : {},\n                    ...returning ? { returning } : {},\n                });\n            } },\n        { \"name\": \"update_set_list$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"update_set_list$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"update_set\"], \"postprocess\": last },\n        { \"name\": \"update_set_list$ebnf$1\", \"symbols\": [\"update_set_list$ebnf$1\", \"update_set_list$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"update_set_list\", \"symbols\": [\"update_set\", \"update_set_list$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                const ret = [];\n                for (const _t of [head, ...(tail || [])]) {\n                    const t = unwrap(_t);\n                    if (Array.isArray(t)) {\n                        ret.push(...t);\n                    }\n                    else {\n                        ret.push(t);\n                    }\n                }\n                return ret;\n            } },\n        { \"name\": \"update_set\", \"symbols\": [\"update_set_one\"] },\n        { \"name\": \"update_set\", \"symbols\": [\"update_set_multiple\"] },\n        { \"name\": \"update_set_one\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => (0, lexer_2.box)(x, {\n                column: asName(x[0]),\n                value: unwrap(x[2]),\n            }) },\n        { \"name\": \"update_set_multiple$subexpression$1\", \"symbols\": [\"lparen\", \"expr_list_raw\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"update_set_multiple\", \"symbols\": [\"collist_paren\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"update_set_multiple$subexpression$1\"], \"postprocess\": x => {\n                const cols = x[0];\n                const exprs = x[2];\n                if (cols.length !== exprs.length) {\n                    throw new Error('number of columns does not match number of values');\n                }\n                return (0, lexer_2.box)(x, cols.map((x, i) => ({\n                    column: asName(x),\n                    value: unwrap(exprs[i]),\n                })));\n            } },\n        { \"name\": \"altertable_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_statement$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_only\") ? { type: \"kw_only\" } : kw_only)], \"postprocess\": id },\n        { \"name\": \"altertable_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_statement\", \"symbols\": [\"kw_alter\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"altertable_statement$ebnf$1\", \"altertable_statement$ebnf$2\", \"table_ref\", \"altertable_actions\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter table',\n                ...x[2] ? { ifExists: true } : {},\n                ...x[3] ? { only: true } : {},\n                table: unwrap(x[4]),\n                changes: (0, lexer_2.unbox)(x[5]).map(unwrap),\n            }) },\n        { \"name\": \"altertable_actions$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"altertable_actions$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"altertable_action\"], \"postprocess\": last },\n        { \"name\": \"altertable_actions$ebnf$1\", \"symbols\": [\"altertable_actions$ebnf$1\", \"altertable_actions$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"altertable_actions\", \"symbols\": [\"altertable_action\", \"altertable_actions$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_table\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_rename_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_add_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_drop_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_alter_column\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_add_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_drop_constraint\"] },\n        { \"name\": \"altertable_action\", \"symbols\": [\"altertable_owner\"] },\n        { \"name\": \"altertable_rename_table\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_rename_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_rename_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_rename_column\", \"symbols\": [\"kw_rename\", \"altertable_rename_column$ebnf$1\", \"ident\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename column',\n                column: asName(x[2]),\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_rename_constraint\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"ident\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename constraint',\n                constraint: asName(x[2]),\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altertable_add_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_add_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_add_column$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_add_column$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_add_column\", \"symbols\": [\"kw_add\", \"altertable_add_column$ebnf$1\", \"altertable_add_column$ebnf$2\", \"createtable_column\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add column',\n                ...x[2] ? { ifNotExists: true } : {},\n                column: unwrap(x[3]),\n            }) },\n        { \"name\": \"altertable_drop_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column$ebnf$2\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column$ebnf$3$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"altertable_drop_column$ebnf$3$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"altertable_drop_column$ebnf$3\", \"symbols\": [\"altertable_drop_column$ebnf$3$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_column$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_column\", \"symbols\": [\"kw_drop\", \"altertable_drop_column$ebnf$1\", \"altertable_drop_column$ebnf$2\", \"ident\", \"altertable_drop_column$ebnf$3\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop column',\n                ...x[2] ? { ifExists: true } : {},\n                column: asName(x[3]),\n                ...x[4] ? { behaviour: toStr(x[4], ' ') } : {},\n            }) },\n        { \"name\": \"altertable_alter_column$ebnf$1\", \"symbols\": [\"kw_column\"], \"postprocess\": id },\n        { \"name\": \"altertable_alter_column$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_alter_column\", \"symbols\": [\"kw_alter\", \"altertable_alter_column$ebnf$1\", \"ident\", \"altercol\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter column',\n                column: asName(x[2]),\n                alter: unwrap(x[3])\n            }) },\n        { \"name\": \"altercol$ebnf$1$subexpression$1\", \"symbols\": [\"kw_set\", \"kw_data\"] },\n        { \"name\": \"altercol$ebnf$1\", \"symbols\": [\"altercol$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol$ebnf$1\", \"kw_type\", \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set type', dataType: unwrap(last(x)) }) },\n        { \"name\": \"altercol\", \"symbols\": [\"kw_set\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set default', default: unwrap(last(x)) }) },\n        { \"name\": \"altercol\", \"symbols\": [\"kw_drop\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop default' }) },\n        { \"name\": \"altercol$subexpression$1\", \"symbols\": [\"kw_set\"] },\n        { \"name\": \"altercol$subexpression$1\", \"symbols\": [\"kw_drop\"] },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol$subexpression$1\", \"kw_not_null\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: toStr(x, ' ') }) },\n        { \"name\": \"altercol\", \"symbols\": [\"altercol_generated_add\"], \"postprocess\": unwrap },\n        { \"name\": \"altertable_add_constraint\", \"symbols\": [\"kw_add\", \"createtable_constraint\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add constraint',\n                constraint: unwrap(last(x)),\n            }) },\n        { \"name\": \"altertable_drop_constraint$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_constraint$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_constraint$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"altertable_drop_constraint$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"altertable_drop_constraint$ebnf$2\", \"symbols\": [\"altertable_drop_constraint$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altertable_drop_constraint$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altertable_drop_constraint\", \"symbols\": [\"kw_drop\", (lexer_1.lexerAny.has(\"kw_constraint\") ? { type: \"kw_constraint\" } : kw_constraint), \"altertable_drop_constraint$ebnf$1\", \"ident\", \"altertable_drop_constraint$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop constraint',\n                ...x[2] ? { ifExists: true } : {},\n                constraint: asName(x[3]),\n                ...x[4] ? { behaviour: toStr(x[4], ' ') } : {},\n            }) },\n        { \"name\": \"altertable_owner\", \"symbols\": [\"kw_owner\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'owner',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"altercol_generated_add\", \"symbols\": [\"kw_add\", \"altercol_generated\"], \"postprocess\": last },\n        { \"name\": \"altercol_generated$ebnf$1$subexpression$1\", \"symbols\": [\"kw_always\"] },\n        { \"name\": \"altercol_generated$ebnf$1$subexpression$1\", \"symbols\": [\"kw_by\", (lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default)] },\n        { \"name\": \"altercol_generated$ebnf$1\", \"symbols\": [\"altercol_generated$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"kw_identity\"] },\n        { \"name\": \"altercol_generated$ebnf$2$subexpression$1\", \"symbols\": [\"lparen\", \"altercol_generated_seq\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"altercol_generated$ebnf$2\", \"symbols\": [\"altercol_generated$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated\", \"symbols\": [\"kw_generated\", \"altercol_generated$ebnf$1\", \"altercol_generated$subexpression$1\", \"altercol_generated$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'add generated',\n                ...x[1] && { always: toStr(x[1], ' ') },\n                ...x[3] && { sequence: unwrap(x[3]) },\n            }) },\n        { \"name\": \"altercol_generated_seq$ebnf$1$subexpression$1\", \"symbols\": [\"kw_sequence\", \"kw_name\", \"qualified_name\"] },\n        { \"name\": \"altercol_generated_seq$ebnf$1\", \"symbols\": [\"altercol_generated_seq$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"altercol_generated_seq$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"altercol_generated_seq$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"altercol_generated_seq$ebnf$2\", \"symbols\": [\"altercol_generated_seq$ebnf$2\", \"create_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"altercol_generated_seq\", \"symbols\": [\"altercol_generated_seq$ebnf$1\", \"altercol_generated_seq$ebnf$2\"], \"postprocess\": x => {\n                const ret = {\n                    ...x[0] && { name: unwrap(last(x[0])) },\n                };\n                setSeqOpts(ret, x[1]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alterindex_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"alterindex_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alterindex_statement\", \"symbols\": [\"kw_alter\", \"kw_index\", \"alterindex_statement$ebnf$1\", \"table_ref\", \"alterindex_action\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter index',\n                ...x[2] ? { ifExists: true } : {},\n                index: unwrap(x[3]),\n                change: unwrap(x[4]),\n            }) },\n        { \"name\": \"alterindex_action\", \"symbols\": [\"alterindex_rename\"] },\n        { \"name\": \"alterindex_action\", \"symbols\": [\"alterindex_set_tablespace\"] },\n        { \"name\": \"alterindex_rename\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'rename',\n                to: asName(last(x)),\n            }) },\n        { \"name\": \"alterindex_set_tablespace\", \"symbols\": [\"kw_set\", \"kw_tablespace\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'set tablespace',\n                tablespace: asName(last(x)),\n            }) },\n        { \"name\": \"delete_statement\", \"symbols\": [\"delete_delete\"] },\n        { \"name\": \"delete_statement\", \"symbols\": [\"delete_truncate\"] },\n        { \"name\": \"delete_delete$subexpression$1\", \"symbols\": [\"kw_delete\", (lexer_1.lexerAny.has(\"kw_from\") ? { type: \"kw_from\" } : kw_from)] },\n        { \"name\": \"delete_delete$ebnf$1\", \"symbols\": [\"select_where\"], \"postprocess\": id },\n        { \"name\": \"delete_delete$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_delete$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_returning\") ? { type: \"kw_returning\" } : kw_returning), \"select_expr_list_aliased\"], \"postprocess\": last },\n        { \"name\": \"delete_delete$ebnf$2\", \"symbols\": [\"delete_delete$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_delete$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_delete\", \"symbols\": [\"delete_delete$subexpression$1\", \"table_ref_aliased\", \"delete_delete$ebnf$1\", \"delete_delete$ebnf$2\"], \"postprocess\": x => {\n                const where = x[2];\n                const returning = x[3];\n                return (0, lexer_2.track)(x, {\n                    type: 'delete',\n                    from: unwrap(x[1]),\n                    ...where ? { where } : {},\n                    ...returning ? { returning } : {},\n                });\n            } },\n        { \"name\": \"delete_truncate$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)], \"postprocess\": id },\n        { \"name\": \"delete_truncate$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate$subexpression$1\", \"symbols\": [\"kw_truncate\", \"delete_truncate$subexpression$1$ebnf$1\"] },\n        { \"name\": \"delete_truncate$macrocall$2\", \"symbols\": [\"table_ref\"] },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"delete_truncate$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"delete_truncate$macrocall$1$ebnf$1\", \"symbols\": [\"delete_truncate$macrocall$1$ebnf$1\", \"delete_truncate$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"delete_truncate$macrocall$1\", \"symbols\": [\"delete_truncate$macrocall$2\", \"delete_truncate$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"symbols\": [\"kw_restart\"] },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"symbols\": [\"kw_continue\"] },\n        { \"name\": \"delete_truncate$ebnf$1$subexpression$1\", \"symbols\": [\"delete_truncate$ebnf$1$subexpression$1$subexpression$1\", \"kw_identity\"] },\n        { \"name\": \"delete_truncate$ebnf$1\", \"symbols\": [\"delete_truncate$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_truncate$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"delete_truncate$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"delete_truncate$ebnf$2\", \"symbols\": [\"delete_truncate$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"delete_truncate$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"delete_truncate\", \"symbols\": [\"delete_truncate$subexpression$1\", \"delete_truncate$macrocall$1\", \"delete_truncate$ebnf$1\", \"delete_truncate$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'truncate table',\n                tables: x[1],\n                ...x[2] && { identity: toStr(x[2][0]) },\n                ...x[3] && { cascade: toStr(x[3]) },\n            }) },\n        { \"name\": \"create_sequence_statement$ebnf$1$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"create_sequence_statement$ebnf$1$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"create_sequence_statement$ebnf$1\", \"symbols\": [\"create_sequence_statement$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_statement$ebnf$2\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_statement$ebnf$3\", \"symbols\": [] },\n        { \"name\": \"create_sequence_statement$ebnf$3\", \"symbols\": [\"create_sequence_statement$ebnf$3\", \"create_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_sequence_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_sequence_statement$ebnf$1\", \"kw_sequence\", \"create_sequence_statement$ebnf$2\", \"qualified_name\", \"create_sequence_statement$ebnf$3\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'create sequence',\n                    ...x[1] && { temp: true },\n                    ...x[3] && { ifNotExists: true },\n                    name: unwrap(x[4]),\n                    options: {},\n                };\n                setSeqOpts(ret.options, x[5]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"create_sequence_option\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"data_type\"], \"postprocess\": x => (0, lexer_2.box)(x, ['as', x[1]]) },\n        { \"name\": \"create_sequence_option$ebnf$1\", \"symbols\": [\"kw_by\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_increment\", \"create_sequence_option$ebnf$1\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['incrementBy', x[2]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_minvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, ['minValue', x[0]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_maxvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, ['maxValue', x[0]]) },\n        { \"name\": \"create_sequence_option$ebnf$2\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_start\", \"create_sequence_option$ebnf$2\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['startWith', x[2]]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"kw_cache\", \"int\"], \"postprocess\": x => (0, lexer_2.box)(x, ['cache', x[1]]) },\n        { \"name\": \"create_sequence_option$ebnf$3\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"create_sequence_option$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_option$ebnf$3\", \"kw_cycle\"], \"postprocess\": x => (0, lexer_2.box)(x, ['cycle', toStr(x, ' ')]) },\n        { \"name\": \"create_sequence_option\", \"symbols\": [\"create_sequence_owned_by\"], \"postprocess\": x => (0, lexer_2.box)(x, ['ownedBy', unwrap(x)]) },\n        { \"name\": \"create_sequence_minvalue\", \"symbols\": [\"kw_minvalue\", \"int\"], \"postprocess\": last },\n        { \"name\": \"create_sequence_minvalue\", \"symbols\": [\"kw_no\", \"kw_minvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, 'no minvalue') },\n        { \"name\": \"create_sequence_maxvalue\", \"symbols\": [\"kw_maxvalue\", \"int\"], \"postprocess\": last },\n        { \"name\": \"create_sequence_maxvalue\", \"symbols\": [\"kw_no\", \"kw_maxvalue\"], \"postprocess\": x => (0, lexer_2.box)(x, 'no maxvalue') },\n        { \"name\": \"create_sequence_owned_by$subexpression$1\", \"symbols\": [\"kw_none\"] },\n        { \"name\": \"create_sequence_owned_by$subexpression$1\", \"symbols\": [\"qcolumn\"] },\n        { \"name\": \"create_sequence_owned_by\", \"symbols\": [\"kw_owned\", \"kw_by\", \"create_sequence_owned_by$subexpression$1\"], \"postprocess\": x => (0, lexer_2.box)(x, unwrap(last(x))) },\n        { \"name\": \"alter_sequence_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"alter_sequence_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_statement\", \"symbols\": [\"kw_alter\", \"kw_sequence\", \"alter_sequence_statement$ebnf$1\", \"qualified_name\", \"alter_sequence_statement_body\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'alter sequence',\n                    ...x[2] && { ifExists: true },\n                    name: unwrap(x[3]),\n                    change: x[4],\n                };\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alter_sequence_statement_body$ebnf$1\", \"symbols\": [\"alter_sequence_option\"] },\n        { \"name\": \"alter_sequence_statement_body$ebnf$1\", \"symbols\": [\"alter_sequence_statement_body$ebnf$1\", \"alter_sequence_option\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"alter_sequence_statement_body$ebnf$1\"], \"postprocess\": x => {\n                const ret = {\n                    type: 'set options',\n                };\n                setSeqOpts(ret, x[0]);\n                return (0, lexer_2.track)(x, ret);\n            } },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [\"ident\"] },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_session_user\") ? { type: \"kw_session_user\" } : kw_session_user)] },\n        { \"name\": \"alter_sequence_statement_body$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_current_user\") ? { type: \"kw_current_user\" } : kw_current_user)] },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_owner\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"alter_sequence_statement_body$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'owner to', owner: asName(last(x)), }) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'rename', newName: asName(last(x)) }) },\n        { \"name\": \"alter_sequence_statement_body\", \"symbols\": [\"kw_set\", \"kw_schema\", \"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'set schema', newSchema: asName(last(x)) }) },\n        { \"name\": \"alter_sequence_option\", \"symbols\": [\"create_sequence_option\"], \"postprocess\": unwrap },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with)], \"postprocess\": id },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_option$ebnf$1$subexpression$1\", \"symbols\": [\"alter_sequence_option$ebnf$1$subexpression$1$ebnf$1\", \"int\"], \"postprocess\": last },\n        { \"name\": \"alter_sequence_option$ebnf$1\", \"symbols\": [\"alter_sequence_option$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"alter_sequence_option$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"alter_sequence_option\", \"symbols\": [\"kw_restart\", \"alter_sequence_option$ebnf$1\"], \"postprocess\": x => (0, lexer_2.box)(x, ['restart', typeof (0, lexer_2.unbox)(x[1]) === 'number' ? (0, lexer_2.unbox)(x[1]) : true]) },\n        { \"name\": \"drop_statement$ebnf$1\", \"symbols\": [\"kw_ifexists\"], \"postprocess\": id },\n        { \"name\": \"drop_statement$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_statement$macrocall$2\", \"symbols\": [\"qualified_name\"] },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"drop_statement$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"drop_statement$macrocall$1$ebnf$1\", \"symbols\": [\"drop_statement$macrocall$1$ebnf$1\", \"drop_statement$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"drop_statement$macrocall$1\", \"symbols\": [\"drop_statement$macrocall$2\", \"drop_statement$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"drop_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_cascade\"] },\n        { \"name\": \"drop_statement$ebnf$2$subexpression$1\", \"symbols\": [\"kw_restrict\"] },\n        { \"name\": \"drop_statement$ebnf$2\", \"symbols\": [\"drop_statement$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"drop_statement$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_statement\", \"symbols\": [\"kw_drop\", \"drop_what\", \"drop_statement$ebnf$1\", \"drop_statement$macrocall$1\", \"drop_statement$ebnf$2\"], \"postprocess\": (x, rej) => {\n                const v = unwrap(x[1]);\n                return (0, lexer_2.track)(x, {\n                    ...v,\n                    ...x[2] && { ifExists: true },\n                    names: x[3],\n                    ...x[4] && { cascade: toStr(x[4]) },\n                });\n            } },\n        { \"name\": \"drop_what\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table)], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop table' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_sequence\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop sequence' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop type' }) },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_trigger\"], \"postprocess\": x => (0, lexer_2.track)(x, { type: 'drop trigger' }) },\n        { \"name\": \"drop_what$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"drop_what$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_what\", \"symbols\": [\"kw_index\", \"drop_what$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop index',\n                ...x[1] && { concurrently: true },\n            }) },\n        { \"name\": \"with_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"with_statement_bindings\", \"with_statement_statement\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'with',\n                bind: x[1],\n                in: unwrap(x[2]),\n            }) },\n        { \"name\": \"with_recursive_statement$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"kw_recursive\"] },\n        { \"name\": \"with_recursive_statement\", \"symbols\": [\"with_recursive_statement$subexpression$1\", \"ident\", \"collist_paren\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"union_statement\", \"rparen\", \"with_statement_statement\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'with recursive',\n                alias: asName(x[1]),\n                columnNames: x[2].map(asName),\n                bind: x[5],\n                in: unwrap(x[7]),\n            }) },\n        { \"name\": \"with_statement_bindings$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"with_statement_bindings$ebnf$1$subexpression$1\", \"symbols\": [\"comma\", \"with_statement_binding\"], \"postprocess\": last },\n        { \"name\": \"with_statement_bindings$ebnf$1\", \"symbols\": [\"with_statement_bindings$ebnf$1\", \"with_statement_bindings$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"with_statement_bindings\", \"symbols\": [\"with_statement_binding\", \"with_statement_bindings$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"with_statement_binding\", \"symbols\": [\"word\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"with_statement_statement\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                alias: asName(x[0]),\n                statement: unwrap(x[3]),\n            }) },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"selection\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"insert_statement\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"update_statement\"] },\n        { \"name\": \"with_statement_statement\", \"symbols\": [\"delete_statement\"] },\n        { \"name\": \"createtype_statement$subexpression$1\", \"symbols\": [\"createtype_enum\"] },\n        { \"name\": \"createtype_statement$subexpression$1\", \"symbols\": [\"createtype_composite\"] },\n        { \"name\": \"createtype_statement\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_type\", \"qualified_name\", \"createtype_statement$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: x[2],\n                ...unwrap(x[3]),\n            }) },\n        { \"name\": \"createtype_enum$macrocall$2\", \"symbols\": [\"enum_value\"] },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtype_enum$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtype_enum$macrocall$1$ebnf$1\", \"symbols\": [\"createtype_enum$macrocall$1$ebnf$1\", \"createtype_enum$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtype_enum$macrocall$1\", \"symbols\": [\"createtype_enum$macrocall$2\", \"createtype_enum$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtype_enum\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"kw_enum\", \"lparen\", \"createtype_enum$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create enum',\n                values: x[3],\n            }) },\n        { \"name\": \"enum_value\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { value: toStr(x) }) },\n        { \"name\": \"createtype_composite$macrocall$2\", \"symbols\": [\"createtype_composite_attr\"] },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"createtype_composite$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"createtype_composite$macrocall$1$ebnf$1\", \"symbols\": [\"createtype_composite$macrocall$1$ebnf$1\", \"createtype_composite$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"createtype_composite$macrocall$1\", \"symbols\": [\"createtype_composite$macrocall$2\", \"createtype_composite$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"createtype_composite\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"lparen\", \"createtype_composite$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'create composite type',\n                attributes: x[2],\n            }) },\n        { \"name\": \"createtype_composite_attr$ebnf$1\", \"symbols\": [\"createtable_collate\"], \"postprocess\": id },\n        { \"name\": \"createtype_composite_attr$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"createtype_composite_attr\", \"symbols\": [\"word\", \"data_type\", \"createtype_composite_attr$ebnf$1\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    name: asName(x[0]),\n                    dataType: x[1],\n                    ...x[2] ? { collate: x[2][1] } : {},\n                });\n            } },\n        { \"name\": \"altertype_statement$subexpression$1\", \"symbols\": [\"altertype_enum_add_value\"] },\n        { \"name\": \"altertype_statement$subexpression$1\", \"symbols\": [\"altertype_enum_rename\"] },\n        { \"name\": \"altertype_statement\", \"symbols\": [\"kw_alter\", \"kw_type\", \"qualified_name\", \"altertype_statement$subexpression$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                name: x[2],\n                ...unwrap(x[3]),\n            }) },\n        { \"name\": \"altertype_enum_add_value\", \"symbols\": [\"kw_add\", \"kw_value\", \"enum_additional_value\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter enum',\n                change: {\n                    type: 'add value',\n                    add: x[2]\n                }\n            }) },\n        { \"name\": \"enum_additional_value\", \"symbols\": [\"string\"], \"postprocess\": x => (0, lexer_2.track)(x, { value: toStr(x) }) },\n        { \"name\": \"altertype_enum_rename\", \"symbols\": [\"kw_rename\", (lexer_1.lexerAny.has(\"kw_to\") ? { type: \"kw_to\" } : kw_to), \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'alter enum',\n                change: {\n                    type: 'rename',\n                    to: asName(last(x))\n                }\n            }) },\n        { \"name\": \"union_left\", \"symbols\": [\"select_statement\"] },\n        { \"name\": \"union_left\", \"symbols\": [\"select_values\"] },\n        { \"name\": \"union_left\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"union_right\", \"symbols\": [\"selection\"] },\n        { \"name\": \"union_right\", \"symbols\": [\"selection_paren\"] },\n        { \"name\": \"union_statement$subexpression$1$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": id },\n        { \"name\": \"union_statement$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"union_statement$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_union\") ? { type: \"kw_union\" } : kw_union), \"union_statement$subexpression$1$ebnf$1\"] },\n        { \"name\": \"union_statement\", \"symbols\": [\"union_left\", \"union_statement$subexpression$1\", \"union_right\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: toStr(x[1], ' '),\n                    left: unwrap(x[0]),\n                    right: unwrap(x[2]),\n                });\n            } },\n        { \"name\": \"prepare$ebnf$1$subexpression$1\", \"symbols\": [\"lparen\", \"data_type_list\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"prepare$ebnf$1\", \"symbols\": [\"prepare$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"prepare$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"prepare\", \"symbols\": [\"kw_prepare\", \"ident\", \"prepare$ebnf$1\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"statement_noprep\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'prepare',\n                name: asName(x[1]),\n                ...x[2] && { args: x[2] },\n                statement: unwrap(last(x)),\n            }) },\n        { \"name\": \"deallocate$ebnf$1\", \"symbols\": [\"kw_prepare\"], \"postprocess\": id },\n        { \"name\": \"deallocate$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"deallocate\", \"symbols\": [\"kw_deallocate\", \"deallocate$ebnf$1\", \"deallocate_target\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'deallocate',\n                target: x[2],\n            }) },\n        { \"name\": \"deallocate_target\", \"symbols\": [\"deallocate_all\"], \"postprocess\": unwrap },\n        { \"name\": \"deallocate_target\", \"symbols\": [\"deallocate_name\"], \"postprocess\": unwrap },\n        { \"name\": \"deallocate_name\", \"symbols\": [\"ident\"], \"postprocess\": x => (0, lexer_2.track)(x, asName(x[0])) },\n        { \"name\": \"deallocate_all\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_all\") ? { type: \"kw_all\" } : kw_all)], \"postprocess\": x => (0, lexer_2.track)(x, { option: 'all' }) },\n        { \"name\": \"create_view_statements\", \"symbols\": [\"create_view\"] },\n        { \"name\": \"create_view_statements\", \"symbols\": [\"create_materialized_view\"] },\n        { \"name\": \"create_view$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or), \"kw_replace\"] },\n        { \"name\": \"create_view$ebnf$1\", \"symbols\": [\"create_view$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$2$subexpression$1\", \"symbols\": [\"kw_temp\"] },\n        { \"name\": \"create_view$ebnf$2$subexpression$1\", \"symbols\": [\"kw_temporary\"] },\n        { \"name\": \"create_view$ebnf$2\", \"symbols\": [\"create_view$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$3\", \"symbols\": [\"kw_recursive\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_view$ebnf$4$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\", \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_view$ebnf$4$subexpression$1$macrocall$1\", \"symbols\": [\"create_view$ebnf$4$subexpression$1$macrocall$2\", \"create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_view$ebnf$4$subexpression$1\", \"symbols\": [\"lparen\", \"create_view$ebnf$4$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_view$ebnf$4\", \"symbols\": [\"create_view$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$5\", \"symbols\": [\"create_view_opts\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view$ebnf$6$subexpression$1$subexpression$1\", \"symbols\": [\"kw_local\"] },\n        { \"name\": \"create_view$ebnf$6$subexpression$1$subexpression$1\", \"symbols\": [\"kw_cascaded\"] },\n        { \"name\": \"create_view$ebnf$6$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_view$ebnf$6$subexpression$1$subexpression$1\", (lexer_1.lexerAny.has(\"kw_check\") ? { type: \"kw_check\" } : kw_check), \"kw_option\"], \"postprocess\": get(1) },\n        { \"name\": \"create_view$ebnf$6\", \"symbols\": [\"create_view$ebnf$6$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_view$ebnf$6\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_view\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_view$ebnf$1\", \"create_view$ebnf$2\", \"create_view$ebnf$3\", \"kw_view\", \"qualified_name\", \"create_view$ebnf$4\", \"create_view$ebnf$5\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"selection\", \"create_view$ebnf$6\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'create view',\n                    ...x[1] && { orReplace: true },\n                    ...x[2] && { temp: true },\n                    ...x[3] && { recursive: true },\n                    name: x[5],\n                    ...x[6] && { columnNames: x[6].map(asName) },\n                    ...x[7] && { parameters: fromEntries(x[7]) },\n                    query: x[9],\n                    ...x[10] && { checkOption: toStr(x[10]) },\n                });\n            } },\n        { \"name\": \"create_view_opt\", \"symbols\": [\"ident\", (lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"ident\"], \"postprocess\": ([a, _, b]) => [toStr(a), toStr(b)] },\n        { \"name\": \"create_view_opts$macrocall$2\", \"symbols\": [\"create_view_opt\"] },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_view_opts$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_view_opts$macrocall$1$ebnf$1\", \"symbols\": [\"create_view_opts$macrocall$1$ebnf$1\", \"create_view_opts$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_view_opts$macrocall$1\", \"symbols\": [\"create_view_opts$macrocall$2\", \"create_view_opts$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_view_opts\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_view_opts$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$1\", \"symbols\": [\"kw_ifnotexists\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\", \"symbols\": [\"ident\"] },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1$macrocall$2\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_materialized_view$ebnf$2$subexpression$1\", \"symbols\": [\"lparen\", \"create_materialized_view$ebnf$2$subexpression$1$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_materialized_view$ebnf$2\", \"symbols\": [\"create_materialized_view$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$3\", \"symbols\": [\"create_view_opts\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$3\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$4$subexpression$1\", \"symbols\": [\"kw_tablespace\", \"ident\"], \"postprocess\": last },\n        { \"name\": \"create_materialized_view$ebnf$4\", \"symbols\": [\"create_materialized_view$ebnf$4$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$4\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view$ebnf$5$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"create_materialized_view$ebnf$5$subexpression$1$ebnf$1\", \"kw_data\"] },\n        { \"name\": \"create_materialized_view$ebnf$5\", \"symbols\": [\"create_materialized_view$ebnf$5$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_materialized_view$ebnf$5\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_materialized_view\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"kw_materialized\", \"kw_view\", \"create_materialized_view$ebnf$1\", \"qualified_name\", \"create_materialized_view$ebnf$2\", \"create_materialized_view$ebnf$3\", \"create_materialized_view$ebnf$4\", (lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"selection\", \"create_materialized_view$ebnf$5\"], \"postprocess\": x => {\n                return (0, lexer_2.track)(x, {\n                    type: 'create materialized view',\n                    ...x[3] && { ifNotExists: true },\n                    name: x[4],\n                    ...x[5] && { columnNames: x[6].map(asName) },\n                    ...x[6] && { parameters: fromEntries(x[6]) },\n                    ...x[7] && { tablespace: asName(x[7]) },\n                    query: x[9],\n                    ...x[10] && { withData: toStr(x[10][1]) !== 'no' },\n                });\n            } },\n        { \"name\": \"refresh_view_statements$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_concurrently\") ? { type: \"kw_concurrently\" } : kw_concurrently)], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"kw_no\"], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements$ebnf$2$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_with\") ? { type: \"kw_with\" } : kw_with), \"refresh_view_statements$ebnf$2$subexpression$1$ebnf$1\", \"kw_data\"] },\n        { \"name\": \"refresh_view_statements$ebnf$2\", \"symbols\": [\"refresh_view_statements$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"refresh_view_statements$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"refresh_view_statements\", \"symbols\": [\"kw_refresh\", \"kw_materialized\", \"kw_view\", \"refresh_view_statements$ebnf$1\", \"qname\", \"refresh_view_statements$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'refresh materialized view',\n                ...!!x[3] ? { concurrently: true } : {},\n                name: x[4],\n                ...!!x[5] ? { withData: toStr(x[5][1]) !== 'no' } : {},\n            }) },\n        { \"name\": \"functions_statements\", \"symbols\": [\"create_func\"] },\n        { \"name\": \"functions_statements\", \"symbols\": [\"do_stm\"] },\n        { \"name\": \"functions_statements\", \"symbols\": [\"drop_func\"] },\n        { \"name\": \"create_func$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_or\") ? { type: \"kw_or\" } : kw_or), \"kw_replace\"] },\n        { \"name\": \"create_func$ebnf$1\", \"symbols\": [\"create_func$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"create_func$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$2\", \"symbols\": [\"func_argdef\"] },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"create_func$subexpression$1$ebnf$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\", \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_func$subexpression$1$ebnf$1$macrocall$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$2\", \"create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"create_func$subexpression$1$ebnf$1\", \"symbols\": [\"create_func$subexpression$1$ebnf$1$macrocall$1\"], \"postprocess\": id },\n        { \"name\": \"create_func$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"create_func$subexpression$1\", \"symbols\": [\"lparen\", \"create_func$subexpression$1$ebnf$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"create_func$ebnf$2\", \"symbols\": [\"func_spec\"] },\n        { \"name\": \"create_func$ebnf$2\", \"symbols\": [\"create_func$ebnf$2\", \"func_spec\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"create_func\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_create\") ? { type: \"kw_create\" } : kw_create), \"create_func$ebnf$1\", \"kw_function\", \"qname\", \"create_func$subexpression$1\", \"create_func$ebnf$2\"], \"postprocess\": (x, rej) => {\n                var _a;\n                const specs = {};\n                for (const s of x[5]) {\n                    for (const k in s) {\n                        if (k[0] !== '_' && k in specs) {\n                            throw new Error('conflicting or redundant options ' + k);\n                        }\n                    }\n                    Object.assign(specs, s);\n                }\n                return (0, lexer_2.track)(x, {\n                    type: 'create function',\n                    ...x[1] && { orReplace: true },\n                    name: x[3],\n                    arguments: (_a = x[4]) !== null && _a !== void 0 ? _a : [],\n                    ...specs,\n                });\n            } },\n        { \"name\": \"func_argdef$ebnf$1\", \"symbols\": [\"func_argopts\"], \"postprocess\": id },\n        { \"name\": \"func_argdef$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argdef$ebnf$2\", \"symbols\": [\"func_argdefault\"], \"postprocess\": id },\n        { \"name\": \"func_argdef$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argdef\", \"symbols\": [\"func_argdef$ebnf$1\", \"data_type\", \"func_argdef$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                default: x[2],\n                type: x[1],\n                ...x[0],\n            }) },\n        { \"name\": \"func_argdefault\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_default\") ? { type: \"kw_default\" } : kw_default), \"expr\"], \"postprocess\": x => x[1]\n        },\n        { \"name\": \"func_argdefault\", \"symbols\": [(lexer_1.lexerAny.has(\"op_eq\") ? { type: \"op_eq\" } : op_eq), \"expr\"], \"postprocess\": x => x[1] },\n        { \"name\": \"func_argopts$ebnf$1\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"func_argopts$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_argopts\", \"symbols\": [\"func_argmod\", \"func_argopts$ebnf$1\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                mode: toStr(x[0]),\n                ...x[1] && { name: asName(x[1]) },\n            }) },\n        { \"name\": \"func_argopts\", \"symbols\": [\"word\"], \"postprocess\": (x, rej) => {\n                const name = asName(x);\n                if (name === 'out' || name === 'inout' || name === 'variadic') {\n                    return rej; // avoid ambiguous syntax\n                }\n                return (0, lexer_2.track)(x, { name });\n            } },\n        { \"name\": \"func_argmod\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_in\") ? { type: \"kw_in\" } : kw_in)] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_out\"] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_inout\"] },\n        { \"name\": \"func_argmod\", \"symbols\": [\"kw_variadic\"] },\n        { \"name\": \"func_spec\", \"symbols\": [\"kw_language\", \"word\"], \"postprocess\": x => (0, lexer_2.track)(x, { language: asName(last(x)) }) },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_purity\"], \"postprocess\": x => (0, lexer_2.track)(x, { purity: toStr(x) }) },\n        { \"name\": \"func_spec$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"codeblock\") ? { type: \"codeblock\" } : codeblock)] },\n        { \"name\": \"func_spec$subexpression$1\", \"symbols\": [\"string\"] },\n        { \"name\": \"func_spec\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_as\") ? { type: \"kw_as\" } : kw_as), \"func_spec$subexpression$1\"], \"postprocess\": x => ({ code: toStr(last(x)) }) },\n        { \"name\": \"func_spec$ebnf$1\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_not\") ? { type: \"kw_not\" } : kw_not)], \"postprocess\": id },\n        { \"name\": \"func_spec$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"func_spec$subexpression$2\", \"symbols\": [\"word\"], \"postprocess\": kw('leakproof') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$ebnf$1\", \"func_spec$subexpression$2\"], \"postprocess\": x => (0, lexer_2.track)(x, { leakproof: !x[0] }) },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_returns\"], \"postprocess\": x => (0, lexer_2.track)(x, { returns: unwrap(x) }) },\n        { \"name\": \"func_spec$subexpression$3\", \"symbols\": [\"word\"], \"postprocess\": kw('called') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$3\", \"oninp\"], \"postprocess\": () => ({ onNullInput: 'call' }) },\n        { \"name\": \"func_spec$subexpression$4\", \"symbols\": [\"word\"], \"postprocess\": kw('returns') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$4\", (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null), \"oninp\"], \"postprocess\": () => ({ onNullInput: 'null' }) },\n        { \"name\": \"func_spec$subexpression$5\", \"symbols\": [\"word\"], \"postprocess\": kw('strict') },\n        { \"name\": \"func_spec\", \"symbols\": [\"func_spec$subexpression$5\"], \"postprocess\": () => ({ onNullInput: 'strict' }) },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('immutable') },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('stable') },\n        { \"name\": \"func_purity\", \"symbols\": [\"word\"], \"postprocess\": kw('volatile') },\n        { \"name\": \"oninp$subexpression$1\", \"symbols\": [\"word\"], \"postprocess\": kw('input') },\n        { \"name\": \"oninp\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_on\") ? { type: \"kw_on\" } : kw_on), (lexer_1.lexerAny.has(\"kw_null\") ? { type: \"kw_null\" } : kw_null), \"oninp$subexpression$1\"] },\n        { \"name\": \"func_returns\", \"symbols\": [\"kw_returns\", \"data_type\"], \"postprocess\": last },\n        { \"name\": \"func_returns$macrocall$2\", \"symbols\": [\"func_ret_table_col\"] },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"func_returns$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"func_returns$macrocall$1$ebnf$1\", \"symbols\": [\"func_returns$macrocall$1$ebnf$1\", \"func_returns$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"func_returns$macrocall$1\", \"symbols\": [\"func_returns$macrocall$2\", \"func_returns$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"func_returns\", \"symbols\": [\"kw_returns\", (lexer_1.lexerAny.has(\"kw_table\") ? { type: \"kw_table\" } : kw_table), \"lparen\", \"func_returns$macrocall$1\", \"rparen\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                kind: 'table',\n                columns: x[3],\n            }) },\n        { \"name\": \"func_ret_table_col\", \"symbols\": [\"word\", \"data_type\"], \"postprocess\": x => (0, lexer_2.track)(x, { name: asName(x[0]), type: x[1] }) },\n        { \"name\": \"do_stm$ebnf$1$subexpression$1\", \"symbols\": [\"kw_language\", \"word\"], \"postprocess\": last },\n        { \"name\": \"do_stm$ebnf$1\", \"symbols\": [\"do_stm$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"do_stm$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"do_stm\", \"symbols\": [(lexer_1.lexerAny.has(\"kw_do\") ? { type: \"kw_do\" } : kw_do), \"do_stm$ebnf$1\", (lexer_1.lexerAny.has(\"codeblock\") ? { type: \"codeblock\" } : codeblock)], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'do',\n                ...x[1] && { language: asName(x[1]) },\n                code: x[2].value,\n            }) },\n        { \"name\": \"drop_func$ebnf$1$subexpression$1\", \"symbols\": [\"kw_if\", \"kw_exists\"] },\n        { \"name\": \"drop_func$ebnf$1\", \"symbols\": [\"drop_func$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"drop_func$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func$ebnf$2\", \"symbols\": [\"drop_func_overload\"], \"postprocess\": id },\n        { \"name\": \"drop_func$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func\", \"symbols\": [\"kw_drop\", \"kw_function\", \"drop_func$ebnf$1\", \"qname\", \"drop_func$ebnf$2\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: 'drop function',\n                ...x[2] && { ifExists: true },\n                name: x[3],\n                ...x[4] && { arguments: x[4] },\n            }) },\n        { \"name\": \"drop_func_overload$macrocall$2\", \"symbols\": [\"drop_func_overload_col\"] },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"drop_func_overload$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"drop_func_overload$macrocall$1$ebnf$1\", \"symbols\": [\"drop_func_overload$macrocall$1$ebnf$1\", \"drop_func_overload$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"drop_func_overload$macrocall$1\", \"symbols\": [\"drop_func_overload$macrocall$2\", \"drop_func_overload$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"drop_func_overload\", \"symbols\": [\"lparen\", \"drop_func_overload$macrocall$1\", \"rparen\"], \"postprocess\": get(1) },\n        { \"name\": \"drop_func_overload_col$ebnf$1\", \"symbols\": [\"word\"], \"postprocess\": id },\n        { \"name\": \"drop_func_overload_col$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"drop_func_overload_col\", \"symbols\": [\"drop_func_overload_col$ebnf$1\", \"qname\"], \"postprocess\": x => (0, lexer_2.track)(x, {\n                type: x[1],\n                ...x[0] && { name: asName(x[0]) },\n            }) },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"statement_separator\"] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"statement\"] },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [\"main$ebnf$2\", \"main$ebnf$2$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$3\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$3\", \"symbols\": [\"main$ebnf$3\", \"statement_separator\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\", \"statement\", \"main$ebnf$2\", \"main$ebnf$3\"], \"postprocess\": ([_, head, _tail]) => {\n                const tail = _tail;\n                const ret = [unwrap(head), ...tail.map((x) => unwrap(x[1]))];\n                return ret.length === 1\n                    ? ret[0]\n                    : ret;\n            } },\n        { \"name\": \"statement_separator\", \"symbols\": [(lexer_1.lexerAny.has(\"semicolon\") ? { type: \"semicolon\" } : semicolon)] },\n        { \"name\": \"statement\", \"symbols\": [\"statement_noprep\"] },\n        { \"name\": \"statement\", \"symbols\": [\"prepare\"] },\n        { \"name\": \"statement\", \"symbols\": [\"deallocate\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"selection\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createtable_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createextension_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createindex_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"simplestatements_all\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"insert_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"update_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"altertable_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"alterindex_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"delete_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_sequence_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"alter_sequence_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"drop_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"createtype_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"altertype_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_view_statements\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"refresh_view_statements\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"create_schema\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"raise_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"comment_statement\"] },\n        { \"name\": \"statement_noprep\", \"symbols\": [\"functions_statements\"] },\n        { \"name\": \"selection\", \"symbols\": [\"select_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"select_values\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"with_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"with_recursive_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection\", \"symbols\": [\"union_statement\"], \"postprocess\": unwrap },\n        { \"name\": \"selection_paren\", \"symbols\": [\"lparen\", \"selection\", \"rparen\"], \"postprocess\": get(1) }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst array_lexer_1 = __webpack_require__(12);\nconst get = (i) => (x) => x[i];\nconst last = (x) => x && x[x.length - 1];\n;\n;\n;\n;\nconst grammar = {\n    Lexer: array_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"elements\"], \"postprocess\": id },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"main\", \"symbols\": [(array_lexer_1.lexerAny.has(\"start_list\") ? { type: \"start_list\" } : start_list), \"main$ebnf$1\", (array_lexer_1.lexerAny.has(\"end_list\") ? { type: \"end_list\" } : end_list)], \"postprocess\": x => x[1] || [] },\n        { \"name\": \"elements$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"elements$ebnf$1$subexpression$1\", \"symbols\": [(array_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"elt\"], \"postprocess\": last },\n        { \"name\": \"elements$ebnf$1\", \"symbols\": [\"elements$ebnf$1\", \"elements$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"elements\", \"symbols\": [\"elt\", \"elements$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [head, ...(tail || [])];\n            } },\n        { \"name\": \"elt\", \"symbols\": [(array_lexer_1.lexerAny.has(\"value\") ? { type: \"value\" } : value)], \"postprocess\": x => x[0].value },\n        { \"name\": \"elt\", \"symbols\": [\"main\"], \"postprocess\": x => x[0] }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    valueString: {\n        match: /\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"/,\n        value: x => JSON.parse(x),\n        type: x => 'value',\n    },\n    valueRaw: {\n        match: /[^\\s,\\{\\}\"](?:[^,\\{\\}\"]*[^\\s,\\{\\}\"])?/,\n        type: () => 'value',\n    },\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    start_list: '{',\n    end_list: '}',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst geometric_lexer_1 = __webpack_require__(14);\nconst get = (i) => (x) => x[i];\nconst last = (x) => x && x[x.length - 1];\nfunction unwrap(e) {\n    if (Array.isArray(e) && e.length === 1) {\n        e = unwrap(e[0]);\n    }\n    if (Array.isArray(e) && !e.length) {\n        return null;\n    }\n    return e;\n}\n;\n;\n;\n;\nconst grammar = {\n    Lexer: geometric_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"float\"] },\n        { \"name\": \"number$subexpression$1\", \"symbols\": [\"int\"] },\n        { \"name\": \"number\", \"symbols\": [\"number$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"float\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)], \"postprocess\": args => parseFloat(unwrap(args)) },\n        { \"name\": \"int\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": arg => parseInt(unwrap(arg), 10) },\n        { \"name\": \"comma\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma)], \"postprocess\": id },\n        { \"name\": \"point$macrocall$2\", \"symbols\": [\"point_content\"] },\n        { \"name\": \"point$macrocall$1$subexpression$1\", \"symbols\": [\"point$macrocall$2\"] },\n        { \"name\": \"point$macrocall$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen), \"point$macrocall$2\", (geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)], \"postprocess\": get(1) },\n        { \"name\": \"point$macrocall$1\", \"symbols\": [\"point$macrocall$1$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"point\", \"symbols\": [\"point$macrocall$1\"], \"postprocess\": unwrap },\n        { \"name\": \"point_content\", \"symbols\": [\"number\", \"comma\", \"number\"], \"postprocess\": x => ({ x: x[0], y: x[2] }) },\n        { \"name\": \"line\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lcurl\") ? { type: \"lcurl\" } : lcurl), \"number\", \"comma\", \"number\", \"comma\", \"number\", (geometric_lexer_1.lexerAny.has(\"rcurl\") ? { type: \"rcurl\" } : rcurl)], \"postprocess\": x => ({\n                a: x[1],\n                b: x[3],\n                c: x[5],\n            }) },\n        { \"name\": \"box\", \"symbols\": [\"closed_path\"], \"postprocess\": ([x], rej) => {\n                if (x.length !== 2) {\n                    return rej;\n                }\n                return x;\n            } },\n        { \"name\": \"lseg\", \"symbols\": [\"path\"], \"postprocess\": ([x], rej) => {\n                if (x.path.length !== 2) {\n                    return rej;\n                }\n                return x.path;\n            } },\n        { \"name\": \"path\", \"symbols\": [\"open_path\"], \"postprocess\": ([path]) => ({ closed: false, path }) },\n        { \"name\": \"path\", \"symbols\": [\"closed_path\"], \"postprocess\": ([path]) => ({ closed: true, path }) },\n        { \"name\": \"open_path$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lbracket\") ? { type: \"lbracket\" } : lbracket)] },\n        { \"name\": \"open_path$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rbracket\") ? { type: \"rbracket\" } : rbracket)] },\n        { \"name\": \"open_path$macrocall$1$macrocall$2\", \"symbols\": [\"point\"] },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"open_path$macrocall$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"open_path$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [\"open_path$macrocall$1$macrocall$1$ebnf$1\", \"open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"open_path$macrocall$1$macrocall$1\", \"symbols\": [\"open_path$macrocall$1$macrocall$2\", \"open_path$macrocall$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"open_path$macrocall$1\", \"symbols\": [\"open_path$macrocall$2\", \"open_path$macrocall$1$macrocall$1\", \"open_path$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"open_path\", \"symbols\": [\"open_path$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$2\", \"symbols\": [\"point\"] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"closed_path$subexpression$1$macrocall$1$macrocall$2\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\", \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1$macrocall$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1$macrocall$2\", \"closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"closed_path$subexpression$1$macrocall$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$2\", \"closed_path$subexpression$1$macrocall$1$macrocall$1\", \"closed_path$subexpression$1$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"closed_path$subexpression$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$1\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$5\", \"symbols\": [\"point\"] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"comma\") ? { type: \"comma\" } : comma), \"closed_path$subexpression$1$macrocall$5\"], \"postprocess\": last },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$4$ebnf$1\", \"closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"closed_path$subexpression$1$macrocall$4\", \"symbols\": [\"closed_path$subexpression$1$macrocall$5\", \"closed_path$subexpression$1$macrocall$4$ebnf$1\"], \"postprocess\": ([head, tail]) => {\n                return [unwrap(head), ...(tail.map(unwrap) || [])];\n            } },\n        { \"name\": \"closed_path$subexpression$1\", \"symbols\": [\"closed_path$subexpression$1$macrocall$4\"], \"postprocess\": last },\n        { \"name\": \"closed_path\", \"symbols\": [\"closed_path$subexpression$1\"], \"postprocess\": get(0) },\n        { \"name\": \"polygon\", \"symbols\": [\"closed_path\"], \"postprocess\": get(0) },\n        { \"name\": \"circle_body\", \"symbols\": [\"point\", \"comma\", \"number\"], \"postprocess\": x => ({ c: x[0], r: x[2] }) },\n        { \"name\": \"circle$subexpression$1$macrocall$2\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lcomp\") ? { type: \"lcomp\" } : lcomp)] },\n        { \"name\": \"circle$subexpression$1$macrocall$3\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rcomp\") ? { type: \"rcomp\" } : rcomp)] },\n        { \"name\": \"circle$subexpression$1$macrocall$1\", \"symbols\": [\"circle$subexpression$1$macrocall$2\", \"circle_body\", \"circle$subexpression$1$macrocall$3\"], \"postprocess\": get(1) },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle$subexpression$1$macrocall$1\"] },\n        { \"name\": \"circle$subexpression$1$macrocall$5\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"lparen\") ? { type: \"lparen\" } : lparen)] },\n        { \"name\": \"circle$subexpression$1$macrocall$6\", \"symbols\": [(geometric_lexer_1.lexerAny.has(\"rparen\") ? { type: \"rparen\" } : rparen)] },\n        { \"name\": \"circle$subexpression$1$macrocall$4\", \"symbols\": [\"circle$subexpression$1$macrocall$5\", \"circle_body\", \"circle$subexpression$1$macrocall$6\"], \"postprocess\": get(1) },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle$subexpression$1$macrocall$4\"] },\n        { \"name\": \"circle$subexpression$1\", \"symbols\": [\"circle_body\"] },\n        { \"name\": \"circle\", \"symbols\": [\"circle$subexpression$1\"], \"postprocess\": unwrap }\n    ],\n    ParserStart: \"number\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    comma: ',',\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    lcurl: '{',\n    rcurl: '}',\n    lparen: '(',\n    rparen: ')',\n    lbracket: '[',\n    rbracket: ']',\n    lcomp: '<',\n    rcomp: '>',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst interval_lexer_1 = __webpack_require__(16);\n;\n;\n;\n;\nconst grammar = {\n    Lexer: interval_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"elt\"] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"elt\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\"], \"postprocess\": ([elts]) => {\n                // check unicity\n                const s = new Set();\n                for (const e of elts) {\n                    const k = typeof e[1] === 'number'\n                        ? e[0]\n                        : 'time';\n                    if (s.has(k)) {\n                        return 'invalid';\n                    }\n                    s.add(k);\n                }\n                return elts;\n            } },\n        { \"name\": \"elt\", \"symbols\": [\"time\"] },\n        { \"name\": \"elt\", \"symbols\": [\"num\", \"unit\"], \"postprocess\": ([[n], u]) => {\n                u = u[0].type;\n                return [u, n];\n            } },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"years\") ? { type: \"years\" } : years)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"months\") ? { type: \"months\" } : months)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"days\") ? { type: \"days\" } : days)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"hours\") ? { type: \"hours\" } : hours)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"minutes\") ? { type: \"minutes\" } : minutes)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"seconds\") ? { type: \"seconds\" } : seconds)] },\n        { \"name\": \"unit\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"milliseconds\") ? { type: \"milliseconds\" } : milliseconds)] },\n        { \"name\": \"num\", \"symbols\": [\"int\"] },\n        { \"name\": \"num\", \"symbols\": [\"float\"] },\n        { \"name\": \"uint\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([x]) => parseInt(x, 10) },\n        { \"name\": \"int$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"neg\") ? { type: \"neg\" } : neg)] },\n        { \"name\": \"int$ebnf$1\", \"symbols\": [\"int$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"int$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"int\", \"symbols\": [\"int$ebnf$1\", (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([neg, x]) => parseInt(x, 10) * (neg ? -1 : 1) },\n        { \"name\": \"float$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"neg\") ? { type: \"neg\" } : neg)] },\n        { \"name\": \"float$ebnf$1\", \"symbols\": [\"float$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"float$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"float$ebnf$2\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": id },\n        { \"name\": \"float$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"float\", \"symbols\": [\"float$ebnf$1\", \"float$ebnf$2\", (interval_lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)], \"postprocess\": ([neg, ...v]) => parseFloat(v.map(v => v ? v.text : '0').join('')) * (neg ? -1 : 1) },\n        { \"name\": \"time$ebnf$1$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"colon\") ? { type: \"colon\" } : colon), \"uint\"] },\n        { \"name\": \"time$ebnf$1\", \"symbols\": [\"time$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"time$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"time$ebnf$2$subexpression$1\", \"symbols\": [(interval_lexer_1.lexerAny.has(\"dot\") ? { type: \"dot\" } : dot), (interval_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)] },\n        { \"name\": \"time$ebnf$2\", \"symbols\": [\"time$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"time$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"time\", \"symbols\": [\"uint\", (interval_lexer_1.lexerAny.has(\"colon\") ? { type: \"colon\" } : colon), \"uint\", \"time$ebnf$1\", \"time$ebnf$2\"], \"postprocess\": ([a, _, b, c, d]) => {\n                c = c && c[1];\n                d = d && d[1];\n                const ret = typeof c === 'number' ? [\n                    ['hours', a],\n                    ['minutes', b],\n                    ['seconds', c],\n                ] : [\n                    ['minutes', a],\n                    ['seconds', b],\n                ];\n                if (d) {\n                    ret.push(['milliseconds', parseFloat('0.' + d) * 1000]);\n                }\n                return ret;\n            } }\n    ],\n    ParserStart: \"main\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    int: /\\d+/,\n    neg: '-',\n    dot: '.',\n    years: /(?:y|yrs?|years?)\\b/,\n    months: /(?:mon(?:th)?s?)\\b/,\n    days: /(?:d|days?)\\b/,\n    hours: /(?:h|hrs?|hours?)\\b/,\n    minutes: /(?:m|mins?|minutes?)\\b/,\n    seconds: /(?:s|secs?|seconds?)\\b/,\n    milliseconds: /(?:ms|milliseconds?)\\b/,\n    space: { match: /[\\s\\t\\n\\v\\f\\r]+/, lineBreaks: true, },\n    colon: ':',\n});\nexports.lexer.next = (next => () => {\n    let tok;\n    while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {\n    }\n    return tok;\n})(exports.lexer.next);\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Generated automatically by nearley, version unknown\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nconst interval_iso_lexer_1 = __webpack_require__(18);\n;\n;\n;\n;\nconst grammar = {\n    Lexer: interval_iso_lexer_1.lexerAny,\n    ParserRules: [\n        { \"name\": \"num\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"int\") ? { type: \"int\" } : int)] },\n        { \"name\": \"num\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"float\") ? { type: \"float\" } : float)] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"long\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"short\"] },\n        { \"name\": \"main$ebnf$2$subexpression$1$ebnf$1\", \"symbols\": [\"main$ebnf$2$subexpression$1$ebnf$1\", \"short\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main$ebnf$2$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"T\") ? { type: \"T\" } : T), \"main$ebnf$2$subexpression$1$ebnf$1\"] },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [\"main$ebnf$2$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"main$ebnf$2\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"main\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"P\") ? { type: \"P\" } : P), \"main$ebnf$1\", \"main$ebnf$2\"], \"postprocess\": ([_, a, b], rej) => {\n                b = !b ? [] : b[1];\n                { }\n                if (!a.length && !b.length) {\n                    return rej;\n                }\n                return !a.length ? b\n                    : !b.length ? a\n                        : [...a, ...b];\n            } },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"Y\") ? { type: \"Y\" } : Y)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"M\") ? { type: \"M\" } : M)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"W\") ? { type: \"W\" } : W)] },\n        { \"name\": \"long$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"D\") ? { type: \"D\" } : D)] },\n        { \"name\": \"long\", \"symbols\": [\"num\", \"long$subexpression$1\"], \"postprocess\": ([n, u]) => {\n                n = parseFloat(n[0].value);\n                u = u[0].type;\n                switch (u) {\n                    case 'Y':\n                        return ['years', n];\n                    case 'M':\n                        return ['months', n];\n                    case 'W':\n                        return ['days', n * 7];\n                    case 'D':\n                        return ['days', n];\n                    default:\n                        throw new Error('Unexpected unit ' + u);\n                }\n            } },\n        { \"name\": \"short$ebnf$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"T\") ? { type: \"T\" } : T)], \"postprocess\": id },\n        { \"name\": \"short$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"H\") ? { type: \"H\" } : H)] },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"M\") ? { type: \"M\" } : M)] },\n        { \"name\": \"short$subexpression$1\", \"symbols\": [(interval_iso_lexer_1.lexerAny.has(\"S\") ? { type: \"S\" } : S)] },\n        { \"name\": \"short\", \"symbols\": [\"short$ebnf$1\", \"num\", \"short$subexpression$1\"], \"postprocess\": ([_, n, u]) => {\n                n = parseFloat(n[0].value);\n                u = u[0].type;\n                switch (u) {\n                    case 'H':\n                        return ['hours', n];\n                    case 'M':\n                        return ['minutes', n];\n                    case 'S':\n                        return ['seconds', n];\n                    default:\n                        throw new Error('Unexpected unit ' + u);\n                }\n            } }\n    ],\n    ParserStart: \"num\",\n};\nexports.default = grammar;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexerAny = exports.lexer = void 0;\nconst moo_1 = __webpack_require__(0);\n// build lexer\nexports.lexer = (0, moo_1.compile)({\n    int: /\\-?\\d+(?![\\.\\d])/,\n    float: /\\-?(?:(?:\\d*\\.\\d+)|(?:\\d+\\.\\d*))/,\n    P: 'P',\n    Y: 'Y',\n    M: 'M',\n    W: 'W',\n    D: 'D',\n    H: 'H',\n    S: 'S',\n    T: 'T',\n});\nexports.lexerAny = exports.lexer;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSql = void 0;\nconst ast_mapper_1 = __webpack_require__(2);\nconst ast_visitor_1 = __webpack_require__(5);\nconst utils_1 = __webpack_require__(6);\nconst pg_escape_1 = __webpack_require__(20);\nconst keywords_1 = __webpack_require__(3);\nconst kwSet = new Set(keywords_1.sqlKeywords.map(x => x.toLowerCase()));\nlet ret = [];\nfunction name(nm) {\n    return ident(nm.name);\n}\nfunction ident(nm, forceDoubleQuote) {\n    if (!forceDoubleQuote) {\n        // only add quotes if has upper cases, or if it is a keyword.\n        const low = nm.toLowerCase();\n        if (low === nm && !kwSet.has(low) && /^[a-z][a-z0-9_]*$/.test(low)) {\n            return nm;\n        }\n    }\n    return '\"' + nm + '\"';\n}\nfunction list(elems, act, addParen) {\n    if (addParen) {\n        ret.push('(');\n    }\n    let first = true;\n    for (const e of elems) {\n        if (!first) {\n            ret.push(', ');\n        }\n        first = false;\n        act(e);\n    }\n    if (addParen) {\n        ret.push(')');\n    }\n}\nfunction addConstraint(c, m) {\n    switch (c.type) {\n        case 'foreign key':\n            ret.push(' foreign key (', ...c.localColumns.map(name).join(', '), ')');\n        // 👈 There is no \"break\" here... that's not an error, we want to fall throught the 'reference' case\n        case 'reference':\n            ret.push(' REFERENCES ');\n            m.tableRef(c.foreignTable);\n            ret.push('(', ...c.foreignColumns.map(name).join(', '), ') ');\n            if (c.match) {\n                ret.push(' MATCH ', c.match.toUpperCase());\n            }\n            if (c.onDelete) {\n                ret.push(' ON DELETE ', c.onDelete);\n            }\n            if (c.onUpdate) {\n                ret.push(' ON UPDATE ', c.onUpdate);\n            }\n            break;\n        case 'primary key':\n        case 'unique':\n            ret.push(' ', c.type, ' ');\n            if ('columns' in c) {\n                ret.push('(', ...c.columns.map(name).join(', '), ') ');\n            }\n            break;\n        case 'check':\n            ret.push(' check ');\n            m.expr(c.expr);\n            break;\n        case 'not null':\n        case 'null':\n            ret.push(' ', c.type, ' ');\n            break;\n        case 'default':\n            ret.push(' default ');\n            m.expr(c.default);\n            break;\n        case 'add generated':\n            ret.push(' GENERATED ');\n            visitGenerated(m, c);\n            break;\n        default:\n            throw utils_1.NotSupported.never(c);\n    }\n    ret.push(' ');\n}\nfunction visitQualifiedName(cs, forceDoubleQuote) {\n    if (cs.schema) {\n        ret.push(ident(cs.schema), '.');\n    }\n    ret.push(ident(cs.name, forceDoubleQuote), ' ');\n}\nfunction visitQualifiedNameAliased(cs) {\n    visitQualifiedName(cs);\n    if (cs.alias) {\n        ret.push(' AS ', ident(cs.alias), ' ');\n    }\n}\nfunction visitOrderBy(m, orderBy) {\n    ret.push(' ORDER BY ');\n    list(orderBy, e => {\n        m.expr(e.by);\n        if (e.order) {\n            ret.push(' ', e.order, ' ');\n        }\n        if (e.nulls) {\n            ret.push(' NULLS ', e.nulls, ' ');\n        }\n    }, false);\n}\nfunction visitSetVal(set) {\n    switch (set.type) {\n        case 'default':\n            ret.push('DEFAULT ');\n            break;\n        case 'identifier':\n            ret.push(set.name);\n            break;\n        case 'list':\n            let first = true;\n            for (const v of set.values) {\n                if (!first) {\n                    ret.push(', ');\n                }\n                first = false;\n                visitSetVal(v);\n            }\n            break;\n        case 'value':\n            ret.push(typeof set.value === 'number' ? set.value.toString() : (0, pg_escape_1.literal)(set.value));\n            break;\n        default:\n            throw utils_1.NotSupported.never(set);\n    }\n}\nfunction visitGenerated(m, alter) {\n    if (alter.always) {\n        ret.push(alter.always.toUpperCase(), ' ');\n    }\n    ret.push('AS IDENTITY ');\n    if (alter.sequence) {\n        ret.push('(');\n        if (alter.sequence.name) {\n            ret.push('SEQUENCE NAME ');\n            visitQualifiedName(alter.sequence.name);\n            ret.push(' ');\n        }\n        visitSeqOpts(m, alter.sequence);\n        ret.push(') ');\n    }\n}\nfunction visitSeqOpts(m, cs) {\n    if (cs.as) {\n        ret.push('AS ');\n        m.dataType(cs.as);\n        ret.push(' ');\n    }\n    if (typeof cs.incrementBy === 'number') {\n        ret.push('INCREMENT BY ', cs.incrementBy.toString(), ' ');\n    }\n    if (cs.minValue === 'no minvalue') {\n        ret.push('NO MINVALUE ');\n    }\n    if (typeof cs.minValue === 'number') {\n        ret.push('MINVALUE ', cs.minValue.toString(), ' ');\n    }\n    if (cs.maxValue === 'no maxvalue') {\n        ret.push('NO MAXVALUE ');\n    }\n    if (typeof cs.maxValue === 'number') {\n        ret.push('MAXVALUE ', cs.maxValue.toString(), ' ');\n    }\n    if (typeof cs.startWith === 'number') {\n        ret.push('START WITH ', cs.startWith.toString(), ' ');\n    }\n    if (typeof cs.cache === 'number') {\n        ret.push('CACHE ', cs.cache.toString(), ' ');\n    }\n    if (cs.cycle) {\n        ret.push(cs.cycle, ' ');\n    }\n    if (cs.ownedBy === 'none') {\n        ret.push('OWNED BY NONE ');\n    }\n    else if (cs.ownedBy) {\n        ret.push('OWNED BY ');\n        visitQColumn(cs.ownedBy);\n    }\n    if ('restart' in cs) {\n        if (cs.restart === true) {\n            ret.push('RESTART ');\n        }\n        else if (cs.restart) {\n            ret.push('RESTART WITH ', cs.restart.toString(), ' ');\n        }\n    }\n}\nfunction visitQColumn(col) {\n    if (col.schema) {\n        ret.push(ident(col.schema), '.');\n    }\n    ret.push(ident(col.table), '.', ident(col.column), ' ');\n}\nfunction join(m, j, tbl) {\n    if (!j) {\n        tbl();\n        return;\n    }\n    ret.push(j.type, ' ');\n    tbl();\n    if (j.on) {\n        ret.push('ON ');\n        m.expr(j.on);\n    }\n    if (j.using) {\n        ret.push('USING (');\n        list(j.using, x => ret.push(name(x)), false);\n        ret.push(') ');\n    }\n    ret.push(' ');\n}\nfunction visitOp(v) {\n    if (v.opSchema) {\n        ret.push(' operator(', ident(v.opSchema), '.', v.op, ') ');\n    }\n    else {\n        ret.push(' ', v.op, ' ');\n    }\n}\nconst visitor = (0, ast_visitor_1.astVisitor)(m => ({\n    addColumn: (...args) => {\n        ret.push(' ADD COLUMN ');\n        if (args[0].ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        m.super().addColumn(...args);\n    },\n    createExtension: e => {\n        ret.push('CREATE EXTENSION ');\n        if (e.ifNotExists) {\n            ret.push(' IF NOT EXISTS ');\n        }\n        ret.push(name(e.extension));\n        if (!e.from && !e.version && !e.schema) {\n            return;\n        }\n        ret.push(' WITH');\n        if (e.schema) {\n            ret.push(' SCHEMA ', name(e.schema));\n        }\n        if (e.version) {\n            ret.push(' VERSION ', (0, pg_escape_1.literal)(e.version.value));\n        }\n        if (e.from) {\n            ret.push(' FROM ', (0, pg_escape_1.literal)(e.from.value));\n        }\n    },\n    tablespace: t => {\n        ret.push('TABLESPACE ', name(t.tablespace));\n    },\n    addConstraint: c => {\n        ret.push(' ADD ');\n        const cname = c.constraint.constraintName;\n        if (cname) {\n            ret.push(' CONSTRAINT ', name(cname), ' ');\n        }\n        addConstraint(c.constraint, m);\n    },\n    alterColumn: (c, t) => {\n        ret.push(' ALTER COLUMN ', name(c.column), ' ');\n        m.super().alterColumn(c, t);\n    },\n    setColumnDefault: (a, t, c) => {\n        ret.push(' SET DEFAULT ');\n        m.expr(a.default);\n        if (a.updateExisting) {\n            throw new Error('Not implemented: updateExisting on set column default');\n        }\n    },\n    createEnum: t => {\n        ret.push('CREATE TYPE ');\n        visitQualifiedName(t.name);\n        ret.push(' AS ENUM ');\n        list(t.values, x => ret.push((0, pg_escape_1.literal)(x.value)), true);\n        ret.push(' ');\n    },\n    alterEnum: t => {\n        ret.push('ALTER TYPE ');\n        visitQualifiedName(t.name);\n        if (t.change.type === 'rename') {\n            ret.push(' RENAME TO ');\n            visitQualifiedName(t.change.to);\n        }\n        else {\n            ret.push(' ADD VALUE ', (0, pg_escape_1.literal)(t.change.add.value));\n        }\n    },\n    createCompositeType: c => {\n        ret.push('CREATE TYPE ');\n        visitQualifiedName(c.name);\n        ret.push(' AS ');\n        list(c.attributes, x => {\n            ret.push(name(x.name), ' ');\n            m.dataType(x.dataType);\n            if (x.collate) {\n                ret.push('COLLATE ');\n                visitQualifiedName(x.collate);\n            }\n        }, true);\n        ret.push(' ');\n    },\n    setTableOwner: o => {\n        ret.push(' OWNER TO ', name(o.to));\n    },\n    alterColumnSimple: c => ret.push(c.type),\n    alterColumnAddGenerated: (alter) => {\n        ret.push(' ADD GENERATED ');\n        visitGenerated(m, alter);\n    },\n    setColumnType: t => {\n        ret.push(' SET DATA TYPE ');\n        m.dataType(t.dataType);\n        ret.push(' ');\n    },\n    alterTable: t => {\n        ret.push('ALTER TABLE ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        if (t.only) {\n            ret.push(' ONLY ');\n        }\n        visitQualifiedNameAliased(t.table);\n        list(t.changes, change => m.tableAlteration(change, t.table), false);\n    },\n    alterIndex: t => {\n        ret.push('ALTER INDEX ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        visitQualifiedNameAliased(t.index);\n        switch (t.change.type) {\n            case 'rename':\n                ret.push(' RENAME TO ');\n                visitQualifiedName(t.change.to);\n                ret.push(' ');\n                break;\n            case 'set tablespace':\n                ret.push(' SET TABLESPACE ');\n                visitQualifiedName(t.change.tablespace);\n                ret.push(' ');\n                break;\n            default:\n                throw utils_1.NotSupported.never(t.change, 'Alter index type not supported: ');\n        }\n    },\n    tableAlteration: (change, table) => {\n        switch (change.type) {\n            case 'add column':\n                return m.addColumn(change, table);\n            case 'add constraint':\n                return m.addConstraint(change, table);\n            case 'alter column':\n                return m.alterColumn(change, table);\n            case 'rename':\n                return m.renameTable(change, table);\n            case 'rename column':\n                return m.renameColumn(change, table);\n            case 'rename constraint':\n                return m.renameConstraint(change, table);\n            case 'drop column':\n                return m.dropColumn(change, table);\n            case 'drop constraint':\n                return m.dropConstraint(change, table);\n            case 'owner':\n                return m.setTableOwner(change, table);\n            default:\n                throw utils_1.NotSupported.never(change);\n        }\n    },\n    array: v => {\n        ret.push(v.type === 'array' ? 'ARRAY[' : '(');\n        list(v.expressions, e => m.expr(e), false);\n        ret.push(v.type === 'array' ? ']' : ')');\n    },\n    arrayIndex: v => {\n        m.expr(v.array);\n        ret.push('[');\n        m.expr(v.index);\n        ret.push('] ');\n    },\n    expr: e => {\n        if (e.type === 'ref') {\n            m.ref(e);\n            return;\n        }\n        // lists can become incorrect with an additional set of parentheses\n        if (e.type === 'list') {\n            m.super().expr(e);\n            return;\n        }\n        // this forces to respect precedence\n        // (however, it will introduce lots of unecessary parenthesis)\n        ret.push('(');\n        m.super().expr(e);\n        ret.push(')');\n    },\n    callOverlay: o => {\n        ret.push('OVERLAY(');\n        m.expr(o.value);\n        ret.push(' PLACING ');\n        m.expr(o.placing);\n        ret.push(' FROM ');\n        m.expr(o.from);\n        if (o.for) {\n            ret.push(' FOR ');\n            m.expr(o.for);\n        }\n        ret.push(')');\n    },\n    callSubstring: s => {\n        ret.push('SUBSTRING(');\n        m.expr(s.value);\n        if (s.from) {\n            ret.push(' FROM ');\n            m.expr(s.from);\n        }\n        if (s.for) {\n            ret.push(' FOR ');\n            m.expr(s.for);\n        }\n        ret.push(')');\n    },\n    binary: v => {\n        m.expr(v.left);\n        visitOp(v);\n        m.expr(v.right);\n    },\n    call: v => {\n        visitQualifiedName(v.function);\n        ret.push('(');\n        if (v.distinct) {\n            ret.push(v.distinct, ' ');\n        }\n        list(v.args, e => m.expr(e), false);\n        if (v.orderBy) {\n            visitOrderBy(m, v.orderBy);\n        }\n        ret.push(') ');\n        if (v.filter) {\n            ret.push('filter (where ');\n            m.expr(v.filter);\n            ret.push(') ');\n        }\n        if (v.withinGroup) {\n            ret.push('WITHIN GROUP (');\n            visitOrderBy(m, [v.withinGroup]);\n            ret.push(') ');\n        }\n        if (v.over) {\n            ret.push('over (');\n            if (v.over.partitionBy) {\n                ret.push('PARTITION BY ');\n                list(v.over.partitionBy, x => m.expr(x), false);\n                ret.push(' ');\n            }\n            if (v.over.orderBy) {\n                visitOrderBy(m, v.over.orderBy);\n                ret.push(' ');\n            }\n            ret.push(') ');\n        }\n    },\n    case: c => {\n        ret.push('CASE ');\n        if (c.value) {\n            m.expr(c.value);\n        }\n        for (const e of c.whens) {\n            ret.push(' WHEN ');\n            m.expr(e.when);\n            ret.push(' THEN ');\n            m.expr(e.value);\n        }\n        if (c.else) {\n            ret.push(' ELSE ');\n            m.expr(c.else);\n        }\n        ret.push(' END ');\n    },\n    cast: c => {\n        m.expr(c.operand);\n        ret.push('::');\n        m.dataType(c.to);\n    },\n    constant: c => {\n        switch (c.type) {\n            case 'boolean':\n                ret.push(c.value ? 'true' : 'false');\n                break;\n            case 'integer':\n                ret.push(c.value.toString(10));\n                break;\n            case 'numeric':\n                ret.push(c.value.toString());\n                if (Number.isInteger(c.value)) {\n                    ret.push('.');\n                }\n                break;\n            case 'null':\n                ret.push('null');\n                break;\n            case 'constant':\n                break;\n            case 'string':\n                ret.push((0, pg_escape_1.literal)(c.value));\n                break;\n            default:\n                throw utils_1.NotSupported.never(c);\n        }\n    },\n    valueKeyword: v => {\n        ret.push(v.keyword, ' ');\n    },\n    comment: c => {\n        ret.push('COMMENT ON ', c.on.type.toUpperCase(), ' ');\n        switch (c.on.type) {\n            case 'column':\n                visitQColumn(c.on.column);\n                break;\n            default:\n                visitQualifiedName(c.on.name);\n                break;\n        }\n        ret.push(' IS ', (0, pg_escape_1.literal)(c.comment), ' ');\n    },\n    extract: v => {\n        ret.push('EXTRACT (', v.field.name.toUpperCase(), ' FROM ');\n        m.expr(v.from);\n        ret.push(') ');\n    },\n    createColumn: c => {\n        var _a;\n        ret.push(name(c.name), ' ');\n        m.dataType(c.dataType);\n        ret.push(' ');\n        if (c.collate) {\n            ret.push('COLLATE ');\n            visitQualifiedName(c.collate);\n        }\n        for (const cst of (_a = c.constraints) !== null && _a !== void 0 ? _a : []) {\n            m.constraint(cst);\n        }\n    },\n    begin: beg => {\n        ret.push('BEGIN ');\n        if (beg.isolationLevel) {\n            ret.push('ISOLATION LEVEL ', beg.isolationLevel.toUpperCase(), ' ');\n        }\n        if (beg.writeable) {\n            ret.push(beg.writeable.toUpperCase(), ' ');\n        }\n        if (typeof beg.deferrable === 'boolean') {\n            if (!beg.deferrable) {\n                ret.push('NOT ');\n            }\n            ret.push('DEFERRABLE ');\n        }\n    },\n    alterSequence: cs => {\n        ret.push('ALTER SEQUENCE ');\n        if (cs.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        visitQualifiedName(cs.name);\n        switch (cs.change.type) {\n            case 'set options':\n                visitSeqOpts(m, cs.change);\n                break;\n            case 'rename':\n                ret.push('RENAME TO ', name(cs.change.newName), ' ');\n                break;\n            case 'set schema':\n                ret.push('SET SCHEMA ', name(cs.change.newSchema), ' ');\n                break;\n            case 'owner to':\n                const own = cs.change.owner;\n                ret.push('OWNER TO ', name(cs.change.owner), ' ');\n                break;\n            default:\n                throw utils_1.NotSupported.never(cs.change);\n        }\n    },\n    createSequence: cs => {\n        ret.push('CREATE ');\n        if (cs.temp) {\n            ret.push('TEMPORARY ');\n        }\n        ret.push('SEQUENCE ');\n        if (cs.ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        visitQualifiedName(cs.name);\n        visitSeqOpts(m, cs.options);\n    },\n    drop: val => {\n        ret.push(val.type.toUpperCase(), ' ');\n        if (val.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        if (val.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        list(val.names, x => m.tableRef(x), false);\n        if (val.cascade) {\n            ret.push(val.cascade.toUpperCase(), ' ');\n        }\n    },\n    constraint: cst => {\n        if (cst.constraintName) {\n            ret.push(' CONSTRAINT ', name(cst.constraintName), ' ');\n        }\n        addConstraint(cst, m);\n    },\n    do: d => {\n        ret.push('DO');\n        if (d.language) {\n            ret.push(' LANGUAGE ', d.language.name);\n        }\n        ret.push(' $$', d.code, '$$');\n    },\n    createFunction: c => {\n        var _a;\n        ret.push(c.orReplace ? 'CREATE OR REPLACE FUNCTION ' : 'CREATE FUNCTION ');\n        visitQualifiedName(c.name);\n        // args\n        list(c.arguments, a => {\n            if (a.mode) {\n                ret.push(a.mode, ' ');\n            }\n            if (a.name) {\n                ret.push(name(a.name), ' ');\n            }\n            m.dataType(a.type);\n            if (a.default) {\n                ret.push(\" = \");\n                m.expr(a.default);\n            }\n        }, true);\n        // ret type\n        if (c.returns) {\n            switch (c.returns.kind) {\n                case 'table':\n                    ret.push(' RETURNS TABLE ');\n                    list(c.returns.columns, t => {\n                        ret.push(name(t.name), ' ');\n                        m.dataType(t.type);\n                    }, true);\n                    break;\n                case undefined:\n                case null:\n                case 'array':\n                    ret.push(' RETURNS ');\n                    m.dataType(c.returns);\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(c.returns);\n            }\n        }\n        ret.push(' AS $$', (_a = c.code) !== null && _a !== void 0 ? _a : '', '$$');\n        // function settings\n        if (c.language) {\n            ret.push('LANGUAGE ', c.language.name, ' ');\n        }\n        if (c.purity) {\n            ret.push(c.purity.toUpperCase(), ' ');\n        }\n        if (typeof c.leakproof === 'boolean') {\n            ret.push(c.leakproof ? 'LEAKPROOF ' : 'NOT LEAKPROOF ');\n        }\n        switch (c.onNullInput) {\n            case 'call':\n                ret.push('CALLED ON NULL INPUT ');\n                break;\n            case 'null':\n                ret.push('RETURNS NULL ON NULL INPUT ');\n                break;\n            case 'strict':\n                ret.push('STRICT ');\n                break;\n            case null:\n            case undefined:\n                break;\n            default:\n                throw utils_1.NotSupported.never(c.onNullInput);\n        }\n    },\n    dropFunction: d => {\n        ret.push('DROP FUNCTION ');\n        if (d.ifExists) {\n            ret.push('IF EXISTS ');\n        }\n        visitQualifiedName(d.name);\n        if (d.arguments) {\n            list(d.arguments, a => {\n                if (a.name) {\n                    visitQualifiedName(a.name);\n                    ret.push(' ');\n                }\n                m.dataType(a.type);\n            }, true);\n        }\n        ret.push(' ');\n    },\n    with: w => {\n        ret.push('WITH ');\n        list(w.bind, b => {\n            ret.push(name(b.alias), ' AS (');\n            m.statement(b.statement);\n            ret.push(') ');\n        }, false);\n        m.statement(w.in);\n    },\n    withRecursive: val => {\n        ret.push('WITH RECURSIVE ', name(val.alias), '(', ...val.columnNames.map(name).join(', '), ') AS (');\n        m.union(val.bind);\n        ret.push(') ');\n        m.statement(val.in);\n    },\n    setGlobal: g => {\n        ret.push('SET ');\n        if (g.scope) {\n            ret.push(g.scope.toUpperCase() + ' ');\n        }\n        ret.push(name(g.variable), ' = ');\n        visitSetVal(g.set);\n    },\n    setTimezone: g => {\n        ret.push('SET TIME ZONE ');\n        switch (g.to.type) {\n            case 'default':\n            case 'local':\n                ret.push(g.to.type.toUpperCase(), ' ');\n                break;\n            case 'value':\n                ret.push(typeof g.to.value === 'string'\n                    ? (0, pg_escape_1.literal)(g.to.value)\n                    : g.to.value.toString(10));\n                break;\n            case 'interval':\n                ret.push('INTERVAL ', (0, pg_escape_1.literal)(g.to.value), ' HOUR TO MINUTE');\n                break;\n            default:\n                throw utils_1.NotSupported.never(g.to);\n        }\n    },\n    setNames: g => {\n        ret.push('SET NAMES ');\n        switch (g.to.type) {\n            case 'value':\n                ret.push((0, pg_escape_1.literal)(g.to.value));\n                break;\n        }\n    },\n    dataType: d => {\n        var _a, _b;\n        if ((d === null || d === void 0 ? void 0 : d.kind) === 'array') {\n            m.dataType(d.arrayOf);\n            ret.push('[]');\n            return;\n        }\n        if (!(d === null || d === void 0 ? void 0 : d.name)) {\n            ret.push('unkown');\n            return;\n        }\n        let appendConfig = true;\n        if (d.schema) {\n            visitQualifiedName(d, d.doubleQuoted);\n        }\n        else {\n            // see https://www.postgresql.org/docs/13/datatype.html\n            // & issue https://github.com/oguimbal/pgsql-ast-parser/issues/38\n            if (d.doubleQuoted) {\n                visitQualifiedName(d, true);\n            }\n            else {\n                switch (d.name) {\n                    case 'double precision':\n                    case 'character varying':\n                    case 'bit varying':\n                        ret.push(d.name, ' ');\n                        break;\n                    case 'time without time zone':\n                    case 'timestamp without time zone':\n                    case 'time with time zone':\n                    case 'timestamp with time zone':\n                        const parts = d.name.split(' ');\n                        ret.push(parts.shift());\n                        if ((_a = d.config) === null || _a === void 0 ? void 0 : _a.length) {\n                            list(d.config, v => ret.push(v.toString(10)), true);\n                        }\n                        ret.push(' ');\n                        ret.push(parts.join(' '), ' ');\n                        appendConfig = false;\n                        break;\n                    default:\n                        visitQualifiedName(d);\n                        break;\n                }\n            }\n        }\n        if (appendConfig && ((_b = d.config) === null || _b === void 0 ? void 0 : _b.length)) {\n            list(d.config, v => ret.push(v.toString(10)), true);\n        }\n    },\n    createIndex: c => {\n        ret.push(c.unique ? 'CREATE UNIQUE INDEX ' : 'CREATE INDEX ');\n        if (c.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        if (c.ifNotExists) {\n            ret.push(' IF NOT EXISTS ');\n        }\n        if (c.indexName) {\n            ret.push(name(c.indexName), ' ');\n        }\n        ret.push('ON ');\n        m.tableRef(c.table);\n        if (c.using) {\n            ret.push('USING ', name(c.using), ' ');\n        }\n        list(c.expressions, e => {\n            m.expr(e.expression);\n            ret.push(' ');\n            if (e.collate) {\n                ret.push('COLLATE ');\n                visitQualifiedName(e.collate);\n            }\n            if (e.opclass) {\n                visitQualifiedName(e.opclass);\n            }\n            if (e.order) {\n                ret.push(e.order, ' ');\n            }\n            if (e.nulls) {\n                ret.push('nulls ', e.nulls, ' ');\n            }\n        }, true);\n        if (c.with) {\n            ret.push('WITH ');\n            list(c.with, w => {\n                ret.push(w.parameter, ' = ', (0, pg_escape_1.literal)(w.value));\n            }, true);\n        }\n        if (c.tablespace) {\n            ret.push('TABLESPACE ', ident(c.tablespace));\n        }\n        if (c.where) {\n            ret.push(' WHERE ');\n            m.expr(c.where);\n        }\n        ret.push(' ');\n    },\n    createTable: t => {\n        var _a;\n        ret.push('CREATE ');\n        if (t.locality) {\n            ret.push(t.locality.toUpperCase(), ' ');\n        }\n        if (t.temporary) {\n            ret.push('TEMPORARY ');\n        }\n        if (t.unlogged) {\n            ret.push('UNLOGGED ');\n        }\n        ret.push(t.ifNotExists ? 'TABLE IF NOT EXISTS ' : 'TABLE ');\n        m.tableRef(t.name);\n        ret.push('(');\n        list(t.columns, c => {\n            switch (c.kind) {\n                case 'column':\n                    return m.createColumn(c);\n                case 'like table':\n                    return m.likeTable(c);\n                default:\n                    throw utils_1.NotSupported.never(c);\n            }\n        }, false);\n        if (t.constraints) {\n            ret.push(', ');\n            list(t.constraints, c => {\n                const cname = c.constraintName;\n                if (cname) {\n                    ret.push('CONSTRAINT ', name(cname), ' ');\n                }\n                addConstraint(c, m);\n            }, false);\n        }\n        ret.push(') ');\n        if ((_a = t.inherits) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.push(' INHERITS ');\n            list(t.inherits, i => visitQualifiedName(i), true);\n        }\n    },\n    likeTable: l => {\n        ret.push(' LIKE ');\n        m.tableRef(l.like);\n        ret.push(' ');\n        for (const { verb, option } of l.options) {\n            ret.push(verb.toUpperCase(), ' ', option.toUpperCase(), ' ');\n        }\n    },\n    createSchema: s => {\n        ret.push(s.ifNotExists ? 'CREATE SCHEMA IF NOT EXISTS ' : 'CREATE SCHEMA ');\n        ret.push(name(s.name));\n    },\n    truncateTable: t => {\n        ret.push('TRUNCATE TABLE ');\n        let first = true;\n        for (const tbl of t.tables) {\n            if (!first) {\n                ret.push(', ');\n            }\n            first = false;\n            m.tableRef(tbl);\n        }\n        if (t.identity) {\n            switch (t.identity) {\n                case 'restart':\n                    ret.push(' RESTART IDENTITY ');\n                    break;\n                case 'continue':\n                    ret.push(' CONTINUE IDENTITY ');\n                    break;\n            }\n        }\n        if (t.cascade) {\n            ret.push(' ', t.cascade, ' ');\n        }\n    },\n    delete: t => {\n        ret.push('DELETE FROM ');\n        m.tableRef(t.from);\n        if (t.where) {\n            ret.push(' WHERE ');\n            m.expr(t.where);\n        }\n        if (t.returning) {\n            ret.push(' RETURNING ');\n            list(t.returning, r => m.selectionColumn(r), false);\n        }\n        ret.push(' ');\n    },\n    dropColumn: t => {\n        ret.push(' DROP COLUMN ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        ret.push(name(t.column));\n        if (t.behaviour) {\n            ret.push(' ', t.behaviour);\n        }\n        ret.push(' ');\n    },\n    dropConstraint: t => {\n        ret.push(' DROP CONSTRAINT ');\n        if (t.ifExists) {\n            ret.push(' IF EXISTS ');\n        }\n        ret.push(name(t.constraint));\n        if (t.behaviour) {\n            ret.push(' ', t.behaviour.toUpperCase(), ' ');\n        }\n    },\n    from: t => m.super().from(t),\n    fromCall: s => {\n        join(m, s.join, () => {\n            var _a, _b;\n            if (s.lateral) {\n                ret.push(\"LATERAL \");\n            }\n            m.call(s);\n            if (s.withOrdinality) {\n                ret.push(' WITH ORDINALITY');\n            }\n            if (s.alias) {\n                ret.push(' AS ', name(s.alias), ' ');\n                const len = (_b = (_a = s.alias.columns) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n                if (len > 0) {\n                    ret.push('(');\n                    for (let ix = 0; ix < len; ++ix) {\n                        if (ix !== 0) {\n                            ret.push(', ');\n                        }\n                        ret.push(name(s.alias.columns[ix]));\n                    }\n                    ret.push(')');\n                }\n            }\n        });\n        ret.push(' ');\n    },\n    fromStatement: s => {\n        // todo: use 's.db' if defined\n        join(m, s.join, () => {\n            if (s.lateral) {\n                ret.push(\"LATERAL \");\n            }\n            ret.push('(');\n            m.select(s.statement);\n            ret.push(') ');\n            if (s.alias) {\n                ret.push(' AS ', ident(s.alias));\n                if (s.columnNames) {\n                    list(s.columnNames, c => ret.push(name(c)), true);\n                }\n                ret.push(' ');\n            }\n        });\n        ret.push(' ');\n    },\n    values: s => {\n        ret.push('VALUES ');\n        list(s.values, vlist => {\n            list(vlist, e => {\n                m.expr(e);\n            }, true);\n        }, false);\n    },\n    fromTable: s => {\n        join(m, s.join, () => {\n            m.tableRef(s.name);\n            if (s.name.columnNames) {\n                if (!s.name.alias) {\n                    throw new Error('Cannot specify aliased column names without an alias');\n                }\n                list(s.name.columnNames, c => ret.push(name(c)), true);\n            }\n        });\n    },\n    join: j => {\n        throw new Error('Should not happen 💀');\n    },\n    insert: i => {\n        ret.push('INSERT INTO ');\n        m.tableRef(i.into);\n        if (i.columns) {\n            ret.push('(', i.columns.map(name).join(', '), ')');\n        }\n        ret.push(' ');\n        if (i.overriding) {\n            ret.push('OVERRIDING ', i.overriding.toUpperCase(), ' VALUE ');\n        }\n        m.select(i.insert);\n        ret.push(' ');\n        if (i.onConflict) {\n            ret.push('ON CONFLICT ');\n            const on = i.onConflict.on;\n            switch (on === null || on === void 0 ? void 0 : on.type) {\n                case 'on expr':\n                    list(on.exprs, e => m.expr(e), true);\n                    break;\n                case 'on constraint':\n                    ret.push('ON CONSTRAINT ');\n                    visitQualifiedName(on.constraint);\n                case null:\n                case undefined:\n                    break;\n                default:\n                    throw utils_1.NotSupported.never(on);\n            }\n            if (i.onConflict.do === 'do nothing') {\n                ret.push(' DO NOTHING');\n            }\n            else {\n                ret.push(' DO UPDATE SET ');\n                list(i.onConflict.do.sets, s => m.set(s), false);\n                if (i.onConflict.where) {\n                    ret.push(' WHERE ');\n                    m.expr(i.onConflict.where);\n                }\n            }\n            ret.push(' ');\n        }\n        if (i.returning) {\n            ret.push(' RETURNING ');\n            list(i.returning, r => m.selectionColumn(r), false);\n        }\n    },\n    raise: r => {\n        var _a, _b;\n        ret.push('RAISE ');\n        if (r.level) {\n            ret.push(r.level.toUpperCase(), ' ');\n        }\n        ret.push((0, pg_escape_1.literal)(r.format), ' ');\n        if ((_a = r.formatExprs) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.push(', ');\n            list(r.formatExprs, e => m.expr(e), false);\n        }\n        if ((_b = r.using) === null || _b === void 0 ? void 0 : _b.length) {\n            ret.push(' USING ');\n            list(r.using, ({ type, value }) => {\n                ret.push(type.toUpperCase(), '=');\n                m.expr(value);\n            }, false);\n        }\n        ret.push(' ');\n    },\n    default: () => {\n        ret.push(' DEFAULT ');\n    },\n    member: e => {\n        m.expr(e.operand);\n        ret.push(e.op);\n        ret.push(typeof e.member === 'number'\n            ? e.member.toString(10)\n            : (0, pg_escape_1.literal)(e.member));\n    },\n    ref: r => {\n        if (r.table) {\n            visitQualifiedName(r.table);\n            ret.push('.');\n        }\n        ret.push(r.name === '*' ? '*' : ident(r.name));\n    },\n    parameter: p => {\n        ret.push(p.name);\n    },\n    renameColumn: r => {\n        ret.push(' RENAME COLUMN ', name(r.column), ' TO ', name(r.to));\n    },\n    renameConstraint: r => {\n        ret.push(' RENAME CONSTRAINT ', name(r.constraint), ' TO ', name(r.to));\n    },\n    renameTable: r => {\n        ret.push(' RENAME TO ', name(r.to));\n    },\n    createView: c => {\n        ret.push('CREATE ');\n        if (c.orReplace) {\n            ret.push('OR REPLACE ');\n        }\n        if (c.temp) {\n            ret.push('TEMP ');\n        }\n        if (c.recursive) {\n            ret.push('RECURSIVE ');\n        }\n        ret.push('VIEW ');\n        m.tableRef(c.name);\n        if (c.columnNames) {\n            list(c.columnNames, c => ret.push(name(c)), true);\n        }\n        const opts = c.parameters && Object.entries(c.parameters);\n        if (opts === null || opts === void 0 ? void 0 : opts.length) {\n            ret.push(' WITH ');\n            list(opts, ([k, v]) => ret.push(k, '=', v), false);\n        }\n        ret.push(' AS ');\n        m.select(c.query);\n        if (c.checkOption) {\n            ret.push(' WITH ', c.checkOption.toUpperCase(), ' CHECK OPTION');\n        }\n    },\n    createMaterializedView: c => {\n        ret.push('CREATE MATERIALIZED VIEW ');\n        if (c.ifNotExists) {\n            ret.push('IF NOT EXISTS ');\n        }\n        m.tableRef(c.name);\n        if (c.columnNames) {\n            list(c.columnNames, c => ret.push(name(c)), true);\n        }\n        const opts = c.parameters && Object.entries(c.parameters);\n        if (opts === null || opts === void 0 ? void 0 : opts.length) {\n            ret.push(' WITH ');\n            list(opts, ([k, v]) => ret.push(k, '=', v), false);\n        }\n        if (c.tablespace) {\n            ret.push(' TABLESPACE ', name(c.tablespace));\n        }\n        ret.push(' AS ');\n        m.select(c.query);\n        if (typeof c.withData === 'boolean') {\n            ret.push(c.withData ? ' WITH DATA' : ' WITH NO DATA');\n        }\n    },\n    refreshMaterializedView: val => {\n        ret.push('REFRESH MATERIALIZED VIEW ');\n        if (val.concurrently) {\n            ret.push('CONCURRENTLY ');\n        }\n        m.tableRef(val.name);\n        if (typeof val.withData === 'boolean') {\n            ret.push(val.withData ? ' WITH DATA' : ' WITH NO DATA');\n        }\n    },\n    select: s => m.super().select(s),\n    selection: s => {\n        ret.push('SELECT ');\n        if (s.distinct) {\n            if (typeof s.distinct === 'string') {\n                ret.push(s.distinct.toUpperCase());\n            }\n            else {\n                ret.push(' DISTINCT ON ');\n                list(s.distinct, v => m.expr(v), true);\n            }\n            ret.push(' ');\n        }\n        if (s.columns) {\n            list(s.columns, c => m.selectionColumn(c), false);\n        }\n        ret.push(' ');\n        if (s.from) {\n            ret.push('FROM ');\n            const tblCnt = s.from.length;\n            for (let i = 0; i < tblCnt; i++) {\n                const f = s.from[i];\n                if (i > 0 && !f.join) {\n                    // implicit cross join (https://www.postgresql.org/docs/9.5/sql-select.html#SQL-FROM)\n                    ret.push(',');\n                }\n                m.from(f);\n            }\n            ret.push(' ');\n        }\n        if (s.where) {\n            ret.push('WHERE ');\n            m.expr(s.where);\n            ret.push(' ');\n        }\n        if (s.groupBy) {\n            ret.push('GROUP BY ');\n            list(s.groupBy, e => m.expr(e), false);\n            ret.push(' ');\n            if (s.having) {\n                ret.push(' HAVING ');\n                m.expr(s.having);\n                ret.push(' ');\n            }\n        }\n        if (s.orderBy) {\n            visitOrderBy(m, s.orderBy);\n            ret.push(' ');\n        }\n        if (s.limit) {\n            if (s.limit.offset) {\n                ret.push(`OFFSET `);\n                m.expr(s.limit.offset);\n            }\n            if (s.limit.limit) {\n                ret.push(`LIMIT `);\n                m.expr(s.limit.limit);\n            }\n        }\n        if (s.for) {\n            ret.push('FOR ', s.for.type.toUpperCase());\n            if (s.skip) {\n                ret.push(' ', s.skip.type.toUpperCase());\n            }\n        }\n    },\n    show: s => {\n        ret.push('SHOW ', name(s.variable));\n    },\n    prepare: s => {\n        var _a;\n        ret.push('PREPARE ', name(s.name));\n        if ((_a = s.args) === null || _a === void 0 ? void 0 : _a.length) {\n            list(s.args, a => m.dataType(a), true);\n        }\n        ret.push(' AS ');\n        m.statement(s.statement);\n    },\n    deallocate: s => {\n        ret.push('DEALLOCATE ');\n        if ('name' in s.target) {\n            ret.push(s.target.name);\n            return;\n        }\n        ret.push('ALL');\n    },\n    arraySelect: s => {\n        ret.push('array(');\n        m.select(s.select);\n        ret.push(')');\n    },\n    union: s => {\n        ret.push('(');\n        m.statement(s.left);\n        ret.push(') ', s.type.toUpperCase(), ' ');\n        if (s.right.type === 'union' || s.right.type === 'union all') {\n            m.union(s.right);\n        }\n        else {\n            ret.push('(');\n            m.statement(s.right);\n            ret.push(')');\n        }\n    },\n    selectionColumn: c => {\n        m.expr(c.expr);\n        if (c.alias) {\n            ret.push(' AS ', name(c.alias));\n        }\n        ret.push(' ');\n    },\n    set: s => {\n        ret.push(name(s.column), ' = ');\n        m.expr(s.value);\n        ret.push(' ');\n    },\n    statement: s => m.super().statement(s),\n    tableRef: r => {\n        visitQualifiedName(r);\n        if (r.alias) {\n            ret.push(' AS ', ident(r.alias));\n        }\n        ret.push(' ');\n    },\n    ternary: t => {\n        m.expr(t.value);\n        ret.push(' ', t.op, ' ');\n        m.expr(t.lo);\n        ret.push(' AND ');\n        m.expr(t.hi);\n        ret.push(' ');\n    },\n    transaction: t => {\n        ret.push(t.type);\n    },\n    unary: t => {\n        switch (t.op) {\n            case '+':\n            case '-':\n                // prefix ops\n                visitOp(t);\n                m.expr(t.operand);\n                break;\n            case 'NOT':\n                // prefix ops\n                ret.push(t.op);\n                ret.push(' ');\n                m.expr(t.operand);\n                break;\n            default:\n                // postfix ops\n                m.expr(t.operand);\n                ret.push(' ');\n                ret.push(t.op);\n        }\n    },\n    update: u => {\n        ret.push('UPDATE ');\n        m.tableRef(u.table);\n        ret.push(' SET ');\n        list(u.sets, s => m.set(s), false);\n        ret.push(' ');\n        if (u.from) {\n            ret.push('FROM ');\n            m.from(u.from);\n            ret.push(' ');\n        }\n        if (u.where) {\n            ret.push('WHERE ');\n            m.expr(u.where);\n            ret.push(' ');\n        }\n        if (u.returning) {\n            ret.push(' RETURNING ');\n            list(u.returning, r => m.selectionColumn(r), false);\n            ret.push(' ');\n        }\n    },\n}));\nexports.toSql = {};\nconst proto = ast_mapper_1.AstDefaultMapper.prototype;\nfor (const k of Object.getOwnPropertyNames(proto)) {\n    const orig = proto[k];\n    if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {\n        continue;\n    }\n    exports.toSql[k] = function (...args) {\n        try {\n            visitor[k].apply(visitor, args);\n            return ret.join('').trim();\n        }\n        finally {\n            ret = [];\n        }\n    };\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// stolen from https://github.com/segmentio/pg-escape/blob/master/index.js\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.literal = void 0;\nfunction literal(val) {\n    if (null == val)\n        return 'NULL';\n    if (Array.isArray(val)) {\n        var vals = val.map(literal);\n        return \"(\" + vals.join(\", \") + \")\";\n    }\n    var backslash = ~val.indexOf('\\\\');\n    var prefix = backslash ? 'E' : '';\n    val = val.replace(/'/g, \"''\");\n    val = val.replace(/\\\\/g, '\\\\\\\\');\n    return prefix + \"'\" + val + \"'\";\n}\nexports.literal = literal;\n;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.locationOf = void 0;\nfunction locationOf(node) {\n    const n = node._location;\n    if (!n) {\n        throw new Error('This statement has not been parsed using location tracking (which has a small performance hit). ');\n    }\n    return n;\n}\nexports.locationOf = locationOf;\n;\n;\n\n\n/***/ })\n/******/ ])));\n//# sourceMappingURL=index.js.map","'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1269__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/grafana-clickhouse-datasource/\";","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/grafana-clickhouse-datasource/';\n","export interface FieldLabel {\n  label: string;\n  tooltip: string;\n}\n\nexport enum BuilderMode {\n  List = 'list',\n  Aggregate = 'aggregate',\n  Trend = 'trend',\n}\n\n/**\n * QueryType determines the display/query format.\n */\nexport enum QueryType {\n  Table = 'table',\n  Logs = 'logs',\n  TimeSeries = 'timeseries',\n  Traces = 'traces',\n}\n\nexport interface QueryBuilderOptions {\n  database: string;\n  table: string;\n  queryType: QueryType;\n  \n  mode?: BuilderMode; // TODO: no longer required?\n\n  columns?: SelectedColumn[];\n  aggregates?: AggregateColumn[];\n  filters?: Filter[];\n  groupBy?: string[];\n  orderBy?: OrderBy[];\n  limit?: number;\n\n  /**\n   * Contains metadata for editor-specific use cases.\n   */\n  meta?: {\n    /**\n     * When enabled, will hide most/all of the query builder options.\n     * \n     * Intended to be used for trace ID lookups where we only care to show the visualization panel\n     */\n    minimized?: boolean;\n\n    // Logs\n    liveView?: boolean;\n    logMessageLike?: string;\n\n    // Trace\n    traceDurationUnit?: TimeUnit;\n    /**\n     * true for trace ID mode, false for trace search mode\n     */\n    isTraceIdMode?: boolean;\n    traceId?: string;\n\n    /**\n     * True if \"Nested\" column types should be treated as if they\n     * were created with flatten_nested=1. Applies to trace Events and Links columns.\n     */\n    flattenNested?: boolean;\n    traceEventsColumnPrefix?: string;\n    traceLinksColumnPrefix?: string;\n\n    // Logs & Traces\n    otelEnabled?: boolean;\n    otelVersion?: string;\n  }\n}\n\nexport enum AggregateType {\n  Sum = 'sum',\n  Average = 'avg',\n  Min = 'min',\n  Max = 'max',\n  Count = 'count',\n  Any = 'any',\n  // Count_Distinct = 'count_distinct',\n}\n\nexport type AggregateColumn = {\n  aggregateType: AggregateType;\n  column: string;\n  alias?: string;\n}\n\nexport interface Field {\n  name: string;\n  type: string;\n  rel: string;\n  label: string;\n  ref: string[];\n}\n\nexport interface FullEntity {\n  name: string;\n  label: string;\n  custom: boolean;\n  queryable: boolean;\n}\n\ninterface TableColumnPickListItem {\n  label: string;\n  value: string;\n}\n\n/**\n * Represents a column retrieved from ClickHouse\n */\nexport interface TableColumn {\n  name: string;\n  type: string;\n  picklistValues: TableColumnPickListItem[];\n  label?: string;\n  filterable?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  aggregatable?: boolean;\n}\n\nexport interface SqlFunction {\n  name: string;\n  isAggregate: boolean;\n  caseInsensitive: boolean;\n  aliasTo: string;\n  origin: string;\n  description: string;\n  syntax: string;\n  arguments: string;\n  returnedValue: string;\n  examples: string;\n  categories: string;\n}\n\n/**\n * Some columns are used to enable certain features.\n * This enum defines the different use cases that a column may be used for in the query generator.\n * For example, \"Time\" would be used to identify the primary time column for a time series.\n */\nexport enum ColumnHint {\n  Time = 'time',\n\n  LogLevel = 'log_level',\n  LogMessage = 'log_message',\n  LogLabels = 'log_labels',\n\n  TraceId = 'trace_id',\n  TraceSpanId = 'trace_span_id',\n  TraceParentSpanId = 'trace_parent_span_id',\n  TraceServiceName = 'trace_service_name',\n  TraceOperationName = 'trace_operation_name',\n  TraceDurationTime = 'trace_duration_time',\n  TraceTags = 'trace_tags',\n  TraceServiceTags = 'trace_service_tags',\n  TraceStatusCode = 'trace_status_code',\n  TraceKind = 'trace_kind',\n  TraceStatusMessage = 'trace_status_message',\n  TraceInstrumentationLibraryName = 'instrumentation_library_name',\n  TraceInstrumentationLibraryVersion = 'instrumentation_library_version',\n  TraceState = 'trace_state',\n}\n\n/**\n * TimeUnit determines a unit of time.\n */\nexport enum TimeUnit {\n  Seconds = 'seconds',\n  Milliseconds = 'milliseconds',\n  Microseconds = 'microseconds',\n  Nanoseconds = 'nanoseconds',\n}\n\n/**\n * Represents a column selection, including metadata for the query generator to use.\n */\nexport interface SelectedColumn {\n  name: string;\n  type?: string;\n  alias?: string;\n  custom?: boolean;\n  hint?: ColumnHint;\n}\n\nexport enum OrderByDirection {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\nexport interface OrderBy {\n  name: string;\n  dir: OrderByDirection;\n  /**\n   * true if this orderBy was configured to be present by default\n   */\n  default?: boolean;\n\n  /**\n   * If provided, SQL generator will ignore \"name\" and instead\n   * find the intended column by the hint\n   */\n  hint?: ColumnHint;\n}\n\nexport enum FilterOperator {\n  /**\n   * A placeholder filter that gets excluded from SQL generation\n   */\n  IsAnything = 'IS ANYTHING',\n\n  /**\n   * Compares to an empty string\n   */\n  IsEmpty = 'IS EMPTY',\n  IsNotEmpty = 'IS NOT EMPTY',\n\n  IsNull = 'IS NULL',\n  IsNotNull = 'IS NOT NULL',\n  Equals = '=',\n  NotEquals = '!=',\n  LessThan = '<',\n  LessThanOrEqual = '<=',\n  GreaterThan = '>',\n  GreaterThanOrEqual = '>=',\n  Like = 'LIKE',\n  NotLike = 'NOT LIKE',\n  In = 'IN',\n  NotIn = 'NOT IN',\n  WithInGrafanaTimeRange = 'WITH IN DASHBOARD TIME RANGE',\n  OutsideGrafanaTimeRange = 'OUTSIDE DASHBOARD TIME RANGE',\n}\n\nexport interface CommonFilterProps {\n  filterType: 'custom';\n  /**\n   * Column name\n   */\n  key: string;\n  /**\n   * key used when using a map type: exampleMap['mapKey']\n   */\n  mapKey?: string;\n  type: string;\n  condition: 'AND' | 'OR';\n\n  /**\n   * Used to uniquely identify a dynamically added filter\n   * For example, might be set to 'timeRange' for the default added time range filter.\n   */\n  id?: string;\n  /**\n   * If provided, SQL generator will ignore \"key\" and instead\n   * find the intended column by the hint.\n   * \n   * Note that the column MUST be present in the selected columns array in order\n   * for the filter to be applied unless key is also provided.\n   */\n  hint?: ColumnHint;\n\n  /**\n   * Display label for filter\n   */\n  label?: string;\n}\n\nexport interface NullFilter extends CommonFilterProps {\n  operator: FilterOperator.IsAnything | FilterOperator.IsNull | FilterOperator.IsNotNull;\n}\n\nexport interface BooleanFilter extends CommonFilterProps {\n  type: 'boolean';\n  operator: FilterOperator.IsAnything | FilterOperator.Equals | FilterOperator.NotEquals;\n  value: boolean;\n}\n\nexport interface StringFilter extends CommonFilterProps {\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.IsEmpty\n    | FilterOperator.IsNotEmpty\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.Like\n    | FilterOperator.NotLike;\n  value: string;\n}\n\nexport interface NumberFilter extends CommonFilterProps {\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.LessThan\n    | FilterOperator.LessThanOrEqual\n    | FilterOperator.GreaterThan\n    | FilterOperator.GreaterThanOrEqual;\n  value: number;\n}\n\nexport interface DateFilterWithValue extends CommonFilterProps {\n  type: 'datetime' | 'date';\n  operator:\n    | FilterOperator.IsAnything\n    | FilterOperator.Equals\n    | FilterOperator.NotEquals\n    | FilterOperator.LessThan\n    | FilterOperator.LessThanOrEqual\n    | FilterOperator.GreaterThan\n    | FilterOperator.GreaterThanOrEqual;\n  value: string;\n}\n\nexport interface DateFilterWithoutValue extends CommonFilterProps {\n  type: 'datetime' | 'date';\n  operator: FilterOperator.IsAnything | FilterOperator.WithInGrafanaTimeRange | FilterOperator.OutsideGrafanaTimeRange;\n}\n\nexport type DateFilter = DateFilterWithValue | DateFilterWithoutValue;\n\nexport interface MultiFilter extends CommonFilterProps {\n  operator: FilterOperator.IsAnything | FilterOperator.In | FilterOperator.NotIn;\n  value: string[];\n}\n\nexport type Filter = NullFilter | BooleanFilter | NumberFilter | DateFilter | StringFilter | MultiFilter;\n","import { DataQuery } from '@grafana/schema';\nimport { BuilderMode, QueryType, QueryBuilderOptions } from './queryBuilder';\n\n/**\n * EditorType determines the query editor type.\n */\nexport enum EditorType {\n  SQL = 'sql',\n  Builder = 'builder',\n}\n\nexport interface CHQueryBase extends DataQuery {\n  pluginVersion: string,\n  editorType: EditorType;\n  rawSql: string;\n\n  /**\n   * REQUIRED by backend for auto selecting preferredVisualizationType.\n   * Only used in explore view.\n   * src: https://github.com/grafana/sqlds/blob/dda2dc0a54b128961fc9f7885baabf555f3ddfdc/query.go#L36\n   */\n  format?: number;\n}\n\nexport interface CHSqlQuery extends CHQueryBase {\n  editorType: EditorType.SQL;\n  queryType?: QueryType; // only used in explore view\n  meta?: {\n    timezone?: string;\n    // meta fields to be used just for building builder options when migrating back to EditorType.Builder\n    builderOptions?: QueryBuilderOptions;\n  };\n  expand?: boolean;\n}\n\nexport interface CHBuilderQuery extends CHQueryBase {\n  editorType: EditorType.Builder;\n  builderOptions: QueryBuilderOptions;\n  meta?: {\n    timezone?: string;\n  };\n}\n\nexport type CHQuery = CHSqlQuery | CHBuilderQuery;\n\n// TODO: these aren't really types\nexport const defaultEditorType: EditorType = EditorType.Builder;\nexport const defaultCHBuilderQuery: Omit<CHBuilderQuery, 'refId'> = {\n  pluginVersion: '',\n  editorType: EditorType.Builder,\n  rawSql: '',\n  builderOptions: {\n    database: '',\n    table: '',\n    queryType: QueryType.Table,\n    mode: BuilderMode.List,\n    columns: [],\n    meta: {},\n    limit: 1000\n  },\n};\nexport const defaultCHSqlQuery: Omit<CHSqlQuery, 'refId'> = {\n  pluginVersion: '',\n  editorType: EditorType.SQL,\n  rawSql: '',\n  expand: false,\n};\n","import { parseFirst, Statement, SelectFromStatement, astMapper, toSql, ExprRef } from 'pgsql-ast-parser';\n\ninterface ReplacePart {\n  startIndex: number;\n  name: string;\n  replacementName: string;\n};\ntype ReplaceParts = ReplacePart[];\n\nfunction getReplacementKey(isVariable: boolean) {\n  const prefix = isVariable ? 'v' : 'f';\n  return prefix + (Math.random() + 1).toString(36).substring(7);\n}\n\n/**\n * Replaces macro functions and keywords such as $__timeFilter() and \"default\"\n */\nfunction replaceMacroFunctions(sql: string): [ReplaceParts, string] {\n  const replaceFuncs: ReplaceParts = [];\n  // default is a keyword in this grammar, but it can be used in CH\n  const keywordRegex = /(\\$__|\\$|default|settings)/gi;\n  let regExpArray: RegExpExecArray | null;\n  while ((regExpArray = keywordRegex.exec(sql)) !== null) {\n    replaceFuncs.push({ startIndex: regExpArray.index, name: regExpArray[0], replacementName: '' });\n  }\n\n  // need to process in reverse so starting positions aren't affected by replacing other things\n  for (let i = replaceFuncs.length - 1; i >= 0; i--) {\n    const si = replaceFuncs[i].startIndex;\n    const replacementName = getReplacementKey(false);\n    replaceFuncs[i].replacementName = replacementName;\n    // settings do not parse and we do not need information from them so we will remove them\n    if (replaceFuncs[i].name.toLowerCase() === 'settings') {\n      sql = sql.substring(0, si);\n      continue;\n    }\n    sql = sql.substring(0, si) + replacementName + sql.substring(si + replaceFuncs[i].name.length);\n  }\n\n  return [replaceFuncs, sql];\n}\n\n/**\n * Replaces Grafana variables such as ${var} ${var.key} ${var.key:singlequote}\n * https://grafana.com/docs/grafana/latest/dashboards/variables\n */\nfunction replaceMacroVariables(sql: string): [ReplaceParts, string] {\n  const replaceVariables: ReplaceParts = [];\n  const variableRegex = /\\${[a-zA-Z0-9_:.\\w]+}/g;\n\n  let regExpArray: RegExpExecArray | null;\n  while ((regExpArray = variableRegex.exec(sql)) !== null) {\n    replaceVariables.push({ startIndex: regExpArray.index, name: regExpArray[0], replacementName: '' });\n  }\n\n  // need to process in reverse so starting positions aren't affected by replacing other things\n  for (let i = replaceVariables.length - 1; i >= 0; i--) {\n    const si = replaceVariables[i].startIndex;\n    const replacementName = getReplacementKey(true);\n    replaceVariables[i].replacementName = replacementName;\n    sql = sql.substring(0, si) + replacementName + sql.substring(si + replaceVariables[i].name.length);\n  }\n\n  return [replaceVariables, sql];\n}\n\n// TODO: support query parameters: https://clickhouse.com/docs/en/interfaces/cli#cli-queries-with-parameters\n\nexport function sqlToStatement(rawSql: string): Statement {\n  const [replaceVars, variableSql] = replaceMacroVariables(rawSql);\n  const [replaceFuncs, sql] = replaceMacroFunctions(variableSql);\n  const replaceParts = replaceVars.concat(replaceFuncs);\n\n  let ast: Statement;\n  try {\n    ast = parseFirst(sql);\n  } catch (err) {\n    console.error(`Failed to parse SQL statement into an AST: ${err}`);\n    return {} as Statement;\n  }\n\n  const mapper = astMapper((map) => ({\n    tableRef: (t) => {\n      const rfs = replaceParts.find((x) => x.replacementName === t.schema);\n      if (rfs) {\n        return { ...t, schema: t.schema?.replace(rfs.replacementName, rfs.name) };\n      }\n      const rft = replaceParts.find((x) => x.replacementName === t.name);\n      if (rft) {\n        return { ...t, name: t.name.replace(rft.replacementName, rft.name) };\n      }\n      return map.super().tableRef(t);\n    },\n    ref: (r) => {\n      const rf = replaceParts.find((x) => r.name.startsWith(x.replacementName));\n      if (rf) {\n        const d = r.name.replace(rf.replacementName, rf.name);\n        return { ...r, name: d };\n      }\n      return map.super().ref(r);\n    },\n    expr: (e) => {\n      if (!e || e.type !== 'string') {\n        return map.super().expr(e);\n      }\n\n      const rf = replaceParts.find(x => e.value.startsWith(x.replacementName));\n      if (rf) {\n        const d = e.value.replace(rf.replacementName, rf.name);\n        return { ...e, value: d };\n      }\n\n      return map.super().expr(e);\n    },\n    call: (c) => {\n      const rf = replaceParts.find((x) => c.function.name.startsWith(x.replacementName));\n      if (rf) {\n        return { ...c, function: { ...c.function, name: c.function.name.replace(rf.replacementName, rf.name) } };\n      }\n      return map.super().call(c);\n    },\n  }));\n  return mapper.statement(ast)!;\n}\n\nexport function getTable(sql: string): string {\n  const stm = sqlToStatement(sql);\n  if (stm.type !== 'select' || !stm.from?.length || stm.from?.length <= 0) {\n    return '';\n  }\n  switch (stm.from![0].type) {\n    case 'table': {\n      const table = stm.from![0];\n      const tableName = `${table.name.schema ? `${table.name.schema}.` : ''}${table.name.name}`;\n      // clickhouse table names are case-sensitive and pgsql parser removes casing,\n      // so we need to get the casing from the raw sql\n      const s = new RegExp(`\\\\b${tableName}\\\\b`, 'gi').exec(sql);\n      return s ? s[0] : tableName;\n    }\n    case 'statement': {\n      const table = stm.from![0];\n      return getTable(toSql.statement(table.statement));\n    }\n  }\n  return '';\n}\n\nexport function getFields(sql: string): string[] {\n  const stm = sqlToStatement(sql) as SelectFromStatement;\n  if (stm.type !== 'select' || !stm.columns?.length || stm.columns?.length <= 0) {\n    return [];\n  }\n\n  return stm.columns.map((x) => {\n    const exprName = (x.expr as ExprRef).name;\n\n    if (x.alias !== undefined) {\n      return `${exprName} as ${x.alias?.name}`;\n    } else {\n      return `${exprName}`;\n    }\n  });\n}\n","import { getTable } from './ast';\n\nexport class AdHocFilter {\n  private _targetTable = '';\n\n  setTargetTableFromQuery(query: string) {\n    this._targetTable = getTable(query);\n    if (this._targetTable === '') {\n      throw new Error('Failed to get table from adhoc query.');\n    }\n  }\n\n  apply(sql: string, adHocFilters: AdHocVariableFilter[]): string {\n    if (sql === '' || !adHocFilters || adHocFilters.length === 0) {\n      return sql;\n    }\n\n    // sql can contain a query with double quotes around the database and table name, e.g. \"default\".\"table\", so we remove those\n    if (this._targetTable !== '' && !sql.replace(/\"/g, '').match(new RegExp(`.*\\\\b${this._targetTable}\\\\b.*`, 'gi'))) {\n      return sql;\n    }\n\n    if (this._targetTable === '') {\n      this._targetTable = getTable(sql);\n    }\n\n    if (this._targetTable === '') {\n      return sql;\n    }\n\n    const filters = adHocFilters\n      .filter((filter: AdHocVariableFilter) => {\n        const valid = isValid(filter);\n        if (!valid) {\n          console.warn('Invalid adhoc filter will be ignored:', filter);\n        }\n        return valid;\n      })\n      .map((f, i) => {\n        const key = escapeKey(f.key);\n        const value = escapeValueBasedOnOperator(f.value, f.operator);\n        const condition = i !== adHocFilters.length - 1 ? (f.condition ? f.condition : 'AND') : '';\n        const operator = convertOperatorToClickHouseOperator(f.operator);\n        return ` ${key} ${operator} ${value} ${condition}`;\n      })\n      .join('');\n\n    if (filters === '') {\n      return sql;\n    }\n    // Semicolons are not required and cause problems when building the SQL\n    sql = sql.replace(';', '');\n    return `${sql} settings additional_table_filters={'${this._targetTable}' : '${filters}'}`;\n  }\n}\n\nfunction isValid(filter: AdHocVariableFilter): boolean {\n  return filter.key !== undefined && filter.operator !== undefined && filter.value !== undefined;\n}\n\n\nfunction escapeKey(s: string): string {\n  // Convert arrayElement syntax to bracket notation\n  if (s.startsWith('arrayElement(') && s.endsWith(')')) {\n    const match = s.match(/arrayElement\\((.*?),\\s*['\"](.*?)['\"]\\)/);\n    if (match) {\n      const [_, array, key] = match;\n      return `${array}[\\\\'${key}\\\\']`;\n    }\n  }\n  return s.includes('.') ? s.split('.')[1] : s;\n}\n\nfunction escapeValueBasedOnOperator(s: string, operator: AdHocVariableFilterOperator): string {\n  if (operator === 'IN') {\n    // Allow list of values without parentheses\n    if (s.length > 2 && s[0] !== '(' && s[s.length - 1] !== ')') {\n      s = `(${s})`\n    }\n    return s.replace(/'/g, \"\\\\'\");\n  } else {\n    return `\\\\'${s}\\\\'`;\n  }\n}\n\nfunction convertOperatorToClickHouseOperator(operator: AdHocVariableFilterOperator): string {\n  if (operator === '=~') {\n    return 'ILIKE';\n  }\n  if (operator === '!~') {\n    return 'NOT ILIKE';\n  }\n  return operator;\n}\n\ntype AdHocVariableFilterOperator = '>' | '<' | '=' | '!=' | '=~' | '!~' | 'IN';\n\nexport type AdHocVariableFilter = {\n  key: string;\n  operator: AdHocVariableFilterOperator;\n  value: string;\n  condition?: string;\n};\n","var DataTopic = /* @__PURE__ */ ((DataTopic2) => {\n  DataTopic2[\"AlertStates\"] = \"alertStates\";\n  DataTopic2[\"Annotations\"] = \"annotations\";\n  DataTopic2[\"Series\"] = \"series\";\n  return DataTopic2;\n})(DataTopic || {});\nvar ScaleDimensionMode = /* @__PURE__ */ ((ScaleDimensionMode2) => {\n  ScaleDimensionMode2[\"Linear\"] = \"linear\";\n  ScaleDimensionMode2[\"Quad\"] = \"quad\";\n  return ScaleDimensionMode2;\n})(ScaleDimensionMode || {});\nvar ScalarDimensionMode = /* @__PURE__ */ ((ScalarDimensionMode2) => {\n  ScalarDimensionMode2[\"Clamped\"] = \"clamped\";\n  ScalarDimensionMode2[\"Mod\"] = \"mod\";\n  return ScalarDimensionMode2;\n})(ScalarDimensionMode || {});\nvar TextDimensionMode = /* @__PURE__ */ ((TextDimensionMode2) => {\n  TextDimensionMode2[\"Field\"] = \"field\";\n  TextDimensionMode2[\"Fixed\"] = \"fixed\";\n  TextDimensionMode2[\"Template\"] = \"template\";\n  return TextDimensionMode2;\n})(TextDimensionMode || {});\nvar ResourceDimensionMode = /* @__PURE__ */ ((ResourceDimensionMode2) => {\n  ResourceDimensionMode2[\"Field\"] = \"field\";\n  ResourceDimensionMode2[\"Fixed\"] = \"fixed\";\n  ResourceDimensionMode2[\"Mapping\"] = \"mapping\";\n  return ResourceDimensionMode2;\n})(ResourceDimensionMode || {});\nvar FrameGeometrySourceMode = /* @__PURE__ */ ((FrameGeometrySourceMode2) => {\n  FrameGeometrySourceMode2[\"Auto\"] = \"auto\";\n  FrameGeometrySourceMode2[\"Coords\"] = \"coords\";\n  FrameGeometrySourceMode2[\"Geohash\"] = \"geohash\";\n  FrameGeometrySourceMode2[\"Lookup\"] = \"lookup\";\n  return FrameGeometrySourceMode2;\n})(FrameGeometrySourceMode || {});\nvar HeatmapCalculationMode = /* @__PURE__ */ ((HeatmapCalculationMode2) => {\n  HeatmapCalculationMode2[\"Count\"] = \"count\";\n  HeatmapCalculationMode2[\"Size\"] = \"size\";\n  return HeatmapCalculationMode2;\n})(HeatmapCalculationMode || {});\nvar HeatmapCellLayout = /* @__PURE__ */ ((HeatmapCellLayout2) => {\n  HeatmapCellLayout2[\"auto\"] = \"auto\";\n  HeatmapCellLayout2[\"ge\"] = \"ge\";\n  HeatmapCellLayout2[\"le\"] = \"le\";\n  HeatmapCellLayout2[\"unknown\"] = \"unknown\";\n  return HeatmapCellLayout2;\n})(HeatmapCellLayout || {});\nvar LogsSortOrder = /* @__PURE__ */ ((LogsSortOrder2) => {\n  LogsSortOrder2[\"Ascending\"] = \"Ascending\";\n  LogsSortOrder2[\"Descending\"] = \"Descending\";\n  return LogsSortOrder2;\n})(LogsSortOrder || {});\nvar AxisPlacement = /* @__PURE__ */ ((AxisPlacement2) => {\n  AxisPlacement2[\"Auto\"] = \"auto\";\n  AxisPlacement2[\"Bottom\"] = \"bottom\";\n  AxisPlacement2[\"Hidden\"] = \"hidden\";\n  AxisPlacement2[\"Left\"] = \"left\";\n  AxisPlacement2[\"Right\"] = \"right\";\n  AxisPlacement2[\"Top\"] = \"top\";\n  return AxisPlacement2;\n})(AxisPlacement || {});\nvar AxisColorMode = /* @__PURE__ */ ((AxisColorMode2) => {\n  AxisColorMode2[\"Series\"] = \"series\";\n  AxisColorMode2[\"Text\"] = \"text\";\n  return AxisColorMode2;\n})(AxisColorMode || {});\nvar VisibilityMode = /* @__PURE__ */ ((VisibilityMode2) => {\n  VisibilityMode2[\"Always\"] = \"always\";\n  VisibilityMode2[\"Auto\"] = \"auto\";\n  VisibilityMode2[\"Never\"] = \"never\";\n  return VisibilityMode2;\n})(VisibilityMode || {});\nvar GraphDrawStyle = /* @__PURE__ */ ((GraphDrawStyle2) => {\n  GraphDrawStyle2[\"Bars\"] = \"bars\";\n  GraphDrawStyle2[\"Line\"] = \"line\";\n  GraphDrawStyle2[\"Points\"] = \"points\";\n  return GraphDrawStyle2;\n})(GraphDrawStyle || {});\nvar GraphTransform = /* @__PURE__ */ ((GraphTransform2) => {\n  GraphTransform2[\"Constant\"] = \"constant\";\n  GraphTransform2[\"NegativeY\"] = \"negative-Y\";\n  return GraphTransform2;\n})(GraphTransform || {});\nvar LineInterpolation = /* @__PURE__ */ ((LineInterpolation2) => {\n  LineInterpolation2[\"Linear\"] = \"linear\";\n  LineInterpolation2[\"Smooth\"] = \"smooth\";\n  LineInterpolation2[\"StepAfter\"] = \"stepAfter\";\n  LineInterpolation2[\"StepBefore\"] = \"stepBefore\";\n  return LineInterpolation2;\n})(LineInterpolation || {});\nvar ScaleDistribution = /* @__PURE__ */ ((ScaleDistribution2) => {\n  ScaleDistribution2[\"Linear\"] = \"linear\";\n  ScaleDistribution2[\"Log\"] = \"log\";\n  ScaleDistribution2[\"Ordinal\"] = \"ordinal\";\n  ScaleDistribution2[\"Symlog\"] = \"symlog\";\n  return ScaleDistribution2;\n})(ScaleDistribution || {});\nvar GraphGradientMode = /* @__PURE__ */ ((GraphGradientMode2) => {\n  GraphGradientMode2[\"Hue\"] = \"hue\";\n  GraphGradientMode2[\"None\"] = \"none\";\n  GraphGradientMode2[\"Opacity\"] = \"opacity\";\n  GraphGradientMode2[\"Scheme\"] = \"scheme\";\n  return GraphGradientMode2;\n})(GraphGradientMode || {});\nvar StackingMode = /* @__PURE__ */ ((StackingMode2) => {\n  StackingMode2[\"None\"] = \"none\";\n  StackingMode2[\"Normal\"] = \"normal\";\n  StackingMode2[\"Percent\"] = \"percent\";\n  return StackingMode2;\n})(StackingMode || {});\nvar BarAlignment = /* @__PURE__ */ ((BarAlignment2) => {\n  BarAlignment2[BarAlignment2[\"After\"] = 1] = \"After\";\n  BarAlignment2[BarAlignment2[\"Before\"] = -1] = \"Before\";\n  BarAlignment2[BarAlignment2[\"Center\"] = 0] = \"Center\";\n  return BarAlignment2;\n})(BarAlignment || {});\nvar ScaleOrientation = /* @__PURE__ */ ((ScaleOrientation2) => {\n  ScaleOrientation2[ScaleOrientation2[\"Horizontal\"] = 0] = \"Horizontal\";\n  ScaleOrientation2[ScaleOrientation2[\"Vertical\"] = 1] = \"Vertical\";\n  return ScaleOrientation2;\n})(ScaleOrientation || {});\nvar ScaleDirection = /* @__PURE__ */ ((ScaleDirection2) => {\n  ScaleDirection2[ScaleDirection2[\"Down\"] = -1] = \"Down\";\n  ScaleDirection2[ScaleDirection2[\"Left\"] = -1] = \"Left\";\n  ScaleDirection2[ScaleDirection2[\"Right\"] = 1] = \"Right\";\n  ScaleDirection2[ScaleDirection2[\"Up\"] = 1] = \"Up\";\n  return ScaleDirection2;\n})(ScaleDirection || {});\nconst defaultLineStyle = {\n  dash: []\n};\nvar GraphThresholdsStyleMode = /* @__PURE__ */ ((GraphThresholdsStyleMode2) => {\n  GraphThresholdsStyleMode2[\"Area\"] = \"area\";\n  GraphThresholdsStyleMode2[\"Dashed\"] = \"dashed\";\n  GraphThresholdsStyleMode2[\"DashedAndArea\"] = \"dashed+area\";\n  GraphThresholdsStyleMode2[\"Line\"] = \"line\";\n  GraphThresholdsStyleMode2[\"LineAndArea\"] = \"line+area\";\n  GraphThresholdsStyleMode2[\"Off\"] = \"off\";\n  GraphThresholdsStyleMode2[\"Series\"] = \"series\";\n  return GraphThresholdsStyleMode2;\n})(GraphThresholdsStyleMode || {});\nvar LegendDisplayMode = /* @__PURE__ */ ((LegendDisplayMode2) => {\n  LegendDisplayMode2[\"Hidden\"] = \"hidden\";\n  LegendDisplayMode2[\"List\"] = \"list\";\n  LegendDisplayMode2[\"Table\"] = \"table\";\n  return LegendDisplayMode2;\n})(LegendDisplayMode || {});\nconst defaultReduceDataOptions = {\n  calcs: []\n};\nvar VizOrientation = /* @__PURE__ */ ((VizOrientation2) => {\n  VizOrientation2[\"Auto\"] = \"auto\";\n  VizOrientation2[\"Horizontal\"] = \"horizontal\";\n  VizOrientation2[\"Vertical\"] = \"vertical\";\n  return VizOrientation2;\n})(VizOrientation || {});\nconst defaultOptionsWithTimezones = {\n  timezone: []\n};\nvar BigValueColorMode = /* @__PURE__ */ ((BigValueColorMode2) => {\n  BigValueColorMode2[\"Background\"] = \"background\";\n  BigValueColorMode2[\"BackgroundSolid\"] = \"background_solid\";\n  BigValueColorMode2[\"None\"] = \"none\";\n  BigValueColorMode2[\"Value\"] = \"value\";\n  return BigValueColorMode2;\n})(BigValueColorMode || {});\nvar BigValueGraphMode = /* @__PURE__ */ ((BigValueGraphMode2) => {\n  BigValueGraphMode2[\"Area\"] = \"area\";\n  BigValueGraphMode2[\"Line\"] = \"line\";\n  BigValueGraphMode2[\"None\"] = \"none\";\n  return BigValueGraphMode2;\n})(BigValueGraphMode || {});\nvar BigValueJustifyMode = /* @__PURE__ */ ((BigValueJustifyMode2) => {\n  BigValueJustifyMode2[\"Auto\"] = \"auto\";\n  BigValueJustifyMode2[\"Center\"] = \"center\";\n  return BigValueJustifyMode2;\n})(BigValueJustifyMode || {});\nvar BigValueTextMode = /* @__PURE__ */ ((BigValueTextMode2) => {\n  BigValueTextMode2[\"Auto\"] = \"auto\";\n  BigValueTextMode2[\"Name\"] = \"name\";\n  BigValueTextMode2[\"None\"] = \"none\";\n  BigValueTextMode2[\"Value\"] = \"value\";\n  BigValueTextMode2[\"ValueAndName\"] = \"value_and_name\";\n  return BigValueTextMode2;\n})(BigValueTextMode || {});\nvar PercentChangeColorMode = /* @__PURE__ */ ((PercentChangeColorMode2) => {\n  PercentChangeColorMode2[\"Inverted\"] = \"inverted\";\n  PercentChangeColorMode2[\"SameAsValue\"] = \"same_as_value\";\n  PercentChangeColorMode2[\"Standard\"] = \"standard\";\n  return PercentChangeColorMode2;\n})(PercentChangeColorMode || {});\nvar TooltipDisplayMode = /* @__PURE__ */ ((TooltipDisplayMode2) => {\n  TooltipDisplayMode2[\"Multi\"] = \"multi\";\n  TooltipDisplayMode2[\"None\"] = \"none\";\n  TooltipDisplayMode2[\"Single\"] = \"single\";\n  return TooltipDisplayMode2;\n})(TooltipDisplayMode || {});\nvar SortOrder = /* @__PURE__ */ ((SortOrder2) => {\n  SortOrder2[\"Ascending\"] = \"asc\";\n  SortOrder2[\"Descending\"] = \"desc\";\n  SortOrder2[\"None\"] = \"none\";\n  return SortOrder2;\n})(SortOrder || {});\nconst defaultVizLegendOptions = {\n  calcs: []\n};\nvar BarGaugeDisplayMode = /* @__PURE__ */ ((BarGaugeDisplayMode2) => {\n  BarGaugeDisplayMode2[\"Basic\"] = \"basic\";\n  BarGaugeDisplayMode2[\"Gradient\"] = \"gradient\";\n  BarGaugeDisplayMode2[\"Lcd\"] = \"lcd\";\n  return BarGaugeDisplayMode2;\n})(BarGaugeDisplayMode || {});\nvar BarGaugeValueMode = /* @__PURE__ */ ((BarGaugeValueMode2) => {\n  BarGaugeValueMode2[\"Color\"] = \"color\";\n  BarGaugeValueMode2[\"Hidden\"] = \"hidden\";\n  BarGaugeValueMode2[\"Text\"] = \"text\";\n  return BarGaugeValueMode2;\n})(BarGaugeValueMode || {});\nvar BarGaugeNamePlacement = /* @__PURE__ */ ((BarGaugeNamePlacement2) => {\n  BarGaugeNamePlacement2[\"Auto\"] = \"auto\";\n  BarGaugeNamePlacement2[\"Hidden\"] = \"hidden\";\n  BarGaugeNamePlacement2[\"Left\"] = \"left\";\n  BarGaugeNamePlacement2[\"Top\"] = \"top\";\n  return BarGaugeNamePlacement2;\n})(BarGaugeNamePlacement || {});\nvar BarGaugeSizing = /* @__PURE__ */ ((BarGaugeSizing2) => {\n  BarGaugeSizing2[\"Auto\"] = \"auto\";\n  BarGaugeSizing2[\"Manual\"] = \"manual\";\n  return BarGaugeSizing2;\n})(BarGaugeSizing || {});\nvar TableCellDisplayMode = /* @__PURE__ */ ((TableCellDisplayMode2) => {\n  TableCellDisplayMode2[\"Auto\"] = \"auto\";\n  TableCellDisplayMode2[\"BasicGauge\"] = \"basic\";\n  TableCellDisplayMode2[\"ColorBackground\"] = \"color-background\";\n  TableCellDisplayMode2[\"ColorBackgroundSolid\"] = \"color-background-solid\";\n  TableCellDisplayMode2[\"ColorText\"] = \"color-text\";\n  TableCellDisplayMode2[\"Custom\"] = \"custom\";\n  TableCellDisplayMode2[\"DataLinks\"] = \"data-links\";\n  TableCellDisplayMode2[\"Gauge\"] = \"gauge\";\n  TableCellDisplayMode2[\"GradientGauge\"] = \"gradient-gauge\";\n  TableCellDisplayMode2[\"Image\"] = \"image\";\n  TableCellDisplayMode2[\"JSONView\"] = \"json-view\";\n  TableCellDisplayMode2[\"LcdGauge\"] = \"lcd-gauge\";\n  TableCellDisplayMode2[\"Sparkline\"] = \"sparkline\";\n  return TableCellDisplayMode2;\n})(TableCellDisplayMode || {});\nvar TableCellBackgroundDisplayMode = /* @__PURE__ */ ((TableCellBackgroundDisplayMode2) => {\n  TableCellBackgroundDisplayMode2[\"Basic\"] = \"basic\";\n  TableCellBackgroundDisplayMode2[\"Gradient\"] = \"gradient\";\n  return TableCellBackgroundDisplayMode2;\n})(TableCellBackgroundDisplayMode || {});\nconst defaultTableFooterOptions = {\n  fields: [],\n  reducer: []\n};\nvar TableCellHeight = /* @__PURE__ */ ((TableCellHeight2) => {\n  TableCellHeight2[\"Auto\"] = \"auto\";\n  TableCellHeight2[\"Lg\"] = \"lg\";\n  TableCellHeight2[\"Md\"] = \"md\";\n  TableCellHeight2[\"Sm\"] = \"sm\";\n  return TableCellHeight2;\n})(TableCellHeight || {});\nvar VariableFormatID = /* @__PURE__ */ ((VariableFormatID2) => {\n  VariableFormatID2[\"CSV\"] = \"csv\";\n  VariableFormatID2[\"Date\"] = \"date\";\n  VariableFormatID2[\"Distributed\"] = \"distributed\";\n  VariableFormatID2[\"DoubleQuote\"] = \"doublequote\";\n  VariableFormatID2[\"Glob\"] = \"glob\";\n  VariableFormatID2[\"HTML\"] = \"html\";\n  VariableFormatID2[\"JSON\"] = \"json\";\n  VariableFormatID2[\"Lucene\"] = \"lucene\";\n  VariableFormatID2[\"PercentEncode\"] = \"percentencode\";\n  VariableFormatID2[\"Pipe\"] = \"pipe\";\n  VariableFormatID2[\"QueryParam\"] = \"queryparam\";\n  VariableFormatID2[\"Raw\"] = \"raw\";\n  VariableFormatID2[\"Regex\"] = \"regex\";\n  VariableFormatID2[\"SQLString\"] = \"sqlstring\";\n  VariableFormatID2[\"SingleQuote\"] = \"singlequote\";\n  VariableFormatID2[\"Text\"] = \"text\";\n  VariableFormatID2[\"UriEncode\"] = \"uriencode\";\n  return VariableFormatID2;\n})(VariableFormatID || {});\nvar LogsDedupStrategy = /* @__PURE__ */ ((LogsDedupStrategy2) => {\n  LogsDedupStrategy2[\"exact\"] = \"exact\";\n  LogsDedupStrategy2[\"none\"] = \"none\";\n  LogsDedupStrategy2[\"numbers\"] = \"numbers\";\n  LogsDedupStrategy2[\"signature\"] = \"signature\";\n  return LogsDedupStrategy2;\n})(LogsDedupStrategy || {});\nvar ComparisonOperation = /* @__PURE__ */ ((ComparisonOperation2) => {\n  ComparisonOperation2[\"EQ\"] = \"eq\";\n  ComparisonOperation2[\"GT\"] = \"gt\";\n  ComparisonOperation2[\"GTE\"] = \"gte\";\n  ComparisonOperation2[\"LT\"] = \"lt\";\n  ComparisonOperation2[\"LTE\"] = \"lte\";\n  ComparisonOperation2[\"NEQ\"] = \"neq\";\n  return ComparisonOperation2;\n})(ComparisonOperation || {});\nconst defaultTimeZone = \"browser\";\n\nexport { AxisColorMode, AxisPlacement, BarAlignment, BarGaugeDisplayMode, BarGaugeNamePlacement, BarGaugeSizing, BarGaugeValueMode, BigValueColorMode, BigValueGraphMode, BigValueJustifyMode, BigValueTextMode, ComparisonOperation, DataTopic, FrameGeometrySourceMode, GraphDrawStyle, GraphGradientMode, GraphThresholdsStyleMode, GraphTransform, HeatmapCalculationMode, HeatmapCellLayout, LegendDisplayMode, LineInterpolation, LogsDedupStrategy, LogsSortOrder, PercentChangeColorMode, ResourceDimensionMode, ScalarDimensionMode, ScaleDimensionMode, ScaleDirection, ScaleDistribution, ScaleOrientation, SortOrder, StackingMode, TableCellBackgroundDisplayMode, TableCellDisplayMode, TableCellHeight, TextDimensionMode, TooltipDisplayMode, VariableFormatID, VisibilityMode, VizOrientation, defaultLineStyle, defaultOptionsWithTimezones, defaultReduceDataOptions, defaultTableFooterOptions, defaultTimeZone, defaultVizLegendOptions };\n//# sourceMappingURL=common.gen.js.map\n","import { BarAlignment, DataQuery, DataSourceJsonData, GraphDrawStyle, StackingMode } from '@grafana/schema';\nimport {\n  DataFrame,\n  DataQueryError,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  FieldColorModeId,\n  FieldType,\n  LoadingState,\n  LogLevel,\n  MutableDataFrame,\n  ScopedVars,\n  TimeRange,\n  toDataFrame,\n} from '@grafana/data';\nimport { from, isObservable, Observable } from 'rxjs';\nimport { config } from '@grafana/runtime';\nimport { colors } from '@grafana/ui';\nimport { partition } from 'lodash';\n\n/**\n * Partially copy-pasted and adjusted to ClickHouse server-side aggregations\n * from `public/app/core/logsModel.ts` (release-9.4.3 branch)\n *\n * See https://github.com/grafana/grafana/blob/release-9.4.3/public/app/core/logsModel.ts\n */\n\ntype LogsVolumeQueryOptions<T extends DataQuery> = {\n  targets: T[];\n  range: TimeRange;\n};\n\nconst MILLISECOND = 1;\nconst SECOND = 1000 * MILLISECOND;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\n\nconst LogLevelColor = {\n  [LogLevel.critical]: colors[7],\n  [LogLevel.warning]: colors[1],\n  [LogLevel.error]: colors[4],\n  [LogLevel.info]: colors[0],\n  [LogLevel.debug]: colors[5],\n  [LogLevel.trace]: colors[2],\n  [LogLevel.unknown]: getThemeColor('#8e8e8e', '#bdc4cd'),\n};\n\nfunction getThemeColor(dark: string, light: string): string {\n  return config.bootData.user.lightTheme ? light : dark;\n}\n\n/**\n * Creates an observable, which makes requests to get logs volume and aggregates results.\n */\nexport function queryLogsVolume<TQuery extends DataQuery, TOptions extends DataSourceJsonData>(\n  datasource: DataSourceApi<TQuery, TOptions>,\n  logsVolumeRequest: DataQueryRequest<TQuery>,\n  options: LogsVolumeQueryOptions<TQuery>\n): Observable<DataQueryResponse> {\n  return new Observable((observer) => {\n    let rawLogsVolume: DataFrame[] = [];\n    observer.next({\n      state: LoadingState.Loading,\n      error: undefined,\n      data: [],\n    });\n\n    const queryResponse = datasource.query(logsVolumeRequest);\n    const queryObservable = isObservable(queryResponse) ? queryResponse : from(queryResponse);\n\n    const subscription = queryObservable.subscribe({\n      complete: () => {\n        const aggregatedLogsVolume = aggregateRawLogsVolume(rawLogsVolume);\n        if (aggregatedLogsVolume[0]) {\n          aggregatedLogsVolume[0].meta = {\n            custom: {\n              targets: options.targets,\n              absoluteRange: { from: options.range.from.valueOf(), to: options.range.to.valueOf() },\n            },\n          };\n        }\n        observer.next({\n          state: LoadingState.Done,\n          error: undefined,\n          data: aggregatedLogsVolume,\n        });\n        observer.complete();\n      },\n      next: (dataQueryResponse: DataQueryResponse) => {\n        const { error } = dataQueryResponse;\n        if (error !== undefined) {\n          observer.next({\n            state: LoadingState.Error,\n            error,\n            data: [],\n          });\n          observer.error(error);\n        } else {\n          rawLogsVolume = rawLogsVolume.concat(dataQueryResponse.data.map(toDataFrame));\n        }\n      },\n      error: (error: DataQueryError) => {\n        observer.next({\n          state: LoadingState.Error,\n          error: error,\n          data: [],\n        });\n        observer.error(error);\n      },\n    });\n    return () => {\n      subscription?.unsubscribe();\n    };\n  });\n}\n\n/**\n * Take multiple data frames, sum up values and group by level.\n * Return a list of data frames, each representing single level.\n */\nexport function aggregateRawLogsVolume(rawLogsVolume: DataFrame[]): DataFrame[] {\n  if (rawLogsVolume.length !== 1) {\n    return []; // we always expect a single DataFrame with all the aggregations from ClickHouse\n  }\n\n  const [[timeField], levelFields] = partition(rawLogsVolume[0].fields, (f) => f.name === TIME_FIELD_ALIAS);\n  if (timeField === undefined) {\n    return []; // should never happen if we have a DataFrame available\n  }\n\n  const oneLevelDetected = levelFields.length === 1 && levelFields[0].name === DEFAULT_LOGS_ALIAS;\n  if (oneLevelDetected) {\n    levelFields[0].name = 'logs';\n  }\n\n  const totalLength = timeField.values.length;\n  return levelFields.map((field) => {\n    const logLevel = LogLevel[field.name as keyof typeof LogLevel] || LogLevel.unknown;\n    const df = new MutableDataFrame();\n    df.addField({ name: 'Time', type: FieldType.time, values: timeField.values }, totalLength);\n    df.addField({\n      name: 'Value',\n      type: FieldType.number,\n      config: getLogVolumeFieldConfig(logLevel, oneLevelDetected),\n      values: field.values,\n    });\n    return df;\n  });\n}\n\n/**\n * Returns field configuration used to render logs volume bars\n */\nfunction getLogVolumeFieldConfig(level: LogLevel, oneLevelDetected: boolean) {\n  const name = oneLevelDetected && level === LogLevel.unknown ? 'logs' : level;\n  const color = LogLevelColor[level];\n  return {\n    displayNameFromDS: name,\n    color: {\n      mode: FieldColorModeId.Fixed,\n      fixedColor: color,\n    },\n    custom: {\n      drawStyle: GraphDrawStyle.Bars,\n      barAlignment: BarAlignment.Center,\n      lineColor: color,\n      pointColor: color,\n      fillColor: color,\n      lineWidth: 1,\n      fillOpacity: 100,\n      stacking: {\n        mode: StackingMode.Normal,\n        group: 'A',\n      },\n    },\n  };\n}\n\nexport function getIntervalInfo(scopedVars: ScopedVars): { interval: string; intervalMs?: number } {\n  if (scopedVars.__interval_ms) {\n    let intervalMs: number = scopedVars.__interval_ms.value;\n    let interval;\n    if (intervalMs > HOUR) {\n      intervalMs = DAY;\n      interval = '1d';\n    } else if (intervalMs > MINUTE) {\n      intervalMs = HOUR;\n      interval = '1h';\n    } else if (intervalMs > SECOND) {\n      intervalMs = MINUTE;\n      interval = '1m';\n    } else {\n      intervalMs = SECOND;\n      interval = '1s';\n    }\n\n    return { interval, intervalMs };\n  } else {\n    return { interval: '$__interval' };\n  }\n}\n\nexport function getTimeFieldRoundingClause(scopedVars: ScopedVars, timeField: string): string {\n  // NB: slight discrepancy with getIntervalInfo here\n  // it returns { interval: '$__interval' } when the interval from the ScopedVars is undefined,\n  // but we fall back to DAY here\n  let interval = 'DAY';\n  if (scopedVars.__interval_ms) {\n    let intervalMs: number = scopedVars.__interval_ms.value;\n    if (intervalMs > HOUR) {\n      interval = 'DAY';\n    } else if (intervalMs > MINUTE) {\n      interval = 'HOUR';\n    } else if (intervalMs > SECOND) {\n      interval = 'MINUTE';\n    } else {\n      interval = 'SECOND';\n    }\n  }\n  return `toStartOfInterval(\"${timeField}\", INTERVAL 1 ${interval})`;\n}\n\nexport const TIME_FIELD_ALIAS = 'time';\nexport const DEFAULT_LOGS_ALIAS = 'logs';\n\n/**\n * Mapping of canonical log levels to corresponding IN clauses\n * with all possible lower, upper and capital case values for this level\n *\n * For example: trace -> IN ('trace', 'TRACE', 'Trace')\n *\n * @see {LogLevel} for reference values\n */\ntype LogLevelToInClause = Record<'critical' | 'error' | 'warn' | 'info' | 'debug' | 'trace' | 'unknown', string>;\nexport const LOG_LEVEL_TO_IN_CLAUSE: LogLevelToInClause = (() => {\n  const levels = {\n    critical: ['critical', 'fatal', 'crit', 'alert', 'emerg'],\n    error: ['error', 'err', 'eror'],\n    warn: ['warn', 'warning'],\n    info: ['info', 'information', 'informational'],\n    debug: ['debug', 'dbug'],\n    trace: ['trace'],\n    unknown: ['unknown'],\n  };\n  return (Object.keys(levels) as Array<keyof typeof levels>).reduce((allLevels, level) => {\n    allLevels[level] = `${[\n      ...levels[level].map((l) => `'${l}'`),\n      ...levels[level].map((l) => `'${l.toUpperCase()}'`),\n      ...levels[level].map((l) => `'${l.charAt(0).toUpperCase() + l.slice(1)}'`),\n    ].join(',')}`;\n    return allLevels;\n  }, {} as LogLevelToInClause);\n})();\n\nexport const allLogLevels = [\n  'critical', 'fatal', 'crit', 'alert', 'emerg',\n  'error', 'err', 'eror',\n  'warn', 'warning',\n  'info', 'information', 'informational',\n  'debug', 'dbug',\n  'trace',\n  'unknown'\n];\n","import { ColumnHint, TimeUnit } from \"types/queryBuilder\";\n\nexport const defaultLogsTable = 'otel_logs';\nexport const defaultTraceTable = 'otel_traces';\n\nexport const traceTimestampTableSuffix = '_trace_id_ts';\n\nexport interface OtelVersion {\n  name: string;\n  version: string;\n  specUrl?: string;\n  logsTable: string;\n  logColumnMap: Map<ColumnHint, string>;\n  logLevels: string[];\n  traceTable: string;\n  traceColumnMap: Map<ColumnHint, string>;\n  traceDurationUnit: TimeUnit.Nanoseconds;\n  flattenNested: boolean;\n  traceEventsColumnPrefix: string;\n  traceLinksColumnPrefix: string;\n}\n\nconst otel129: OtelVersion = {\n  name: '1.2.9',\n  version: '1.29.0',\n  specUrl: 'https://opentelemetry.io/docs/specs/otel',\n  logsTable: defaultLogsTable,\n  logColumnMap: new Map<ColumnHint, string>([\n    [ColumnHint.Time, 'Timestamp'],\n    [ColumnHint.LogMessage, 'Body'],\n    [ColumnHint.LogLevel, 'SeverityText'],\n    [ColumnHint.LogLabels, 'LogAttributes'],\n    [ColumnHint.TraceId, 'TraceId'],\n  ]),\n  logLevels: [\n    'TRACE',\n    'DEBUG',\n    'INFO',\n    'WARN',\n    'ERROR',\n    'FATAL'\n  ],\n  traceTable: defaultTraceTable,\n  traceColumnMap: new Map<ColumnHint, string>([\n    [ColumnHint.Time, 'Timestamp'],\n    [ColumnHint.TraceId, 'TraceId'],\n    [ColumnHint.TraceSpanId, 'SpanId'],\n    [ColumnHint.TraceParentSpanId, 'ParentSpanId'],\n    [ColumnHint.TraceServiceName, 'ServiceName'],\n    [ColumnHint.TraceOperationName, 'SpanName'],\n    [ColumnHint.TraceDurationTime, 'Duration'],\n    [ColumnHint.TraceTags, 'SpanAttributes'],\n    [ColumnHint.TraceServiceTags, 'ResourceAttributes'],\n    [ColumnHint.TraceStatusCode, 'StatusCode'],\n    [ColumnHint.TraceKind, 'SpanKind'],\n    [ColumnHint.TraceStatusMessage, 'StatusMessage'],\n    [ColumnHint.TraceState, 'TraceState'],\n  ]),\n  flattenNested: false,\n  traceDurationUnit: TimeUnit.Nanoseconds,\n  traceEventsColumnPrefix: 'Events',\n  traceLinksColumnPrefix: 'Links',\n};\n\nexport const versions: readonly OtelVersion[] = [\n  // When selected, will always keep OTEL config up to date as new versions are added\n  { ...otel129, name: `latest (${otel129.name})`, version: 'latest' },\n  otel129,\n];\n\nexport const getLatestVersion = (): OtelVersion => versions[0];\nexport const getVersion = (version: string | undefined): OtelVersion | undefined => {\n  if (!version) {\n    return;\n  }\n\n  return versions.find(v => v.version === version);\n};\n\nexport default {\n  traceTimestampTableSuffix,\n  versions,\n  getLatestVersion,\n  getVersion\n};\n","import { BooleanFilter, BuilderMode, ColumnHint, DateFilterWithValue, FilterOperator, MultiFilter, NumberFilter, QueryBuilderOptions, QueryType, SelectedColumn, StringFilter, TimeUnit } from 'types/queryBuilder';\nimport otel from 'otel';\n\n/**\n * Generates a SQL string for the given QueryBuilderOptions\n */\nexport const generateSql = (options: QueryBuilderOptions): string => {\n  const hasTraceIdFilter = options.meta?.isTraceIdMode && options.meta?.traceId;\n  if (options.queryType === QueryType.Traces && hasTraceIdFilter) {\n    return generateTraceIdQuery(options);\n  } else if (options.queryType === QueryType.Traces) {\n    return generateTraceSearchQuery(options);\n  } else if (options.queryType === QueryType.Logs) {\n    return generateLogsQuery(options);\n  } else if (options.queryType === QueryType.TimeSeries && options.mode !== BuilderMode.Trend) {\n    return generateSimpleTimeSeriesQuery(options);\n  } else if (options.queryType === QueryType.TimeSeries && options.mode === BuilderMode.Trend) {\n    return generateAggregateTimeSeriesQuery(options);\n  } else if (options.queryType === QueryType.Table) {\n    return generateTableQuery(options);\n  }\n\n  return '';\n}\n\n/**\n * Generates trace search query.\n */\nconst generateTraceSearchQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceId.name)} as traceID`);\n  }\n\n  const traceServiceName = getColumnByHint(options, ColumnHint.TraceServiceName);\n  if (traceServiceName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceServiceName.name)} as serviceName`);\n  }\n\n  const traceOperationName = getColumnByHint(options, ColumnHint.TraceOperationName);\n  if (traceOperationName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceOperationName.name)} as operationName`);\n  }\n\n  const traceStartTime = getColumnByHint(options, ColumnHint.Time);\n  if (traceStartTime !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceStartTime.name)} as startTime`);\n  }\n\n  const traceDurationTime = getColumnByHint(options, ColumnHint.TraceDurationTime);\n  if (traceDurationTime !== undefined) {\n    const timeUnit = options.meta?.traceDurationUnit;\n    selectParts.push(getTraceDurationSelectSql(escapeIdentifier(traceDurationTime.name), timeUnit));\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates trace query with columns that fit Grafana's Trace panel\n * Column aliases follow this structure:\n * https://grafana.com/docs/grafana/latest/explore/trace-integration/#data-frame-structure\n */\nconst generateTraceIdQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceId.name)} as traceID`);\n  }\n\n  const traceSpanId = getColumnByHint(options, ColumnHint.TraceSpanId);\n  if (traceSpanId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceSpanId.name)} as spanID`);\n  }\n\n  const traceParentSpanId = getColumnByHint(options, ColumnHint.TraceParentSpanId);\n  if (traceParentSpanId !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceParentSpanId.name)} as parentSpanID`);\n  }\n\n  const traceServiceName = getColumnByHint(options, ColumnHint.TraceServiceName);\n  if (traceServiceName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceServiceName.name)} as serviceName`);\n  }\n\n  const traceOperationName = getColumnByHint(options, ColumnHint.TraceOperationName);\n  if (traceOperationName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceOperationName.name)} as operationName`);\n  }\n\n  const traceStartTime = getColumnByHint(options, ColumnHint.Time);\n  if (traceStartTime !== undefined) {\n    selectParts.push(`${convertTimeFieldToMilliseconds(escapeIdentifier(traceStartTime.name))} as startTime`);\n  }\n\n  const traceDurationTime = getColumnByHint(options, ColumnHint.TraceDurationTime);\n  if (traceDurationTime !== undefined) {\n    const timeUnit = options.meta?.traceDurationUnit;\n    selectParts.push(getTraceDurationSelectSql(escapeIdentifier(traceDurationTime.name), timeUnit));\n  }\n\n  // TODO: for tags and serviceTags, consider the column type. They might not require mapping, they could already be JSON.\n  const traceTags = getColumnByHint(options, ColumnHint.TraceTags);\n  if (traceTags !== undefined) {\n    selectParts.push(`arrayMap(key -> map('key', key, 'value',${escapeIdentifier(traceTags.name)}[key]), mapKeys(${escapeIdentifier(traceTags.name)})) as tags`);\n  }\n\n  const traceServiceTags = getColumnByHint(options, ColumnHint.TraceServiceTags);\n  if (traceServiceTags !== undefined) {\n    selectParts.push(`arrayMap(key -> map('key', key, 'value',${escapeIdentifier(traceServiceTags.name)}[key]), mapKeys(${escapeIdentifier(traceServiceTags.name)})) as serviceTags`);\n  }\n\n  const traceStatusCode = getColumnByHint(options, ColumnHint.TraceStatusCode);\n  if (traceStatusCode !== undefined) {\n    selectParts.push(`if(${escapeIdentifier(traceStatusCode.name)} IN ('Error', 'STATUS_CODE_ERROR'), 2, 0) as statusCode`);\n  }\n\n  const flattenNested = Boolean(options.meta?.flattenNested);\n\n  const traceEventsPrefix = options.meta?.traceEventsColumnPrefix || '';\n  if (traceEventsPrefix !== '') {\n    if (flattenNested) {\n      selectParts.push([\n        `arrayMap(event -> tuple(multiply(toFloat64(event.Timestamp), 1000),`,\n        `arrayConcat(arrayMap(key -> map('key', key, 'value', event.Attributes[key]),`,\n        `mapKeys(event.Attributes)), [map('key', 'message', 'value', event.Name)]))::Tuple(timestamp Float64, fields Array(Map(String, String))),`,\n        `${escapeIdentifier(traceEventsPrefix)}) as logs`\n      ].join(' '));\n    } else {\n      selectParts.push([\n        `arrayMap((name, timestamp, attributes) -> tuple(name, toString(toUnixTimestamp64Milli(timestamp)),`,\n        `arrayMap( key -> map('key', key, 'value', attributes[key]),`,\n        `mapKeys(attributes)))::Tuple(name String, timestamp String, fields Array(Map(String, String))),`,\n        `${escapeIdentifier(traceEventsPrefix)}.Name, ${escapeIdentifier(traceEventsPrefix)}.Timestamp,`,\n        `${escapeIdentifier(traceEventsPrefix)}.Attributes) AS logs`\n      ].join(' '));\n    }\n  }\n\n  const traceLinksPrefix = options.meta?.traceLinksColumnPrefix || '';\n  if (traceLinksPrefix !== '') {\n    if (flattenNested) {\n      selectParts.push([\n        `arrayMap(link -> tuple(link.TraceId, link.SpanId, arrayMap(key -> map('key', key, 'value', link.Attributes[key]),`,\n        `mapKeys(link.Attributes)))::Tuple(traceID String, spanID String, tags Array(Map(String, String))),`,\n        `${escapeIdentifier(traceLinksPrefix)}) AS references`\n      ].join(' '));\n    } else {\n      selectParts.push([\n        `arrayMap((traceID, spanID, attributes) -> tuple(traceID, spanID, arrayMap(key -> map('key', key, 'value', attributes[key]),`,\n        `mapKeys(attributes)))::Tuple(traceID String, spanID String, tags Array(Map(String, String))),`,\n        `${escapeIdentifier(traceLinksPrefix)}.TraceId, ${escapeIdentifier(traceLinksPrefix)}.SpanId,`,\n        `${escapeIdentifier(traceLinksPrefix)}.Attributes) AS references`\n      ].join(' '));\n    }\n  }\n\n  const traceKind = getColumnByHint(options, ColumnHint.TraceKind);\n  if (traceKind !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceKind.name)} as kind`);\n  }\n\n  const traceStatusMessage = getColumnByHint(options, ColumnHint.TraceStatusMessage);\n  if (traceStatusMessage !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceStatusMessage.name)} as statusMessage`);\n  }\n\n  const traceInstrumentationLibraryName = getColumnByHint(options, ColumnHint.TraceInstrumentationLibraryName);\n  if (traceInstrumentationLibraryName !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceInstrumentationLibraryName.name)} as instrumentationLibraryName`);\n  }\n\n  const traceInstrumentationLibraryVersion = getColumnByHint(options, ColumnHint.TraceInstrumentationLibraryVersion);\n  if (traceInstrumentationLibraryVersion !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceInstrumentationLibraryVersion.name)} as instrumentationLibraryVersion`);\n  }\n\n  const traceState = getColumnByHint(options, ColumnHint.TraceState);\n  if (traceState !== undefined) {\n    selectParts.push(`${escapeIdentifier(traceState.name)} as traceState`);\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  // Optimize trace ID filtering for OTel enabled trace lookups\n  const hasTraceIdFilter = options.meta?.isTraceIdMode && options.meta?.traceId;\n  const otelVersion = otel.getVersion(options.meta?.otelVersion);\n  const applyTraceIdOptimization = hasTraceIdFilter && traceStartTime !== undefined && options.meta?.otelEnabled && otelVersion;\n  if (applyTraceIdOptimization) {\n    const traceId = options.meta!.traceId;\n    const timestampTable = getTableIdentifier(database, table + otel.traceTimestampTableSuffix);\n    queryParts.push('WITH');\n    queryParts.push(`'${traceId}' as trace_id,`);\n    queryParts.push(`(SELECT min(Start) FROM ${timestampTable} WHERE TraceId = trace_id) as trace_start,`);\n    queryParts.push(`(SELECT max(End) + 1 FROM ${timestampTable} WHERE TraceId = trace_id) as trace_end`);\n  }\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n\n  if (hasTraceIdFilter || filterParts) {\n    queryParts.push('WHERE');\n  }\n\n  if (applyTraceIdOptimization) {\n    queryParts.push('traceID = trace_id');\n    queryParts.push('AND');\n    queryParts.push(`${escapeIdentifier(traceStartTime.name)} >= trace_start`);\n    queryParts.push('AND');\n    queryParts.push(`${escapeIdentifier(traceStartTime.name)} <= trace_end`);\n  } else if (hasTraceIdFilter) {\n    const traceId = options.meta!.traceId;\n    queryParts.push(`traceID = '${traceId}'`);\n  }\n\n  if (filterParts) {\n    if (hasTraceIdFilter) {\n      queryParts.push('AND');\n    }\n\n    queryParts.push(filterParts);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates logs query with columns that fit Grafana's Logs panel\n * Column aliases follow this structure:\n * https://grafana.com/developers/plugin-tools/tutorials/build-a-logs-data-source-plugin#logs-data-frame-format\n *\n * note: column order seems to matter as well as alias name\n */\nconst generateLogsQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map(c => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  // TODO: these columns could be a map or some other convenience function\n  const selectParts: string[] = [];\n  const logTime = getColumnByHint(options, ColumnHint.Time);\n  if (logTime !== undefined) {\n    // Must be first column in list.\n    logTime.alias = logColumnHintsToAlias.get(ColumnHint.Time);\n    selectParts.push(getColumnIdentifier(logTime));\n  }\n\n  const logMessage = getColumnByHint(options, ColumnHint.LogMessage);\n  if (logMessage !== undefined) {\n    // Must be second column in list.\n    logMessage.alias = logColumnHintsToAlias.get(ColumnHint.LogMessage);\n    selectParts.push(getColumnIdentifier(logMessage));\n  }\n\n  const logLevel = getColumnByHint(options, ColumnHint.LogLevel);\n  if (logLevel !== undefined) {\n    // TODO: \"severity\" should be a number, but \"level\" can be a string? Perhaps we can check the column type here?\n    logLevel.alias = logColumnHintsToAlias.get(ColumnHint.LogLevel);\n    selectParts.push(getColumnIdentifier(logLevel));\n  }\n\n  const logLabels = getColumnByHint(options, ColumnHint.LogLabels);\n  if (logLabels !== undefined) {\n    logLabels.alias = logColumnHintsToAlias.get(ColumnHint.LogLabels);\n    selectParts.push(getColumnIdentifier(logLabels));\n  }\n\n  const traceId = getColumnByHint(options, ColumnHint.TraceId);\n  if (traceId !== undefined) {\n    traceId.alias = logColumnHintsToAlias.get(ColumnHint.TraceId);\n    selectParts.push(getColumnIdentifier(traceId));\n  }\n\n  options.columns?.\n    filter(c => c.hint === undefined). // remove specialized columns\n    forEach(c => selectParts.push(getColumnIdentifier(c)));\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n\n  const filterParts = getFilters(options);\n  const hasLogMessageFilter = logMessage && options.meta?.logMessageLike;\n\n  if (filterParts || hasLogMessageFilter) {\n    queryParts.push('WHERE');\n  }\n\n  if (filterParts) {\n    queryParts.push(filterParts);\n  }\n\n  if (hasLogMessageFilter) {\n    if (filterParts) {\n      queryParts.push('AND');\n    }\n\n    queryParts.push(`(${logMessage.alias || logMessage.name} LIKE '%${options.meta!.logMessageLike}%')`);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates a simple time series query. Includes user selected columns.\n */\nconst generateSimpleTimeSeriesQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map(c => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n\n  const selectParts: string[] = [];\n  const selectNames = new Set<string>();\n  const timeColumn = getColumnByHint(options, ColumnHint.Time);\n  if (timeColumn !== undefined) {\n    timeColumn.alias = 'time';\n    selectParts.push(getColumnIdentifier(timeColumn));\n    selectNames.add(timeColumn.alias);\n  }\n\n  const columnsExcludingTimeColumn = options.columns?.filter(c => c.hint !== ColumnHint.Time);\n  columnsExcludingTimeColumn?.forEach(c => {\n    selectParts.push(getColumnIdentifier(c));\n    selectNames.add(c.alias || c.name);\n  });\n\n  const aggregateSelectParts: string[] = [];\n  options.aggregates?.forEach(agg => {\n    const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n    const name = `${agg.aggregateType}(${agg.column})`;\n    aggregateSelectParts.push(`${name}${alias}`);\n    selectNames.add(alias ? alias.substring(4) : name);\n  });\n\n  options.groupBy?.forEach(g => {\n    if (selectNames.has(g)) {\n      // don't add if already selected\n      return;\n    }\n\n    selectParts.push(g)\n  });\n\n  // (v3) aggregate selections go AFTER group by\n  aggregateSelectParts.forEach(a => selectParts.push(a));\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  const hasAggregates = (options.aggregates?.length || 0 > 0);\n  const hasGroupBy = (options.groupBy?.length || 0 > 0);\n  if (hasAggregates || hasGroupBy) {\n    queryParts.push('GROUP BY');\n  }\n\n  if ((options.groupBy?.length || 0) > 0) {\n    const groupByTime = timeColumn !== undefined ? `, ${timeColumn.alias}` : '';\n    queryParts.push(`${options.groupBy!.join(', ')}${groupByTime}`);\n  } else if (hasAggregates && timeColumn) {\n    queryParts.push(timeColumn.alias!);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates an aggregate time series query.\n */\nconst generateAggregateTimeSeriesQuery = (_options: QueryBuilderOptions): string => {\n  // Copy columns so column aliases can be safely mutated\n  const options = { ..._options, columns: _options.columns?.map(c => ({ ...c })) };\n  const { database, table } = options;\n\n  const queryParts: string[] = [];\n  const selectParts: string[] = [];\n\n  const timeColumn = getColumnByHint(options, ColumnHint.Time);\n  if (timeColumn !== undefined) {\n    timeColumn.name = `$__timeInterval(${timeColumn.name})`;\n    timeColumn.alias = 'time';\n    selectParts.push(getColumnIdentifier(timeColumn));\n  }\n\n  options.groupBy?.forEach(g => selectParts.push(g));\n\n  options.aggregates?.forEach(agg => {\n    const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n    const name = `${agg.aggregateType}(${agg.column})`;\n    selectParts.push(`${name}${alias}`);\n  });\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  queryParts.push('GROUP BY');\n  if ((options.groupBy?.length || 0) > 0) {\n    const groupByTime = timeColumn !== undefined ? `, ${timeColumn.alias}` : '';\n    queryParts.push(`${options.groupBy!.join(', ')}${groupByTime}`);\n  } else if (timeColumn) {\n    queryParts.push(timeColumn.alias!);\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\n/**\n * Generates a table query.\n */\nconst generateTableQuery = (options: QueryBuilderOptions): string => {\n  const { database, table } = options;\n  const isAggregateMode = options.mode === BuilderMode.Aggregate;\n\n  const queryParts: string[] = [];\n  const selectParts: string[] = [];\n  const selectNames = new Set<string>();\n\n  options.columns?.forEach(c => {\n    selectParts.push(getColumnIdentifier(c));\n    selectNames.add(c.alias || c.name);\n  });\n\n  if (isAggregateMode) {\n    options.aggregates?.forEach(agg => {\n      const alias = agg.alias ? ` as ${agg.alias.replace(/ /g, '_')}` : '';\n      const name = `${agg.aggregateType}(${agg.column})`;\n      selectParts.push(`${name}${alias}`);\n      selectNames.add(alias ? alias.substring(4) : name);\n    });\n\n    options.groupBy?.forEach(g => {\n      if (selectNames.has(g)) {\n        // don't add if already selected\n        return;\n      }\n\n      // user must manually select groupBys, for flexibility\n      // selectParts.push(g)\n    });\n  }\n\n  const selectPartsSql = selectParts.join(', ');\n\n  queryParts.push('SELECT');\n  queryParts.push(selectPartsSql);\n  queryParts.push('FROM');\n  queryParts.push(getTableIdentifier(database, table));\n\n  const filterParts = getFilters(options);\n  if (filterParts) {\n    queryParts.push('WHERE');\n    queryParts.push(filterParts);\n  }\n\n  if (isAggregateMode && (options.groupBy?.length || 0) > 0) {\n    queryParts.push('GROUP BY');\n    queryParts.push(options.groupBy!.join(', '));\n  }\n\n  const orderBy = getOrderBy(options);\n  if (orderBy) {\n    queryParts.push('ORDER BY');\n    queryParts.push(orderBy);\n  }\n\n  const limit = getLimit(options.limit);\n  if (limit !== '') {\n    queryParts.push(limit);\n  }\n\n  return concatQueryParts(queryParts);\n}\n\nexport const isAggregateQuery = (builder: QueryBuilderOptions): boolean => (builder.aggregates?.length || 0) > 0;\nexport const getColumnByHint = (options: QueryBuilderOptions, hint: ColumnHint): SelectedColumn | undefined => options.columns?.find(c => c.hint === hint);\nexport const getColumnIndexByHint = (options: QueryBuilderOptions, hint: ColumnHint): number => (options.columns || []).findIndex(c => c.hint === hint);\nexport const getColumnsByHints = (options: QueryBuilderOptions, hints: readonly ColumnHint[]): readonly SelectedColumn[] => {\n  const columns = [];\n\n  for (let hint of hints) {\n    const col = getColumnByHint(options, hint);\n    if (col !== undefined) {\n      columns.push(col);\n    }\n  }\n\n  return columns;\n}\n\nconst getColumnIdentifier = (col: SelectedColumn): string => {\n  let colName = col.name;\n\n  // allow for functions like count()\n  if (colName.includes('(') || colName.includes(')') || colName.includes('\"') || colName.includes('\"') || colName.includes(' as ')) {\n    colName = col.name\n  } else if (colName.includes(' ')) {\n    colName = escapeIdentifier(col.name);\n  }\n\n  if (col.alias && (col.alias !== col.name && escapeIdentifier(col.alias) !== colName)) {\n    return `${colName} as \"${col.alias}\"`\n  }\n\n  return colName;\n}\n\nconst getTableIdentifier = (database: string, table: string): string => {\n  const sep = (!database || !table) ? '' : '.';\n  return `${escapeIdentifier(database)}${sep}${escapeIdentifier(table)}`;\n}\n\nconst escapeIdentifier = (id: string): string => {\n  return id ? `\"${id}\"` : '';\n}\n\nconst escapeValue = (value: string): string => {\n  if (value.includes('$') || value.includes('(') || value.includes(')') || value.includes('\\'') || value.includes('\"')) {\n    return value;\n  }\n\n  return `'${value}'`;\n}\n\n/**\n * Returns the SELECT column for trace duration.\n * Time unit is used to convert the value to milliseconds, as is required by Grafana's Trace panel.\n */\nconst getTraceDurationSelectSql = (columnIdentifier: string, timeUnit?: TimeUnit): string => {\n  const alias = 'duration';\n  switch (timeUnit) {\n    case TimeUnit.Seconds:\n      return `multiply(${columnIdentifier}, 1000) as ${alias}`;\n    case TimeUnit.Milliseconds:\n      return `${columnIdentifier} as ${alias}`;\n    case TimeUnit.Microseconds:\n      return `multiply(${columnIdentifier}, 0.001) as ${alias}`;\n    case TimeUnit.Nanoseconds:\n      return `multiply(${columnIdentifier}, 0.000001) as ${alias}`;\n    default:\n      return `${columnIdentifier} as ${alias}`;\n  }\n}\n\n/** Returns the input time field converted to a Unix timestamp in nanoseconds and then adjusted to milliseconds. */\nconst convertTimeFieldToMilliseconds = (columnIdentifier: string) =>\n  `multiply(toUnixTimestamp64Nano(${columnIdentifier}), 0.000001)`;\n\n/**\n * Concatenates query parts with no empty spaces.\n */\nconst concatQueryParts = (parts: readonly string[]): string => {\n  let query = '';\n  for (let i = 0; i < parts.length; i++) {\n    const p = parts[i];\n    if (!p) {\n      continue;\n    }\n\n    query += p;\n\n    if (i !== parts.length - 1) {\n      query += ' '\n    }\n  }\n\n  return query;\n}\n\n/**\n * Returns the order by list, excluding the \"ORDER BY\" keyword.\n */\nconst getOrderBy = (options: QueryBuilderOptions): string => {\n  const orderByParts: string[] = [];\n  if ((options.orderBy?.length || 0) > 0) {\n    options.orderBy?.forEach(o => {\n      let colName = o.name;\n      const hintedColumn = o.hint && getColumnByHint(options, o.hint);\n      if (hintedColumn) {\n        colName = hintedColumn.alias || hintedColumn.name;\n      }\n\n      if (!colName) {\n        return;\n      }\n\n      orderByParts.push(`${colName} ${o.dir}`);\n    });\n  }\n\n  return orderByParts.join(', ');\n};\n\n/**\n * Returns the limit clause including the \"LIMIT\" keyword\n */\nconst getLimit = (limit?: number | undefined): string => {\n  limit = Math.max(0, limit || 0);\n  if (limit > 0) {\n    return 'LIMIT ' + limit;\n  }\n\n  return '';\n};\n\n/**\n * Returns the filters in the WHERE clause, excluding the \"WHERE\" keyword\n */\nconst getFilters = (options: QueryBuilderOptions): string => {\n  const filters = options.filters || [];\n  const builtFilters: string[] = [];\n\n  for (const filter of filters) {\n    if (filter.operator === FilterOperator.IsAnything) {\n      continue;\n    }\n\n    const filterParts: string[] = [];\n\n    let column = filter.key;\n    let type = filter.type;\n    const hintedColumn = filter.hint && getColumnByHint(options, filter.hint);\n    if (hintedColumn) {\n      column = hintedColumn.alias || hintedColumn.name;\n      type = hintedColumn.type || type;\n    }\n\n    if (!column) {\n      continue;\n    }\n\n    if (filter.mapKey) {\n      column += `['${filter.mapKey}']`;\n    }\n\n    filterParts.push(column);\n\n    let operator: string = filter.operator;\n    let negate = false;\n    if (filter.operator === FilterOperator.IsEmpty || filter.operator === FilterOperator.IsNotEmpty) {\n      operator = '';\n    } else if (filter.operator === FilterOperator.NotLike) {\n      operator = 'LIKE';\n      negate = true;\n    } else if (filter.operator === FilterOperator.OutsideGrafanaTimeRange) {\n      operator = '';\n      negate = true;\n    } else if (filter.operator === FilterOperator.WithInGrafanaTimeRange) {\n      operator = '';\n    }\n\n    if (operator) {\n      filterParts.push(operator);\n    }\n\n    if (isNullFilter(filter.operator)) {\n      // empty\n    } else if (filter.operator === FilterOperator.IsEmpty) {\n      filterParts.push(`= ''`);\n    } else if (filter.operator === FilterOperator.IsNotEmpty) {\n      filterParts.push(`!= ''`);\n    } else if (isBooleanFilter(type)) {\n      filterParts.push(String((filter as BooleanFilter).value));\n    } else if (isNumberFilter(type)) {\n      filterParts.push(String((filter as NumberFilter).value || '0'));\n    } else if (isDateFilter(type)) {\n      if (isDateFilterWithoutValue(type, filter.operator)) {\n        if (isDateType(type)) {\n          filterParts.push('>=', '\\$__fromTime', 'AND', column, '<=', '\\$__toTime');\n        }\n      } else {\n        switch ((filter as DateFilterWithValue).value) {\n          case 'GRAFANA_START_TIME':\n            if (isDateType(type)) {\n              filterParts.push('\\$__fromTime');\n            }\n            break;\n          case 'GRAFANA_END_TIME':\n            if (isDateType(type)) {\n              filterParts.push('\\$__toTime');\n            }\n            break;\n          default:\n            filterParts.push(escapeValue(String((filter as DateFilterWithValue).value || 'TODAY')));\n        }\n      }\n    } else if (isStringFilter(type, filter.operator)) {\n      if (filter.operator === FilterOperator.Like || filter.operator === FilterOperator.NotLike) {\n        filterParts.push(`'%${filter.value || ''}%'`);\n      } else {\n        filterParts.push(escapeValue((filter as StringFilter).value || ''));\n      }\n    } else if (isMultiFilter(type, filter.operator)) {\n      filterParts.push(`(${(filter as MultiFilter).value?.map(v => escapeValue(v.trim())).join(', ')})`);\n    } else {\n      filterParts.push(escapeValue((filter as StringFilter).value || ''));\n    }\n\n    if (negate) {\n      filterParts.unshift('NOT', '(');\n      filterParts.push(')');\n    }\n\n    filterParts.unshift('(');\n    if (builtFilters.length > 0) {\n      filterParts.unshift(filter.condition);\n    }\n    filterParts.push(')');\n\n    const builtFilter = concatQueryParts(filterParts);\n    builtFilters.push(builtFilter);\n  }\n\n  return concatQueryParts(builtFilters);\n};\n\nconst stripTypeModifiers = (type: string): string => {\n  return type.toLowerCase().\n    replace(/\\(/g, '').\n    replace(/\\)/g, '').\n    replace(/nullable/g, '').\n    replace(/lowcardinality/g, '');\n\n}\nconst isBooleanType = (type: string): boolean => (type?.toLowerCase().startsWith('boolean'));\nconst numberTypes = ['int', 'float', 'decimal'];\nconst isNumberType = (type: string): boolean => numberTypes.some(t => type?.toLowerCase().includes(t));\nconst isDateType = (type: string): boolean => type?.toLowerCase().startsWith('date') || type?.toLowerCase().startsWith('nullable(date');\n// const isDateTimeType = (type: string): boolean => type?.toLowerCase().startsWith('datetime') || type?.toLowerCase().startsWith('nullable(datetime');\nconst isStringType = (type: string): boolean => {\n  type = stripTypeModifiers(type.toLowerCase());\n  return (type === 'string' || type.startsWith('fixedstring'))\n    && !(isBooleanType(type) || isNumberType(type) || isDateType(type));\n}\nconst isNullFilter = (operator: FilterOperator): boolean => operator === FilterOperator.IsNull || operator === FilterOperator.IsNotNull;\nconst isBooleanFilter = (type: string): boolean => isBooleanType(type);\nconst isNumberFilter = (type: string): boolean => isNumberType(type);\nconst isDateFilterWithoutValue = (type: string, operator: FilterOperator): boolean => isDateType(type) && (operator === FilterOperator.WithInGrafanaTimeRange || operator === FilterOperator.OutsideGrafanaTimeRange);\nconst isDateFilter = (type: string): boolean => isDateType(type);\nconst isStringFilter = (type: string, operator: FilterOperator): boolean => isStringType(type) && !(operator === FilterOperator.In || operator === FilterOperator.NotIn);\nconst isMultiFilter = (type: string, operator: FilterOperator): boolean => isStringType(type) && (operator === FilterOperator.In || operator === FilterOperator.NotIn);\n\n/**\n * When filtering in the logs panel in explore view, we need a way to\n * map from the SQL generator's aliases back to the original column hints\n * so that filters can be added properly.\n */\nconst logAliasToColumnHintsEntries: ReadonlyArray<[string, ColumnHint]> = [\n  ['timestamp', ColumnHint.Time],\n  ['body', ColumnHint.LogMessage],\n  ['level', ColumnHint.LogLevel],\n  ['labels', ColumnHint.LogLabels],\n  ['traceID', ColumnHint.TraceId],\n];\nexport const logAliasToColumnHints: Map<string, ColumnHint> = new Map(logAliasToColumnHintsEntries);\nexport const logColumnHintsToAlias: Map<ColumnHint, string> = new Map(logAliasToColumnHintsEntries.map(e => [e[1], e[0]]));\n\n\nexport const _testExports = {\n  getColumnIdentifier,\n  getTableIdentifier,\n  escapeIdentifier,\n  escapeValue,\n  concatQueryParts,\n  getOrderBy,\n  getLimit,\n  getFilters,\n  isStringType,\n};\n","import pluginPackage from '../../package.json';\nimport { isNumber } from 'lodash';\n\nexport const pluginVersion = pluginPackage.version;\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.meta = '';\n\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import { CoreApp, DataFrame, DataQueryRequest, DataQueryResponse } from \"@grafana/data\";\nimport { ColumnHint, FilterOperator, OrderByDirection, QueryBuilderOptions, QueryType, SelectedColumn, StringFilter } from \"types/queryBuilder\"\nimport { CHBuilderQuery, CHQuery, EditorType } from \"types/sql\";\nimport { Datasource } from \"./CHDatasource\";\nimport { pluginVersion } from \"utils/version\";\nimport { logColumnHintsToAlias } from \"./sqlGenerator\";\n\n/**\n * Returns true if the builder options contain enough information to start showing a query\n */\nexport const isBuilderOptionsRunnable = (builderOptions: QueryBuilderOptions): boolean => {\n  return (\n    (builderOptions.columns?.length || 0) > 0 ||\n    (builderOptions.filters?.length || 0) > 0 ||\n    (builderOptions.orderBy?.length || 0) > 0 ||\n    (builderOptions.aggregates?.length || 0) > 0 ||\n    (builderOptions.groupBy?.length || 0) > 0\n  );\n};\n\n/**\n * Converts QueryBuilderOptions to Grafana format\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapQueryBuilderOptionsToGrafanaFormat = (t?: QueryBuilderOptions): number => {\n  switch (t?.queryType) {\n    case QueryType.Table:\n      return 1;\n    case QueryType.Logs:\n      return 2;\n    case QueryType.TimeSeries:\n      return 0;\n    case QueryType.Traces:\n      return t.meta?.isTraceIdMode ? 3 : 1;\n    default:\n      return 1 << 8; // an unused u32, defaults to timeseries/graph on plugin backend.\n  }\n};\n\n/**\n * Converts QueryType to Grafana format\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapQueryTypeToGrafanaFormat = (t?: QueryType): number => {\n  switch (t) {\n    case QueryType.Table:\n      return 1;\n    case QueryType.Logs:\n      return 2;\n    case QueryType.TimeSeries:\n      return 0;\n    case QueryType.Traces:\n      return 3;\n    default:\n      return 1 << 8; // an unused u32, defaults to timeseries/graph on plugin backend.\n  }\n};\n\n/**\n * Converts Grafana format to builder QueryType\n * src: https://github.com/grafana/sqlds/blob/main/query.go#L20\n */\nexport const mapGrafanaFormatToQueryType = (f?: number): QueryType => {\n  switch (f) {\n    case 0:\n      return QueryType.TimeSeries;\n    case 1:\n      return QueryType.Table;\n    case 2:\n      return QueryType.Logs;\n    case 3:\n      return QueryType.Traces;\n    default:\n      return QueryType.Table;\n  }\n};\n\n/**\n * Manipulates column array in-place to include column hints, loosely matched by the provided column hint map.\n */\nexport const tryApplyColumnHints = (columns: SelectedColumn[], hintsToColumns?: Map<ColumnHint, string>) => {\n  const columnsToHints: Map<string, ColumnHint> = new Map();\n  if (hintsToColumns) {\n    hintsToColumns.forEach((name, hint) => {\n      columnsToHints.set(name.toLowerCase().trim(), hint);\n    });\n  }\n\n  for (const column of columns) {\n    if (column.hint) {\n      continue;\n    }\n\n    const name = column.name.toLowerCase().trim();\n    const alias = column.alias?.toLowerCase().trim() || '';\n\n    const hint = columnsToHints.get(name) || columnsToHints.get(alias);\n    if (hint) {\n      column.hint = hint;\n      continue;\n    }\n\n    if (name.includes('time')) {\n      column.hint = ColumnHint.Time;\n    }\n  }\n};\n\n/**\n * Converts label into sql-style column name.\n * Example: \"Test Column\" -> \"test_column\"\n */\nexport const columnLabelToPlaceholder = (label: string) => label.toLowerCase().replace(/ /g, '_');\n\n/**\n * Mutates the DataQueryResponse to include trace/log links on the traceID field.\n * The link will open a second query editor in split view\n * on the explore page with the selected trace ID.\n * \n * Requires defaults to be configured when crossing query types.\n */\nexport const transformQueryResponseWithTraceAndLogLinks = (datasource: Datasource, req: DataQueryRequest<CHQuery>, res: DataQueryResponse): DataQueryResponse => {\n  res.data.forEach((frame: DataFrame) => {\n    const originalQuery = req.targets.find(t => t.refId === frame.refId) as CHBuilderQuery;\n    if (!originalQuery) {\n      return;\n    }\n\n    const traceField = frame.fields.find(field => field.name.toLowerCase() === 'traceid' || field.name.toLowerCase() === 'trace_id');\n    if (!traceField) {\n      return;\n    }\n\n    const traceIdQuery: CHBuilderQuery = {\n      datasource: datasource,\n      editorType: EditorType.Builder,\n      /**\n       * Evil bug:\n       * The rawSql value might contain time filters such as $__fromTime and $__toTime.\n       * Grafana sees these time range filters as data links and will refuse to enable the traceID link if these are present.\n       * Set rawSql to empty since it gets regenerated when the panel renders anyway.\n       */\n      rawSql: '',\n      builderOptions: {} as QueryBuilderOptions,\n      pluginVersion,\n      refId: 'Trace ID'\n    };\n\n    if (originalQuery.editorType === EditorType.Builder && originalQuery.builderOptions.queryType === QueryType.Traces) {\n      // Copy fields directly from trace search\n\n      traceIdQuery.builderOptions = {\n        ...originalQuery.builderOptions,\n        filters: [], // Clear filters and orderBy since it's an exact ID lookup\n        orderBy: [],\n        meta: {\n          ...originalQuery.builderOptions.meta,\n          minimized: true,\n          isTraceIdMode: true,\n          traceId: '${__value.raw}'\n        }\n      };\n    } else {\n      // Create new query based on trace defaults\n\n      const otelVersion = datasource.getTraceOtelVersion();\n      const options: QueryBuilderOptions = {\n        database: datasource.getDefaultTraceDatabase() || traceIdQuery.builderOptions.database || datasource.getDefaultDatabase(),\n        table: datasource.getDefaultTraceTable() || datasource.getDefaultTable() || traceIdQuery.builderOptions.table,\n        queryType: QueryType.Traces,\n        columns: [],\n        filters: [],\n        orderBy: [],\n        meta: {\n          minimized: true,\n          isTraceIdMode: true,\n          traceId: '${__value.raw}',\n          traceDurationUnit: datasource.getDefaultTraceDurationUnit(),\n          otelEnabled: Boolean(otelVersion),\n          otelVersion: otelVersion,\n        }\n      };\n\n      const defaultColumns = datasource.getDefaultTraceColumns();\n      for (let [hint, colName] of defaultColumns) {\n        options.columns!.push({ name: colName, hint });\n      }\n\n      traceIdQuery.builderOptions = options;\n    }\n\n    const traceLogsQuery: CHBuilderQuery = {\n      datasource: datasource,\n      editorType: EditorType.Builder,\n      rawSql: '',\n      builderOptions: {} as QueryBuilderOptions,\n      pluginVersion,\n      refId: 'Trace Logs'\n    };\n\n    if (originalQuery.editorType === EditorType.Builder && originalQuery.builderOptions.queryType === QueryType.Logs) {\n      // Copy fields directly from log search\n      traceLogsQuery.builderOptions = {\n        ...originalQuery.builderOptions,\n        filters: [\n          {\n            type: 'string',\n            operator: FilterOperator.Equals,\n            filterType: 'custom',\n            key: '',\n            hint: ColumnHint.TraceId,\n            condition: 'AND',\n            value: '${__value.raw}'\n          } as StringFilter\n        ],\n        orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n        meta: {\n          ...originalQuery.builderOptions.meta,\n          minimized: true,\n        }\n      };\n    } else {\n      // Create new query based on log defaults\n\n      const otelVersion = datasource.getLogsOtelVersion();\n      const options: QueryBuilderOptions = {\n        database: datasource.getDefaultLogsDatabase() || traceLogsQuery.builderOptions.database || datasource.getDefaultDatabase(),\n        table: datasource.getDefaultLogsTable() || datasource.getDefaultTable() || traceLogsQuery.builderOptions.table,\n        queryType: QueryType.Logs,\n        columns: [],\n        orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n        filters: [\n          {\n            type: 'string',\n            operator: FilterOperator.Equals,\n            filterType: 'custom',\n            key: '',\n            hint: ColumnHint.TraceId,\n            condition: 'AND',\n            value: '${__value.raw}'\n          } as StringFilter\n        ],\n        meta: {\n          minimized: true,\n          otelEnabled: Boolean(otelVersion),\n          otelVersion: otelVersion,\n        }\n      };\n\n      const defaultColumns = datasource.getDefaultLogsColumns();\n      for (let [hint, colName] of defaultColumns) {\n        options.columns!.push({ name: colName, hint });\n      }\n\n      traceLogsQuery.builderOptions = options;\n    }\n\n    const openInNewWindow = req.app !== CoreApp.Explore;\n    traceField.config.links = [];\n    traceField.config.links!.push({\n      title: 'View trace',\n      targetBlank: openInNewWindow,\n      url: '',\n      internal: {\n        query: traceIdQuery,\n        datasourceUid: traceIdQuery.datasource?.uid!,\n        datasourceName: traceIdQuery.datasource?.type!,\n        panelsState: {\n          trace: {\n            spanId: '${__value.raw}'\n          }\n        }\n      }\n    });\n    traceField.config.links!.push({\n      title: 'View logs',\n      targetBlank: openInNewWindow,\n      url: '',\n      internal: {\n        query: traceLogsQuery,\n        datasourceUid: traceLogsQuery.datasource?.uid!,\n        datasourceName: traceLogsQuery.datasource?.type!,\n      }\n    }); \n  });\n\n  return res;\n};\n\n\n/**\n * Returns true if the dataframe contains a log label that matches the provided name.\n * \n * This function exists for the logs panel, when clicking \"filter for value\" on a single log row.\n * A dataframe will be provided for that single row, and we need to check the labels object to see if it\n * contains a field with that name. If it does then we can create a filter using the labels column hint.\n */\nexport const dataFrameHasLogLabelWithName = (frame: DataFrame | undefined, name: string): boolean => {\n  if (!frame || !frame.fields || frame.fields.length === 0) {\n    return false;\n  }\n\n  const logLabelsFieldName = logColumnHintsToAlias.get(ColumnHint.LogLabels);\n  const field = frame.fields.find(f => f.name === logLabelsFieldName);\n  if (!field || !field.values || field.values.length < 1 || !field.values.get(0)) {\n    return false;\n  }\n\n  const labels = (field.values.get(0) || {}) as object;\n  const labelKeys = Object.keys(labels);\n\n  return labelKeys.includes(name);\n}\n","import { E2ESelectors } from '@grafana/e2e-selectors';\nexport const Components = {\n  QueryEditor: {\n    CodeEditor: {\n      input: () => '.monaco-editor textarea',\n      container: 'data-testid-code-editor-container',\n      Expand: 'data-testid-code-editor-expand-button',\n    },\n    Format: {\n      label: 'Format',\n      tooltip: 'Query Type',\n      options: {\n        AUTO: 'Auto',\n        TABLE: 'Table',\n        TIME_SERIES: 'Time Series',\n        LOGS: 'Logs',\n        TRACE: 'Trace',\n      },\n    },\n    Types: {\n      label: 'Query Type',\n      tooltip: 'Query Type',\n      options: {\n        SQLEditor: 'SQL Editor',\n        QueryBuilder: 'Query Builder',\n      },\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        confirmText: 'Yes',\n      },\n    },\n    QueryBuilder: {\n      TYPES: {\n        label: 'Show as',\n        tooltip: 'Show as',\n        options: {\n          LIST: 'Table',\n          AGGREGATE: 'Aggregate',\n          TREND: 'Time Series',\n        },\n      },\n      DATABASE: {\n        label: 'Database',\n        tooltip: 'Clickhouse database to query from',\n      },\n      FROM: {\n        label: 'Table',\n        tooltip: 'Clickhouse table to query from',\n      },\n      SELECT: {\n        label: 'Fields',\n        tooltipTable: 'List of fields to show',\n        tooltipAggregate: `List of metrics to show. Use any of the given aggregation along with the field`,\n        ALIAS: {\n          label: 'as',\n          tooltip: 'alias',\n        },\n        AddLabel: 'Field',\n        RemoveLabel: '',\n      },\n      AGGREGATES: {\n        label: 'Aggregates',\n        tooltipTable: 'Aggregate functions to use',\n        tooltipAggregate: `Aggregate functions to use`,\n        ALIAS: {\n          label: 'as',\n          tooltip: 'alias',\n        },\n        AddLabel: 'Aggregate',\n        RemoveLabel: '',\n      },\n      WHERE: {\n        label: 'Filters',\n        tooltip: `List of filters`,\n        AddLabel: 'Filter',\n        RemoveLabel: '',\n      },\n      GROUP_BY: {\n        label: 'Group by',\n        tooltip: 'Group the results by specific field',\n      },\n      ORDER_BY: {\n        label: 'Order by',\n        tooltip: 'Order by field',\n        AddLabel: 'Order by',\n        RemoveLabel: '',\n      },\n      LIMIT: {\n        label: 'Limit',\n        tooltip: 'Number of records/results to show.',\n      },\n      TIME_FIELD: {\n        label: 'Time field',\n        tooltip: 'Select the time field for trending over time',\n      },\n      LOGS_VOLUME_TIME_FIELD: {\n        label: 'Time field',\n        tooltip: 'Select the time field for logs volume histogram. If not selected, the histogram will not be shown',\n      },\n      LOG_LEVEL_FIELD: {\n        label: 'Log level field',\n        tooltip: 'Select the field to extract log level information from',\n      },\n      PREVIEW: {\n        label: 'SQL Preview',\n        tooltip: 'SQL Preview. You can safely switch to SQL Editor to customize the generated query',\n      },\n    },\n  },\n  Config: {\n    HttpHeaderConfig: {\n      headerEditor: 'config__http-header-config__header-editor',\n      addHeaderButton: 'config__http-header-config__add-header-button',\n      removeHeaderButton: 'config__http-header-config__remove-header-button',\n      headerSecureSwitch: 'config__http-header-config__header-secure-switch',\n      headerNameInput: 'config__http-header-config__header-name-input',\n      headerValueInput: 'config__http-header-config__header-value-input',\n      forwardGrafanaHeadersSwitch: 'config__http-header-config__forward-grafana-headers-switch'\n    },\n    AliasTableConfig: {\n      aliasEditor: 'config__alias-table-config__alias-editor',\n      addEntryButton: 'config__alias-table-config__add-entry-button',\n      removeEntryButton: 'config__alias-table-config__remove-entry-button',\n      targetDatabaseInput: 'config__alias-table-config__target-database-input',\n      targetTableInput: 'config__alias-table-config__target-table-input',\n      aliasDatabaseInput: 'config__alias-table-config__alias-database-input',\n      aliasTableInput: 'config__alias-table-config__alias-table-input',\n    }\n  },\n  LogsContextPanel: {\n    alert: 'logs-context-panel__alert',\n    LogsContextKey: 'logs-context-panel__logs-context-key',\n  },\n  QueryBuilder: {\n    expandBuilderButton: 'query-builder__expand-builder-button',\n    LogsQueryBuilder: {\n      LogMessageLikeInput: {\n        input: 'query-builder__logs-query-builder__log-message-like-input__input',\n      }\n    },\n    AggregateEditor: {\n      sectionLabel: 'query-builder__aggregate-editor__section-label',\n      itemWrapper: 'query-builder__aggregate-editor__item-wrapper',\n      itemRemoveButton: 'query-builder__aggregate-editor-item-remove-button',\n      addButton: 'query-builder__aggregate-editor__add-button',\n    },\n    ColumnsEditor: {\n      multiSelectWrapper: 'query-builder__columns-editor__multi-select-wrapper'\n    },\n    GroupByEditor: {\n      multiSelectWrapper: 'query-builder__group-by__multi-select-wrapper'\n    },\n    LimitEditor: {\n      input: 'query-builder__limit-editor__input'\n    },\n    TraceIdInput: {\n      input: 'query-builder__trace-id-input__input'\n    }\n  }\n};\nexport const selectors: { components: E2ESelectors<typeof Components> } = {\n  components: Components,\n};\n","import React from 'react';\nimport { Alert, Icon, IconName, Stack, useTheme2 } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { LogContextColumn } from 'data/CHDatasource';\nimport { Components } from 'selectors';\n\n\nconst LogsContextPanelStyles = css`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\ninterface LogContextPanelProps {\n  columns: LogContextColumn[];\n  datasourceUid: string;\n}\n\nconst LogsContextPanel = (props: LogContextPanelProps) => {\n  const { columns, datasourceUid } = props;\n  const theme = useTheme2();\n\n  if (!columns || columns.length === 0) {\n    return (\n      <Alert data-testid={Components.LogsContextPanel.alert} title=\"\" severity=\"warning\">\n        <Stack direction=\"column\">\n          <div>\n            {'Unable to match any context columns. Make sure your query returns at least one log context column from your '}\n            <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasourceUid)}#logs-config`}>ClickHouse Data Source settings</a>\n          </div>\n        </Stack>\n      </Alert>\n    );\n  }\n\n  return (\n    <div className={LogsContextPanelStyles}>\n      {columns.map((p) => (\n        <LogContextKey\n          key={p.name}\n          name={p.name}\n          value={p.value}\n          primaryColor={theme.colors.secondary.main}\n          primaryTextColor={theme.colors.text.primary}\n          secondaryColor={theme.colors.background.secondary}\n          secondaryTextColor={theme.colors.info.text}\n        />\n      ))}\n    </div>\n  )\n};\n\n/**\n * Roughly match an icon with the context column name.\n */\nconst iconMatcher = (contextName: string): IconName => {\n  contextName = contextName.toLowerCase();\n  \n  if (contextName === 'db' || contextName === 'database' || contextName.includes('data')) {\n    return 'database';\n  } else if (contextName.includes('service')) {\n    return 'building';\n  } else if (contextName.includes('error') || contextName.includes('warn') || contextName.includes('critical') || contextName.includes('fatal')) {\n    return 'exclamation-triangle';\n  } else if (contextName.includes('user') || contextName.includes('admin')) {\n    return 'user';\n  } else if (contextName.includes('email')) {\n    return 'at';\n  } else if (contextName.includes('file')) {\n    return 'file-alt';\n  } else if (contextName.includes('bug')) {\n    return 'bug';\n  } else if (contextName.includes('search')) {\n    return 'search';\n  } else if (contextName.includes('tag')) {\n    return 'tag-alt';\n  } else if (contextName.includes('span') || contextName.includes('stack')) {\n    return 'brackets-curly';\n  } if (contextName === 'host' || contextName === 'hostname' || contextName.includes('host')) {\n    return 'cloud';\n  } if (contextName === 'url' || contextName.includes('url')) {\n    return 'link';\n  } else if (contextName.includes('container') || contextName.includes('pod')) {\n    return 'cube';\n  }\n\n  return 'align-left';\n}\n\ninterface LogContextKeyProps {\n  name: string;\n  value: string;\n  primaryColor: string;\n  primaryTextColor: string;\n  secondaryColor: string;\n  secondaryTextColor: string;\n}\n\nconst LogContextKey = (props: LogContextKeyProps) => {\n  const { name, value, primaryColor, primaryTextColor, secondaryColor, secondaryTextColor } = props;\n\n  const styles = {\n    container: css`\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 0.25em;\n      color: ${primaryTextColor}\n    `,\n    containerLeft: css`\n      display: flex;\n      align-items: center;\n      background-color: ${primaryColor};\n      border-radius: 2px;\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n  \n      padding-top: 0.15em;\n      padding-bottom: 0.15em;\n      padding-left: 0.25em;\n      padding-right: 0.25em;\n    `,\n    contextName: css`\n      font-weight: bold;\n      padding-left: 0.25em;\n      user-select: all;\n    `,\n    contextValue: css`\n      background-color: ${secondaryColor};\n      color: ${secondaryTextColor};\n      border-radius: 2px;\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n      user-select: all;\n      font-family: monospace;\n\n      padding-top: 0.15em;\n      padding-bottom: 0.15em;\n      padding-left: 0.25em;\n      padding-right: 0.25em;\n    `,\n  };\n\n  return (\n    <div className={styles.container} data-testid={Components.LogsContextPanel.LogsContextKey}>\n      <div className={styles.containerLeft}>\n        <Icon name={iconMatcher(name)} size=\"md\" />\n        <div>test</div>\n        <span className={styles.contextName}>{name}</span>\n      </div>\n      <span className={styles.contextValue}>{value}</span>\n    </div>\n  );\n}\n\nexport default LogsContextPanel;\n\nexport const _testExports = {\n  iconMatcher,\n  LogContextKey,\n};\n","import {\n  DataFrame,\n  DataFrameView,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  DataSourceWithLogsContextSupport,\n  DataSourceWithSupplementaryQueriesSupport,\n  getTimeZone,\n  getTimeZoneInfo,\n  LogRowContextOptions,\n  LogRowContextQueryDirection,\n  LogRowModel,\n  MetricFindValue,\n  QueryFixAction,\n  ScopedVars,\n  SupplementaryQueryOptions,\n  SupplementaryQueryType,\n  TypedVariableModel,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { Observable, map, firstValueFrom } from 'rxjs';\nimport { CHConfig } from 'types/config';\nimport { EditorType, CHQuery } from 'types/sql';\nimport {\n  QueryType,\n  AggregateColumn,\n  AggregateType,\n  BuilderMode,\n  Filter,\n  FilterOperator,\n  TableColumn,\n  OrderByDirection,\n  QueryBuilderOptions,\n  ColumnHint,\n  TimeUnit,\n  SelectedColumn,\n  SqlFunction,\n} from 'types/queryBuilder';\nimport { AdHocFilter } from './adHocFilter';\nimport { cloneDeep, isEmpty, isString } from 'lodash';\nimport {\n  DEFAULT_LOGS_ALIAS,\n  getIntervalInfo,\n  getTimeFieldRoundingClause,\n  LOG_LEVEL_TO_IN_CLAUSE,\n  queryLogsVolume,\n  TIME_FIELD_ALIAS,\n} from './logs';\nimport { generateSql, getColumnByHint, logAliasToColumnHints } from './sqlGenerator';\nimport otel from 'otel';\nimport { createElement as createReactElement, ReactNode } from 'react';\nimport { dataFrameHasLogLabelWithName, transformQueryResponseWithTraceAndLogLinks } from './utils';\nimport { pluginVersion } from 'utils/version';\nimport LogsContextPanel from 'components/LogsContextPanel';\n\nexport class Datasource\n  extends DataSourceWithBackend<CHQuery, CHConfig>\n  implements DataSourceWithSupplementaryQueriesSupport<CHQuery>,\n  DataSourceWithLogsContextSupport<CHQuery>\n{\n  // This enables default annotation support for 7.2+\n  annotations = {};\n  settings: DataSourceInstanceSettings<CHConfig>;\n  adHocFilter: AdHocFilter;\n  skipAdHocFilter = false; // don't apply adhoc filters to the query\n  adHocFiltersStatus = AdHocFilterStatus.none; // ad hoc filters only work with CH 22.7+\n  adHocCHVerReq = { major: 22, minor: 7 };\n\n  constructor(instanceSettings: DataSourceInstanceSettings<CHConfig>) {\n    super(instanceSettings);\n    this.settings = instanceSettings;\n    this.adHocFilter = new AdHocFilter();\n  }\n\n  getDataProvider(\n    type: SupplementaryQueryType,\n    request: DataQueryRequest<CHQuery>\n  ): Observable<DataQueryResponse> | undefined {\n    if (!this.getSupportedSupplementaryQueryTypes().includes(type)) {\n      return undefined;\n    }\n    switch (type) {\n      case SupplementaryQueryType.LogsVolume:\n        const logsVolumeRequest = cloneDeep(request);\n\n        const intervalInfo = getIntervalInfo(logsVolumeRequest.scopedVars);\n        logsVolumeRequest.interval = intervalInfo.interval;\n        logsVolumeRequest.scopedVars.__interval = { value: intervalInfo.interval, text: intervalInfo.interval };\n        logsVolumeRequest.hideFromInspector = true;\n        if (intervalInfo.intervalMs !== undefined) {\n          logsVolumeRequest.intervalMs = intervalInfo.intervalMs;\n          logsVolumeRequest.scopedVars.__interval_ms = {\n            value: intervalInfo.intervalMs,\n            text: intervalInfo.intervalMs,\n          };\n        }\n\n        const targets: CHQuery[] = [];\n        logsVolumeRequest.targets.forEach((target) => {\n          const supplementaryQuery = this.getSupplementaryLogsVolumeQuery(logsVolumeRequest, target);\n          if (supplementaryQuery !== undefined) {\n            targets.push(supplementaryQuery);\n          }\n        });\n\n        if (!targets.length) {\n          return undefined;\n        }\n\n        return queryLogsVolume(\n          this,\n          { ...logsVolumeRequest, targets },\n          {\n            range: logsVolumeRequest.range,\n            targets: logsVolumeRequest.targets,\n          }\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  getSupportedSupplementaryQueryTypes(): SupplementaryQueryType[] {\n    return [SupplementaryQueryType.LogsVolume];\n  }\n\n  getSupplementaryLogsVolumeQuery(logsVolumeRequest: DataQueryRequest<CHQuery>, query: CHQuery): CHQuery | undefined {\n    if (\n      query.editorType !== EditorType.Builder ||\n      query.builderOptions.queryType !== QueryType.Logs ||\n      query.builderOptions.mode !== BuilderMode.List ||\n      query.builderOptions.database === '' ||\n      query.builderOptions.table === ''\n    ) {\n      return undefined;\n    }\n\n    \n\n    const timeColumn = getColumnByHint(query.builderOptions, ColumnHint.Time);\n    if (timeColumn === undefined) {\n      return undefined;\n    }\n\n    const columns: SelectedColumn[] = [];\n    const aggregates: AggregateColumn[] = [];\n    columns.push({\n      name: getTimeFieldRoundingClause(logsVolumeRequest.scopedVars, timeColumn.name),\n      alias: TIME_FIELD_ALIAS,\n      hint: ColumnHint.Time\n    });\n\n    const logLevelColumn = getColumnByHint(query.builderOptions, ColumnHint.LogLevel);\n    if (logLevelColumn) {\n      // Generates aggregates like\n      // sum(toString(\"log_level\") IN ('dbug', 'debug', 'DBUG', 'DEBUG', 'Dbug', 'Debug')) AS debug\n      const llf = `toString(\"${logLevelColumn.name}\")`;\n      let level: keyof typeof LOG_LEVEL_TO_IN_CLAUSE;\n      for (level in LOG_LEVEL_TO_IN_CLAUSE) {\n        aggregates.push({ aggregateType: AggregateType.Sum, column: `multiSearchAny(${llf}, [${LOG_LEVEL_TO_IN_CLAUSE[level]}])`, alias: level });\n      }\n    } else {\n      // Count all logs if level column isn't selected\n      aggregates.push({\n        aggregateType: AggregateType.Count,\n        column: '*',\n        alias: DEFAULT_LOGS_ALIAS,\n      });\n    }\n\n    const filters = (query.builderOptions.filters?.slice() || []).map(f => {\n      // In order for a hinted filter to work, the hinted column must be SELECTed OR provide \"key\"\n      // For this histogram query the \"level\" column isn't selected, so we must find the original column name\n      if (f.hint && !f.key) {\n        const originalColumn = getColumnByHint(query.builderOptions, f.hint);\n        f.key = originalColumn?.alias || originalColumn?.name || '';\n      }\n\n      return f;\n    });\n\n    const logVolumeSqlBuilderOptions: QueryBuilderOptions = {\n      database: query.builderOptions.database,\n      table: query.builderOptions.table,\n      queryType: QueryType.TimeSeries,\n      filters,\n      columns,\n      aggregates,\n      orderBy: [{ name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC }],\n    };\n\n    const logVolumeSupplementaryQuery = generateSql(logVolumeSqlBuilderOptions);\n    return {\n      pluginVersion,\n      editorType: EditorType.Builder,\n      builderOptions: logVolumeSqlBuilderOptions,\n      rawSql: logVolumeSupplementaryQuery,\n      refId: '',\n    };\n  }\n\n  getSupplementaryQuery(options: SupplementaryQueryOptions, originalQuery: CHQuery): CHQuery | undefined {\n    return undefined;\n  }\n\n  async metricFindQuery(query: CHQuery | string, options: any) {\n    if (this.adHocFiltersStatus === AdHocFilterStatus.none) {\n      this.adHocFiltersStatus = await this.canUseAdhocFilters();\n    }\n    const chQuery = isString(query) ? { rawSql: query, editorType: EditorType.SQL } : query;\n\n    if (!(chQuery.editorType === EditorType.SQL || chQuery.editorType === EditorType.Builder || !chQuery.editorType)) {\n      return [];\n    }\n\n    if (!chQuery.rawSql) {\n      return [];\n    }\n    const frame = await this.runQuery(chQuery, options);\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    if (frame?.fields?.length === 1) {\n      return frame?.fields[0]?.values.map((text) => ({ text, value: text }));\n    }\n    // convention - assume the first field is an id field\n    const ids = frame?.fields[0]?.values;\n    return frame?.fields[1]?.values.map((text, i) => ({ text, value: ids.get(i) }));\n  }\n\n  applyTemplateVariables(query: CHQuery, scoped: ScopedVars): CHQuery {\n    let rawQuery = query.rawSql || '';\n    // we want to skip applying ad hoc filters when we are getting values for ad hoc filters\n    const templateSrv = getTemplateSrv();\n\n    // first resolve template variables\n    rawQuery = this.applyConditionalAll(rawQuery, templateSrv.getVariables());\n    rawQuery = this.replace(rawQuery, scoped) || '';\n\n    // now apply ad-hoc filters after table references have been resolved\n    if (!this.skipAdHocFilter) {\n      const adHocFilters = (templateSrv as any)?.getAdhocFilters(this.name);\n      if (this.adHocFiltersStatus === AdHocFilterStatus.disabled && adHocFilters?.length > 0) {\n        throw new Error(\n          `Unable to apply ad hoc filters. Upgrade ClickHouse to >=${this.adHocCHVerReq.major}.${this.adHocCHVerReq.minor} or remove ad hoc filters for the dashboard.`\n        );\n      }\n      rawQuery = this.adHocFilter.apply(rawQuery, adHocFilters);\n    }\n    this.skipAdHocFilter = false;\n\n    return {\n      ...query,\n      rawSql: rawQuery,\n    };\n  }\n\n  applyConditionalAll(rawQuery: string, templateVars: TypedVariableModel[]): string {\n    if (!rawQuery) {\n      return rawQuery;\n    }\n    const macro = '$__conditionalAll(';\n    let macroIndex = rawQuery.lastIndexOf(macro);\n\n    while (macroIndex !== -1) {\n      const params = this.getMacroArgs(rawQuery, macroIndex + macro.length - 1);\n      if (params.length !== 2) {\n        return rawQuery;\n      }\n      const templateVarParam = params[1].trim();\n      const varRegex = new RegExp(/(?<=\\$\\{)[\\w\\d]+(?=\\})|(?<=\\$)[\\w\\d]+/);\n      const templateVar = varRegex.exec(templateVarParam);\n      let phrase = params[0];\n      if (templateVar) {\n        const key = templateVars.find((x) => x.name === templateVar[0]) as any;\n        let value = key?.current.value.toString();\n        if (value === '' || value === '$__all') {\n          phrase = '1=1';\n        }\n      }\n      rawQuery = rawQuery.replace(`${macro}${params[0]},${params[1]})`, phrase);\n      macroIndex = rawQuery.lastIndexOf(macro);\n    }\n    return rawQuery;\n  }\n\n  // Support filtering by field value in Explore\n  modifyQuery(query: CHQuery, action: QueryFixAction): CHQuery {\n    if (query.editorType !== EditorType.Builder || !action.options || !action.options.key || !action.options.value) {\n      return query;\n    }\n\n    const columnName = action.options.key;\n    const actionFrame: DataFrame | undefined = (action as any).frame;\n    const actionValue = action.options.value;\n\n    // Find selected column by alias/name\n    const lookupByAlias = query.builderOptions.columns?.find(c => c.alias === columnName); // Check all aliases first,\n    const lookupByName = query.builderOptions.columns?.find(c => c.name === columnName);   // then try matching column name\n    const lookupByLogsAlias = logAliasToColumnHints.has(columnName) ? getColumnByHint(query.builderOptions, logAliasToColumnHints.get(columnName)!) : undefined;\n    const lookupByLogLabels = dataFrameHasLogLabelWithName(actionFrame, columnName) && getColumnByHint(query.builderOptions, ColumnHint.LogLabels);\n    const column = lookupByAlias || lookupByName || lookupByLogsAlias || lookupByLogLabels;\n    \n    let nextFilters: Filter[] = (query.builderOptions.filters?.slice() || []);\n    if (action.type === 'ADD_FILTER') {\n      // we need to remove *any other EQ or NE* for the same field,\n      // because we don't want to end up with two filters like `level=info` AND `level=error`\n      nextFilters = nextFilters.filter(f =>\n        !(\n          f.type === 'string' &&\n          ((column && column.hint && f.hint) ? f.hint === column.hint : f.key === columnName) &&\n          (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals || f.operator === FilterOperator.NotEquals)\n        ) &&\n        !(\n          f.type.toLowerCase().startsWith('map') &&\n          (column && lookupByLogLabels && f.mapKey === columnName) &&\n          (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals || f.operator === FilterOperator.NotEquals)\n        )\n      );\n\n      nextFilters.push({\n        condition: 'AND',\n        key: (column && column.hint) ? '' : columnName,\n        hint: (column && column.hint) ? column.hint : undefined,\n        mapKey: lookupByLogLabels ? columnName : undefined,\n        type: lookupByLogLabels ? 'Map(String, String)' : 'string',\n        filterType: 'custom',\n        operator: FilterOperator.Equals,\n        value: actionValue,\n      });\n    } else if (action.type === 'ADD_FILTER_OUT') {\n      // with this we might want to add multiple values as NE filters\n      // for example, `level != info` AND `level != debug`\n      // thus, here we remove only exactly matching NE filters or an existing EQ filter for this field\n      nextFilters = nextFilters.filter(f =>\n        !(\n          (f.type === 'string' &&\n            ((column && column.hint && f.hint) ? f.hint === column.hint : f.key === columnName) &&\n            'value' in f && f.value === actionValue &&\n            (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.NotEquals)\n          ) ||\n          (\n            f.type === 'string' &&\n            ((column && column.hint && f.hint) ? f.hint === column.hint : f.key === columnName) &&\n            (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals)\n          ) ||\n          (\n            f.type.toLowerCase().startsWith('map') &&\n            (column && lookupByLogLabels && f.mapKey === columnName) &&\n            (f.operator === FilterOperator.IsAnything || f.operator === FilterOperator.Equals)\n          )\n        )\n      );\n\n      nextFilters.push({\n        condition: 'AND',\n        key: (column && column.hint) ? '' : columnName,\n        hint: (column && column.hint) ? column.hint : undefined,\n        mapKey: lookupByLogLabels ? columnName : undefined,\n        type: lookupByLogLabels ? 'Map(String, String)' : 'string',\n        filterType: 'custom',\n        operator: FilterOperator.NotEquals,\n        value: actionValue,\n      });\n    }\n\n    // the query is updated to trigger the URL update and propagation to the panels\n    const nextOptions = { ...query.builderOptions, filters: nextFilters };\n    return {\n      ...query,\n      rawSql: generateSql(nextOptions),\n      builderOptions: nextOptions,\n    };\n  }\n\n  private getMacroArgs(query: string, argsIndex: number): string[] {\n    const args = [] as string[];\n    const re = /\\(|\\)|,/g;\n    let bracketCount = 0;\n    let lastArgEndIndex = 1;\n    let regExpArray: RegExpExecArray | null;\n    const argsSubstr = query.substring(argsIndex, query.length);\n    while ((regExpArray = re.exec(argsSubstr)) !== null) {\n      const foundNode = regExpArray[0];\n      if (foundNode === '(') {\n        bracketCount++;\n      } else if (foundNode === ')') {\n        bracketCount--;\n      }\n      if (foundNode === ',' && bracketCount === 1) {\n        args.push(argsSubstr.substring(lastArgEndIndex, re.lastIndex - 1));\n        lastArgEndIndex = re.lastIndex;\n      }\n      if (bracketCount === 0) {\n        args.push(argsSubstr.substring(lastArgEndIndex, re.lastIndex - 1));\n        return args;\n      }\n    }\n    return [];\n  }\n\n  private replace(value?: string, scopedVars?: ScopedVars) {\n    if (value !== undefined) {\n      return getTemplateSrv().replace(value, scopedVars, this.format);\n    }\n    return value;\n  }\n\n  private format(value: any) {\n    if (Array.isArray(value)) {\n      return `'${value.join(\"','\")}'`;\n    }\n    return value;\n  }\n\n  getDefaultDatabase(): string {\n    return this.settings.jsonData.defaultDatabase || 'default';\n  }\n\n  getDefaultTable(): string | undefined {\n    return this.settings.jsonData.defaultTable;\n  }\n\n  getDefaultLogsDatabase(): string | undefined {\n    return this.settings.jsonData.logs?.defaultDatabase;\n  }\n\n  getDefaultLogsTable(): string | undefined {\n    return this.settings.jsonData.logs?.defaultTable;\n  }\n\n  getDefaultLogsColumns(): Map<ColumnHint, string> {\n    const result = new Map<ColumnHint, string>();\n    const logsConfig = this.settings.jsonData.logs;\n    if (!logsConfig) {\n      return result;\n    }\n\n    const otelEnabled = logsConfig.otelEnabled;\n    const otelVersion = logsConfig.otelVersion;\n\n    const otelConfig = otel.getVersion(otelVersion);\n    if (otelEnabled && otelConfig) {\n      return otelConfig.logColumnMap;\n    }\n\n    logsConfig.timeColumn && result.set(ColumnHint.Time, logsConfig.timeColumn);\n    logsConfig.levelColumn && result.set(ColumnHint.LogLevel, logsConfig.levelColumn);\n    logsConfig.messageColumn && result.set(ColumnHint.LogMessage, logsConfig.messageColumn);\n\n    return result;\n  }\n\n  shouldSelectLogContextColumns(): boolean {\n    return this.settings.jsonData.logs?.selectContextColumns || false;\n  }\n\n  getLogContextColumnNames(): string[] {\n    return this.settings.jsonData.logs?.contextColumns || [];\n  }\n\n  /**\n   * Get configured OTEL version for logs. Returns undefined when versioning is disabled/unset.\n   */\n  getLogsOtelVersion(): string | undefined {\n    const logConfig = this.settings.jsonData.logs;\n    return logConfig?.otelEnabled ? (logConfig.otelVersion || undefined) : undefined;\n  }\n\n  getDefaultTraceDatabase(): string | undefined {\n    return this.settings.jsonData.traces?.defaultDatabase;\n  }\n\n  getDefaultTraceTable(): string | undefined {\n    return this.settings.jsonData.traces?.defaultTable;\n  }\n\n  getDefaultTraceColumns(): Map<ColumnHint, string> {\n    const result = new Map<ColumnHint, string>();\n    const traceConfig = this.settings.jsonData.traces;\n    if (!traceConfig) {\n      return result;\n    }\n\n    const otelEnabled = traceConfig.otelEnabled;\n    const otelVersion = traceConfig.otelVersion;\n\n    const otelConfig = otel.getVersion(otelVersion);\n    if (otelEnabled && otelConfig) {\n      return otelConfig.traceColumnMap;\n    }\n\n    traceConfig.traceIdColumn && result.set(ColumnHint.TraceId, traceConfig.traceIdColumn);\n    traceConfig.spanIdColumn && result.set(ColumnHint.TraceSpanId, traceConfig.spanIdColumn);\n    traceConfig.operationNameColumn && result.set(ColumnHint.TraceOperationName, traceConfig.operationNameColumn);\n    traceConfig.parentSpanIdColumn && result.set(ColumnHint.TraceParentSpanId, traceConfig.parentSpanIdColumn);\n    traceConfig.serviceNameColumn && result.set(ColumnHint.TraceServiceName, traceConfig.serviceNameColumn);\n    traceConfig.durationColumn && result.set(ColumnHint.TraceDurationTime, traceConfig.durationColumn);\n    traceConfig.startTimeColumn && result.set(ColumnHint.Time, traceConfig.startTimeColumn);\n    traceConfig.tagsColumn && result.set(ColumnHint.TraceTags, traceConfig.tagsColumn);\n    traceConfig.serviceTagsColumn && result.set(ColumnHint.TraceServiceTags, traceConfig.serviceTagsColumn);\n    traceConfig.kindColumn && result.set(ColumnHint.TraceKind, traceConfig.kindColumn);\n    traceConfig.statusCodeColumn && result.set(ColumnHint.TraceStatusCode, traceConfig.statusCodeColumn);\n    traceConfig.statusMessageColumn && result.set(ColumnHint.TraceStatusMessage, traceConfig.statusMessageColumn);\n    traceConfig.instrumentationLibraryNameColumn && result.set(ColumnHint.TraceInstrumentationLibraryName, traceConfig.instrumentationLibraryNameColumn);\n    traceConfig.instrumentationLibraryVersionColumn && result.set(ColumnHint.TraceInstrumentationLibraryVersion, traceConfig.instrumentationLibraryVersionColumn);\n    traceConfig.stateColumn && result.set(ColumnHint.TraceState, traceConfig.stateColumn);\n\n    return result;\n  }\n\n  /**\n   * Get configured OTEL version for traces. Returns undefined when versioning is disabled/unset.\n   */\n  getTraceOtelVersion(): string | undefined {\n    const traceConfig = this.settings.jsonData.traces;\n    return traceConfig?.otelEnabled ? (traceConfig.otelVersion || undefined) : undefined;\n  }\n\n  getDefaultTraceDurationUnit(): TimeUnit {\n    return this.settings.jsonData.traces?.durationUnit as TimeUnit || TimeUnit.Nanoseconds;\n  }\n\n  getDefaultTraceFlattenNested(): boolean {\n    return this.settings.jsonData.traces?.flattenNested || false;\n  }\n\n  getDefaultTraceEventsColumnPrefix(): string {\n    return this.settings.jsonData.traces?.traceEventsColumnPrefix || 'Events';\n  }\n\n  getDefaultTraceLinksColumnPrefix(): string {\n    return this.settings.jsonData.traces?.traceLinksColumnPrefix || 'Links';\n  }\n\n  async fetchDatabases(): Promise<string[]> {\n    return this.fetchData('SHOW DATABASES');\n  }\n\n  async fetchTables(db?: string): Promise<string[]> {\n    const rawSql = db ? `SHOW TABLES FROM \"${db}\"` : 'SHOW TABLES';\n    return this.fetchData(rawSql);\n  }\n\n  /**\n   * Used to populate suggestions in the filter editor for Map columns.\n   * \n   * Samples rows to get a unique set of keys for the map.\n   * May not include ALL keys for a given dataset.\n   * \n   * TODO: This query can be slow/expensive\n   */\n  async fetchUniqueMapKeys(mapColumn: string, db: string, table: string): Promise<string[]> {\n    const rawSql = `SELECT DISTINCT arrayJoin(${mapColumn}.keys) as keys FROM \"${db}\".\"${table}\" LIMIT 1000`;\n    return this.fetchData(rawSql);\n  }\n\n  async fetchEntities() {\n    return this.fetchTables();\n  }\n\n  async fetchFields(database: string, table: string): Promise<string[]> {\n    return this.fetchData(`DESC TABLE \"${database}\".\"${table}\"`);\n  }\n\n  /**\n   * Fetches JSON column suggestions for each specified JSON column.\n   */\n  async fetchPathsForJSONColumns(database: string | undefined, table: string, jsonColumnName: string): Promise<TableColumn[]> {\n    const prefix = Boolean(database) ? `\"${database}\".` : '';\n    const rawSql = `SELECT arrayJoin(distinctJSONPathsAndTypes(${jsonColumnName})) FROM ${prefix}\"${table}\" SETTINGS max_execution_time=10`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n\n    const view = new DataFrameView(frame);\n    const jsonPathsAndTypes: Array<[string, string]> = [];\n    for (let x of view) {\n      if (!x || !x[0]) {\n        continue;\n      }\n\n      const kv = JSON.parse(x[0]);\n      if (!kv.keys || !kv.values) {\n        continue;\n      }\n\n      jsonPathsAndTypes.push([kv.keys, kv.values]);\n    }\n\n    const columns: TableColumn[] = [];\n    for (let pathAndTypes of jsonPathsAndTypes) {\n      const path = pathAndTypes[0];\n      const types = pathAndTypes[1];\n      if (!path || !types || types.length === 0) {\n        continue;\n      }\n\n      columns.push({\n        name: `${jsonColumnName}.${path}`,\n        label: `${jsonColumnName}.${path}`,\n        type: types[0],\n        picklistValues: [],\n      })\n    }\n\n    return columns;\n  }\n\n  /**\n   * Fetches column suggestions from the table schema.\n   */\n  async fetchColumnsFromTable(database: string | undefined, table: string): Promise<TableColumn[]> {\n    const prefix = Boolean(database) ? `\"${database}\".` : '';\n    const rawSql = `DESC TABLE ${prefix}\"${table}\"`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    const columns: TableColumn[] = view.map(item => ({\n      name: item[0],\n      type: item[1],\n      label: item[0],\n      picklistValues: [],\n    }));\n\n    const results = await Promise.all(\n      columns\n        .filter(c => c.type.startsWith(\"JSON\"))\n        .map(c => this.fetchPathsForJSONColumns(database, table, c.name))\n    );\n\n    return [...columns, ...results.flat()];\n  }\n\n  /**\n   * Fetches SQL functions from server.\n   */\n  async fetchSqlFunctions(): Promise<SqlFunction[]> {\n    const rawSql = `\n      SELECT\n        name, is_aggregate, case_insensitive, alias_to, origin, description,\n        syntax, arguments, returned_value, examples, categories\n      FROM system.functions\n      LIMIT 10000\n    `;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    const sqlFunctions: SqlFunction[] = view.map(item => ({\n      name: String(item[0]),\n      isAggregate: Boolean(item[1]),\n      caseInsensitive: Boolean(item[2]),\n      aliasTo: String(item[3]),\n      origin: String(item[4]),\n      description: String(item[5]),\n      syntax: String(item[6]),\n      arguments: String(item[7]),\n      returnedValue: String(item[8]),\n      examples: String(item[9]),\n      categories: String(item[10]),\n    }));\n\n    return sqlFunctions;\n  }\n\n  /**\n   * Fetches column suggestions from an alias definition table.\n   */\n  async fetchColumnsFromAliasTable(fullTableName: string): Promise<TableColumn[]> {\n    const rawSql = `SELECT alias, select, \"type\" FROM ${fullTableName}`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const view = new DataFrameView(frame);\n    return view.map(item => ({\n      name: item[1],\n      type: item[2],\n      label: item[0],\n      picklistValues: [],\n    }));\n  }\n\n  getAliasTable(targetDatabase: string | undefined, targetTable: string): string | null {\n    const aliasEntries = this.settings?.jsonData?.aliasTables || [];\n    const matchedEntry = aliasEntries.find(e => {\n      const matchDatabase = !e.targetDatabase || (e.targetDatabase === targetDatabase);\n      const matchTable = e.targetTable === targetTable;\n      return matchDatabase && matchTable;\n    }) || null;\n\n    if (matchedEntry === null) {\n      return null;\n    }\n\n    const aliasDatabase = matchedEntry.aliasDatabase || targetDatabase || null;\n    const aliasTable = matchedEntry.aliasTable;\n    const prefix = Boolean(aliasDatabase) ? `\"${aliasDatabase}\".` : '';\n    return `${prefix}\"${aliasTable}\"`;\n  }\n\n  async fetchColumns(database: string | undefined, table: string): Promise<TableColumn[]> {\n    const fullAliasTableName = this.getAliasTable(database, table);\n    if (fullAliasTableName !== null) {\n      return this.fetchColumnsFromAliasTable(fullAliasTableName);\n    }\n\n    return this.fetchColumnsFromTable(database, table);\n  }\n\n  private async fetchData(rawSql: string) {\n    const frame = await this.runQuery({ rawSql });\n    return this.values(frame);\n  }\n\n  private getTimezone(request: DataQueryRequest<CHQuery>): string | undefined {\n    // timezone specified in the time picker\n    if (request.timezone && request.timezone !== 'browser') {\n      return request.timezone;\n    }\n    // fall back to the local timezone\n    const localTimezoneInfo = getTimeZoneInfo(getTimeZone(), Date.now());\n    return localTimezoneInfo?.ianaName;\n  }\n\n  query(request: DataQueryRequest<CHQuery>): Observable<DataQueryResponse> {\n    const targets = request.targets\n      // filters out queries disabled in UI\n      .filter((t) => t.hide !== true)\n      // attach timezone information\n      .map((t) => {\n        return {\n          ...t,\n          meta: {\n            ...t?.meta,\n            timezone: this.getTimezone(request),\n          },\n        };\n      });\n\n    return super.query({\n      ...request,\n      targets,\n    }).pipe(map((res: DataQueryResponse) => transformQueryResponseWithTraceAndLogLinks(this, request, res)));\n  }\n\n  private runQuery(request: Partial<CHQuery>, options?: any): Promise<DataFrame> {\n    return new Promise((resolve) => {\n      const req = {\n        targets: [{ ...request, refId: String(Math.random()) }],\n        range: options ? options.range : (getTemplateSrv() as any).timeRange,\n      } as DataQueryRequest<CHQuery>;\n      this.query(req).subscribe((res: DataQueryResponse) => {\n        resolve(res.data[0] || { fields: [] });\n      });\n    });\n  }\n\n  private values(frame: DataFrame) {\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    return frame?.fields[0]?.values.map((text) => text);\n  }\n\n  async getTagKeys(): Promise<MetricFindValue[]> {\n    if (this.adHocFiltersStatus === AdHocFilterStatus.disabled || this.adHocFiltersStatus === AdHocFilterStatus.none) {\n      this.adHocFiltersStatus = await this.canUseAdhocFilters();\n      if (this.adHocFiltersStatus === AdHocFilterStatus.disabled) {\n        return {} as MetricFindValue[];\n      }\n    }\n    const { type, frame } = await this.fetchTags();\n    if (type === TagType.query) {\n      return frame.fields.map((f) => ({ text: f.name }));\n    }\n    const view = new DataFrameView(frame);\n    return view.map((item) => ({\n      text: `${item[2]}.${item[0]}`,\n    }));\n  }\n\n  async getTagValues({ key }: any): Promise<MetricFindValue[]> {\n    const { type } = this.getTagSource();\n    this.skipAdHocFilter = true;\n    if (type === TagType.query) {\n      return this.fetchTagValuesFromQuery(key);\n    }\n    return this.fetchTagValuesFromSchema(key);\n  }\n\n  private async fetchTagValuesFromSchema(key: string): Promise<MetricFindValue[]> {\n    const { from } = this.getTagSource();\n    const [table, col] = key.split('.');\n    const source = from?.includes('.') ? `${from.split('.')[0]}.${table}` : table;\n    const rawSql = `select distinct ${col} from ${source} limit 1000`;\n    const frame = await this.runQuery({ rawSql });\n    if (frame.fields?.length === 0) {\n      return [];\n    }\n    const field = frame.fields[0];\n    // Convert to string to avoid https://github.com/grafana/grafana/issues/12209\n    return field.values\n      .filter((value) => value !== null)\n      .map((value) => {\n        return { text: String(value) };\n      });\n  }\n\n  private async fetchTagValuesFromQuery(key: string): Promise<MetricFindValue[]> {\n    const { frame } = await this.fetchTags();\n    const field = frame.fields.find((f) => f.name === key);\n    if (field) {\n      // Convert to string to avoid https://github.com/grafana/grafana/issues/12209\n      return field.values\n        .filter((value) => value !== null)\n        .map((value) => {\n          return { text: String(value) };\n        });\n    }\n    return [];\n  }\n\n  private async fetchTags(): Promise<Tags> {\n    const tagSource = this.getTagSource();\n    this.skipAdHocFilter = true;\n\n    if (tagSource.source === undefined) {\n      const rawSql = 'SELECT name, type, table FROM system.columns';\n      const results = await this.runQuery({ rawSql });\n      return { type: TagType.schema, frame: results };\n    }\n\n    if (tagSource.type === TagType.query) {\n      this.adHocFilter.setTargetTableFromQuery(tagSource.source);\n    }\n\n    const results = await this.runQuery({ rawSql: tagSource.source });\n    return { type: tagSource.type, frame: results };\n  }\n\n  private getTagSource() {\n    // @todo https://github.com/grafana/grafana/issues/13109\n    const ADHOC_VAR = '$clickhouse_adhoc_query';\n    const defaultDatabase = this.getDefaultDatabase();\n    let source = getTemplateSrv().replace(ADHOC_VAR);\n    if (source === ADHOC_VAR && isEmpty(defaultDatabase)) {\n      return { type: TagType.schema, source: undefined };\n    }\n    source = source === ADHOC_VAR ? defaultDatabase! : source;\n    if (source.toLowerCase().startsWith('select')) {\n      return { type: TagType.query, source };\n    }\n    if (!source.includes('.')) {\n      const sql = `SELECT name, type, table FROM system.columns WHERE database IN ('${source}')`;\n      return { type: TagType.schema, source: sql, from: source };\n    }\n    const [db, table] = source.split('.');\n    const sql = `SELECT name, type, table FROM system.columns WHERE database IN ('${db}') AND table = '${table}'`;\n    return { type: TagType.schema, source: sql, from: source };\n  }\n\n  // Returns true if ClickHouse's version is greater than or equal to 22.7\n  // 22.7 added 'settings additional_table_filters' which is used for ad hoc filters\n  private async canUseAdhocFilters(): Promise<AdHocFilterStatus> {\n    this.skipAdHocFilter = true;\n    const data = await this.fetchData(`SELECT version()`);\n    try {\n      const verString = (data[0] as unknown as string).split('.');\n      const ver = { major: Number.parseInt(verString[0], 10), minor: Number.parseInt(verString[1], 10) };\n      return ver.major > this.adHocCHVerReq.major ||\n        (ver.major === this.adHocCHVerReq.major && ver.minor >= this.adHocCHVerReq.minor)\n        ? AdHocFilterStatus.enabled\n        : AdHocFilterStatus.disabled;\n    } catch (err) {\n      console.error(`Unable to parse ClickHouse version: ${err}`);\n      throw err;\n    }\n  }\n\n  // interface DataSourceWithLogsContextSupport\n  getLogContextColumnsFromLogRow(row: LogRowModel): LogContextColumn[] {\n    const contextColumnNames = this.getLogContextColumnNames();\n    const contextColumns: LogContextColumn[] = [];\n\n    for (let columnName of contextColumnNames) {\n      const isMapKey = columnName.includes('[\\'') && columnName.includes('\\']');\n      let mapName = '';\n      let keyName = '';\n      if (isMapKey) {\n        mapName = columnName.substring(0, columnName.indexOf('['));\n        keyName = columnName.substring(columnName.indexOf('[\\'') + 2, columnName.lastIndexOf('\\']'));\n      }\n\n      const field = row.dataFrame.fields.find(f => (\n        // exact column name match\n        f.name === columnName ||\n        (isMapKey && (\n          // entire map was selected\n          f.name === mapName ||\n           // single key was selected from map\n          f.name === `arrayElement(${mapName}, '${keyName}')`\n        ))\n      ));\n      if (!field) {\n        continue;\n      }\n\n      let value = field.values.get(row.rowIndex);\n      if (value && field.type === 'other' && isMapKey) {\n        value = value[keyName];\n      }\n\n      if (!value) {\n        continue;\n      }\n\n      let contextColumnName: string;\n      if (isMapKey) {\n        contextColumnName = `${mapName}['${keyName}']`;\n      } else {\n        contextColumnName = columnName;\n      }\n\n      contextColumns.push({\n        name: contextColumnName,\n        value\n      });\n    }\n\n    return contextColumns;\n  }\n\n\n  /**\n   * Runs a query based on a single log row and a direction (forward/backward)\n   * \n   * Will remove all filters and ORDER BYs, and will re-add them based on the configured context columns.\n   * Context columns are used to narrow down to a single logging unit as defined by your logging infrastructure.\n   * Typically this will be a single service, or container/pod in docker/k8s.\n   * \n   * If no context columns can be matched from the selected data frame, then the query is not run.\n   */\n  async getLogRowContext(row: LogRowModel, options?: LogRowContextOptions, query?: CHQuery | undefined, cacheFilters?: boolean): Promise<DataQueryResponse> {\n    if (!query) {\n      throw new Error('Missing query for log context');\n    } else if (!options || !options.direction || options.limit === undefined) {\n      throw new Error('Missing log context options for query');\n    } else if (query.editorType === EditorType.SQL || !query.builderOptions) {\n      throw new Error('Log context feature only works for builder queries');\n    }\n\n    const contextQuery = cloneDeep(query);\n    contextQuery.refId = '';\n    const builderOptions = contextQuery.builderOptions;\n    builderOptions.limit = options.limit;\n\n    if (!getColumnByHint(builderOptions, ColumnHint.Time)) {\n      throw new Error('Missing time column for log context');\n    }\n\n    builderOptions.orderBy = [];\n    builderOptions.orderBy.push({\n      name: '',\n      hint: ColumnHint.Time,\n      dir: options.direction === LogRowContextQueryDirection.Forward ? OrderByDirection.ASC : OrderByDirection.DESC\n    });\n\n    builderOptions.filters = [];\n    builderOptions.filters.push({\n      operator: options.direction === LogRowContextQueryDirection.Forward ? FilterOperator.GreaterThanOrEqual : FilterOperator.LessThanOrEqual,\n      filterType: 'custom',\n      hint: ColumnHint.Time,\n      key: '',\n      value: `fromUnixTimestamp64Nano(${row.timeEpochNs})`,\n      type: 'datetime',\n      condition: 'AND'\n    });\n\n    const contextColumns = this.getLogContextColumnsFromLogRow(row);\n    if (contextColumns.length < 1) {\n      throw new Error('Unable to match any log context columns');\n    }\n\n    const contextColumnFilters: Filter[] = contextColumns.map(c => ({\n      operator: FilterOperator.Equals,\n      filterType: 'custom',\n      key: c.name,\n      value: c.value,\n      type: 'string',\n      condition: 'AND'\n    }));\n    builderOptions.filters.push(...contextColumnFilters);\n\n    contextQuery.rawSql = generateSql(builderOptions);\n    const req = {\n      targets: [contextQuery],\n    } as DataQueryRequest<CHQuery>;\n\n    return await firstValueFrom(this.query(req));\n  }\n\n  /**\n   * Unused + deprecated but required by interface, log context button is always visible now\n   * https://github.com/grafana/grafana/issues/66819\n   */\n  showContextToggle(row?: LogRowModel): boolean {\n    return true;\n  }\n  \n  /**\n   * Returns a React component that is displayed in the top portion of the log context panel\n   */\n  getLogRowContextUi(row: LogRowModel, runContextQuery?: (() => void) | undefined, query?: CHQuery | undefined): ReactNode {\n    const contextColumns = this.getLogContextColumnsFromLogRow(row);\n    return createReactElement(LogsContextPanel, { columns: contextColumns, datasourceUid: this.uid });\n  }\n}\n\nenum TagType {\n  query,\n  schema,\n}\n\nenum AdHocFilterStatus {\n  none = 0,\n  enabled,\n  disabled,\n}\n\ninterface Tags {\n  type?: TagType;\n  frame: DataFrame;\n}\n\nexport interface LogContextColumn {\n  name: string;\n  value: string;\n}\n","import React, { ChangeEvent, MouseEvent, FC } from 'react';\nimport { Input, Button, TextArea, Field } from '@grafana/ui';\n\ninterface Props {\n  label: string;\n  hasCert: boolean;\n  placeholder: string;\n  onChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const CertificationKey: FC<Props> = ({ hasCert, label, onChange, onClick, placeholder }) => {\n  return (\n    <Field label={label}>\n      {hasCert ? (\n        <>\n          <Input type=\"text\" disabled value=\"configured\" width={24} />\n          <Button variant=\"secondary\" onClick={onClick} style={{ marginLeft: 4 }}>\n            Reset\n          </Button>\n        </>\n      ) : (\n        <TextArea rows={7} onChange={onChange} placeholder={placeholder} required />\n      )}\n    </Field>\n  );\n};\n","import { DataSourceJsonData, KeyValue } from '@grafana/data';\n\nexport interface CHConfig extends DataSourceJsonData {\n  /**\n   * The version of the plugin this config was saved with\n   */\n  version: string;\n\n  host: string;\n  port: number;\n  protocol: Protocol;\n  secure?: boolean;\n  path?: string;\n\n  tlsSkipVerify?: boolean;\n  tlsAuth?: boolean;\n  tlsAuthWithCACert?: boolean;\n\n  username: string;\n\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  connMaxLifetime?: string;\n  dialTimeout?: string;\n  maxIdleConns?: string;\n  maxOpenConns?: string;\n  queryTimeout?: string;\n  validateSql?: boolean;\n\n  logs?: CHLogsConfig;\n  traces?: CHTracesConfig;\n\n  aliasTables?: AliasTableEntry[];\n\n  httpHeaders?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n\n  customSettings?: CHCustomSetting[];\n  enableSecureSocksProxy?: boolean;\n}\n\ninterface CHSecureConfigProperties {\n  password?: string;\n\n  tlsCACert?: string;\n  tlsClientCert?: string;\n  tlsClientKey?: string;\n}\nexport type CHSecureConfig = CHSecureConfigProperties | KeyValue<string>;\n\nexport interface CHHttpHeader {\n  name: string;\n  value: string;\n  secure: boolean;\n}\n\nexport interface CHCustomSetting {\n  setting: string;\n  value: string;\n}\n\nexport interface CHLogsConfig {\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  otelEnabled?: boolean;\n  otelVersion?: string;\n\n  timeColumn?: string;\n  levelColumn?: string;\n  messageColumn?: string;\n\n  selectContextColumns?: boolean;\n  contextColumns?: string[];\n}\n\nexport interface CHTracesConfig {\n  defaultDatabase?: string;\n  defaultTable?: string;\n\n  otelEnabled?: boolean;\n  otelVersion?: string;\n\n  traceIdColumn?: string;\n  spanIdColumn?: string;\n  operationNameColumn?: string;\n  parentSpanIdColumn?: string;\n  serviceNameColumn?: string;\n  durationColumn?: string;\n  durationUnit?: string;\n  startTimeColumn?: string;\n  tagsColumn?: string;\n  serviceTagsColumn?: string;\n  kindColumn?: string;\n  statusCodeColumn?: string;\n  statusMessageColumn?: string;\n  stateColumn?: string;\n  instrumentationLibraryNameColumn?: string;\n  instrumentationLibraryVersionColumn?: string;\n\n  flattenNested?: boolean;\n  traceEventsColumnPrefix?: string;\n  traceLinksColumnPrefix?: string;\n}\n\nexport interface AliasTableEntry {\n  targetDatabase: string;\n  targetTable: string;\n  aliasDatabase: string;\n  aliasTable: string;\n}\n\nexport enum Protocol {\n  Native = 'native',\n  Http = 'http',\n}\n","import React, { useState, ReactNode } from 'react';\nimport { css } from '@emotion/css';\nimport { useTheme2, IconButton, IconName } from '@grafana/ui';\n\nexport type Props = {\n  title: string;\n  description?: ReactNode;\n  isCollapsible?: boolean;\n  isInitiallyOpen?: boolean;\n  kind?: 'section' | 'sub-section';\n  className?: string;\n  children: ReactNode;\n};\n\nexport const GenericConfigSection = ({\n  children,\n  title,\n  description,\n  isCollapsible = false,\n  isInitiallyOpen = true,\n  kind = 'section',\n  className,\n}: Props) => {\n  const { colors, typography, spacing } = useTheme2();\n  const [isOpen, setIsOpen] = useState(isCollapsible ? isInitiallyOpen : true);\n  const iconName: IconName = isOpen ? 'angle-up' : 'angle-down';\n  const isSubSection = kind === 'sub-section';\n  const collapsibleButtonAriaLabel = `${isOpen ? 'Collapse' : 'Expand'} section ${title}`;\n\n  const styles = {\n    header: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }),\n    title: css({\n      margin: 0,\n    }),\n    subtitle: css({\n      margin: 0,\n      fontWeight: typography.fontWeightRegular,\n    }),\n    descriptionText: css({\n      marginTop: spacing(isSubSection ? 0.25 : 0.5),\n      marginBottom: 0,\n      ...typography.bodySmall,\n      color: colors.text.secondary,\n    }),\n    content: css({\n      marginTop: spacing(2),\n    }),\n  };\n\n  return (\n    <div className={className}>\n      <div className={styles.header}>\n        {kind === 'section' ? <h3 className={styles.title}>{title}</h3> : <h6 className={styles.subtitle}>{title}</h6>}\n        {isCollapsible && (\n          <IconButton\n            name={iconName}\n            onClick={() => setIsOpen(!isOpen)}\n            type=\"button\"\n            size=\"xl\"\n            aria-label={collapsibleButtonAriaLabel}\n          />\n        )}\n      </div>\n      {description && <p className={styles.descriptionText}>{description}</p>}\n      {isOpen && <div className={styles.content}>{children}</div>}\n    </div>\n  );\n};\n","import React from 'react';\nimport { GenericConfigSection, Props as GenericConfigSectionProps } from './GenericConfigSection';\n\ntype Props = Omit<GenericConfigSectionProps, 'kind'>;\n\nexport const ConfigSection = ({ children, ...props }: Props) => {\n  return (\n    <GenericConfigSection {...props} kind=\"section\">\n      {children}\n    </GenericConfigSection>\n  );\n};\n","import React from 'react';\nimport { GenericConfigSection, Props as GenericConfigSectionProps } from './GenericConfigSection';\n\ntype Props = Omit<GenericConfigSectionProps, 'kind'>;\n\nexport const ConfigSubSection = ({ children, ...props }: Props) => {\n  return (\n    <GenericConfigSection {...props} kind=\"sub-section\">\n      {children}\n    </GenericConfigSection>\n  );\n};\n","import React from 'react';\nimport { cx, css } from '@emotion/css';\nimport { useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  dataSourceName: string;\n  docsLink: string;\n  hasRequiredFields?: boolean;\n  className?: string;\n};\n\nexport const DataSourceDescription = ({ dataSourceName, docsLink, hasRequiredFields = true, className }: Props) => {\n  const theme = useTheme2();\n\n  const styles = {\n    container: css({\n      p: {\n        margin: 0,\n      },\n      'p + p': {\n        marginTop: theme.spacing(2),\n      },\n    }),\n    text: css({\n      ...theme.typography.body,\n      color: theme.colors.text.secondary,\n      a: css({\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecoration: 'none',\n        },\n      }),\n    }),\n  };\n\n  return (\n    <div className={cx(styles.container, className)}>\n      <p className={styles.text}>\n        Before you can use the {dataSourceName} data source, you must configure it below or in the config file. For\n        detailed instructions,{' '}\n        <a href={docsLink} target=\"_blank\" rel=\"noreferrer\">\n          view the documentation\n        </a>\n        .\n      </p>\n      {hasRequiredFields && (\n        <p className={styles.text}>\n          <i>Fields marked with * are required</i>\n        </p>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Divider as GrafanaDivider, useTheme2 } from '@grafana/ui';\nimport { config } from '@grafana/runtime';\nimport { isVersionGtOrEq } from 'utils/version';\n\nexport function Divider() {\n  const theme = useTheme2();\n  return isVersionGtOrEq(config.buildInfo.version, '10.1.0') ? (\n    <GrafanaDivider />\n  ) : (\n    <div\n      style={{ borderTop: `1px solid ${theme.colors.border.weak}`, margin: theme.spacing(2, 0), width: '100%' }}\n    ></div>\n  );\n}\n","import { ColumnHint } from \"types/queryBuilder\";\n\nexport default {\n  components: {\n    Config: {\n      ConfigEditor: {\n        serverAddress: {\n          label: 'Server address',\n          placeholder: 'Server address',\n          tooltip: 'ClickHouse host address',\n          error: 'Server address required'\n        },\n        serverPort: {\n          label: 'Server port',\n          insecureNativePort: '9000',\n          insecureHttpPort: '8123',\n          secureNativePort: '9440',\n          secureHttpPort: '8443',\n          tooltip: 'ClickHouse server port',\n          error: 'Port is required'\n        },\n        path: {\n          label: 'HTTP URL Path',\n          tooltip: 'Additional URL path for HTTP requests',\n          placeholder: 'additional-path'\n        },\n        protocol: {\n          label: 'Protocol',\n          tooltip: 'Native or HTTP for server protocol',\n        },\n        username: {\n          label: 'Username',\n          placeholder: 'default',\n          tooltip: 'ClickHouse username',\n        },\n        password: {\n          label: 'Password',\n          placeholder: 'password',\n          tooltip: 'ClickHouse password',\n        },\n        tlsSkipVerify: {\n          label: 'Skip TLS Verify',\n          tooltip: 'Skip TLS Verify',\n        },\n        tlsClientAuth: {\n          label: 'TLS Client Auth',\n          tooltip: 'TLS Client Auth',\n        },\n        tlsAuthWithCACert: {\n          label: 'With CA Cert',\n          tooltip: 'Needed for verifying self-signed TLS Certs',\n        },\n        tlsCACert: {\n          label: 'CA Cert',\n          placeholder: 'CA Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientCert: {\n          label: 'Client Cert',\n          placeholder: 'Client Cert. Begins with -----BEGIN CERTIFICATE-----',\n        },\n        tlsClientKey: {\n          label: 'Client Key',\n          placeholder: 'Client Key. Begins with -----BEGIN RSA PRIVATE KEY-----',\n        },\n        secure: {\n          label: 'Secure Connection',\n          tooltip: 'Toggle on if the connection is secure',\n        },\n        secureSocksProxy: {\n          label: 'Enable Secure Socks Proxy',\n          tooltip: 'Enable proxying the datasource connection through the secure socks proxy to a different network.',\n        },\n      },\n      HttpHeadersConfig: {\n        title: 'HTTP Headers',\n        label: 'Custom HTTP Headers',\n        description: 'Add Custom HTTP headers when querying the database',\n        headerNameLabel: 'Header Name',\n        headerNamePlaceholder: 'X-Custom-Header',\n        insecureHeaderValueLabel: 'Header Value',\n        secureHeaderValueLabel: 'Secure Header Value',\n        secureLabel: 'Secure',\n        addHeaderLabel: 'Add Header',\n        forwardGrafanaHeaders: {\n          label: 'Forward Grafana HTTP Headers',\n          tooltip: 'Forward Grafana HTTP Headers to datasource.',\n        },\n      },\n      AliasTableConfig: {\n        title: 'Column Alias Tables',\n        descriptionParts: ['Provide alias tables with a', '(`alias` String, `select` String, `type` String)', 'schema to use as a source for column selection.'],\n        addTableLabel: 'Add Table',\n        targetDatabaseLabel: 'Target Database',\n        targetDatabasePlaceholder: '(optional)',\n        targetTableLabel: 'Target Table',\n        aliasDatabaseLabel: 'Alias Database',\n        aliasDatabasePlaceholder: '(optional)',\n        aliasTableLabel: 'Alias Table',\n      },\n\n      DefaultDatabaseTableConfig: {\n        title: 'Default DB and table',\n        database: {\n          label: 'Default database',\n          description: 'the default database used by the query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default'\n        },\n        table: {\n          label: 'Default table',\n          description: 'the default table used by the query builder',\n          name: 'defaultTable',\n          placeholder: 'table'\n        },\n      },\n      QuerySettingsConfig: {\n        title: 'Query settings',\n        connMaxLifetime: {\n          label: 'Connection Max Lifetime (minutes)',\n          name: 'connMaxLifetime',\n          placeholder: '5',\n          tooltip: 'Maximum lifetime of a connection in minutes'\n        },\n        dialTimeout: {\n          label: 'Dial Timeout (seconds)',\n          name: 'dialTimeout',\n          placeholder: '10',\n          tooltip: 'Timeout in seconds for connection'\n        },\n        maxIdleConns: {\n          label: 'Max Idle Connections',\n          name: 'maxIdleConns',\n          placeholder: '25',\n          tooltip: 'Maximum number of idle connections'\n        },\n        maxOpenConns: {\n          label: 'Max Open Connections',\n          name: 'maxOpenConns',\n          placeholder: '50',\n          tooltip: 'Maximum number of open connections'\n        },\n        queryTimeout: {\n          label: 'Query Timeout (seconds)',\n          name: 'queryTimeout',\n          placeholder: '60',\n          tooltip: 'Timeout in seconds for read queries'\n        },\n        validateSql: {\n          label: 'Validate SQL',\n          tooltip: 'Validate SQL in the editor.'\n        }\n      },\n      TracesConfig: {\n        title: 'Traces configuration',\n        description: '(Optional) Default settings for trace queries',\n        defaultDatabase: {\n          label: 'Default trace database',\n          description: 'the default database used by the trace query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default'\n        },\n        defaultTable: {\n          label: 'Default trace table',\n          description: 'the default table used by the trace query builder',\n          name: 'defaultTable'\n        },\n        columns: {\n         title: 'Default columns',\n         description: 'Default columns for trace queries. Leave empty to disable.',\n         \n         traceId: {\n          label: 'Trace ID column',\n          tooltip: 'Column for the trace ID'\n          },\n          spanId: {\n            label: 'Span ID column',\n            tooltip: 'Column for the span ID'\n          },\n          parentSpanId: {\n            label: 'Parent Span ID column',\n            tooltip: 'Column for the parent span ID'\n          },\n          serviceName: {\n            label: 'Service Name column',\n            tooltip: 'Column for the service name'\n          },\n          operationName: {\n            label: 'Operation Name column',\n            tooltip: 'Column for the operation name'\n          },\n          startTime: {\n            label: 'Start Time column',\n            tooltip: 'Column for the start time'\n          },\n          durationTime: {\n            label: 'Duration Time column',\n            tooltip: 'Column for the duration time'\n          },\n          tags: {\n            label: 'Tags column',\n            tooltip: 'Column for the trace tags'\n          },\n          serviceTags: {\n            label: 'Service Tags column',\n            tooltip: 'Column for the service tags'\n          },\n          flattenNested: {\n            label: 'Use Flatten Nested',\n            tooltip: 'Enable if your traces table was created with flatten_nested=1',\n          },\n          eventsPrefix: {\n            label: 'Events prefix',\n            tooltip: 'Prefix for the events column (Events.Timestamp, Events.Name, etc.)'\n          },\n          linksPrefix: {\n            label: 'Links prefix',\n            tooltip: 'Prefix for the trace references column (Links.TraceId, Links.TraceState, etc.)'\n          },\n          kind: {\n            label: 'Kind column',\n            tooltip: 'Column for the trace kind'\n          },\n          statusCode: {\n            label: 'Status Code column',\n            tooltip: 'Column for the trace status code'\n          },\n          statusMessage: {\n            label: 'Status Message column',\n            tooltip: 'Column for the trace status message'\n          },\n          instrumentationLibraryName: {\n            label: 'Library Name column',\n            tooltip: 'Column for the instrumentation library name'\n          },\n          instrumentationLibraryVersion: {\n            label: 'Library Version column',\n            tooltip: 'Column for the instrumentation library version'\n          },\n          state: {\n            label: 'State column',\n            tooltip: 'Column for the trace state'\n          }\n        }\n      },\n      LogsConfig: {\n        title: 'Logs configuration',\n        description: '(Optional) default settings for log queries',\n        defaultDatabase: {\n          label: 'Default log database',\n          description: 'the default database used by the logs query builder',\n          name: 'defaultDatabase',\n          placeholder: 'default'\n        },\n        defaultTable: {\n          label: 'Default log table',\n          description: 'the default table used by the logs query builder',\n          name: 'defaultTable'\n        },\n        columns: {\n          title: 'Default columns',\n          description: 'Default columns for log queries. Leave empty to disable.',\n          \n          time: {\n            label: 'Time column',\n            tooltip: 'Column for the log timestamp'\n          },\n          level: {\n            label: 'Log Level column',\n            tooltip: 'Column for the log level'\n          },\n          message: {\n            label: 'Log Message column',\n            tooltip: 'Column for log message'\n          }\n         },\n         contextColumns: {\n          title: 'Context columns',\n          description: 'These columns are used to narrow down a single log row to its original service/container/pod source. At least one is required for the log context feature to work.',\n\n          selectContextColumns: {\n            label: 'Auto-Select Columns',\n            tooltip: 'When enabled, will always include context columns in log queries'\n          },\n          columns: {\n            label: 'Context Columns',\n            tooltip: 'Comma separated list of column names to use for identifying a log\\'s source',\n            placeholder: 'Column name (enter key to add)'\n          },\n         }\n      }\n    },\n    EditorTypeSwitcher: {\n      label: 'Editor Type',\n      tooltip: 'Switches between the raw SQL Editor and the Query Builder.',\n      switcher: {\n        title: 'Are you sure?',\n        body: 'Queries that are too complex for the Query Builder will be altered.',\n        confirmText: 'Continue',\n        dismissText: 'Cancel',\n      },\n      cannotConvert: {\n        title: 'Cannot convert',\n        message: 'Do you want to delete your current query and use the query builder?',\n        confirmText: 'Yes',\n      },\n    },\n    expandBuilderButton: {\n      label: 'Show full query',\n      tooltip: 'Shows the full query builder'\n    },\n    QueryTypeSwitcher: {\n      label: 'Query Type',\n      tooltip: 'Sets the layout for the query builder',\n      sqlTooltip: 'Sets the panel type for explore view'\n    },\n    DatabaseSelect: {\n      label: 'Database',\n      tooltip: 'ClickHouse database to query from',\n      empty: '<select database>',\n    },\n    TableSelect: {\n      label: 'Table',\n      tooltip: 'ClickHouse table to query from',\n      empty: '<select table>',\n    },\n    ColumnsEditor: {\n      label: 'Columns',\n      tooltip: 'A list of columns to include in the query'\n    },\n    OtelVersionSelect: {\n      label: 'Use OTel',\n      tooltip: 'Enables Open Telemetry schema versioning'\n    },\n    LimitEditor: {\n      label: 'Limit',\n      tooltip: 'Limits the number of rows returned by the query'\n    },\n    SqlPreview: {\n      label: 'SQL Preview',\n      tooltip: 'Preview of the generated SQL. You can safely switch to SQL Editor to customize the generated query',\n    },\n    AggregatesEditor: {\n      label: 'Aggregates',\n      tooltip: 'Aggregate functions to use',\n      aliasLabel: 'as',\n      aliasTooltip: 'alias for this aggregate function',\n      addLabel: 'Aggregate',\n    },\n    OrderByEditor: {\n      label: 'Order By',\n      tooltip: 'Order by column',\n      addLabel: 'Order By',\n    },\n    FilterEditor: {\n      label: 'Filters',\n      tooltip: `List of filters`,\n      addLabel: 'Filter',\n      mapKeyPlaceholder: 'map key'\n    },\n    GroupByEditor: {\n      label: 'Group By',\n      tooltip: 'Group the results by specific column',\n    },\n    LogsQueryBuilder: {\n      logTimeColumn: {\n        label: 'Time',\n        tooltip: 'Column that contains the log timestamp'\n      },\n      logLevelColumn: {\n        label: 'Log Level',\n        tooltip: 'Column that contains the log level'\n      },\n      logMessageColumn: {\n        label: 'Message',\n        tooltip: 'Column that contains the log message'\n      },\n      logLabelsColumn: {\n        label: 'Labels',\n        tooltip: 'A column with a key/value structure for log labels'\n      },\n      liveView: {\n        label: 'Live View',\n        tooltip: 'Enable to update logs in real time'\n      },\n      logMessageFilter: {\n        label: 'Message Filter',\n        tooltip: 'Applies a LIKE filter to the log message body',\n        clearButton: 'Clear'\n      },\n      logLevelFilter: {\n        label: 'Level Filter',\n        tooltip: 'Applies a filter to the log level'\n      },\n    },\n    TimeSeriesQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n      timeColumn: {\n        label: 'Time',\n        tooltip: 'Column to use for the time series'\n      },\n    },\n    TableQueryBuilder: {\n      simpleQueryModeLabel: 'Simple',\n      aggregateQueryModeLabel: 'Aggregate',\n      builderModeLabel: 'Builder Mode',\n      builderModeTooltip: 'Switches the query builder between the simple and aggregate modes',\n    },\n    TraceQueryBuilder: {\n      traceIdModeLabel: 'Trace ID',\n      traceSearchModeLabel: 'Trace Search',\n      traceModeLabel: 'Trace Mode',\n      traceModeTooltip: 'Switches between trace ID and trace search mode',\n      columnsSection: 'Columns',\n      filtersSection: 'Filters',\n\n      columns: {\n        traceId: {\n          label: 'Trace ID Column',\n          tooltip: 'Column that contains the trace ID'\n        },\n        spanId: {\n          label: 'Span ID Column',\n          tooltip: 'Column that contains the span ID'\n        },\n        parentSpanId: {\n          label: 'Parent Span ID Column',\n          tooltip: 'Column that contains the parent span ID'\n        },\n        serviceName: {\n          label: 'Service Name Column',\n          tooltip: 'Column that contains the service name'\n        },\n        operationName: {\n          label: 'Operation Name Column',\n          tooltip: 'Column that contains the operation name'\n        },\n        startTime: {\n          label: 'Start Time Column',\n          tooltip: 'Column that contains the start time'\n        },\n        durationTime: {\n          label: 'Duration Time Column',\n          tooltip: 'Column that contains the duration time'\n        },\n        durationUnit: {\n          label: 'Duration Unit',\n          tooltip: 'The unit of time used for the duration time'\n        },\n        tags: {\n          label: 'Tags Column',\n          tooltip: 'Column that contains the trace tags'\n        },\n        serviceTags: {\n          label: 'Service Tags Column',\n          tooltip: 'Column that contains the service tags'\n        },\n        flattenNested: {\n          label: 'Use Flatten Nested',\n          tooltip: 'Enable if your traces table was created with flatten_nested=1',\n        },\n        eventsPrefix: {\n          label: 'Events Prefix',\n          tooltip: 'Prefix for the events column'\n        },\n        linksPrefix: {\n          label: 'Links Prefix',\n          tooltip: 'Prefix for the trace references column'\n        },\n        kind: {\n          label: 'Kind Column',\n          tooltip: 'Column that contains the trace kind'\n        },\n        statusCode: {\n          label: 'Status Code Column',\n          tooltip: 'Column that contains the trace status code'\n        },\n        statusMessage: {\n          label: 'Status Message Column',\n          tooltip: 'Column that contains the trace status message'\n        },\n        instrumentationLibraryName: {\n          label: 'Library Name Column',\n          tooltip: 'Column that contains the instrumentation library name (Optional)'\n        },\n        instrumentationLibraryVersion: {\n          label: 'Library Version Column',\n          tooltip: 'Column that contains the instrumentation library version (Optional)'\n        },\n        state: {\n          label: 'State Column',\n          tooltip: 'Column that contains the trace state'\n        },\n        traceIdFilter: {\n          label: 'Trace ID',\n          tooltip: 'filter by a specific trace ID'\n        },\n      },\n    }\n  },\n  types: {\n    EditorType: {\n      sql: 'SQL Editor',\n      builder: 'Query Builder',\n    },\n    QueryType: {\n      table: 'Table',\n      logs: 'Logs',\n      timeseries: 'Time Series',\n      traces: 'Traces',\n    },\n    ColumnHint: {\n      [ColumnHint.Time]: 'Time',\n\n      [ColumnHint.LogLevel]: 'Level',\n      [ColumnHint.LogMessage]: 'Message',\n      [ColumnHint.LogLabels]: 'Labels',\n\n      [ColumnHint.TraceId]: 'Trace ID',\n      [ColumnHint.TraceSpanId]: 'Span ID',\n      [ColumnHint.TraceParentSpanId]: 'Parent Span ID',\n      [ColumnHint.TraceServiceName]: 'Service Name',\n      [ColumnHint.TraceOperationName]: 'Operation Name',\n      [ColumnHint.TraceDurationTime]: 'Duration Time',\n      [ColumnHint.TraceTags]: 'Tags',\n      [ColumnHint.TraceServiceTags]: 'Service Tags',\n      [ColumnHint.TraceStatusCode]: 'Status Code',\n      [ColumnHint.TraceKind]: 'Kind',\n      [ColumnHint.TraceStatusMessage]: 'Status Message',\n      [ColumnHint.TraceInstrumentationLibraryName]: 'Instrumentation Library Name',\n      [ColumnHint.TraceInstrumentationLibraryVersion]: 'Instrumentation Library Version',\n      [ColumnHint.TraceState]: 'State',\n    }\n  }\n}\n","import React, { SyntheticEvent } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport allLabels from 'labels';\n\ninterface DefaultDatabaseTableConfigProps {\n  defaultDatabase?: string;\n  defaultTable?: string;\n  onDefaultDatabaseChange: (e: SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;\n  onDefaultTableChange: (e: SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;\n}\n\nexport const DefaultDatabaseTableConfig = (props: DefaultDatabaseTableConfigProps) => {\n  const { defaultDatabase, defaultTable, onDefaultDatabaseChange, onDefaultTableChange } = props;\n  const labels = allLabels.components.Config.DefaultDatabaseTableConfig;\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field\n        label={labels.database.label}\n        description={labels.database.description}\n      >\n        <Input\n          name={labels.database.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={onDefaultDatabaseChange}\n          label={labels.database.label}\n          aria-label={labels.database.label}\n          placeholder={labels.database.placeholder}\n          type=\"text\"\n        />\n      </Field>\n      <Field\n        label={labels.table.label}\n        description={labels.table.description}\n      >\n        <Input\n          name={labels.table.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={onDefaultTableChange}\n          label={labels.table.label}\n          aria-label={labels.table.label}\n          placeholder={labels.table.placeholder}\n          type=\"text\"\n        />\n      </Field>\n    </ConfigSection>\n  );\n}\n","import React, { FormEvent } from 'react';\nimport { Switch, Input, Field } from '@grafana/ui';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport allLabels from 'labels';\n\ninterface QuerySettingsConfigProps {\n  connMaxLifetime?: string;\n  dialTimeout?: string;\n  maxIdleConns?: string;\n  maxOpenConns?: string;\n  queryTimeout?: string;\n  validateSql?: boolean;\n  onConnMaxIdleConnsChange: (e: FormEvent<HTMLInputElement>) => void;\n  onConnMaxLifetimeChange: (e: FormEvent<HTMLInputElement>) => void;\n  onConnMaxOpenConnsChange: (e: FormEvent<HTMLInputElement>) => void;\n  onDialTimeoutChange: (e: FormEvent<HTMLInputElement>) => void;\n  onQueryTimeoutChange: (e: FormEvent<HTMLInputElement>) => void;\n  onValidateSqlChange: (e: FormEvent<HTMLInputElement>) => void;\n}\n\nexport const QuerySettingsConfig = (props: QuerySettingsConfigProps) => {\n  const {\n    connMaxLifetime,\n    dialTimeout,\n    maxIdleConns,\n    maxOpenConns,\n    queryTimeout,\n    validateSql,\n    onConnMaxIdleConnsChange,\n    onConnMaxLifetimeChange,\n    onConnMaxOpenConnsChange,\n    onDialTimeoutChange,\n    onQueryTimeoutChange,\n    onValidateSqlChange,\n  } = props;\n\n  const labels = allLabels.components.Config.QuerySettingsConfig;\n\n  return (\n    <ConfigSection title={labels.title}>\n      <Field label={labels.dialTimeout.label} description={labels.dialTimeout.tooltip}>\n        <Input\n          name={labels.dialTimeout.name}\n          width={40}\n          value={dialTimeout || ''}\n          onChange={onDialTimeoutChange}\n          label={labels.dialTimeout.label}\n          aria-label={labels.dialTimeout.label}\n          placeholder={labels.dialTimeout.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.queryTimeout.label} description={labels.queryTimeout.tooltip}>\n        <Input\n          name={labels.queryTimeout.name}\n          width={40}\n          value={queryTimeout || ''}\n          onChange={onQueryTimeoutChange}\n          label={labels.queryTimeout.label}\n          aria-label={labels.queryTimeout.label}\n          placeholder={labels.queryTimeout.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.connMaxLifetime.label} description={labels.connMaxLifetime.tooltip}>\n        <Input\n          name={labels.connMaxLifetime.name}\n          width={40}\n          value={connMaxLifetime || ''}\n          onChange={onConnMaxLifetimeChange}\n          label={labels.connMaxLifetime.label}\n          aria-label={labels.connMaxLifetime.label}\n          placeholder={labels.connMaxLifetime.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.maxIdleConns.label} description={labels.maxIdleConns.tooltip}>\n        <Input\n          name={labels.maxIdleConns.name}\n          width={40}\n          value={maxIdleConns || ''}\n          onChange={onConnMaxIdleConnsChange}\n          label={labels.maxIdleConns.label}\n          aria-label={labels.maxIdleConns.label}\n          placeholder={labels.maxIdleConns.placeholder}\n          type=\"number\"\n        />\n      </Field>\n      <Field label={labels.maxOpenConns.label} description={labels.maxOpenConns.tooltip}>\n        <Input\n          name={labels.maxOpenConns.name}\n          width={40}\n          value={maxOpenConns || ''}\n          onChange={onConnMaxOpenConnsChange}\n          label={labels.maxOpenConns.label}\n          aria-label={labels.maxOpenConns.label}\n          placeholder={labels.maxOpenConns.placeholder}\n          type=\"number\"\n        />\n      </Field>\n\n      <Field label={labels.validateSql.label} description={labels.validateSql.tooltip}>\n        <Switch className=\"gf-form\" value={validateSql || false} onChange={onValidateSqlChange} role=\"checkbox\" />\n      </Field>\n    </ConfigSection>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, Switch as GrafanaSwitch, useTheme } from '@grafana/ui';\nimport otel from 'otel';\nimport selectors from 'labels';\n\ninterface OtelVersionSelectProps {\n  enabled: boolean,\n  onEnabledChange: (enabled: boolean) => void,\n  selectedVersion: string,\n  onVersionChange: (version: string) => void,\n  wide?: boolean,\n}\n\nexport const OtelVersionSelect = (props: OtelVersionSelectProps) => {\n  const { enabled, onEnabledChange, selectedVersion, onVersionChange, wide } = props;\n  const { label, tooltip } = selectors.components.OtelVersionSelect;\n  const options: SelectableValue[] = otel.versions.map(v => ({\n    label: v.name,\n    value: v.version\n  }));\n\n  useEffect(() => {\n    // Use latest version if not set or doesn't exist (which may happen if config is broken)\n    if (selectedVersion === '' || !otel.getVersion(selectedVersion)) {\n      onVersionChange(otel.getLatestVersion().version);\n    }\n  }, [selectedVersion, onVersionChange]);\n\n  const theme = useTheme();\n  const switchContainerStyle: React.CSSProperties = {\n    padding: `0 ${theme.spacing.sm}`,\n    height: `${theme.spacing.formInputHeight}px`,\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div style={switchContainerStyle}>\n        <GrafanaSwitch\n          className=\"gf-form\"\n          value={enabled}\n          onChange={e => onEnabledChange(e.currentTarget.checked)}\n          role=\"checkbox\"\n        />\n      </div>\n      <Select\n        disabled={!enabled}\n        options={options}\n        width={20}\n        onChange={e => onVersionChange(e.value)}\n        value={selectedVersion}\n        menuPlacement={'bottom'}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input, InlineFormLabel } from '@grafana/ui';\n\ninterface LabeledInputProps {\n  label: string;\n  tooltip?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  value: string;\n  onChange: (value: string) => void;\n}\n\nexport function LabeledInput(props: LabeledInputProps) {\n  const { label, tooltip, placeholder, disabled, value, onChange } = props;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={12} className=\"query-keyword\" tooltip={tooltip || label}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        disabled={disabled}\n        width={30}\n        value={value}\n        onChange={e => onChange(e.currentTarget.value)}\n        placeholder={placeholder}\n      />\n    </div>\n  )\n}\n","import { css } from '@emotion/css';\n\nexport const styles = {\n  Common: {\n    check: css`\n      margin-top: 5px;\n    `,\n    wrapper: css`\n      position: relative;\n      width: 100%;\n    `,\n    smallBtn: css`\n      margin-top: 5px;\n      margin-inline: 5px;\n    `,\n    selectWrapper: css`\n      width: 100%;\n    `,\n    inlineSelect: css`\n      margin-right: 5px;\n    `,\n    firstLabel: css`\n      margin-right: 5px;\n    `,\n    expand: css`\n      position: absolute;\n      top: 2px;\n      left: 6px;\n      z-index: 100;\n      color: gray;\n    `,\n  },\n  ConfigEditor: {\n    container: css`\n      justify-content: space-between;\n      h5 {\n        line-height: 34px;\n        margin-bottom: 5px;\n      }\n      button {\n        margin-right: 5px;\n      }\n    `,\n    wide: css`\n      width: 75%;\n    `,\n    subHeader: css`\n      padding: 5px 0 5px 0;\n    `,\n  },\n  QueryEditor: {\n    queryType: css`\n      justify-content: space-between;\n      span {\n        display: flex;\n      }\n    `,\n    inlineField: css`\n      margin-left: 7px;\n    `\n  },\n  FormatSelector: {\n    formatSelector: css`\n      display: flex;\n    `,\n  },\n  VariablesEditor: {},\n};\n","import React from 'react';\nimport { InlineFormLabel, Switch as GrafanaSwitch, useTheme } from '@grafana/ui';\nimport { styles } from 'styles';\n\ninterface SwitchProps {\n  value: boolean;\n  onChange: (value: boolean) => void;\n  label: string;\n  tooltip: string;\n  disabled?: boolean;\n  inline?: boolean;\n  wide?: boolean;\n}\n\nexport const Switch = (props: SwitchProps) => {\n  const { value, onChange, label, tooltip, disabled, inline, wide } = props;\n\n  const theme = useTheme();\n  const switchContainerStyle: React.CSSProperties = {\n    padding: `0 ${theme.spacing.sm}`,\n    height: `${theme.spacing.formInputHeight}px`,\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  const labelStyle = 'query-keyword ' + (inline ? styles.QueryEditor.inlineField : '')\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className={labelStyle} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div style={switchContainerStyle}>\n        <GrafanaSwitch\n          disabled={disabled}\n          className=\"gf-form\"\n          value={value}\n          onChange={e => onChange(e.currentTarget.checked)}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ConfigSection, ConfigSubSection } from 'components/experimental/ConfigSection';\nimport { Input, Field, InlineFormLabel, TagsInput } from '@grafana/ui';\nimport { OtelVersionSelect } from 'components/queryBuilder/OtelVersionSelect';\nimport { ColumnHint } from 'types/queryBuilder';\nimport otel, { defaultLogsTable } from 'otel';\nimport { LabeledInput } from './LabeledInput';\nimport { CHLogsConfig } from 'types/config';\nimport allLabels from 'labels';\nimport { columnLabelToPlaceholder } from 'data/utils';\nimport { Switch } from 'components/queryBuilder/Switch';\n\ninterface LogsConfigProps {\n  logsConfig?: CHLogsConfig;\n  onDefaultDatabaseChange: (v: string) => void;\n  onDefaultTableChange: (v: string) => void;\n  onOtelEnabledChange: (v: boolean) => void;\n  onOtelVersionChange: (v: string) => void;\n  onTimeColumnChange: (v: string) => void;\n  onLevelColumnChange: (v: string) => void;\n  onMessageColumnChange: (v: string) => void;\n  onSelectContextColumnsChange: (v: boolean) => void;\n  onContextColumnsChange: (v: string[]) => void;\n}\n\nexport const LogsConfig = (props: LogsConfigProps) => {\n  const {\n    onDefaultDatabaseChange, onDefaultTableChange,\n    onOtelEnabledChange, onOtelVersionChange,\n    onTimeColumnChange, onLevelColumnChange, onMessageColumnChange,\n    onSelectContextColumnsChange, onContextColumnsChange\n  } = props;\n  let {\n    defaultDatabase, defaultTable,\n    otelEnabled, otelVersion,\n    timeColumn, levelColumn, messageColumn,\n    selectContextColumns, contextColumns\n  } = (props.logsConfig || {});\n  const labels = allLabels.components.Config.LogsConfig;\n\n  const otelConfig = otel.getVersion(otelVersion);\n  if (otelEnabled && otelConfig) {\n    timeColumn = otelConfig.logColumnMap.get(ColumnHint.Time);\n    levelColumn = otelConfig.logColumnMap.get(ColumnHint.LogLevel);\n    messageColumn = otelConfig.logColumnMap.get(ColumnHint.LogMessage);\n  }\n\n  const onContextColumnsChangeTrimmed = (columns: string[]) => onContextColumnsChange(columns.map(c => c.trim()).filter(c => c));\n\n  return (\n    <ConfigSection\n      title={labels.title}\n      description={labels.description}\n    >\n      <div id=\"logs-config\" />\n      <Field\n        label={labels.defaultDatabase.label}\n        description={labels.defaultDatabase.description}\n      >\n        <Input\n          name={labels.defaultDatabase.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={e => onDefaultDatabaseChange(e.currentTarget.value)}\n          label={labels.defaultDatabase.label}\n          aria-label={labels.defaultDatabase.label}\n          placeholder={labels.defaultDatabase.placeholder}\n        />\n      </Field>\n      <Field\n        label={labels.defaultTable.label}\n        description={labels.defaultTable.description}\n      >\n        <Input\n          name={labels.defaultTable.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={e => onDefaultTableChange(e.currentTarget.value)}\n          label={labels.defaultTable.label}\n          aria-label={labels.defaultTable.label}\n          placeholder={defaultLogsTable}\n        />\n      </Field>\n      <ConfigSubSection\n        title={labels.columns.title}\n        description={labels.columns.description}\n      >\n        <OtelVersionSelect\n          enabled={otelEnabled || false}\n          selectedVersion={otelVersion || ''}\n          onEnabledChange={onOtelEnabledChange}\n          onVersionChange={onOtelVersionChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.time.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.time.label)}\n          tooltip={labels.columns.time.tooltip}\n          value={timeColumn || ''}\n          onChange={onTimeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.level.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.level.label)}\n          tooltip={labels.columns.level.tooltip}\n          value={levelColumn || ''}\n          onChange={onLevelColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.message.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.message.label)}\n          tooltip={labels.columns.message.tooltip}\n          value={messageColumn || ''}\n          onChange={onMessageColumnChange}\n        />\n      </ConfigSubSection>\n      <br/>\n      <ConfigSubSection\n        title={labels.contextColumns.title}\n        description={labels.contextColumns.description}\n      >\n        <Switch\n          label={labels.contextColumns.selectContextColumns.label}\n          tooltip={labels.contextColumns.selectContextColumns.tooltip}\n          value={selectContextColumns || false}\n          onChange={onSelectContextColumnsChange}\n          wide\n        />\n        <div className=\"gf-form\">\n          <InlineFormLabel width={12} className=\"query-keyword\" tooltip={labels.contextColumns.columns.tooltip}>\n            {labels.contextColumns.columns.label}\n          </InlineFormLabel>\n          <TagsInput\n            placeholder={labels.contextColumns.columns.placeholder}\n            tags={contextColumns || []}\n            onChange={onContextColumnsChangeTrimmed}\n            width={60}\n          />\n        </div>\n      </ConfigSubSection>\n    </ConfigSection>\n  );\n}\n","import React from \"react\";\nimport { TimeUnit } from \"types/queryBuilder\";\nimport allLabels from 'labels';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { styles } from 'styles';\n\ninterface DurationUnitSelectProps {\n  unit: TimeUnit;\n  onChange: (u: TimeUnit) => void;\n  disabled?: boolean;\n  inline?: boolean;\n};\n\nconst durationUnitOptions: ReadonlyArray<SelectableValue<TimeUnit>> = [\n  { label: TimeUnit.Seconds, value: TimeUnit.Seconds },\n  { label: TimeUnit.Milliseconds, value: TimeUnit.Milliseconds },\n  { label: TimeUnit.Microseconds, value: TimeUnit.Microseconds },\n  { label: TimeUnit.Nanoseconds, value: TimeUnit.Nanoseconds },\n];\n\nexport const DurationUnitSelect = (props: DurationUnitSelectProps) => {\n  const { unit, onChange, disabled, inline } = props;\n  const { label, tooltip } = allLabels.components.TraceQueryBuilder.columns.durationUnit;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={12} className={`query-keyword ${inline ? styles.QueryEditor.inlineField : ''}`} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select<TimeUnit>\n        disabled={disabled}\n        options={durationUnitOptions as Array<SelectableValue<TimeUnit>>}\n        value={unit}\n        onChange={v => onChange(v.value!)}\n        width={inline ? 25 : 30}\n        menuPlacement={'bottom'}\n      />\n    </div>\n  );\n};\n","\nimport React from 'react';\nimport { ConfigSection, ConfigSubSection } from 'components/experimental/ConfigSection';\nimport { Input, Field } from '@grafana/ui';\nimport { OtelVersionSelect } from 'components/queryBuilder/OtelVersionSelect';\nimport { ColumnHint, TimeUnit } from 'types/queryBuilder';\nimport otel, { defaultTraceTable } from 'otel';\nimport { LabeledInput } from './LabeledInput';\nimport { DurationUnitSelect } from 'components/queryBuilder/DurationUnitSelect';\nimport { CHTracesConfig } from 'types/config';\nimport allLabels from 'labels';\nimport { columnLabelToPlaceholder } from 'data/utils';\nimport { Switch } from 'components/queryBuilder/Switch';\n\nexport interface TraceConfigProps {\n  tracesConfig?: CHTracesConfig;\n  onDefaultDatabaseChange: (v: string) => void;\n  onDefaultTableChange: (v: string) => void;\n  onOtelEnabledChange: (v: boolean) => void;\n  onOtelVersionChange: (v: string) => void;\n  onTraceIdColumnChange: (v: string) => void;\n  onSpanIdColumnChange: (v: string) => void;\n  onOperationNameColumnChange: (v: string) => void;\n  onParentSpanIdColumnChange: (v: string) => void;\n  onServiceNameColumnChange: (v: string) => void;\n  onDurationColumnChange: (v: string) => void;\n  onDurationUnitChange: (v: TimeUnit) => void;\n  onStartTimeColumnChange: (v: string) => void;\n  onTagsColumnChange: (v: string) => void;\n  onServiceTagsColumnChange: (v: string) => void;\n  onKindColumnChange: (v: string) => void;\n  onStatusCodeColumnChange: (v: string) => void;\n  onStatusMessageColumnChange: (v: string) => void;\n  onStateColumnChange: (v: string) => void;\n  onInstrumentationLibraryNameColumnChange: (v: string) => void;\n  onInstrumentationLibraryVersionColumnChange: (v: string) => void;\n  onFlattenNestedChange: (v: boolean) => void;\n  onEventsColumnPrefixChange: (v: string) => void;\n  onLinksColumnPrefixChange: (v: string) => void;\n}\n\nexport const TracesConfig = (props: TraceConfigProps) => {\n  const {\n    onDefaultDatabaseChange, onDefaultTableChange,\n    onOtelEnabledChange, onOtelVersionChange,\n    onTraceIdColumnChange, onSpanIdColumnChange, onOperationNameColumnChange, onParentSpanIdColumnChange,\n    onServiceNameColumnChange, onDurationColumnChange, onDurationUnitChange, onStartTimeColumnChange,\n    onTagsColumnChange, onServiceTagsColumnChange,\n    onKindColumnChange, onStatusCodeColumnChange, onStatusMessageColumnChange,\n    onStateColumnChange,\n    onInstrumentationLibraryNameColumnChange, onInstrumentationLibraryVersionColumnChange,\n    onFlattenNestedChange, onEventsColumnPrefixChange, onLinksColumnPrefixChange,\n  } = props;\n  let {\n    defaultDatabase, defaultTable,\n    otelEnabled, otelVersion,\n    traceIdColumn, spanIdColumn, operationNameColumn, parentSpanIdColumn, serviceNameColumn,\n    durationColumn, durationUnit, startTimeColumn, tagsColumn, serviceTagsColumn,\n    kindColumn, statusCodeColumn, statusMessageColumn, stateColumn,\n    instrumentationLibraryNameColumn, instrumentationLibraryVersionColumn, \n    flattenNested, traceEventsColumnPrefix, traceLinksColumnPrefix,\n  } = (props.tracesConfig || {}) as CHTracesConfig;\n  const labels = allLabels.components.Config.TracesConfig;\n\n  const otelConfig = otel.getVersion(otelVersion);\n  if (otelEnabled && otelConfig) {\n    startTimeColumn = otelConfig.traceColumnMap.get(ColumnHint.Time);\n    traceIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceId);\n    spanIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceSpanId);\n    parentSpanIdColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceParentSpanId);\n    serviceNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceServiceName);\n    operationNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceOperationName);\n    durationColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceDurationTime);\n    tagsColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceTags);\n    serviceTagsColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceServiceTags);\n    kindColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceKind);\n    statusCodeColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceStatusCode);\n    statusMessageColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceStatusMessage);\n    stateColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceState);\n    instrumentationLibraryNameColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceInstrumentationLibraryName);\n    instrumentationLibraryVersionColumn = otelConfig.traceColumnMap.get(ColumnHint.TraceInstrumentationLibraryVersion);\n    durationUnit = otelConfig.traceDurationUnit.toString();\n    flattenNested = otelConfig.flattenNested;\n    traceEventsColumnPrefix = otelConfig.traceEventsColumnPrefix;\n    traceLinksColumnPrefix = otelConfig.traceLinksColumnPrefix;\n  }\n\n  return (\n    <ConfigSection\n      title={labels.title}\n      description={labels.description}\n    >\n      <div id=\"traces-config\" />\n      <Field\n        label={labels.defaultDatabase.label}\n        description={labels.defaultDatabase.description}\n      >\n        <Input\n          name={labels.defaultDatabase.name}\n          width={40}\n          value={defaultDatabase || ''}\n          onChange={e => onDefaultDatabaseChange(e.currentTarget.value)}\n          label={labels.defaultDatabase.label}\n          aria-label={labels.defaultDatabase.label}\n          placeholder={labels.defaultDatabase.placeholder}\n        />\n      </Field>\n      <Field\n        label={labels.defaultTable.label}\n        description={labels.defaultTable.description}\n      >\n        <Input\n          name={labels.defaultTable.name}\n          width={40}\n          value={defaultTable || ''}\n          onChange={e => onDefaultTableChange(e.currentTarget.value)}\n          label={labels.defaultTable.label}\n          aria-label={labels.defaultTable.label}\n          placeholder={defaultTraceTable}\n        />\n      </Field>\n      <ConfigSubSection\n        title={labels.columns.title}\n        description={labels.columns.description}\n      >\n        <OtelVersionSelect\n          enabled={otelEnabled || false}\n          selectedVersion={otelVersion || ''}\n          onEnabledChange={onOtelEnabledChange}\n          onVersionChange={onOtelVersionChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.traceId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.traceId.label)}\n          tooltip={labels.columns.traceId.tooltip}\n          value={traceIdColumn || ''}\n          onChange={onTraceIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.spanId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.spanId.label)}\n          tooltip={labels.columns.spanId.tooltip}\n          value={spanIdColumn || ''}\n          onChange={onSpanIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.operationName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.operationName.label)}\n          tooltip={labels.columns.operationName.tooltip}\n          value={operationNameColumn || ''}\n          onChange={onOperationNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.parentSpanId.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.parentSpanId.label)}\n          tooltip={labels.columns.parentSpanId.tooltip}\n          value={parentSpanIdColumn || ''}\n          onChange={onParentSpanIdColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.serviceName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.serviceName.label)}\n          tooltip={labels.columns.serviceName.tooltip}\n          value={serviceNameColumn || ''}\n          onChange={onServiceNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.durationTime.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.durationTime.label)}\n          tooltip={labels.columns.durationTime.tooltip}\n          value={durationColumn || ''}\n          onChange={onDurationColumnChange}\n        />\n        <DurationUnitSelect\n          disabled={otelEnabled}\n          unit={durationUnit as TimeUnit || TimeUnit.Nanoseconds}\n          onChange={onDurationUnitChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.startTime.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.startTime.label)}\n          tooltip={labels.columns.startTime.tooltip}\n          value={startTimeColumn || ''}\n          onChange={onStartTimeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.tags.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.tags.label)}\n          tooltip={labels.columns.tags.tooltip}\n          value={tagsColumn || ''}\n          onChange={onTagsColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.serviceTags.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.serviceTags.label)}\n          tooltip={labels.columns.serviceTags.tooltip}\n          value={serviceTagsColumn || ''}\n          onChange={onServiceTagsColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.kind.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.kind.label)}\n          tooltip={labels.columns.kind.tooltip}\n          value={kindColumn || ''}\n          onChange={onKindColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.statusCode.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.statusCode.label)}\n          tooltip={labels.columns.statusCode.tooltip}\n          value={statusCodeColumn || ''}\n          onChange={onStatusCodeColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.statusMessage.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.statusMessage.label)}\n          tooltip={labels.columns.statusMessage.tooltip}\n          value={statusMessageColumn || ''}\n          onChange={onStatusMessageColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.state.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.state.label)}\n          tooltip={labels.columns.state.tooltip}\n          value={stateColumn || ''}\n          onChange={onStateColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.instrumentationLibraryName.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.instrumentationLibraryName.label)}\n          tooltip={labels.columns.instrumentationLibraryName.tooltip}\n          value={instrumentationLibraryNameColumn || ''}\n          onChange={onInstrumentationLibraryNameColumnChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.instrumentationLibraryVersion.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.instrumentationLibraryVersion.label)}\n          tooltip={labels.columns.instrumentationLibraryVersion.tooltip}\n          value={instrumentationLibraryVersionColumn || ''}\n          onChange={onInstrumentationLibraryVersionColumnChange}\n        />\n        <Switch\n          disabled={otelEnabled}\n          label={labels.columns.flattenNested.label}\n          tooltip={labels.columns.flattenNested.tooltip}\n          value={flattenNested || false}\n          onChange={onFlattenNestedChange}\n          wide\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.eventsPrefix.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.eventsPrefix.label)}\n          tooltip={labels.columns.eventsPrefix.tooltip}\n          value={traceEventsColumnPrefix || ''}\n          onChange={onEventsColumnPrefixChange}\n        />\n        <LabeledInput\n          disabled={otelEnabled}\n          label={labels.columns.linksPrefix.label}\n          placeholder={columnLabelToPlaceholder(labels.columns.linksPrefix.label)}\n          tooltip={labels.columns.linksPrefix.tooltip}\n          value={traceLinksColumnPrefix || ''}\n          onChange={onLinksColumnPrefixChange}\n        />\n      </ConfigSubSection>\n    </ConfigSection>\n  );\n}\n","import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { ConfigSection } from 'components/experimental/ConfigSection';\nimport { Input, Field, HorizontalGroup, Switch, SecretInput, Button } from '@grafana/ui';\nimport { CHHttpHeader } from 'types/config';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { selectors as allSelectors } from 'selectors';\nimport { KeyValue } from '@grafana/data';\n\ninterface HttpHeadersConfigProps {\n  headers?: CHHttpHeader[];\n  forwardGrafanaHeaders?: boolean;\n  secureFields: KeyValue<boolean>;\n  onHttpHeadersChange: (v: CHHttpHeader[]) => void;\n  onForwardGrafanaHeadersChange: (v: boolean) => void;\n}\n\nexport const HttpHeadersConfig = (props: HttpHeadersConfigProps) => {\n  const { secureFields, onHttpHeadersChange } = props;\n  const configuredSecureHeaders = useConfiguredSecureHttpHeaders(secureFields);\n  const [headers, setHeaders] = useState<CHHttpHeader[]>(props.headers || []);\n  const [forwardGrafanaHeaders, setForwardGrafanaHeaders] = useState<boolean>(props.forwardGrafanaHeaders || false);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const addHeader = () => setHeaders([...headers, { name: '', value: '', secure: false }]);\n  const removeHeader = (index: number) => {\n    const nextHeaders: CHHttpHeader[] = headers.slice();\n    nextHeaders.splice(index, 1);\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n  const updateHeader = (index: number, header: CHHttpHeader) => {\n    const nextHeaders: CHHttpHeader[] = headers.slice();\n    header.name = header.name.trim();\n    nextHeaders[index] = header;\n    setHeaders(nextHeaders);\n    onHttpHeadersChange(nextHeaders);\n  };\n  const updateForwardGrafanaHeaders = (value: boolean) => {\n    setForwardGrafanaHeaders(value);\n    props.onForwardGrafanaHeadersChange(value);\n  }\n\n  return (\n    <ConfigSection\n      title={labels.title}\n    >\n      <Field label={labels.label} description={labels.description}>\n        <>\n          {headers.map((header, index) => (\n            <HttpHeaderEditor\n              key={header.name + index}\n              name={header.name}\n              value={header.value}\n              secure={header.secure}\n              isSecureConfigured={configuredSecureHeaders.has(header.name)}\n              onHeaderChange={header => updateHeader(index, header)}\n              onRemove={() => removeHeader(index)}\n            />\n          ))}\n          <Button\n              data-testid={selectors.addHeaderButton}\n              icon=\"plus-circle\"\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={addHeader}\n              className={styles.Common.smallBtn}\n            >\n              {labels.addHeaderLabel}\n          </Button>\n        </>\n      </Field>\n      <Field label={labels.forwardGrafanaHeaders.label} description={labels.forwardGrafanaHeaders.tooltip}>\n        <Switch\n          data-testid={selectors.forwardGrafanaHeadersSwitch}\n          className={\"gf-form\"}\n          value={forwardGrafanaHeaders}\n          onChange={(e) => updateForwardGrafanaHeaders(e.currentTarget.checked)}\n        />\n      </Field>\n    </ConfigSection>\n  );\n}\n\ninterface HttpHeaderEditorProps {\n  name: string;\n  value: string;\n  secure: boolean;\n  isSecureConfigured: boolean;\n  onHeaderChange: (v: CHHttpHeader) => void;\n  onRemove?: () => void;\n}\n\nconst HttpHeaderEditor = (props: HttpHeaderEditorProps) => {\n  const { onHeaderChange, onRemove } = props;\n  const [name, setName] = useState<string>(props.name);\n  const [value, setValue] = useState<string>(props.value);\n  const [secure, setSecure] = useState<boolean>(props.secure);\n  const [isSecureConfigured, setSecureConfigured] = useState<boolean>(props.isSecureConfigured);\n  const labels = allLabels.components.Config.HttpHeadersConfig;\n  const selectors = allSelectors.components.Config.HttpHeaderConfig;\n\n  const onUpdate = () => {\n    onHeaderChange({\n      name,\n      value,\n      secure\n    });\n  }\n\n  let valueInput;\n  if (secure) {\n    valueInput = <SecretInput\n      data-testid={selectors.headerValueInput}\n      width={65}\n      label=\"\"\n      aria-label=\"\"\n      placeholder={labels.secureHeaderValueLabel}\n      value={value}\n      isConfigured={isSecureConfigured}\n      onReset={() => setSecureConfigured(false)}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n      onBlur={() => onUpdate()}\n    />;\n  } else {\n    valueInput = <Input\n      data-testid={selectors.headerValueInput}\n      width={65}\n      value={value}\n      placeholder={labels.insecureHeaderValueLabel}\n      onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n      onBlur={() => onUpdate()}\n    />;\n  }\n\n  const headerValueLabel = secure ? labels.secureHeaderValueLabel : labels.insecureHeaderValueLabel;\n  return (\n    <div data-testid={selectors.headerEditor}>\n      <HorizontalGroup>\n        <Field label={labels.headerNameLabel} aria-label={labels.headerNameLabel}>\n          <Input\n            data-testid={selectors.headerNameInput}\n            value={name}\n            disabled={isSecureConfigured}\n            placeholder={labels.headerNamePlaceholder}\n            onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n            onBlur={() => onUpdate()}\n          />\n        </Field>\n        <Field label={headerValueLabel} aria-label={headerValueLabel}>\n          {valueInput}\n        </Field>\n        { !isSecureConfigured &&\n          <Field label={labels.secureLabel}>\n            <Switch\n              data-testid={selectors.headerSecureSwitch}\n              className=\"gf-form\"\n              value={secure}\n              onChange={e => setSecure(e.currentTarget.checked)}\n              onBlur={() => onUpdate()}\n            />\n          </Field>\n        }\n        { onRemove &&\n          <Button\n            data-testid={selectors.removeHeaderButton}\n            className={styles.Common.smallBtn}\n            variant=\"destructive\"\n            size=\"sm\"\n            icon=\"trash-alt\"\n            onClick={onRemove}\n          />\n        }\n      </HorizontalGroup>\n    </div>\n  );\n}\n\n/**\n * Returns a Set of all secured headers that are configured\n */\nexport const useConfiguredSecureHttpHeaders = (secureJsonFields: KeyValue<boolean>): Set<string> => {\n  return useMemo(() => {\n    const secureHeaders = new Set<string>();\n    for (let key in secureJsonFields) {\n      if (key.startsWith('secureHttpHeaders.') && secureJsonFields[key]) {\n        secureHeaders.add(key.substring(key.indexOf('.') + 1));\n      }\n    }\n    return secureHeaders;\n  }, [secureJsonFields]);\n};\n","import { DataSourceSettings, KeyValue } from \"@grafana/data\";\nimport { defaultLogsTable, defaultTraceTable } from \"otel\";\nimport { useEffect, useRef } from \"react\";\nimport { CHConfig, CHHttpHeader, CHSecureConfig, Protocol } from \"types/config\";\nimport { pluginVersion } from \"utils/version\";\n\n/**\n * Handles saving HTTP headers to Grafana config.\n * \n * All header keys go to the unsecure config.\n * If the header is marked as secure, its value goes to the\n * secure json config where it is hidden.\n */\nexport const onHttpHeadersChange = (headers: CHHttpHeader[], options: DataSourceSettings<CHConfig, CHSecureConfig>, onOptionsChange: (opts: DataSourceSettings<CHConfig, CHSecureConfig>) => void) => {\n  const httpHeaders: CHHttpHeader[] = [];\n  const secureHttpHeaderKeys: KeyValue<boolean> = {};\n  const secureHttpHeaderValues: KeyValue<string> = {};\n\n  for (let header of headers) {\n    if (!header.name) {\n      continue;\n    }\n\n    if (header.secure) {\n      const key = `secureHttpHeaders.${header.name}`;\n      secureHttpHeaderKeys[key] = true;\n\n      if (header.value) {\n        secureHttpHeaderValues[key] = header.value;\n        header.value = '';\n      }\n    }\n\n    httpHeaders.push(header);\n  }\n\n  const currentSecureJsonFields: KeyValue<boolean> = { ...options.secureJsonFields };\n  for (let key in currentSecureJsonFields) {\n    if (!secureHttpHeaderKeys[key] && key.startsWith('secureHttpHeaders.')) {\n      // Remove key from secureJsonData when it is no longer present in header config\n      secureHttpHeaderKeys[key] = false;\n      secureHttpHeaderValues[key] = '';\n    }\n  }\n\n  onOptionsChange({\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      httpHeaders\n    },\n    secureJsonFields: {\n      ...options.secureJsonFields,\n      ...secureHttpHeaderKeys\n    },\n    secureJsonData: {\n      ...options.secureJsonData,\n      ...secureHttpHeaderValues\n    },\n  });\n}\n\n/**\n * Applies default settings and migrations to config options.\n */\nexport const useConfigDefaults = (options: DataSourceSettings<CHConfig>, onOptionsChange: (opts: DataSourceSettings<CHConfig>) => void) => {\n  const appliedDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (appliedDefaults.current) {\n      return;\n    }\n\n    const jsonData = { ...options.jsonData };\n    jsonData.version = pluginVersion; // Always overwrite version\n\n    // v3 Migration\n\n    const v3ServerField = (jsonData as any)['server'];\n    if (v3ServerField && !jsonData.host) {\n      jsonData.host = v3ServerField;\n    }\n    delete (jsonData as any)['server'];\n\n    const v3TimeoutField = (jsonData as any)['timeout'];\n    if (v3TimeoutField && !jsonData.dialTimeout) {\n      jsonData.dialTimeout = v3TimeoutField;\n    }\n    delete (jsonData as any)['timeout'];\n\n    // Defaults\n\n    if (!jsonData.protocol) {\n      jsonData.protocol = Protocol.Native;\n    }\n\n    if (!jsonData.logs || jsonData.logs.defaultTable === undefined) {\n      jsonData.logs = {\n        ...jsonData.logs,\n        defaultTable: defaultLogsTable,\n        selectContextColumns: true,\n        contextColumns: []\n      };\n    }\n\n    if (!jsonData.traces || jsonData.traces.defaultTable === undefined) {\n      jsonData.traces = {\n        ...jsonData.traces,\n        defaultTable: defaultTraceTable\n      };\n    }\n\n    onOptionsChange({\n      ...options,\n      jsonData,\n    });\n    appliedDefaults.current = true;\n  }, [options, onOptionsChange]);\n}\n","import React, {ChangeEvent, useState} from 'react';\nimport {ConfigSection} from 'components/experimental/ConfigSection';\nimport {Input, Field, HorizontalGroup, Button} from '@grafana/ui';\nimport {AliasTableEntry} from 'types/config';\nimport allLabels from 'labels';\nimport {styles} from 'styles';\nimport {selectors as allSelectors} from 'selectors';\n\ninterface AliasTablesConfigProps {\n    aliasTables?: AliasTableEntry[];\n    onAliasTablesChange: (v: AliasTableEntry[]) => void;\n}\n\nexport const AliasTableConfig = (props: AliasTablesConfigProps) => {\n    const {onAliasTablesChange} = props;\n    const [entries, setEntries] = useState<AliasTableEntry[]>(props.aliasTables || []);\n    const labels = allLabels.components.Config.AliasTableConfig;\n    const selectors = allSelectors.components.Config.AliasTableConfig;\n\n    const entryToUniqueKey = (entry: AliasTableEntry) => `\"${entry.targetDatabase}\".\"${entry.targetTable}\":\"${entry.aliasDatabase}\".\"${entry.aliasTable}\"`;\n    const removeDuplicateEntries = (entries: AliasTableEntry[]): AliasTableEntry[] => {\n        const duplicateKeys = new Set();\n        return entries.filter(entry => {\n            const key = entryToUniqueKey(entry);\n            if (duplicateKeys.has(key)) {\n                return false;\n            }\n\n            duplicateKeys.add(key);\n            return true;\n        });\n    };\n\n    const addEntry = () => {\n        setEntries(removeDuplicateEntries([...entries, {\n            targetDatabase: '',\n            targetTable: '',\n            aliasDatabase: '',\n            aliasTable: ''\n        }]));\n    }\n    const removeEntry = (index: number) => {\n        let nextEntries: AliasTableEntry[] = entries.slice();\n        nextEntries.splice(index, 1);\n        nextEntries = removeDuplicateEntries(nextEntries);\n        setEntries(nextEntries);\n        onAliasTablesChange(nextEntries);\n    };\n    const updateEntry = (index: number, entry: AliasTableEntry) => {\n        let nextEntries: AliasTableEntry[] = entries.slice();\n        entry.targetDatabase = entry.targetDatabase.trim();\n        entry.targetTable = entry.targetTable.trim();\n        entry.aliasDatabase = entry.aliasDatabase.trim();\n        entry.aliasTable = entry.aliasTable.trim();\n        nextEntries[index] = entry;\n\n        nextEntries = removeDuplicateEntries(nextEntries);\n        setEntries(nextEntries);\n        onAliasTablesChange(nextEntries);\n    };\n\n    return (\n        <ConfigSection\n            title={labels.title}\n        >\n            <div>\n                <span>{labels.descriptionParts[0]}</span>\n                <code>{labels.descriptionParts[1]}</code>\n                <span>{labels.descriptionParts[2]}</span>\n            </div>\n            <br/>\n\n            {entries.map((entry, index) => (\n                <AliasTableEditor\n                    key={entryToUniqueKey(entry)}\n                    targetDatabase={entry.targetDatabase}\n                    targetTable={entry.targetTable}\n                    aliasDatabase={entry.aliasDatabase}\n                    aliasTable={entry.aliasTable}\n                    onEntryChange={e => updateEntry(index, e)}\n                    onRemove={() => removeEntry(index)}\n                />\n            ))}\n            <Button\n                data-testid={selectors.addEntryButton}\n                icon=\"plus-circle\"\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={addEntry}\n                className={styles.Common.smallBtn}\n            >\n                {labels.addTableLabel}\n            </Button>\n        </ConfigSection>\n    );\n}\n\ninterface AliasTableEditorProps {\n    targetDatabase: string;\n    targetTable: string;\n    aliasDatabase: string;\n    aliasTable: string;\n    onEntryChange: (v: AliasTableEntry) => void;\n    onRemove?: () => void;\n}\n\nconst AliasTableEditor = (props: AliasTableEditorProps) => {\n    const {onEntryChange, onRemove} = props;\n    const [targetDatabase, setTargetDatabase] = useState<string>(props.targetDatabase);\n    const [targetTable, setTargetTable] = useState<string>(props.targetTable);\n    const [aliasDatabase, setAliasDatabase] = useState<string>(props.aliasDatabase);\n    const [aliasTable, setAliasTable] = useState<string>(props.aliasTable);\n    const labels = allLabels.components.Config.AliasTableConfig;\n    const selectors = allSelectors.components.Config.AliasTableConfig;\n\n    const onUpdate = () => {\n        onEntryChange({targetDatabase, targetTable, aliasDatabase, aliasTable});\n    }\n\n    return (\n        <div data-testid={selectors.aliasEditor}>\n            <HorizontalGroup>\n                <Field label={labels.targetDatabaseLabel} aria-label={labels.targetDatabaseLabel}>\n                    <Input\n                        data-testid={selectors.targetDatabaseInput}\n                        value={targetDatabase}\n                        placeholder={labels.targetDatabasePlaceholder}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setTargetDatabase(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                <Field label={labels.targetTableLabel} aria-label={labels.targetTableLabel}>\n                    <Input\n                        data-testid={selectors.targetTableInput}\n                        value={targetTable}\n                        placeholder={labels.targetTableLabel}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setTargetTable(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                <Field label={labels.aliasDatabaseLabel} aria-label={labels.aliasDatabaseLabel}>\n                    <Input\n                        data-testid={selectors.aliasDatabaseInput}\n                        value={aliasDatabase}\n                        placeholder={labels.aliasDatabasePlaceholder}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setAliasDatabase(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                <Field label={labels.aliasTableLabel} aria-label={labels.aliasTableLabel}>\n                    <Input\n                        data-testid={selectors.aliasTableInput}\n                        value={aliasTable}\n                        placeholder={labels.aliasTableLabel}\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => setAliasTable(e.target.value)}\n                        onBlur={() => onUpdate()}\n                    />\n                </Field>\n                {onRemove &&\n                    <Button\n                        data-testid={selectors.removeEntryButton}\n                        className={styles.Common.smallBtn}\n                        variant=\"destructive\"\n                        size=\"sm\"\n                        icon=\"trash-alt\"\n                        onClick={onRemove}\n                    />\n                }\n            </HorizontalGroup>\n        </div>\n    );\n}\n","import {\n  astVisitor,\n  Expr,\n  ExprBinary,\n  ExprCall,\n  ExprInteger,\n  ExprList,\n  ExprRef,\n  ExprString,\n  ExprUnary,\n  FromTable,\n  SelectedColumn,\n} from 'pgsql-ast-parser';\nimport { isString } from 'lodash';\nimport {\n  BooleanFilter,\n  AggregateColumn,\n  AggregateType,\n  BuilderMode,\n  DateFilter,\n  DateFilterWithoutValue,\n  Filter,\n  FilterOperator,\n  MultiFilter,\n  NullFilter,\n  NumberFilter,\n  OrderBy,\n  QueryBuilderOptions,\n  ColumnHint,\n  SelectedColumn as CHSelectedColumn,\n  StringFilter,\n  QueryType,\n} from 'types/queryBuilder';\nimport { sqlToStatement } from 'data/ast';\nimport { getColumnByHint, logColumnHintsToAlias } from 'data/sqlGenerator';\nimport { Datasource } from 'data/CHDatasource';\nimport { tryApplyColumnHints } from 'data/utils';\n\n\nexport const isBooleanType = (type: string): boolean => {\n  return ['boolean'].includes(type?.toLowerCase());\n};\n\nexport const isNumberType = (type: string): boolean => {\n  return ['int', 'float', 'decimal'].some((t) => type?.toLowerCase().includes(t));\n};\n\nexport const isDateType = (type: string): boolean => {\n  const normalizedName = type?.toLowerCase();\n  return normalizedName?.startsWith('date') || normalizedName?.startsWith('nullable(date');\n};\nexport const isDateTimeType = (type: string): boolean => {\n  const normalizedName = type?.toLowerCase();\n  return normalizedName?.startsWith('datetime') || normalizedName?.startsWith('nullable(datetime');\n};\nexport const isStringType = (type: string): boolean => {\n  return !(isBooleanType(type) || isNumberType(type) || isDateType(type));\n};\nexport const isNullFilter = (filter: Filter): filter is NullFilter => {\n  return [FilterOperator.IsNull, FilterOperator.IsNotNull].includes(filter.operator);\n};\nexport const isBooleanFilter = (filter: Filter): filter is BooleanFilter => {\n  return isBooleanType(filter.type);\n};\nexport const isNumberFilter = (filter: Filter): filter is NumberFilter => {\n  return isNumberType(filter.type);\n};\nexport const isDateFilterWithOutValue = (filter: Filter): filter is DateFilterWithoutValue => {\n  return (\n    isDateType(filter.type) &&\n    [FilterOperator.WithInGrafanaTimeRange, FilterOperator.OutsideGrafanaTimeRange].includes(filter.operator)\n  );\n};\nexport const isDateFilter = (filter: Filter): filter is DateFilter => {\n  return isDateType(filter.type);\n};\nexport const isStringFilter = (filter: Filter): filter is StringFilter => {\n  return isStringType(filter.type) && ![FilterOperator.In, FilterOperator.NotIn].includes(filter.operator);\n};\nexport const isMultiFilter = (filter: Filter): filter is MultiFilter => {\n  return isStringType(filter.type) && [FilterOperator.In, FilterOperator.NotIn].includes(filter.operator);\n};\n\nexport function getQueryOptionsFromSql(sql: string, queryType?: QueryType, datasource?: Datasource): QueryBuilderOptions {\n  const ast = sqlToStatement(sql);\n  if (!ast) {\n    throw new Error('The query is not valid SQL.');\n  }\n  if (ast.type !== 'select') {\n    throw new Error('The query is not a select statement.');\n  }\n  if (!ast.from || ast.from.length !== 1) {\n    throw new Error(`The query has too many 'FROM' clauses.`);\n  }\n  if (ast.from[0].type !== 'table') {\n    throw new Error(`The 'FROM' clause is not a table.`);\n  }\n  const fromTable = ast.from[0] as FromTable;\n\n  const columnsAndAggregates = getAggregatesFromAst(ast.columns || null);\n\n  const builderOptions = {\n    database: fromTable.name.schema || '',\n    table: fromTable.name.name || '',\n    queryType: queryType || QueryType.Table,\n    mode: BuilderMode.List,\n    columns: [],\n    aggregates: [],\n  } as QueryBuilderOptions;\n\n  if (columnsAndAggregates.columns.length > 0) {\n    builderOptions.columns = columnsAndAggregates.columns || [];\n  }\n\n  // Reconstruct column hints based off of known column names / aliases\n  if (queryType === QueryType.Logs) {\n    tryApplyColumnHints(builderOptions.columns!, datasource?.getDefaultLogsColumns()); // Try match default log columns\n    tryApplyColumnHints(builderOptions.columns!, logColumnHintsToAlias); // Try match Grafana aliases\n  } else if (queryType === QueryType.Traces) {\n    tryApplyColumnHints(builderOptions.columns!, datasource?.getDefaultTraceColumns());\n  }\n\n  if (columnsAndAggregates.aggregates.length > 0) {\n    builderOptions.mode = BuilderMode.Aggregate;\n    builderOptions.aggregates = columnsAndAggregates.aggregates;\n  }\n\n  const timeColumn = getColumnByHint(builderOptions, ColumnHint.Time);\n  if (!queryType && timeColumn) {\n    builderOptions.queryType = QueryType.TimeSeries;\n    if (builderOptions.aggregates?.length || 0) {\n      builderOptions.mode = BuilderMode.Trend;\n    }\n  }\n\n  if (ast.where) {\n    builderOptions.filters = getFiltersFromAst(ast.where, timeColumn?.name || '');\n  }\n\n  const orderBy = ast.orderBy\n    ?.map<OrderBy>((ob) => {\n      if (ob.by.type !== 'ref') {\n        return {} as OrderBy;\n      }\n      return { name: ob.by.name, dir: ob.order } as OrderBy;\n    })\n    .filter((x) => x.name);\n\n  if (orderBy && orderBy.length > 0) {\n    builderOptions.orderBy = orderBy!;\n  }\n\n  builderOptions.limit = ast.limit?.limit?.type === 'integer' ? ast.limit?.limit.value : undefined;\n\n  const groupBy = ast.groupBy\n    ?.map((gb) => {\n      if (gb.type !== 'ref') {\n        return '';\n      }\n      return gb.name;\n    })\n    .filter((x) => x !== '');\n  if (groupBy && groupBy.length > 0) {\n    builderOptions.groupBy = groupBy;\n  }\n\n  return builderOptions;\n}\n\nfunction getFiltersFromAst(expr: Expr, timeField: string): Filter[] {\n  const filters: Filter[] = [];\n  let i = 0;\n  let notFlag = false;\n  const visitor = astVisitor((map) => ({\n    expr: (e) => {\n      switch (e?.type) {\n        case 'binary':\n          notFlag = getBinaryFilter(e, filters, i, notFlag);\n          map.super().expr(e);\n          break;\n        case 'ref':\n          ({ i, notFlag } = getRefFilter(e, filters, i, notFlag));\n          break;\n        case 'string':\n          i = getStringFilter(filters, i, e);\n          break;\n        case 'integer':\n          i = getIntFilter(filters, i, e);\n          break;\n        case 'unary':\n          notFlag = getUnaryFilter(e, notFlag, i, filters);\n          map.super().expr(e);\n          break;\n        case 'call':\n          i = getCallFilter(e, timeField, filters, i);\n          break;\n        case 'list':\n          i = getListFilter(filters, i, e);\n          break;\n        default:\n          console.error(`${e?.type} is not supported. This is likely a bug.`);\n          break;\n      }\n    },\n  }));\n  visitor.expr(expr);\n  return filters;\n}\n\nfunction getRefFilter(e: ExprRef, filters: Filter[], i: number, notFlag: boolean): { i: number; notFlag: boolean } {\n  if (e.name?.toLowerCase() === '$__fromtime' && filters[i].operator === FilterOperator.GreaterThanOrEqual) {\n    if (notFlag) {\n      filters[i].operator = FilterOperator.OutsideGrafanaTimeRange;\n      notFlag = false;\n    } else {\n      filters[i].operator = FilterOperator.WithInGrafanaTimeRange;\n    }\n    filters[i].type = 'datetime';\n    i++;\n    return { i, notFlag };\n  }\n  if (e.name?.toLowerCase() === '$__totime') {\n    filters.splice(i, 1);\n    return { i, notFlag };\n  }\n  if (!filters[i].key) {\n    filters[i].key = e.name;\n    if (filters[i].operator === FilterOperator.IsNotNull) {\n      i++;\n    }\n    return { i, notFlag };\n  }\n  filters[i] = { ...filters[i], value: [e.name], type: 'string' } as Filter;\n  i++;\n  return { i, notFlag };\n}\n\nfunction getListFilter(filters: Filter[], i: number, e: ExprList): number {\n  filters[i] = {\n    ...filters[i],\n    value: e.expressions.map((x) => {\n      const k = x as ExprString;\n      return k.value;\n    }),\n    type: 'string',\n  } as Filter;\n  i++;\n  return i;\n}\n\nfunction getCallFilter(e: ExprCall, timeField: string, filters: Filter[], i: number): number {\n  const val = `${e.function.name}(${e.args.map<string>((x) => (x as ExprRef).name).join(',')})`;\n  //do not add the timeFilter that is used when using time series and remove the condition\n  if (val === `$__timefilter(${timeField})`) {\n    filters.splice(i, 1);\n    return i;\n  }\n  if (val.startsWith('$__timefilter(')) {\n    filters[i] = {\n      ...filters[i],\n      key: (e.args[0] as ExprRef).name,\n      operator: FilterOperator.WithInGrafanaTimeRange,\n      type: 'datetime',\n    } as Filter;\n    i++;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: val, type: 'datetime' } as Filter;\n  if (!val) {\n    i++;\n  }\n  return i;\n}\n\nfunction getUnaryFilter(e: ExprUnary, notFlag: boolean, i: number, filters: Filter[]): boolean {\n  if (e.op === 'NOT') {\n    return true;\n  }\n  if (i === 0) {\n    filters.unshift({} as Filter);\n  }\n  filters[i].operator = e.op as FilterOperator;\n  return notFlag;\n}\n\nfunction getStringFilter(filters: Filter[], i: number, e: ExprString): number {\n  if (!filters[i].key) {\n    filters[i] = { ...filters[i], key: e.value } as Filter;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: e.value, type: 'string' } as Filter;\n  i++;\n  return i;\n}\n\nfunction getIntFilter(filters: Filter[], i: number, e: ExprInteger): number {\n  if (!filters[i].key) {\n    filters[i] = { ...filters[i], key: e.value.toString() } as Filter;\n    return i;\n  }\n  filters[i] = { ...filters[i], value: e.value, type: 'int' } as Filter;\n  i++;\n  return i;\n}\n\nfunction getBinaryFilter(e: ExprBinary, filters: Filter[], i: number, notFlag: boolean): boolean {\n  if (e.op === 'AND' || e.op === 'OR') {\n    filters.unshift({\n      condition: e.op,\n    } as Filter);\n  } else if (Object.values(FilterOperator).find((x) => e.op === x)) {\n    if (i === 0) {\n      filters.unshift({} as Filter);\n    } else if (!filters[i]) {\n      filters.push({ condition: 'AND' } as Filter);\n    }\n\n    filters[i].operator = e.op as FilterOperator;\n    if (notFlag && filters[i].operator === FilterOperator.Like) {\n      filters[i].operator = FilterOperator.NotLike;\n      notFlag = false;\n    }\n  }\n  return notFlag;\n}\n\nfunction selectCallFunc(s: SelectedColumn): [AggregateColumn | string, string | undefined] {\n  if (s.expr.type !== 'call') {\n    return [{} as AggregateColumn, undefined];\n  }\n  let fields = s.expr.args.map((x) => {\n    if (x.type !== 'ref') {\n      return '';\n    }\n    return x.name;\n  });\n  if (fields.length > 1) {\n    return ['', undefined];\n  }\n  if (\n    Object.values(AggregateType).includes(\n      s.expr.function.name.toLowerCase() as AggregateType\n    )\n  ) {\n    return [{\n      aggregateType: s.expr.function.name as AggregateType,\n      column: fields[0],\n      alias: s.alias?.name,\n    } as AggregateColumn, s.alias?.name];\n  }\n  return [fields[0], s.alias?.name];\n}\n\nfunction getAggregatesFromAst(selectClauses: SelectedColumn[] | null): { columns: CHSelectedColumn[]; aggregates: AggregateColumn[]; } {\n  if (!selectClauses) {\n    return { columns: [], aggregates: [] };\n  }\n\n  const columns: CHSelectedColumn[] = [];\n  const aggregates: AggregateColumn[] = [];\n\n  for (let s of selectClauses) {\n    switch (s.expr.type) {\n      case 'ref':\n        columns.push({ name: s.expr.name, alias: s.alias?.name });\n        break;\n      case 'call':\n        const [columnOrAggregate, alias] = selectCallFunc(s);\n        if (!columnOrAggregate) {\n          break;\n        }\n\n        if (isString(columnOrAggregate)) {\n          columns.push({ name: columnOrAggregate, type: 'datetime', alias, hint: ColumnHint.Time });\n        } else {\n          aggregates.push(columnOrAggregate);\n        }\n        break;\n    }\n  }\n\n  return { columns, aggregates };\n}\n\nexport const operMap = new Map<string, FilterOperator>([\n  ['equals', FilterOperator.Equals],\n  ['contains', FilterOperator.Like],\n]);\n\nexport function getOper(v: string): FilterOperator {\n  return operMap.get(v) || FilterOperator.Equals;\n}\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup, ConfirmModal, InlineFormLabel } from '@grafana/ui';\nimport { getQueryOptionsFromSql } from '../queryBuilder/utils';\nimport { generateSql } from 'data/sqlGenerator';\nimport labels from 'labels';\nimport { EditorType, CHQuery, defaultCHBuilderQuery } from 'types/sql';\nimport { QueryBuilderOptions } from 'types/queryBuilder';\nimport { mapQueryTypeToGrafanaFormat } from 'data/utils';\nimport { Datasource } from 'data/CHDatasource';\n\ninterface CHEditorTypeSwitcherProps {\n  query: CHQuery;\n  onChange: (query: CHQuery) => void;\n  onRunQuery: () => void;\n  datasource?: Datasource;\n}\n\nconst options: Array<SelectableValue<EditorType>> = [\n  { label: labels.types.EditorType.sql, value: EditorType.SQL },\n  { label: labels.types.EditorType.builder, value: EditorType.Builder },\n];\n\n/**\n * Component for switching between the SQL and Query Builder editors.\n */\nexport const EditorTypeSwitcher = (props: CHEditorTypeSwitcherProps) => {\n  const { datasource, query, onChange } = props;\n  const { label, tooltip, switcher, cannotConvert } = labels.components.EditorTypeSwitcher;\n  const editorType: EditorType = query.editorType || EditorType.Builder;\n  const [confirmModalState, setConfirmModalState] = useState<boolean>(false);\n  const [cannotConvertModalState, setCannotConvertModalState] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const onEditorTypeChange = (editorType: EditorType, confirmed = false) => {\n    // TODO: component state has updated, but not local state.\n    if (query.editorType === EditorType.SQL && editorType === EditorType.Builder && !confirmed) {\n      try {\n        getQueryOptionsFromSql(query.rawSql, query.queryType, datasource);\n        setConfirmModalState(true);\n      } catch (err) {\n        setCannotConvertModalState(true);\n        setErrorMessage((err as Error).message);\n      }\n    } else {\n      let builderOptions: QueryBuilderOptions;\n      switch (query.editorType) {\n        case EditorType.Builder:\n          builderOptions = query.builderOptions;\n          break;\n        case EditorType.SQL:\n          builderOptions = getQueryOptionsFromSql(query.rawSql, query.queryType, datasource) as QueryBuilderOptions;\n          break;\n        default:\n          builderOptions = defaultCHBuilderQuery.builderOptions;\n          break;\n      }\n      if (editorType === EditorType.SQL) {\n        onChange({\n          ...query,\n          editorType: EditorType.SQL,\n          queryType: builderOptions.queryType,\n          rawSql: generateSql(builderOptions),\n          format: mapQueryTypeToGrafanaFormat(builderOptions.queryType),\n          meta: { builderOptions },\n        });\n      } else if (editorType === EditorType.Builder) {\n        onChange({\n          ...query,\n          editorType: EditorType.Builder,\n          queryType: builderOptions.queryType,\n          rawSql: generateSql(builderOptions),\n          builderOptions\n        });\n      }\n    }\n  };\n  const onConfirmEditorTypeChange = () => {\n    onEditorTypeChange(EditorType.Builder, true);\n    setConfirmModalState(false);\n    setCannotConvertModalState(false);\n  };\n  return (\n    <span>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup options={options} value={editorType} onChange={e => onEditorTypeChange(e)} />\n      <ConfirmModal\n        isOpen={confirmModalState}\n        title={switcher.title}\n        body={switcher.body}\n        confirmText={switcher.confirmText}\n        dismissText={switcher.dismissText}\n        icon=\"exclamation-triangle\"\n        onConfirm={onConfirmEditorTypeChange}\n        onDismiss={() => setConfirmModalState(false)}\n      />\n      <ConfirmModal\n        title={cannotConvert.title}\n        body={`${errorMessage}\\n${cannotConvert.message}`}\n        isOpen={cannotConvertModalState}\n        icon=\"exclamation-triangle\"\n        onConfirm={onConfirmEditorTypeChange}\n        confirmText={switcher.confirmText}\n        onDismiss={() => setCannotConvertModalState(false)}\n      />\n    </span>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { InlineFormLabel, MultiSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { TableColumn, SelectedColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\nimport { styles } from 'styles';\n\ninterface ColumnsEditorProps {\n  allColumns: readonly TableColumn[];\n  selectedColumns: SelectedColumn[];\n  onSelectedColumnsChange: (selectedColumns: SelectedColumn[]) => void;\n  disabled?: boolean;\n  showAllOption?: boolean;\n}\n\nfunction getCustomColumns(columnNames: string[], allColumns: readonly TableColumn[]): Array<SelectableValue<string>> {\n  const columnNamesSet = new Set(columnNames);\n  return allColumns.\n    filter(c => columnNamesSet.has(c.name)).\n    map(c => ({ label: c.label || c.name, value: c.name }));\n}\n\nconst allColumnName = '*';\n\nexport const ColumnsEditor = (props: ColumnsEditorProps) => {\n  const { allColumns, selectedColumns, onSelectedColumnsChange, disabled, showAllOption } = props;\n  const [customColumns, setCustomColumns] = useState<Array<SelectableValue<string>>>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const allColumnNames = allColumns.map(c => ({ label: c.label || c.name, value: c.name }));\n  if (showAllOption) {\n    allColumnNames.push({ label: allColumnName, value: allColumnName });\n  }\n  const selectedColumnNames = (selectedColumns || []).map(c => ({ label: c.alias || c.name, value: c.name }));\n  const { label, tooltip } = labels.components.ColumnsEditor;\n\n  const options = [...allColumnNames, ...customColumns];\n\n  useEffect(() => {\n    if (allColumns.length === 0) {\n      return;\n    }\n\n    const columnNames = selectedColumns.map(c => c.name);\n    const customColumns = getCustomColumns(columnNames, allColumns);\n    setCustomColumns(customColumns);\n  }, [allColumns, selectedColumns]);\n\n  const onChange = (selected: Array<SelectableValue<string>>): void => {\n    setIsOpen(false);\n    const selectedColumnNames = new Set<string>(selected.map(s => s.value!));\n    const customColumnNames = new Set<string>(customColumns.map(c => c.value!))\n    const columnMap = new Map<string, TableColumn>();\n    const currentColumnMap = new Map<string, SelectedColumn>();\n    allColumns.forEach(c => columnMap.set(c.name, c));\n    selectedColumns.forEach(c => currentColumnMap.set(c.name, c));\n\n    const excludeAllColumn = selectedColumnNames.size > 1;\n    const nextSelectedColumns: SelectedColumn[] = [];\n    for (let columnName of selectedColumnNames) {\n      if (excludeAllColumn && columnName === allColumnName) {\n        continue;\n      }\n\n      const tableColumn = columnMap.get(columnName);\n      const existingColumn = currentColumnMap.get(columnName);\n\n      if (existingColumn) {\n        nextSelectedColumns.push(existingColumn);\n      } else {\n        nextSelectedColumns.push({\n          name: columnName,\n          type: tableColumn?.type || 'String',\n          custom: customColumnNames.has(columnName),\n          alias: tableColumn?.label || columnName,\n        });\n      }\n    }\n\n    onSelectedColumnsChange(nextSelectedColumns);\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div data-testid={selectors.components.QueryBuilder.ColumnsEditor.multiSelectWrapper} className={styles.Common.selectWrapper}>\n        <MultiSelect<string>\n          disabled={disabled}\n          options={options}\n          value={selectedColumnNames}\n          isOpen={isOpen}\n          onOpenMenu={() => setIsOpen(true)}\n          onCloseMenu={() => setIsOpen(false)}\n          onChange={onChange}\n          allowCustomValue={true}\n          menuPlacement={'bottom'}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { ColumnHint, SelectedColumn, TableColumn } from 'types/queryBuilder';\nimport { styles } from 'styles';\n\ninterface ColumnSelectProps {\n  allColumns: readonly TableColumn[];\n  selectedColumn: SelectedColumn | undefined;\n  onColumnChange: (c: SelectedColumn | undefined) => void;\n  columnFilterFn?: (c: TableColumn) => boolean;\n  columnHint?: ColumnHint;\n  label: string;\n  tooltip: string;\n  disabled?: boolean;\n  invalid?: boolean;\n  wide?: boolean;\n  inline?: boolean;\n  clearable?: boolean;\n}\n\nconst defaultFilterFn = () => true;\n\nexport const ColumnSelect = (props: ColumnSelectProps) => {\n  const { allColumns, selectedColumn, onColumnChange, columnFilterFn, columnHint, label, tooltip, disabled, invalid, wide, inline, clearable } = props;\n  const selectedColumnName = selectedColumn?.name;\n  const columns: Array<SelectableValue<string>> = allColumns.\n    filter(columnFilterFn || defaultFilterFn).\n    map(c => ({ label: c.label || c.name, value: c.name }));\n\n  // Select component WILL NOT display the value if it isn't present in the options.\n  let staleOption = false;\n  if (selectedColumn && !columns.find(c => c.value === selectedColumn.name)) {\n    columns.push({ label: selectedColumn.alias || selectedColumn.name, value: selectedColumn.name });\n    staleOption = true;\n  }\n\n  const onChange = (selected: SelectableValue<string | undefined>) => {\n    if (!selected || !selected.value) {\n      onColumnChange(undefined);\n      return;\n    }\n\n    const column = allColumns.find(c => c.name === selected!.value)!;\n    const nextColumn: SelectedColumn = {\n      name: column?.name || selected!.value,\n      type: column?.type,\n      hint: columnHint,\n    };\n\n    if (column && column.label !== undefined) {\n      nextColumn.alias = column.label;\n    }\n\n    onColumnChange(nextColumn);\n  }\n\n  const labelStyle = 'query-keyword ' + (inline ? styles.QueryEditor.inlineField : '');\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={wide ? 12 : 8} className={labelStyle} tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select<string | undefined>\n        disabled={disabled}\n        invalid={invalid || staleOption}\n        options={columns}\n        value={selectedColumnName}\n        placeholder={selectedColumnName || undefined}\n        onChange={onChange}\n        width={wide ? 25 : 20}\n        menuPlacement={'bottom'}\n        isClearable={clearable === undefined || clearable}\n        allowCustomValue\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, InlineFormLabel, Select } from '@grafana/ui';\nimport {\n  OrderBy,\n  OrderByDirection,\n  QueryBuilderOptions,\n  TableColumn,\n} from 'types/queryBuilder';\nimport allLabels from 'labels';\nimport { styles } from 'styles';\nimport { isAggregateQuery } from 'data/sqlGenerator';\n\ninterface OrderByItemProps {\n  columnOptions: Array<SelectableValue<string>>;\n  index: number,\n  orderByItem: OrderBy;\n  updateOrderByItem: (index: number, orderByItem: OrderBy) => void;\n  removeOrderByItem: (index: number) => void;\n}\n\nconst sortOptions = [\n  { label: 'ASC', value: OrderByDirection.ASC },\n  { label: 'DESC', value: OrderByDirection.DESC },\n];\n\nconst OrderByItem = (props: OrderByItemProps) => {\n  const { columnOptions, index, orderByItem, updateOrderByItem, removeOrderByItem } = props;\n\n  return (\n    <>\n      <Select\n        disabled={Boolean(orderByItem.hint)}\n        placeholder={orderByItem.hint ? allLabels.types.ColumnHint[orderByItem.hint] : undefined}\n        value={orderByItem.hint ? undefined : orderByItem.name}\n        className={styles.Common.inlineSelect}\n        width={36}\n        options={columnOptions}\n        onChange={e => updateOrderByItem(index, { ...orderByItem, name: e.value! })}\n        allowCustomValue\n        menuPlacement={'bottom'}\n      />\n      <Select<OrderByDirection>\n        value={orderByItem.dir}\n        className={styles.Common.inlineSelect}\n        width={12}\n        options={sortOptions}\n        onChange={e => updateOrderByItem(index, { ...orderByItem, dir: e.value! })}\n        menuPlacement={'bottom'}\n      />\n      <Button\n        data-testid=\"query-builder-orderby-remove-button\"\n        className={styles.Common.smallBtn}\n        variant=\"destructive\"\n        size=\"sm\"\n        icon=\"trash-alt\"\n        onClick={() => removeOrderByItem(index)}\n      />\n    </>\n  );\n};\n\ninterface OrderByEditorProps {\n  orderByOptions: Array<SelectableValue<string>>;\n  orderBy: OrderBy[];\n  onOrderByChange: (orderBy: OrderBy[]) => void;\n}\nexport const OrderByEditor = (props: OrderByEditorProps) => {\n  const { orderByOptions, orderBy, onOrderByChange } = props;\n  const { label, tooltip, addLabel } = allLabels.components.OrderByEditor;\n\n  const addOrderByItem = () => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy.push({ name: orderByOptions[0]?.value!, dir: OrderByDirection.ASC });\n    onOrderByChange(nextOrderBy);\n  };\n  const removeOrderByItem = (index: number) => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy.splice(index, 1);\n    onOrderByChange(nextOrderBy);\n  };\n  const updateOrderByItem = (index: number, orderByItem: OrderBy) => {\n    const nextOrderBy: OrderBy[] = orderBy.slice();\n    nextOrderBy[index] = orderByItem;\n    onOrderByChange(nextOrderBy);\n  };\n\n  if (orderByOptions.length === 0) {\n    return null;\n  }\n\n  const fieldLabel = (\n    <InlineFormLabel\n      width={8}\n      className=\"query-keyword\"\n      data-testid=\"query-builder-orderby-item-label\"\n      tooltip={tooltip}\n    >\n      {label}\n    </InlineFormLabel>\n  );\n  const fieldSpacer = <div className={`width-8 ${styles.Common.firstLabel}`}></div>;\n\n  return (\n    <>\n      {orderBy.map((orderByItem, index) => {\n        const key = `${index}-${orderByItem.name}-${orderByItem.hint || ''}-${orderByItem.dir}`;\n        return (\n          <div className=\"gf-form\" key={key} data-testid=\"query-builder-orderby-item-wrapper\">\n            { index === 0 ? fieldLabel : fieldSpacer }\n            <OrderByItem\n              columnOptions={orderByOptions}\n              index={index}\n              orderByItem={orderByItem}\n              updateOrderByItem={updateOrderByItem}\n              removeOrderByItem={removeOrderByItem}\n            />\n          </div>\n        );\n      })}\n\n      <div className=\"gf-form\">\n        {orderBy.length === 0 ? fieldLabel : fieldSpacer}\n        <Button\n          data-testid=\"query-builder-orderby-add-button\"\n          icon=\"plus-circle\"\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={addOrderByItem}\n          className={styles.Common.smallBtn}\n        >\n          {addLabel}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport const getOrderByOptions = (builder: QueryBuilderOptions, allColumns: readonly TableColumn[]): Array<SelectableValue<string>> => {\n  let allOptions: Array<SelectableValue<string>> = [];\n\n  if (isAggregateQuery(builder)) {\n    builder.columns?.forEach(c => {\n      allOptions.push({ label: c.alias || c.name, value: c.name });\n    });\n\n    builder.aggregates!.forEach(a => {\n      let label = `${a.aggregateType}(${a.column})`;\n      let value = label;\n\n      if (a.alias) {\n        label += ` as ${a.alias}`;\n        value = a.alias;\n      }\n\n      allOptions.push({ label, value });\n    });\n\n    if (builder.groupBy && builder.groupBy.length > 0) {\n      builder.groupBy.forEach(g => allOptions.push({ label: g, value: g }));\n    }\n  } else {\n    allColumns.forEach(c => allOptions.push({ label: c.label || c.name, value: c.name }));\n  }\n\n  // Add selected value to the list if it does not exist.\n  const allValues = new Set(allOptions.map(o => o.value));\n  const customValues = builder.orderBy?.filter(o => !allValues.has(o.name));\n  customValues?.forEach(o => allOptions.push({ label: o.name, value: o.name }));\n\n  return allOptions;\n};\n","import React, { useState } from 'react';\nimport { InlineFormLabel, Input } from '@grafana/ui';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\n\ninterface LimitEditorProps {\n  limit: number;\n  onLimitChange: (limit: number) => void;\n}\n\nexport const LimitEditor = (props: LimitEditorProps) => {\n  const [limit, setLimit] = useState<number>(props.limit || 0);\n  const { label, tooltip } = labels.components.LimitEditor;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        data-testid={selectors.components.QueryBuilder.LimitEditor.input}\n        width={10}\n        value={limit}\n        type=\"number\"\n        min={0}\n        onChange={e => setLimit(e.currentTarget.valueAsNumber)}\n        onBlur={() => props.onLimitChange(limit)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { Button, HorizontalGroup, InlineFormLabel, Input, MultiSelect, RadioButtonGroup, Select } from '@grafana/ui';\nimport { Filter, FilterOperator, TableColumn, NullFilter } from 'types/queryBuilder';\nimport * as utils from 'components/queryBuilder/utils';\nimport labels from 'labels';\nimport { styles } from 'styles';\nimport { Datasource } from 'data/CHDatasource';\nimport useUniqueMapKeys from 'hooks/useUniqueMapKeys';\n\nconst boolValues: Array<SelectableValue<boolean>> = [\n  { value: true, label: 'True' },\n  { value: false, label: 'False' },\n];\nconst conditions: Array<SelectableValue<'AND' | 'OR'>> = [\n  { value: 'AND', label: 'AND' },\n  { value: 'OR', label: 'OR' },\n];\nconst filterOperators: Array<SelectableValue<FilterOperator>> = [\n  { value: FilterOperator.WithInGrafanaTimeRange, label: 'Within dashboard time range' },\n  { value: FilterOperator.OutsideGrafanaTimeRange, label: 'Outside dashboard time range' },\n  { value: FilterOperator.IsAnything, label: 'IS ANYTHING' },\n  { value: FilterOperator.Equals, label: '=' },\n  { value: FilterOperator.NotEquals, label: '!=' },\n  { value: FilterOperator.LessThan, label: '<' },\n  { value: FilterOperator.LessThanOrEqual, label: '<=' },\n  { value: FilterOperator.GreaterThan, label: '>' },\n  { value: FilterOperator.GreaterThanOrEqual, label: '>=' },\n  { value: FilterOperator.Like, label: 'LIKE' },\n  { value: FilterOperator.NotLike, label: 'NOT LIKE' },\n  { value: FilterOperator.IsEmpty, label: 'IS EMPTY' },\n  { value: FilterOperator.IsNotEmpty, label: 'IS NOT EMPTY' },\n  { value: FilterOperator.In, label: 'IN' },\n  { value: FilterOperator.NotIn, label: 'NOT IN' },\n  { value: FilterOperator.IsNull, label: 'IS NULL' },\n  { value: FilterOperator.IsNotNull, label: 'IS NOT NULL' },\n];\nconst standardTimeOptions: Array<SelectableValue<string>> = [\n  { value: 'today()', label: 'TODAY' },\n  { value: 'yesterday()', label: 'YESTERDAY' },\n  { value: 'now()', label: 'NOW' },\n  { value: 'GRAFANA_START_TIME', label: 'DASHBOARD START TIME' },\n  { value: 'GRAFANA_END_TIME', label: 'DASHBOARD END TIME' },\n];\nexport const defaultNewFilter: NullFilter = {\n  filterType: 'custom',\n  condition: 'AND',\n  key: '',\n  type: '',\n  operator: FilterOperator.IsAnything,\n};\nexport interface PredefinedFilter {\n  restrictToFields?: readonly TableColumn[];\n}\n\nconst FilterValueNumberItem = (props: { value: number; onChange: (value: number) => void }) => {\n  const [value, setValue] = useState(props.value || 0);\n  return (\n    <div data-testid=\"query-builder-filters-number-value-container\">\n      <Input\n        data-testid=\"query-builder-filters-number-value-input\"\n        type=\"number\"\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.valueAsNumber || 0)}\n        onBlur={() => props.onChange(value)}\n      />\n    </div>\n  );\n};\n\nconst FilterValueSingleStringItem = (props: { value: string; onChange: (value: string) => void }) => {\n  return (\n    <div data-testid=\"query-builder-filters-single-string-value-container\">\n      <Input\n        data-testid=\"query-builder-filters-single-string-value-input\"\n        type=\"text\"\n        defaultValue={props.value}\n        width={70}\n        onBlur={(e) => props.onChange(e.currentTarget.value)}\n      />\n    </div>\n  );\n};\n\nconst FilterValueMultiStringItem = (props: { value: string[]; onChange: (value: string[]) => void }) => {\n  const [value, setValue] = useState(props.value || []);\n  return (\n    <div data-testid=\"query-builder-filters-multi-string-value-container\">\n      <Input\n        type=\"text\"\n        value={value.join(',')}\n        placeholder=\"comma separated values\"\n        onChange={(e) => setValue((e.currentTarget.value || '').split(','))}\n        onBlur={() => props.onChange(value)}\n      />\n    </div>\n  );\n};\n\nexport const FilterValueEditor = (props: {\n  allColumns: readonly TableColumn[];\n  filter: Filter;\n  onFilterChange: (filter: Filter) => void;\n}) => {\n  const { filter, onFilterChange, allColumns: fieldsList } = props;\n  const getOptions = () => {\n    const matchedFilter = fieldsList.find((f) => f.name === filter.key);\n    return matchedFilter?.picklistValues || [];\n  };\n  if (utils.isNullFilter(filter)) {\n    return <></>;\n  } else if ([FilterOperator.IsAnything, FilterOperator.IsEmpty, FilterOperator.IsNotEmpty].includes(filter.operator)) {\n    return <></>;\n  } else if (utils.isBooleanFilter(filter)) {\n    const onBoolFilterValueChange = (value: boolean) => {\n      onFilterChange({ ...filter, value });\n    };\n    return (\n      <div data-testid=\"query-builder-filters-boolean-value-container\">\n        <RadioButtonGroup options={boolValues} value={filter.value} onChange={(e) => onBoolFilterValueChange(e!)} />\n      </div>\n    );\n  } else if (utils.isNumberFilter(filter)) {\n    return <FilterValueNumberItem value={filter.value} onChange={(value) => onFilterChange({ ...filter, value })} />;\n  } else if (utils.isDateFilter(filter)) {\n    if (utils.isDateFilterWithOutValue(filter)) {\n      return null;\n    }\n\n    const onDateFilterValueChange = (value: string) => {\n      onFilterChange({ ...filter, value });\n    };\n    const dateOptions = [...standardTimeOptions];\n    if (filter.value && !standardTimeOptions.find(o => o.value === filter.value)) {\n      dateOptions.push({ label: filter.value, value: filter.value });\n    }\n\n    return (\n      <div data-testid=\"query-builder-filters-date-value-container\">\n        <Select\n          value={filter.value || 'TODAY'}\n          onChange={e => onDateFilterValueChange(e.value!)}\n          options={dateOptions}\n          width={40}\n          allowCustomValue\n        />\n      </div>\n    );\n  } else if (utils.isStringFilter(filter)) {\n    const onStringFilterValueChange = (value: string) => {\n      onFilterChange({ ...filter, value });\n    };\n    if (\n      filter.type === 'picklist' &&\n      (filter.operator === FilterOperator.Equals || filter.operator === FilterOperator.NotEquals)\n    ) {\n      return (\n        <div data-testid=\"query-builder-filters-single-picklist-value-container\">\n          <Select value={filter.value} onChange={(e) => onStringFilterValueChange(e.value!)} options={getOptions()} />\n        </div>\n      );\n    }\n\n    return (\n      <FilterValueSingleStringItem\n        value={filter.value}\n        onChange={onStringFilterValueChange}\n        // enforce input re-render when filter changes to avoid stale input value\n        key={filter.value}\n      />\n    );\n  } else if (utils.isMultiFilter(filter)) {\n    const onMultiFilterValueChange = (value: string[]) => {\n      onFilterChange({ ...filter, value });\n    };\n    if (filter.type === 'picklist') {\n      return (\n        <div data-testid=\"query-builder-filters-multi-picklist-value-container\">\n          <MultiSelect\n            value={filter.value}\n            options={getOptions()}\n            onChange={(e) => onMultiFilterValueChange(e.map((v) => v.value!))}\n          />\n        </div>\n      );\n    }\n    return <FilterValueMultiStringItem value={filter.value} onChange={onMultiFilterValueChange} />;\n  } else {\n    return <></>;\n  }\n};\n\nexport const FilterEditor = (props: {\n  allColumns: readonly TableColumn[];\n  index: number;\n  filter: Filter & PredefinedFilter;\n  onFilterChange: (index: number, filter: Filter) => void;\n  removeFilter: (index: number) => void;\n  datasource: Datasource;\n  database: string;\n  table: string;\n}) => {\n  const { index, filter, allColumns: fieldsList, onFilterChange, removeFilter } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const isMapType = filter.type.startsWith('Map');\n  const mapKeys = useUniqueMapKeys(props.datasource, isMapType ? filter.key : '', props.database, props.table);\n  const mapKeyOptions = mapKeys.map(k => ({ label: k, value: k }));\n  if (filter.mapKey && !mapKeys.includes(filter.mapKey)) {\n    mapKeyOptions.push({ label: filter.mapKey, value: filter.mapKey });\n  }\n\n  const getFields = () => {\n    const values = (filter.restrictToFields || fieldsList).map(f => {\n      let label = f.label || f.name;\n      if (f.type.startsWith('Map')) {\n        label += '[]';\n      }\n\n      return { label, value: f.name };\n    });\n    // Add selected value to the list if it does not exist.\n    if (filter?.key && !values.find((x) => x.value === filter.key)) {\n      values.push({ label: filter.label || filter.key!, value: filter.key! });\n    }\n    return values;\n  };\n  const getFilterOperatorsByType = (type = 'string'): Array<SelectableValue<FilterOperator>> => {\n    if (utils.isBooleanType(type)) {\n      return filterOperators.filter((f) => [FilterOperator.Equals, FilterOperator.NotEquals].includes(f.value!));\n    } else if (utils.isNumberType(type)) {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n        ].includes(f.value!)\n      );\n    } else if (utils.isDateType(type)) {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n          FilterOperator.WithInGrafanaTimeRange,\n          FilterOperator.OutsideGrafanaTimeRange,\n        ].includes(f.value!)\n      );\n    } else {\n      return filterOperators.filter((f) =>\n        [\n          FilterOperator.IsAnything,\n          FilterOperator.Like,\n          FilterOperator.NotLike,\n          FilterOperator.In,\n          FilterOperator.NotIn,\n          FilterOperator.IsNull,\n          FilterOperator.IsNotNull,\n          FilterOperator.Equals,\n          FilterOperator.NotEquals,\n          FilterOperator.IsEmpty,\n          FilterOperator.IsNotEmpty,\n          FilterOperator.LessThan,\n          FilterOperator.LessThanOrEqual,\n          FilterOperator.GreaterThan,\n          FilterOperator.GreaterThanOrEqual,\n        ].includes(f.value!)\n      );\n    }\n  };\n  const onFilterNameChange = (fieldName: string) => {\n    setIsOpen(false);\n    const matchingField = fieldsList.find(f => f.name === fieldName);\n    const filterData = {\n      key: matchingField?.name || fieldName,\n      type: matchingField?.type || 'String',\n      label: matchingField?.label,\n    };\n\n    let newFilter: Filter & PredefinedFilter;\n    // this is an auto-generated TimeRange filter\n    if (filter.restrictToFields) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key || filter.key,\n        type: 'datetime',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        restrictToFields: filter.restrictToFields,\n        label: filterData.label,\n      };\n    } else if (utils.isBooleanType(filterData.type)) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: 'boolean',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.Equals,\n        value: false,\n        label: filterData.label,\n      };\n    } else if (utils.isDateType(filterData.type)) {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: filterData.type as 'date',\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.Equals,\n        value: 'TODAY',\n        label: filterData.label,\n      };\n    } else {\n      newFilter = {\n        filterType: 'custom',\n        key: filterData.key,\n        type: filterData.type,\n        condition: filter.condition || 'AND',\n        operator: FilterOperator.IsNotNull,\n        label: filterData.label,\n      };\n    }\n    onFilterChange(index, newFilter);\n  };\n  const onFilterMapKeyChange = (mapKey: string) => {\n    const newFilter: Filter = { ...filter };\n    newFilter.mapKey = mapKey;\n    onFilterChange(index, newFilter);\n  };\n  const onFilterOperatorChange = (operator: FilterOperator) => {\n    const newFilter: Filter = { ...filter };\n    newFilter.operator = operator;\n    if (utils.isMultiFilter(newFilter)) {\n      if (!Array.isArray(newFilter.value)) {\n        newFilter.value = [newFilter.value || ''];\n      }\n    }\n    onFilterChange(index, newFilter);\n  };\n  const onFilterConditionChange = (condition: 'AND' | 'OR') => {\n    const newFilter: Filter = { ...filter };\n    newFilter.condition = condition;\n    onFilterChange(index, newFilter);\n  };\n  const onFilterValueChange = (filter: Filter) => {\n    onFilterChange(index, filter);\n  };\n\n  return (\n    <HorizontalGroup wrap align=\"flex-start\" justify=\"flex-start\">\n      {index !== 0 && (\n        <RadioButtonGroup options={conditions} value={filter.condition} onChange={(e) => onFilterConditionChange(e!)} />\n      )}\n      <Select\n        disabled={Boolean(filter.hint)}\n        placeholder={filter.hint ? labels.types.ColumnHint[filter.hint] : undefined}\n        value={filter.key}\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={getFields()}\n        isOpen={isOpen}\n        onOpenMenu={() => setIsOpen(true)}\n        onCloseMenu={() => setIsOpen(false)}\n        onChange={(e) => onFilterNameChange(e.value!)}\n        allowCustomValue\n        menuPlacement={'bottom'}\n      />\n      { isMapType &&\n        <Select\n          value={filter.mapKey}\n          placeholder={labels.components.FilterEditor.mapKeyPlaceholder}\n          width={40}\n          className={styles.Common.inlineSelect}\n          options={mapKeyOptions}\n          onChange={e => onFilterMapKeyChange(e.value!)}\n          allowCustomValue\n          menuPlacement={'bottom'}\n        />  \n      }\n      <Select\n        value={filter.operator}\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={getFilterOperatorsByType(filter.type)}\n        onChange={(e) => onFilterOperatorChange(e.value!)}\n        menuPlacement={'bottom'}\n      />\n      <FilterValueEditor filter={filter} onFilterChange={onFilterValueChange} allColumns={fieldsList} />\n      <Button\n        data-testid=\"query-builder-filters-remove-button\"\n        icon=\"trash-alt\"\n        variant=\"destructive\"\n        size=\"sm\"\n        className={styles.Common.smallBtn}\n        onClick={() => removeFilter(index)}\n      />\n    </HorizontalGroup>\n  );\n};\n\nexport const FiltersEditor = (props: {\n  allColumns: readonly TableColumn[];\n  filters: Filter[];\n  onFiltersChange: (filters: Filter[]) => void;\n  datasource: Datasource;\n  database: string;\n  table: string;\n}) => {\n  const { filters = [], onFiltersChange, allColumns: fieldsList = [], datasource, database, table } = props;\n  const { label, tooltip, addLabel } = labels.components.FilterEditor;\n  const addFilter = () => {\n    onFiltersChange([...filters, { ...defaultNewFilter }]);\n  };\n  const removeFilter = (index: number) => {\n    const newFilters = [...filters];\n    newFilters.splice(index, 1);\n    onFiltersChange(newFilters);\n  };\n  const onFilterChange = (index: number, filter: Filter) => {\n    const newFilters = [...filters];\n    newFilters[index] = filter;\n    onFiltersChange(newFilters);\n  };\n\n  return (\n    <>\n      {filters.length === 0 && (\n        <div className=\"gf-form\">\n          <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n            {label}\n          </InlineFormLabel>\n          <Button\n            data-testid=\"query-builder-filters-add-button\"\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            className={styles.Common.smallBtn}\n            onClick={addFilter}\n          >\n            {addLabel}\n          </Button>\n        </div>\n      )}\n      {filters.map((filter, index) => {\n        return (\n          <div className=\"gf-form\" key={index}>\n            {index === 0 ? (\n              <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n                {label}\n              </InlineFormLabel>\n            ) : (\n              <div className={`width-8 ${styles.Common.firstLabel}`}></div>\n            )}\n            <FilterEditor\n              allColumns={fieldsList}\n              filter={filter}\n              onFilterChange={onFilterChange}\n              removeFilter={removeFilter}\n              index={index}\n              datasource={datasource}\n              database={database}\n              table={table}\n            />\n          </div>\n        );\n      })}\n      {filters.length !== 0 && (\n        <div className=\"gf-form\">\n          <div className={`width-8 ${styles.Common.firstLabel}`}></div>\n          <Button\n            data-testid=\"query-builder-filters-inline-add-button\"\n            icon=\"plus-circle\"\n            variant=\"secondary\"\n            size=\"sm\"\n            className={styles.Common.smallBtn}\n            onClick={addFilter}\n          >\n            {addLabel}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, mapColumn: string, database: string, table: string): readonly string[] => {\n  const [keys, setKeys] = useState<string[]>([]); \n  \n  useEffect(() => {\n    if (!datasource || !mapColumn || !database || !table) {\n      return;\n    }\n\n    let ignore = false;\n    datasource.\n      fetchUniqueMapKeys(mapColumn, database, table).\n      then(tables => {\n        if (ignore) {\n          return;\n        }\n        setKeys(tables);\n      }).\n      catch((ex: any) => {\n        console.error('Failed to fetch map keys for column:', mapColumn, database, table, ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, mapColumn, database, table]);\n\n  // Immediately return empty array on change so keys aren't stale\n  const lastDatabase = useRef<string>('');\n  const lastTable = useRef<string>('');\n  if (database !== lastDatabase.current || table !== lastTable.current) {\n    lastDatabase.current = database;\n    lastTable.current = table;\n    setKeys([]);\n    return [];\n  }\n\n  return keys;\n}\n","import { SelectedColumn } from \"types/queryBuilder\";\n\n\nexport const columnFilterDateTime = (s: SelectedColumn): boolean => (s.type || '').toLowerCase().includes('date');\nexport const columnFilterString = (s: SelectedColumn): boolean => (s.type || '').toLowerCase().includes('string') || (s.type || '').toLowerCase().includes('enum');\nexport const columnFilterOr = (s: SelectedColumn, ...filterFuncs: ReadonlyArray<(s: SelectedColumn) => boolean>): boolean => {\n  for (let filterFn of filterFuncs) {\n    if (filterFn(s)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n","import React from 'react';\n\ntype onOptionChangeFn<T> = (key: keyof T) => (nextValue: React.SetStateAction<any>) => void;\n\n/**\n * Returns a function that can apply changes with an object or a specific key in an object. When called\n * will run another function with the changes applied.\n * \n * Does not deep clone the object. This is used for top level fields on the QueryBuilderOptions type.\n * \n * @param onChange a function that receives the updated state from the change function\n * @param prevState the current (previous) state object\n * @returns a function used to apply changes to individual fields\n */\nexport function useBuilderOptionChanges<T>(onChange: (nextState: T) => void, prevState: T): onOptionChangeFn<T> {\n  return (key: keyof T) =>\n    (nextValue: React.SetStateAction<any>) => {\n    const nextState: T = {\n      ...prevState,\n      [key]: nextValue\n    };\n    \n    onChange(nextState);\n  };\n}\n","import { useState, useEffect, useRef } from 'react';\nimport { TableColumn } from 'types/queryBuilder';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, database: string, table: string): readonly TableColumn[] => {\n  const [columns, setColumns] = useState<readonly TableColumn[]>([]);\n\n  useEffect(() => {\n    if (!datasource || !database || !table) {\n      return;\n    }\n\n    let ignore = false;\n    datasource.fetchColumns(database, table).then(columns => {\n        if (ignore) {\n          return;\n        }\n        setColumns(columns);\n      })\n      .catch((ex: any) => {\n        console.error(ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, database, table]);\n\n  // Immediately return empty array on change so columns aren't stale\n  const lastDbTable = useRef<string>('');\n  const dbTable = database + table;\n  if (dbTable !== lastDbTable.current) {\n    lastDbTable.current = dbTable;\n    setColumns([]);\n    return [];\n  }\n\n  return columns;\n};\n","import { Reducer, useReducer } from \"react\";\nimport { QueryBuilderOptions, QueryType, SelectedColumn } from \"types/queryBuilder\";\nimport { defaultCHBuilderQuery } from \"types/sql\";\n\nenum BuilderOptionsActionType {\n  SetOptions = 'set_options',\n  SetAllOptions = 'set_all_options',\n  SetQueryType = 'set_query_type',\n  SetDatabase = 'set_database',\n  SetTable = 'set_table',\n  SetOtelEnabled = 'set_otel_enabled',\n  SetOtelVersion = 'set_otel_version',\n  SetColumnByHint = 'set_column_by_hint',\n  SetBuilderMinimized = 'set_builder_minimized',\n};\n\ntype QueryBuilderOptionsReducerAction = {\n  type: BuilderOptionsActionType,\n  payload: Partial<QueryBuilderOptions>\n};\n\ntype GenericReducerAction = {\n  type: BuilderOptionsActionType,\n  payload: any\n};\n\nexport type BuilderOptionsReducerAction = QueryBuilderOptionsReducerAction | GenericReducerAction;\n\nconst createAction = (type: BuilderOptionsActionType, payload: Partial<QueryBuilderOptions>): BuilderOptionsReducerAction => ({ type, payload });\nconst createGenericAction = (type: BuilderOptionsActionType, payload: any): GenericReducerAction => ({ type, payload });\nexport const setOptions = (options: Partial<QueryBuilderOptions>): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetOptions, options);\nexport const setAllOptions = (options: QueryBuilderOptions): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetAllOptions, options);\nexport const setQueryType = (queryType: QueryType): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetQueryType, { queryType });\nexport const setDatabase = (database: string): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetDatabase, { database });\nexport const setTable = (table: string): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetTable, { table });\nexport const setOtelEnabled = (otelEnabled: boolean): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetOtelEnabled, { meta: { otelEnabled } });\nexport const setOtelVersion = (otelVersion: string): BuilderOptionsReducerAction => createAction(BuilderOptionsActionType.SetOtelVersion, { meta: { otelVersion } });\nexport const setColumnByHint = (column: SelectedColumn): GenericReducerAction => createGenericAction(BuilderOptionsActionType.SetColumnByHint, { column });\nexport const setBuilderMinimized = (minimized: boolean): GenericReducerAction => createGenericAction(BuilderOptionsActionType.SetBuilderMinimized, { minimized });\n\n\nconst reducer = (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n  const actionFn = actions.get(action.type);\n  if (!actionFn) {\n    throw Error('missing function for BuilderOptionsActionType: ' + action.type);\n  }\n\n  const nextState = actionFn(state, action);\n  // console.log('ACTION:', action.type, 'PAYLOAD:', action.payload, 'PREV STATE:', state, 'NEXT STATE:', nextState);\n  return nextState;\n};\n\n/**\n * A mapping between action type and reducer function, used in reducer to apply action changes.\n */\nconst actions = new Map<BuilderOptionsActionType, Reducer<QueryBuilderOptions, BuilderOptionsReducerAction>>([\n  [BuilderOptionsActionType.SetOptions, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // A catch-all action for applying option changes.\n    const nextOptions = action.payload as Partial<QueryBuilderOptions>;\n    return mergeBuilderOptionsState(state, nextOptions);\n  }],\n  [BuilderOptionsActionType.SetAllOptions, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // Resets existing state with provided options.\n    const nextOptions = action.payload as Partial<QueryBuilderOptions>;\n    return buildInitialState(nextOptions);\n  }],\n  [BuilderOptionsActionType.SetQueryType, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // If switching query type, reset the editor.\n    const nextQueryType = action.payload.queryType;\n    if (state.queryType !== nextQueryType) {\n      return buildInitialState({\n        database: state.database,\n        table: state.table,\n        queryType: nextQueryType\n      });\n    }\n\n    return state;\n  }],\n  [BuilderOptionsActionType.SetDatabase, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // Clear table and reset editor when database changes\n    return buildInitialState({\n      database: action.payload.database,\n      table: '',\n      queryType: state.queryType\n    });\n  }],\n  [BuilderOptionsActionType.SetTable, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    // Reset editor when table changes\n    return buildInitialState({\n      database: state.database,\n      table: action.payload.table,\n      queryType: state.queryType\n    });\n  }],\n  [BuilderOptionsActionType.SetOtelEnabled, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    return mergeBuilderOptionsState(state, {\n      meta: {\n        otelEnabled: Boolean(action.payload.meta?.otelEnabled),\n      }\n    });\n  }],\n  [BuilderOptionsActionType.SetOtelVersion, (state: QueryBuilderOptions, action: BuilderOptionsReducerAction): QueryBuilderOptions => {\n    return mergeBuilderOptionsState(state, {\n      meta: {\n        otelVersion: action.payload.meta?.otelVersion\n      }\n    });\n  }],\n  [BuilderOptionsActionType.SetColumnByHint, (state: QueryBuilderOptions, action: GenericReducerAction): QueryBuilderOptions => {\n    const col = action.payload.column as SelectedColumn;\n    const nextColumns = (state.columns || []).filter(c => c.hint !== col.hint);\n    nextColumns.push(col);\n\n    return mergeBuilderOptionsState(state, {\n      columns: nextColumns\n    });\n  }],  \n  [BuilderOptionsActionType.SetBuilderMinimized, (state: QueryBuilderOptions, action: GenericReducerAction): QueryBuilderOptions => {\n    const minimized = action.payload.minimized as boolean;\n    return mergeBuilderOptionsState(state, {\n      meta: { minimized }\n    });\n  }],\n]);\n\nconst buildInitialState = (savedOptions?: Partial<QueryBuilderOptions>): QueryBuilderOptions => {\n  const defaultOptions = defaultCHBuilderQuery.builderOptions;\n  const initialState = {\n    ...defaultOptions,\n    ...savedOptions,\n    meta: {\n      ...defaultOptions.meta,\n      ...savedOptions?.meta,\n    }\n  };\n\n  return initialState;\n};\n\nconst mergeBuilderOptionsState = (prevState: QueryBuilderOptions, nextState: Partial<QueryBuilderOptions>): QueryBuilderOptions => {\n  return {\n    ...prevState,\n    ...nextState,\n    meta: {\n      ...prevState.meta,\n      ...nextState.meta\n    }\n  };\n}\n\nexport const useBuilderOptionsState = (savedOptions: QueryBuilderOptions): [QueryBuilderOptions, React.Dispatch<BuilderOptionsReducerAction>] => {\n  const [state, dispatch] = useReducer<typeof reducer, QueryBuilderOptions>(reducer, savedOptions, buildInitialState);\n  return [state as QueryBuilderOptions, dispatch];\n};\n\nexport const testFuncs = {\n  reducer,\n  buildInitialState\n};\n","import { isBuilderOptionsRunnable } from \"data/utils\";\nimport { useRef } from \"react\"\nimport { QueryBuilderOptions } from \"types/queryBuilder\";\n\n/**\n * Returns true if the initial builderOptions represent a new query.\n * Returns false if the query was loaded from a saved URL or dashboard.\n * \n * Does not update on re-renders\n */\nexport default (builderOptions: QueryBuilderOptions): boolean => {\n  const isNewQuery = useRef<boolean>(!isBuilderOptionsRunnable(builderOptions));\n  return isNewQuery.current;\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { Filter, OrderBy, QueryBuilderOptions, SelectedColumn, ColumnHint } from 'types/queryBuilder';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { OtelVersionSelect } from '../OtelVersionSelect';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { columnFilterDateTime, columnFilterString } from 'data/columnFilters';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport { Alert, Button, InlineFormLabel, Input, VerticalGroup } from '@grafana/ui';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions, setOtelEnabled, setOtelVersion } from 'hooks/useBuilderOptionsState';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\nimport { useDefaultFilters, useDefaultTimeColumn, useLogDefaultsOnMount, useOtelColumns } from './logsQueryBuilderHooks';\nimport { styles } from 'styles';\nimport { Components as allSelectors } from 'selectors';\n\ninterface LogsQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface LogsQueryBuilderState {\n  otelEnabled: boolean;\n  otelVersion: string;\n  selectedColumns: SelectedColumn[];\n  timeColumn?: SelectedColumn;\n  logLevelColumn?: SelectedColumn;\n  messageColumn?: SelectedColumn;\n  labelsColumn?: SelectedColumn;\n  // liveView: boolean;\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n  logMessageLike: string;\n}\n\nexport const LogsQueryBuilder = (props: LogsQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const labels = allLabels.components.LogsQueryBuilder;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const builderState: LogsQueryBuilderState = useMemo(() => ({\n    otelEnabled: builderOptions.meta?.otelEnabled || false,\n    otelVersion: builderOptions.meta?.otelVersion || '',\n    timeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n    logLevelColumn: getColumnByHint(builderOptions, ColumnHint.LogLevel),\n    messageColumn: getColumnByHint(builderOptions, ColumnHint.LogMessage),\n    labelsColumn: getColumnByHint(builderOptions, ColumnHint.LogLabels),\n    selectedColumns: builderOptions.columns?.filter(c => (\n      // Only select columns that don't have their own box\n      c.hint !== ColumnHint.Time &&\n      c.hint !== ColumnHint.LogLevel &&\n      c.hint !== ColumnHint.LogMessage &&\n      c.hint !== ColumnHint.LogLabels\n    )) || [],\n    // liveView: builderOptions.meta?.liveView || false,\n    filters: builderOptions.filters || [],\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    logMessageLike: builderOptions.meta?.logMessageLike || '',\n    }), [builderOptions]);\n  const [showConfigWarning, setConfigWarningOpen] = useState(datasource.getDefaultLogsColumns().size === 0 && builderOptions.columns?.length === 0);\n\n  const onOptionChange = useBuilderOptionChanges<LogsQueryBuilderState>(next => {\n    const nextColumns = next.selectedColumns.slice();\n    if (next.timeColumn) {\n      nextColumns.push(next.timeColumn);\n    }\n    if (next.logLevelColumn) {\n      nextColumns.push(next.logLevelColumn);\n    }\n    if (next.messageColumn) {\n      nextColumns.push(next.messageColumn);\n    }\n    if (next.labelsColumn) {\n      nextColumns.push(next.labelsColumn);\n    }\n\n    builderOptionsDispatch(setOptions({\n      columns: nextColumns,\n      filters: next.filters,\n      orderBy: next.orderBy,\n      limit: next.limit,\n      meta: {\n        logMessageLike: next.logMessageLike,\n      }\n    }));\n  }, builderState);\n\n  useLogDefaultsOnMount(datasource, isNewQuery, builderOptions, builderOptionsDispatch);\n  useOtelColumns(datasource, builderState.otelEnabled, builderState.otelVersion, builderOptionsDispatch);\n  useDefaultTimeColumn(datasource, allColumns, builderOptions.table, builderState.timeColumn, builderState.otelEnabled, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, isNewQuery, builderOptionsDispatch);\n  \n  const configWarning = showConfigWarning && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\" onRemove={() => setConfigWarningOpen(false)}>\n      <VerticalGroup>\n        <div>\n          {'To speed up your query building, enter your default logs configuration in your '}\n          <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#logs-config`}>ClickHouse Data Source settings</a>\n        </div>\n      </VerticalGroup>\n    </Alert>\n  );\n\n  return (\n    <div>\n      { configWarning }\n      <OtelVersionSelect\n        enabled={builderState.otelEnabled}\n        onEnabledChange={e => builderOptionsDispatch(setOtelEnabled(e))}\n        selectedVersion={builderState.otelVersion}\n        onVersionChange={v => builderOptionsDispatch(setOtelVersion(v))}\n      />\n      <ColumnsEditor\n        disabled={builderState.otelEnabled}\n        allColumns={allColumns}\n        selectedColumns={builderState.selectedColumns}\n        onSelectedColumnsChange={onOptionChange('selectedColumns')}\n      />\n      <div className=\"gf-form\">\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.timeColumn}\n          invalid={!builderState.timeColumn}\n          onColumnChange={onOptionChange('timeColumn')}\n          columnFilterFn={columnFilterDateTime}\n          columnHint={ColumnHint.Time}\n          label={labels.logTimeColumn.label}\n          tooltip={labels.logTimeColumn.tooltip}\n        />\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.logLevelColumn}\n          invalid={!builderState.logLevelColumn}\n          onColumnChange={onOptionChange('logLevelColumn')}\n          columnFilterFn={columnFilterString}\n          columnHint={ColumnHint.LogLevel}\n          label={labels.logLevelColumn.label}\n          tooltip={labels.logLevelColumn.tooltip}\n          inline\n        />\n      </div>\n      <div className=\"gf-form\">\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.messageColumn}\n          invalid={!builderState.messageColumn}\n          onColumnChange={onOptionChange('messageColumn')}\n          columnFilterFn={columnFilterString}\n          columnHint={ColumnHint.LogMessage}\n          label={labels.logMessageColumn.label}\n          tooltip={labels.logMessageColumn.tooltip}\n        />\n        <ColumnSelect\n          disabled={builderState.otelEnabled}\n          allColumns={allColumns}\n          selectedColumn={builderState.labelsColumn}\n          invalid={!builderState.labelsColumn}\n          onColumnChange={onOptionChange('labelsColumn')}\n          columnHint={ColumnHint.LogLabels}\n          label={labels.logLabelsColumn.label}\n          tooltip={labels.logLabelsColumn.tooltip}\n          inline\n        />\n        {/* <Switch\n          value={builderState.liveView}\n          onChange={onOptionChange('liveView')}\n          label={labels.liveView.label}\n          tooltip={labels.liveView.tooltip}\n          inline\n        /> */}\n      </div>\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n      <LogMessageLikeInput logMessageLike={builderState.logMessageLike} onChange={onOptionChange('logMessageLike')} />\n    </div>\n  );\n}\n\ninterface LogMessageLikeInputProps {\n  logMessageLike: string;\n  onChange: (logMessageLike: string) => void;\n};\n\nconst LogMessageLikeInput = (props: LogMessageLikeInputProps) => {\n  const [input, setInput] = useState<string>('');\n  const { logMessageLike, onChange } = props;\n  const { label, tooltip, clearButton } = allLabels.components.LogsQueryBuilder.logMessageFilter;\n\n  useEffect(() => {\n    setInput(logMessageLike);\n  }, [logMessageLike]);\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        width={200}\n        value={input}\n        type=\"string\"\n        onChange={e => setInput(e.currentTarget.value)}\n        onBlur={() => onChange(input)}\n      />\n      { logMessageLike &&\n        <Button\n          data-testid={allSelectors.QueryBuilder.LogsQueryBuilder.LogMessageLikeInput.input}\n          variant=\"secondary\"\n          size=\"md\"\n          onClick={() => onChange('')}\n          className={styles.Common.smallBtn}\n          tooltip={allLabels.components.expandBuilderButton.tooltip}\n        >\n          {clearButton}\n        </Button>\n      }\n    </div>\n  )\n}\n","import { Datasource } from \"data/CHDatasource\";\nimport { columnFilterDateTime } from \"data/columnFilters\";\nimport { BuilderOptionsReducerAction, setColumnByHint, setOptions } from \"hooks/useBuilderOptionsState\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { ColumnHint, DateFilterWithoutValue, Filter, FilterOperator, OrderBy, OrderByDirection, QueryBuilderOptions, SelectedColumn, StringFilter, TableColumn } from \"types/queryBuilder\";\nimport otel from 'otel';\n\n/**\n * Loads the default configuration for new queries. (Only runs on new queries)\n */\nexport const useLogDefaultsOnMount = (datasource: Datasource, isNewQuery: boolean, builderOptions: QueryBuilderOptions, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (!isNewQuery || didSetDefaults.current) {\n      return;\n    }\n\n    const defaultDb = datasource.getDefaultLogsDatabase() || datasource.getDefaultDatabase();\n    const defaultTable = datasource.getDefaultLogsTable() || datasource.getDefaultTable();\n    const otelVersion = datasource.getLogsOtelVersion();\n    const defaultColumns = datasource.getDefaultLogsColumns();\n\n    const nextColumns: SelectedColumn[] = [];\n    const includedColumns = new Set<string>();\n    for (let [hint, colName] of defaultColumns) {\n      nextColumns.push({ name: colName, hint });\n      includedColumns.add(colName);\n    }\n\n    if (datasource.shouldSelectLogContextColumns()) {\n      const contextColumnNames = datasource.getLogContextColumnNames();\n\n      for (let columnName of contextColumnNames) {\n        if (includedColumns.has(columnName)) {\n          continue;\n        }\n\n        nextColumns.push({ name: columnName });\n        includedColumns.add(columnName);\n      }\n    }\n\n    builderOptionsDispatch(setOptions({\n      database: defaultDb,\n      table: defaultTable || builderOptions.table,\n      columns: nextColumns,\n      meta: {\n        otelEnabled: Boolean(otelVersion),\n        otelVersion,\n      }\n    }));\n    didSetDefaults.current = true;\n  }, [builderOptions.columns, builderOptions.orderBy, builderOptions.table, builderOptionsDispatch, datasource, isNewQuery]);\n};\n\n/**\n * Sets OTEL Logs columns automatically when OTEL is enabled.\n * Does not run if OTEL is already enabled, only when it's changed.\n */\nexport const useOtelColumns = (datasource: Datasource, otelEnabled: boolean, otelVersion: string, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetColumns = useRef<boolean>(otelEnabled);\n  if (!otelEnabled) {\n    didSetColumns.current = false;\n  }\n\n  useEffect(() => {\n    if (!otelEnabled || didSetColumns.current) {\n      return;\n    }\n\n    const otelConfig = otel.getVersion(otelVersion);\n    const logColumnMap = otelConfig?.logColumnMap;\n    if (!logColumnMap) {\n      return;\n    }\n\n    const columns: SelectedColumn[] = [];\n    const includedColumns = new Set<string>();\n    logColumnMap.forEach((name, hint) => {\n      columns.push({ name, hint });\n      includedColumns.add(name);\n    });\n\n    if (datasource.shouldSelectLogContextColumns()) {\n      const contextColumnNames = datasource.getLogContextColumnNames();\n\n      for (let columnName of contextColumnNames) {\n        if (includedColumns.has(columnName)) {\n          continue;\n        }\n\n        columns.push({ name: columnName });\n        includedColumns.add(columnName);\n      }\n    }\n\n    builderOptionsDispatch(setOptions({ columns }));\n    didSetColumns.current = true;\n  }, [datasource, otelEnabled, otelVersion, builderOptionsDispatch]);\n};\n\n// Finds and selects a default log time column, updates when table changes\nexport const useDefaultTimeColumn = (datasource: Datasource, allColumns: readonly TableColumn[], table: string, timeColumn: SelectedColumn | undefined, otelEnabled: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const hasDefaultColumnConfigured = useMemo(() => Boolean(datasource.getDefaultLogsTable()) && datasource.getDefaultLogsColumns().has(ColumnHint.Time), [datasource]);\n  const didSetDefaultTime = useRef<boolean>(Boolean(timeColumn) || hasDefaultColumnConfigured);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    didSetDefaultTime.current = false;\n  }\n\n  if (Boolean(timeColumn) || otelEnabled) {\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }\n\n  useEffect(() => {\n    if (didSetDefaultTime.current || allColumns.length === 0 || !table) {\n      return;\n    }\n\n    const col = allColumns.filter(columnFilterDateTime)[0];\n    if (!col) {\n      return;\n    }\n\n    const timeColumn: SelectedColumn = {\n      name: col.name,\n      type: col.type,\n      hint: ColumnHint.Time\n    };\n\n    builderOptionsDispatch(setColumnByHint(timeColumn));\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }, [datasource, allColumns, table, builderOptionsDispatch]);\n};\n\n// Apply default filters/orderBy on table change\nexport const useDefaultFilters = (table: string, isNewQuery: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (!table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND'\n      } as DateFilterWithoutValue,\n      {\n        type: 'string',\n        operator: FilterOperator.IsAnything,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.LogLevel,\n        condition: 'AND'\n      } as StringFilter,\n    ];\n\n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.DESC, default: true }\n    ];\n    \n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(setOptions({\n      filters: defaultFilters,\n      orderBy: defaultOrderBy\n    }));\n  }, [table, builderOptionsDispatch]);\n};\n","import React from 'react';\nimport { RadioButtonGroup, InlineFormLabel } from '@grafana/ui';\n\nexport interface ModeSwitchProps {\n  labelA: string;\n  labelB: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n  label: string;\n  tooltip: string;\n};\n\n/**\n * Component for switching between modes. Boxes are labeled unlike regular Switch.\n */\nexport const ModeSwitch = (props: ModeSwitchProps) => {\n  const { labelA, labelB, value, onChange, label, tooltip } = props;\n\n  const options = [\n    {\n      label: labelA,\n      value: false,\n    },\n    {\n      label: labelB,\n      value: true,\n    },\n  ];\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup<boolean>\n        options={options}\n        value={value}\n        onChange={v => onChange(v)}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Select, Button, Input, HorizontalGroup } from '@grafana/ui';\nimport { AggregateColumn, AggregateType, TableColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { selectors } from 'selectors';\nimport { styles } from 'styles';\n\ninterface AggregateProps {\n  columnOptions: Array<SelectableValue<string>>;\n  index: number,\n  aggregate: AggregateColumn;\n  updateAggregate: (index: number, aggregate: AggregateColumn) => void;\n  removeAggregate: (index: number) => void;\n}\n\nconst allAggregateOptions: Array<SelectableValue<AggregateType>> = [\n  { label: 'Count', value: AggregateType.Count },\n  { label: 'Sum', value: AggregateType.Sum },\n  { label: 'Min', value: AggregateType.Min },\n  { label: 'Max', value: AggregateType.Max },\n  { label: 'Average', value: AggregateType.Average },\n  { label: 'Any', value: AggregateType.Any },\n  // { label: 'Distinct Count', value: AggregateType.Count_Distinct },\n];\n\nconst Aggregate = (props: AggregateProps) => {\n  const { index, aggregate, updateAggregate, removeAggregate } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [alias, setAlias] = useState(aggregate.alias || '');\n  const { aliasLabel } = labels.components.AggregatesEditor;\n\n  // Add current value to aggregate functions\n  const aggregateOptions = allAggregateOptions.slice();\n  if (!aggregateOptions.find(a => a.value === aggregate.aggregateType)) {\n    aggregateOptions.push({ label: aggregate.aggregateType, value: aggregate.aggregateType });\n  }\n\n  // Add current value to column options\n  const columnOptions = props.columnOptions.slice();\n  if (!columnOptions.find(c => c.value === aggregate.column)) {\n    columnOptions.push({ label: aggregate.column, value: aggregate.column });\n  }\n\n  return (\n    <HorizontalGroup wrap align=\"flex-start\" justify=\"flex-start\">\n      <Select\n        width={20}\n        className={styles.Common.inlineSelect}\n        options={aggregateOptions}\n        value={aggregate.aggregateType}\n        onChange={e => updateAggregate(index, { ...aggregate, aggregateType: e.value! })}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      />\n      <Select<string>\n        width={40}\n        className={styles.Common.inlineSelect}\n        options={columnOptions}\n        isOpen={isOpen}\n        onOpenMenu={() => setIsOpen(true)}\n        onCloseMenu={() => setIsOpen(false)}\n        onChange={e => updateAggregate(index, { ...aggregate, column: e.value! })}\n        value={aggregate.column}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      />\n      <InlineFormLabel width={2} className=\"query-keyword\">\n        {aliasLabel}\n      </InlineFormLabel>\n      <Input\n        width={20}\n        value={alias}\n        onChange={e => setAlias(e.currentTarget.value)}\n        onBlur={e => updateAggregate(index, { ...aggregate, alias: e.currentTarget.value })}\n        placeholder=\"alias\"\n      />\n      <Button\n        data-testid={selectors.components.QueryBuilder.AggregateEditor.itemRemoveButton}\n        className={styles.Common.smallBtn}\n        variant=\"destructive\"\n        size=\"sm\"\n        icon=\"trash-alt\"\n        onClick={() => removeAggregate(index)}\n      />\n    </HorizontalGroup>\n  );\n};\n\ninterface AggregateEditorProps {\n  allColumns: readonly TableColumn[];\n  aggregates: AggregateColumn[];\n  onAggregatesChange: (aggregates: AggregateColumn[]) => void;\n}\n\nconst allColumnName = '*';\n\nexport const AggregateEditor = (props: AggregateEditorProps) => {\n  const { allColumns, aggregates, onAggregatesChange } = props;\n  const { label, tooltip, addLabel } = labels.components.AggregatesEditor;\n  const columnOptions: Array<SelectableValue<string>> = allColumns.map(c => ({ label: c.label || c.name, value: c.name }));\n  columnOptions.push({ label: allColumnName, value: allColumnName });\n\n  const addAggregate = () => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates.push({ column: '', aggregateType: AggregateType.Count });\n    onAggregatesChange(nextAggregates);\n  };\n  const removeAggregate = (index: number) => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates.splice(index, 1);\n    onAggregatesChange(nextAggregates);\n  };\n  const updateAggregate = (index: number, aggregatesItem: AggregateColumn) => {\n    const nextAggregates: AggregateColumn[] = aggregates.slice();\n    nextAggregates[index] = aggregatesItem;\n    onAggregatesChange(nextAggregates);\n  };\n\n  const fieldLabel = (\n    <InlineFormLabel\n      width={8}\n      className=\"query-keyword\"\n      data-testid={selectors.components.QueryBuilder.AggregateEditor.sectionLabel}\n      tooltip={tooltip}\n    >\n      {label}\n    </InlineFormLabel>\n  );\n  const fieldSpacer = <div className={`width-8 ${styles.Common.firstLabel}`}></div>;\n\n  return (\n    <>\n      {aggregates.map((aggregate, index) => {\n        const key = `${index}-${aggregate.column}-${aggregate.aggregateType}-${aggregate.alias}`;\n        return (\n          <div className=\"gf-form\" key={key} data-testid={selectors.components.QueryBuilder.AggregateEditor.itemWrapper}>\n            { index === 0 ? fieldLabel : fieldSpacer }\n            <Aggregate\n              columnOptions={columnOptions}\n              index={index}\n              aggregate={aggregate}\n              updateAggregate={updateAggregate}\n              removeAggregate={removeAggregate}\n            />\n          </div>\n        );\n      })}\n\n      <div className=\"gf-form\">\n        {aggregates.length === 0 ? fieldLabel : fieldSpacer}\n        <Button\n          data-testid={selectors.components.QueryBuilder.AggregateEditor.addButton}\n          icon=\"plus-circle\"\n          variant=\"secondary\"\n          size=\"sm\"\n          onClick={addAggregate}\n          className={styles.Common.smallBtn}\n        >\n          {addLabel}\n        </Button>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { InlineFormLabel, MultiSelect } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { TableColumn } from 'types/queryBuilder';\nimport labels from 'labels';\nimport { styles } from 'styles';\nimport { selectors } from 'selectors';\n\ninterface GroupByEditorProps {\n  allColumns: readonly TableColumn[];\n  groupBy: string[];\n  onGroupByChange: (groupBy: string[]) => void;\n}\n\nexport const GroupByEditor = (props: GroupByEditorProps) => {\n  const { allColumns, groupBy, onGroupByChange } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const { label, tooltip } = labels.components.GroupByEditor;\n  const options: Array<SelectableValue<string>> = allColumns.map(c => ({ label: c.name, value: c.name }));\n\n  const onChange = (selection: Array<SelectableValue<string>>) => {\n    setIsOpen(false);\n    onGroupByChange(selection.map(s => s.value!));\n  };\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <div data-testid={selectors.components.QueryBuilder.GroupByEditor.multiSelectWrapper} className={styles.Common.selectWrapper}>\n        <MultiSelect\n          options={options}\n          isOpen={isOpen}\n          onOpenMenu={() => setIsOpen(true)}\n          onCloseMenu={() => setIsOpen(false)}\n          value={groupBy}\n          onChange={onChange}\n          allowCustomValue={true}\n          menuPlacement={'bottom'}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { AggregateColumn, BuilderMode, Filter, OrderBy, QueryBuilderOptions, ColumnHint, SelectedColumn } from 'types/queryBuilder';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { AggregateEditor } from '../AggregateEditor';\nimport { GroupByEditor } from '../GroupByEditor';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { columnFilterDateTime } from 'data/columnFilters';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\nimport { useDefaultFilters, useDefaultTimeColumn } from './timeSeriesQueryBuilderHooks';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\n\ninterface TimeSeriesQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions,\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>,\n}\n\ninterface TimeSeriesQueryBuilderState {\n  isAggregateMode: boolean;\n  timeColumn?: SelectedColumn;\n  selectedColumns: SelectedColumn[];\n  aggregates: AggregateColumn[];\n  groupBy: string[];\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TimeSeriesQueryBuilder = (props: TimeSeriesQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const labels = allLabels.components.TimeSeriesQueryBuilder;\n  const builderState: TimeSeriesQueryBuilderState = useMemo(() => ({\n    // TODO: do not depend on \"mode\"\n    isAggregateMode: builderOptions.mode === BuilderMode.Trend,\n    timeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n    selectedColumns: (builderOptions.columns || []).filter(c => c.hint !== ColumnHint.Time),\n    aggregates: builderOptions.aggregates || [],\n    groupBy: builderOptions.groupBy || [],\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    filters: builderOptions.filters || [],\n  }), [builderOptions]);\n\n  const onOptionChange = useBuilderOptionChanges<TimeSeriesQueryBuilderState>(next => {\n    let nextColumns = next.selectedColumns.slice();\n    if (next.isAggregateMode) {\n      nextColumns = [];\n    }\n\n    if (next.timeColumn) {\n      nextColumns.push(next.timeColumn);\n    }\n\n    builderOptionsDispatch(setOptions({\n      mode: next.isAggregateMode ? BuilderMode.Trend : BuilderMode.Aggregate,\n      columns: nextColumns,\n      aggregates: next.isAggregateMode ? next.aggregates : [],\n      groupBy: next.isAggregateMode ? next.groupBy : [],\n      filters: next.filters,\n      orderBy: next.orderBy,\n      limit: next.limit\n    }));\n  }, builderState);\n\n  useDefaultTimeColumn(allColumns, builderOptions.table, builderState.timeColumn, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, isNewQuery, builderOptionsDispatch);\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.simpleQueryModeLabel}\n        labelB={labels.aggregateQueryModeLabel}\n        value={builderState.isAggregateMode}\n        onChange={onOptionChange('isAggregateMode')}\n        label={labels.builderModeLabel}\n        tooltip={labels.builderModeTooltip}\n      />\n\n      <ColumnSelect\n        allColumns={allColumns}\n        selectedColumn={builderState.timeColumn}\n        invalid={!builderState.timeColumn}\n        onColumnChange={onOptionChange('timeColumn')}\n        columnFilterFn={columnFilterDateTime}\n        columnHint={ColumnHint.Time}\n        label={labels.timeColumn.label}\n        tooltip={labels.timeColumn.tooltip}\n        clearable={false}\n      />\n\n      { builderState.isAggregateMode ? \n        <>\n          <AggregateEditor allColumns={allColumns} aggregates={builderState.aggregates} onAggregatesChange={onOptionChange('aggregates')} />\n          <GroupByEditor groupBy={builderState.groupBy} onGroupByChange={onOptionChange('groupBy')} allColumns={allColumns} />\n        </>\n        :\n        <ColumnsEditor\n          allColumns={allColumns}\n          selectedColumns={builderState.selectedColumns}\n          onSelectedColumnsChange={onOptionChange('selectedColumns')}\n        />\n      }\n\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n    </div>\n  );\n}\n","import { columnFilterDateTime } from 'data/columnFilters';\nimport { BuilderOptionsReducerAction, setColumnByHint, setOptions } from 'hooks/useBuilderOptionsState';\nimport React, { useEffect, useRef } from 'react';\nimport { ColumnHint, DateFilterWithoutValue, Filter, FilterOperator, OrderBy, OrderByDirection, SelectedColumn, TableColumn } from 'types/queryBuilder';\n\n// Finds and selects a default log time column, updates when table changes\nexport const useDefaultTimeColumn = (allColumns: readonly TableColumn[], table: string, timeColumn: SelectedColumn | undefined, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetDefaultTime = useRef<boolean>(Boolean(timeColumn));\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    didSetDefaultTime.current = false;\n  }\n\n  useEffect(() => {\n    if (didSetDefaultTime.current || allColumns.length === 0 || !table) {\n      return;\n    }\n\n    const col = allColumns.filter(columnFilterDateTime)[0];\n    if (!col) {\n      return;\n    }\n\n    const timeColumn: SelectedColumn = {\n      name: col.name,\n      type: col.type,\n      hint: ColumnHint.Time\n    };\n\n    builderOptionsDispatch(setColumnByHint(timeColumn));\n    lastTable.current = table;\n    didSetDefaultTime.current = true;\n  }, [allColumns, table, builderOptionsDispatch]);\n};\n\n// Apply default filters on table change\nexport const useDefaultFilters = (table: string, isNewQuery: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (!table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND'\n      } as DateFilterWithoutValue\n    ];\n\n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.ASC, default: true }\n    ];\n    \n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(setOptions({\n      filters: defaultFilters,\n      orderBy: defaultOrderBy,\n    }));\n  }, [table, builderOptionsDispatch]);\n};\n","import React, { useMemo } from 'react';\nimport { ColumnsEditor } from '../ColumnsEditor';\nimport { AggregateColumn, BuilderMode, Filter, OrderBy, QueryBuilderOptions, SelectedColumn } from 'types/queryBuilder';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { AggregateEditor } from '../AggregateEditor';\nimport { GroupByEditor } from '../GroupByEditor';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\n\ninterface TableQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TableQueryBuilderState {\n  isAggregateMode: boolean;\n  selectedColumns: SelectedColumn[];\n  aggregates: AggregateColumn[];\n  groupBy: string[];\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TableQueryBuilder = (props: TableQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const labels = allLabels.components.TableQueryBuilder;\n  const builderState: TableQueryBuilderState = useMemo(() => ({\n    isAggregateMode: builderOptions.mode === BuilderMode.Aggregate,\n    selectedColumns: builderOptions.columns || [],\n    aggregates: builderOptions.aggregates || [],\n    groupBy: builderOptions.groupBy || [],\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    filters: builderOptions.filters || [],\n  }), [builderOptions]);\n\n  const onOptionChange = useBuilderOptionChanges<TableQueryBuilderState>(next => {\n    builderOptionsDispatch(setOptions({\n      mode: next.isAggregateMode ? BuilderMode.Aggregate : BuilderMode.List,\n      columns: next.selectedColumns,\n      aggregates: next.aggregates,\n      groupBy: next.groupBy,\n      filters: next.filters,\n      orderBy: next.orderBy,\n      limit: next.limit\n    }));\n  }, builderState);\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.simpleQueryModeLabel}\n        labelB={labels.aggregateQueryModeLabel}\n        value={builderState.isAggregateMode}\n        onChange={onOptionChange('isAggregateMode')}\n        label={labels.builderModeLabel}\n        tooltip={labels.builderModeTooltip}\n      />\n\n      <ColumnsEditor\n        allColumns={allColumns}\n        selectedColumns={builderState.selectedColumns}\n        onSelectedColumnsChange={onOptionChange('selectedColumns')}\n        showAllOption\n      />\n\n      {builderState.isAggregateMode && (\n        <>\n          <AggregateEditor allColumns={allColumns} aggregates={builderState.aggregates} onAggregatesChange={onOptionChange('aggregates')} />\n          <GroupByEditor groupBy={builderState.groupBy} onGroupByChange={onOptionChange('groupBy')} allColumns={allColumns} />\n        </>\n      )}\n\n      <OrderByEditor\n        orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n        orderBy={builderState.orderBy}\n        onOrderByChange={onOptionChange('orderBy')}\n      />\n      <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n      <FiltersEditor\n        filters={builderState.filters}\n        onFiltersChange={onOptionChange('filters')}\n        allColumns={allColumns}\n        datasource={datasource}\n        database={builderOptions.database}\n        table={builderOptions.table}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { InlineFormLabel } from '@grafana/ui';\nimport labels from 'labels';\n\ninterface SqlPreviewProps {\n  sql: string;\n}\n\nexport const SqlPreview = (props: SqlPreviewProps) => {\n  const { sql } = props;\n  const { label, tooltip } = labels.components.SqlPreview;\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <pre>{sql}</pre>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { InlineFormLabel, Select } from '@grafana/ui';\nimport { Datasource } from '../../data/CHDatasource';\nimport labels from 'labels';\nimport { styles } from '../../styles';\nimport useTables from 'hooks/useTables';\nimport useDatabases from 'hooks/useDatabases';\n\nexport type DatabaseSelectProps = {\n  datasource: Datasource;\n  database: string;\n  onDatabaseChange: (value: string) => void\n};\n\nexport const DatabaseSelect = (props: DatabaseSelectProps) => {\n  const { datasource, onDatabaseChange, database } = props;\n  const databases = useDatabases(datasource);\n  const { label, tooltip, empty } = labels.components.DatabaseSelect;\n\n  const options = databases.map(d => ({ label: d, value: d }));\n  options.push({ label: empty, value: '' }); // Allow a blank value\n\n  // Add selected value to the list if it does not exist.\n  // When loading an existing query, the saved value may no longer be in the list\n  if (database && !databases.includes(database)) {\n    options.push({ label: database, value: database });\n  }\n\n  useEffect(() => {\n    // Auto select default db\n    if (!database) {\n      onDatabaseChange(datasource.getDefaultDatabase());\n    }\n  }, [datasource, database, onDatabaseChange]);\n\n  return (\n    <>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select\n        className={`width-15 ${styles.Common.inlineSelect}`}\n        options={options}\n        value={database}\n        onChange={e => onDatabaseChange(e.value!)}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      ></Select>\n    </>\n  );\n};\n\nexport type TableSelectProps = {\n  datasource: Datasource;\n  database: string;\n  table: string;\n  onTableChange: (value: string) => void;\n};\n\nexport const TableSelect = (props: TableSelectProps) => {\n  const { datasource, onTableChange, database, table } = props;\n  const tables = useTables(datasource, database);\n  const { label, tooltip, empty } = labels.components.TableSelect;\n\n  const options = tables.map(t => ({ label: t, value: t }));\n  options.push({ label: empty, value: '' }); // Allow a blank value\n\n  // Include saved value in case it's no longer listed\n  if (table && !tables.includes(table)) {\n    options.push({ label: table, value: table });\n  }\n\n  useEffect(() => {\n    // Auto select first/default table\n    if (database && !table && tables.length > 0) {\n      onTableChange(datasource.getDefaultTable() || tables[0]);\n    }\n  }, [database, table, tables, datasource, onTableChange]);\n\n  return (\n    <>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Select\n        className={`width-15 ${styles.Common.inlineSelect}`}\n        options={options}\n        value={table}\n        onChange={e => onTableChange(e.value!)}\n        menuPlacement={'bottom'}\n        allowCustomValue\n      ></Select>\n    </>\n  );\n};\n\nexport type DatabaseTableSelectProps = {\n  datasource: Datasource;\n  database: string;\n  onDatabaseChange: (value: string) => void\n  table: string;\n  onTableChange: (value: string) => void;\n};\n\nexport const DatabaseTableSelect = (props: DatabaseTableSelectProps) => {\n  const { datasource, database, onDatabaseChange, table, onTableChange } = props;\n\n  return (\n    <div className=\"gf-form\">\n      <DatabaseSelect datasource={datasource} database={database} onDatabaseChange={onDatabaseChange} />\n      <TableSelect datasource={datasource} database={database} table={table} onTableChange={onTableChange} />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource): readonly string[] => {\n  const [databases, setDatabases] = useState<string[]>([]); \n\n  useEffect(() => {\n    if (!datasource) {\n      return;\n    }\n\n    datasource.\n      fetchDatabases().\n      then(databases => setDatabases(databases)).\n      catch((ex: any) => {\n        console.error('Failed to fetch databases', ex);\n      });\n    }, [datasource]);\n    \n    return databases;\n}\n","import { useState, useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\n\nexport default (datasource: Datasource, database: string): readonly string[] => {\n  const [tables, setTables] = useState<string[]>([]); \n  \n  useEffect(() => {\n    if (!datasource || !database) {\n      return;\n    }\n\n    let ignore = false;\n    datasource.\n      fetchTables(database).\n      then(tables => {\n        if (ignore) {\n          return;\n        }\n        setTables(tables);\n      }).\n      catch((ex: any) => {\n        console.error('Failed to fetch tables for database:', database, ex);\n      });\n\n    return () => {\n      ignore = true;\n    };\n  }, [datasource, database]);\n\n  // Immediately return empty array on change so tables aren't stale\n  const lastDatabase = useRef<string>('');\n  if (database !== lastDatabase.current) {\n    lastDatabase.current = database;\n    setTables([]);\n    return [];\n  }\n\n  return tables;\n}\n","import React from 'react';\nimport { RadioButtonGroup, InlineFormLabel } from '@grafana/ui';\nimport labels from 'labels';\nimport { QueryType } from 'types/queryBuilder';\n\nexport interface QueryTypeSwitcherProps {\n  queryType: QueryType;\n  onChange: (queryType: QueryType) => void;\n  sqlEditor?: boolean;\n};\n\nconst options = [\n  {\n    label: labels.types.QueryType.table,\n    value: QueryType.Table,\n  },\n  {\n    label: labels.types.QueryType.logs,\n    value: QueryType.Logs,\n  },\n  {\n    label: labels.types.QueryType.timeseries,\n    value: QueryType.TimeSeries,\n  },\n  {\n    label: labels.types.QueryType.traces,\n    value: QueryType.Traces,\n  },\n];\n\n/**\n * Component for switching between the different query builder interfaces\n */\nexport const QueryTypeSwitcher = (props: QueryTypeSwitcherProps) => {\n  const { queryType, onChange, sqlEditor } = props;\n  const { label, tooltip, sqlTooltip } = labels.components.QueryTypeSwitcher;\n\n  return (\n    <span>\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={sqlEditor ? sqlTooltip : tooltip}>\n        {label}\n      </InlineFormLabel>\n      <RadioButtonGroup options={options} value={queryType} onChange={onChange} />\n    </span>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport allLabels from 'labels';\nimport { InlineFormLabel, Input } from '@grafana/ui';\nimport { selectors } from 'selectors';\n\ninterface TraceIdInputProps {\n  traceId: string;\n  onChange: (traceId: string) => void;\n  disabled?: boolean;\n};\n\nconst TraceIdInput = (props: TraceIdInputProps) => {\n  const [inputId, setInputId] = useState<string>('');\n  const { traceId, onChange, disabled } = props;\n  const { label, tooltip } = allLabels.components.TraceQueryBuilder.columns.traceIdFilter;\n\n  useEffect(() => {\n    setInputId(traceId);\n  }, [traceId]);\n\n  return (\n    <div className=\"gf-form\">\n      <InlineFormLabel width={8} className=\"query-keyword\" tooltip={tooltip}>\n        {label}\n      </InlineFormLabel>\n      <Input\n        data-testid={selectors.components.QueryBuilder.TraceIdInput.input}\n        width={40}\n        value={inputId}\n        disabled={disabled}\n        type=\"string\"\n        onChange={e => setInputId(e.currentTarget.value)}\n        onBlur={() => onChange(inputId)}\n      />\n    </div>\n  )\n}\n\nexport default TraceIdInput;\n","import React, { useMemo, useState } from 'react';\nimport { Filter, QueryBuilderOptions, SelectedColumn, ColumnHint, TimeUnit, OrderBy } from 'types/queryBuilder';\nimport { ColumnSelect } from '../ColumnSelect';\nimport { FiltersEditor } from '../FilterEditor';\nimport allLabels from 'labels';\nimport { ModeSwitch } from '../ModeSwitch';\nimport { getColumnByHint } from 'data/sqlGenerator';\nimport { Alert, Collapse, Stack } from '@grafana/ui';\nimport { DurationUnitSelect } from 'components/queryBuilder/DurationUnitSelect';\nimport { Datasource } from 'data/CHDatasource';\nimport { useBuilderOptionChanges } from 'hooks/useBuilderOptionChanges';\nimport useColumns from 'hooks/useColumns';\nimport { BuilderOptionsReducerAction, setOptions, setOtelEnabled, setOtelVersion } from 'hooks/useBuilderOptionsState';\nimport useIsNewQuery from 'hooks/useIsNewQuery';\nimport { OtelVersionSelect } from '../OtelVersionSelect';\nimport { useDefaultFilters, useOtelColumns, useTraceDefaultsOnMount } from './traceQueryBuilderHooks';\nimport TraceIdInput from '../TraceIdInput';\nimport { OrderByEditor, getOrderByOptions } from '../OrderByEditor';\nimport { LimitEditor } from '../LimitEditor';\nimport { LabeledInput } from 'components/configEditor/LabeledInput';\nimport { Switch } from '../Switch';\n\ninterface TraceQueryBuilderProps {\n  datasource: Datasource;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n}\n\ninterface TraceQueryBuilderState {\n  isTraceIdMode: boolean;\n  otelEnabled: boolean;\n  otelVersion: string;\n  traceIdColumn?: SelectedColumn;\n  spanIdColumn?: SelectedColumn;\n  parentSpanIdColumn?: SelectedColumn;\n  serviceNameColumn?: SelectedColumn;\n  operationNameColumn?: SelectedColumn;\n  startTimeColumn?: SelectedColumn;\n  durationTimeColumn?: SelectedColumn;\n  durationUnit: TimeUnit;\n  tagsColumn?: SelectedColumn;\n  serviceTagsColumn?: SelectedColumn;\n  kindColumn?: SelectedColumn;\n  statusCodeColumn?: SelectedColumn;\n  statusMessageColumn?: SelectedColumn;\n  stateColumn?: SelectedColumn;\n  instrumentationLibraryNameColumn?: SelectedColumn;\n  instrumentationLibraryVersionColumn?: SelectedColumn;\n  flattenNested?: boolean;\n  traceEventsColumnPrefix?: string;\n  traceLinksColumnPrefix?: string;\n  traceId: string;\n  orderBy: OrderBy[];\n  limit: number;\n  filters: Filter[];\n}\n\nexport const TraceQueryBuilder = (props: TraceQueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch } = props;\n  const allColumns = useColumns(datasource, builderOptions.database, builderOptions.table);\n  const isNewQuery = useIsNewQuery(builderOptions);\n  const [showConfigWarning, setConfigWarningOpen] = useState(datasource.getDefaultTraceColumns().size === 0 && builderOptions.columns?.length === 0);\n  const [isColumnsOpen, setColumnsOpen] = useState<boolean>(showConfigWarning); // Toggle Columns collapse section\n  const [isFiltersOpen, setFiltersOpen] = useState<boolean>(!(builderOptions.meta?.isTraceIdMode && builderOptions.meta.traceId)); // Toggle Filters collapse section\n  const labels = allLabels.components.TraceQueryBuilder;\n  const builderState = useMemo<TraceQueryBuilderState>(() => ({\n    isTraceIdMode: builderOptions.meta?.isTraceIdMode || false,\n    otelEnabled: builderOptions.meta?.otelEnabled || false,\n    otelVersion: builderOptions.meta?.otelVersion || '',\n    traceIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceId),\n    spanIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceSpanId),\n    parentSpanIdColumn: getColumnByHint(builderOptions, ColumnHint.TraceParentSpanId),\n    serviceNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceServiceName),\n    operationNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceOperationName),\n    startTimeColumn: getColumnByHint(builderOptions, ColumnHint.Time),\n    durationTimeColumn: getColumnByHint(builderOptions, ColumnHint.TraceDurationTime),\n    durationUnit: builderOptions.meta?.traceDurationUnit || TimeUnit.Nanoseconds,\n    tagsColumn: getColumnByHint(builderOptions, ColumnHint.TraceTags),\n    serviceTagsColumn: getColumnByHint(builderOptions, ColumnHint.TraceServiceTags),\n    kindColumn: getColumnByHint(builderOptions, ColumnHint.TraceKind),\n    statusCodeColumn: getColumnByHint(builderOptions, ColumnHint.TraceStatusCode),\n    statusMessageColumn: getColumnByHint(builderOptions, ColumnHint.TraceStatusMessage),\n    stateColumn: getColumnByHint(builderOptions, ColumnHint.TraceState),\n    instrumentationLibraryNameColumn: getColumnByHint(builderOptions, ColumnHint.TraceInstrumentationLibraryName),\n    instrumentationLibraryVersionColumn: getColumnByHint(builderOptions, ColumnHint.TraceInstrumentationLibraryVersion),\n    flattenNested: Boolean(builderOptions.meta?.flattenNested),\n    traceEventsColumnPrefix: builderOptions.meta?.traceEventsColumnPrefix || '',\n    traceLinksColumnPrefix: builderOptions.meta?.traceLinksColumnPrefix || '',\n    traceId: builderOptions.meta?.traceId || '',\n    orderBy: builderOptions.orderBy || [],\n    limit: builderOptions.limit || 0,\n    filters: builderOptions.filters || [],\n  }), [builderOptions]);\n\n  const onOptionChange = useBuilderOptionChanges<TraceQueryBuilderState>(next => {\n    const nextColumns = [\n      next.traceIdColumn,\n      next.spanIdColumn,\n      next.parentSpanIdColumn,\n      next.serviceNameColumn,\n      next.operationNameColumn,\n      next.startTimeColumn,\n      next.durationTimeColumn,\n      next.tagsColumn,\n      next.serviceTagsColumn,\n      next.serviceTagsColumn,\n      next.kindColumn,\n      next.statusCodeColumn,\n      next.statusMessageColumn,\n      next.stateColumn,\n      next.instrumentationLibraryNameColumn,\n      next.instrumentationLibraryVersionColumn,\n    ].filter(c => c !== undefined) as SelectedColumn[];\n\n    builderOptionsDispatch(setOptions({\n      columns: nextColumns,\n      orderBy: next.orderBy,\n      limit: next.limit,\n      filters: next.filters,\n      meta: {\n        isTraceIdMode: next.isTraceIdMode,\n        traceDurationUnit: next.durationUnit,\n        traceId: next.traceId,\n        flattenNested: next.flattenNested,\n        traceEventsColumnPrefix: next.traceEventsColumnPrefix,\n        traceLinksColumnPrefix: next.traceLinksColumnPrefix,\n      }\n    }));\n  }, builderState);\n\n  useTraceDefaultsOnMount(datasource, isNewQuery, builderOptions, builderOptionsDispatch);\n  useOtelColumns(builderState.otelEnabled, builderState.otelVersion, builderOptionsDispatch);\n  useDefaultFilters(builderOptions.table, builderState.isTraceIdMode, isNewQuery, builderOptionsDispatch);\n\n  const configWarning = showConfigWarning && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\" onRemove={() => setConfigWarningOpen(false)}>\n      <Stack>\n        <div>\n          {'To speed up your query building, enter your default trace configuration in your '}\n          <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#traces-config`}>ClickHouse Data Source settings</a>\n        </div>\n      </Stack>\n    </Alert>\n  );\n\n  return (\n    <div>\n      <ModeSwitch\n        labelA={labels.traceSearchModeLabel}\n        labelB={labels.traceIdModeLabel}\n        value={builderState.isTraceIdMode}\n        onChange={onOptionChange('isTraceIdMode')}\n        label={labels.traceModeLabel}\n        tooltip={labels.traceModeTooltip}\n      />\n\n      <Collapse label={labels.columnsSection}\n        collapsible\n        isOpen={isColumnsOpen}\n        onToggle={setColumnsOpen}\n      >\n        {configWarning}\n        <OtelVersionSelect\n          enabled={builderState.otelEnabled}\n          onEnabledChange={e => builderOptionsDispatch(setOtelEnabled(e))}\n          selectedVersion={builderState.otelVersion}\n          onVersionChange={v => builderOptionsDispatch(setOtelVersion(v))}\n          wide\n        />\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.traceIdColumn}\n            invalid={!builderState.traceIdColumn}\n            onColumnChange={onOptionChange('traceIdColumn')}\n            columnHint={ColumnHint.TraceId}\n            label={labels.columns.traceId.label}\n            tooltip={labels.columns.traceId.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.spanIdColumn}\n            invalid={!builderState.spanIdColumn}\n            onColumnChange={onOptionChange('spanIdColumn')}\n            columnHint={ColumnHint.TraceSpanId}\n            label={labels.columns.spanId.label}\n            tooltip={labels.columns.spanId.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.parentSpanIdColumn}\n            invalid={!builderState.parentSpanIdColumn}\n            onColumnChange={onOptionChange('parentSpanIdColumn')}\n            columnHint={ColumnHint.TraceParentSpanId}\n            label={labels.columns.parentSpanId.label}\n            tooltip={labels.columns.parentSpanId.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.serviceNameColumn}\n            invalid={!builderState.serviceNameColumn}\n            onColumnChange={onOptionChange('serviceNameColumn')}\n            columnHint={ColumnHint.TraceServiceName}\n            label={labels.columns.serviceName.label}\n            tooltip={labels.columns.serviceName.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.operationNameColumn}\n            invalid={!builderState.operationNameColumn}\n            onColumnChange={onOptionChange('operationNameColumn')}\n            columnHint={ColumnHint.TraceOperationName}\n            label={labels.columns.operationName.label}\n            tooltip={labels.columns.operationName.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.startTimeColumn}\n            invalid={!builderState.startTimeColumn}\n            onColumnChange={onOptionChange('startTimeColumn')}\n            columnHint={ColumnHint.Time}\n            label={labels.columns.startTime.label}\n            tooltip={labels.columns.startTime.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.durationTimeColumn}\n            invalid={!builderState.durationTimeColumn}\n            onColumnChange={onOptionChange('durationTimeColumn')}\n            columnHint={ColumnHint.TraceDurationTime}\n            label={labels.columns.durationTime.label}\n            tooltip={labels.columns.durationTime.tooltip}\n            wide\n          />\n          <DurationUnitSelect\n            disabled={builderState.otelEnabled}\n            unit={builderState.durationUnit}\n            onChange={onOptionChange('durationUnit')}\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.tagsColumn}\n            invalid={!builderState.tagsColumn}\n            onColumnChange={onOptionChange('tagsColumn')}\n            columnHint={ColumnHint.TraceTags}\n            label={labels.columns.tags.label}\n            tooltip={labels.columns.tags.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.serviceTagsColumn}\n            invalid={!builderState.serviceTagsColumn}\n            onColumnChange={onOptionChange('serviceTagsColumn')}\n            columnHint={ColumnHint.TraceServiceTags}\n            label={labels.columns.serviceTags.label}\n            tooltip={labels.columns.serviceTags.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.kindColumn}\n            invalid={!builderState.kindColumn}\n            onColumnChange={onOptionChange('kindColumn')}\n            columnHint={ColumnHint.TraceKind}\n            label={labels.columns.kind.label}\n            tooltip={labels.columns.kind.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.statusCodeColumn}\n            invalid={!builderState.statusCodeColumn}\n            onColumnChange={onOptionChange('statusCodeColumn')}\n            columnHint={ColumnHint.TraceStatusCode}\n            label={labels.columns.statusCode.label}\n            tooltip={labels.columns.statusCode.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.statusMessageColumn}\n            invalid={!builderState.statusMessageColumn}\n            onColumnChange={onOptionChange('statusMessageColumn')}\n            columnHint={ColumnHint.TraceStatusMessage}\n            label={labels.columns.statusMessage.label}\n            tooltip={labels.columns.statusMessage.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.stateColumn}\n            invalid={!builderState.stateColumn}\n            onColumnChange={onOptionChange('stateColumn')}\n            columnHint={ColumnHint.TraceState}\n            label={labels.columns.state.label}\n            tooltip={labels.columns.state.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.instrumentationLibraryNameColumn}\n            invalid={!builderState.instrumentationLibraryNameColumn}\n            onColumnChange={onOptionChange('instrumentationLibraryNameColumn')}\n            columnHint={ColumnHint.TraceInstrumentationLibraryName}\n            label={labels.columns.instrumentationLibraryName.label}\n            tooltip={labels.columns.instrumentationLibraryName.tooltip}\n            wide\n          />\n          <ColumnSelect\n            disabled={builderState.otelEnabled}\n            allColumns={allColumns}\n            selectedColumn={builderState.instrumentationLibraryVersionColumn}\n            invalid={!builderState.instrumentationLibraryVersionColumn}\n            onColumnChange={onOptionChange('instrumentationLibraryVersionColumn')}\n            columnHint={ColumnHint.TraceInstrumentationLibraryVersion}\n            label={labels.columns.instrumentationLibraryVersion.label}\n            tooltip={labels.columns.instrumentationLibraryVersion.tooltip}\n            wide\n            inline\n          />\n        </div>\n        <div className=\"gf-form\">\n          <Switch\n            disabled={builderState.otelEnabled}\n            label={labels.columns.flattenNested.label}\n            tooltip={labels.columns.flattenNested.tooltip}\n            value={Boolean(builderState.flattenNested)}\n            onChange={onOptionChange('flattenNested')}\n            wide\n          />\n        </div>\n        <div className=\"gf-form\">\n          <LabeledInput\n              disabled={builderState.otelEnabled}\n              label={labels.columns.eventsPrefix.label}\n              tooltip={labels.columns.eventsPrefix.tooltip}\n              value={builderState.traceEventsColumnPrefix || ''}\n              onChange={onOptionChange('traceEventsColumnPrefix')}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <LabeledInput\n              disabled={builderState.otelEnabled}\n              label={labels.columns.linksPrefix.label}\n              tooltip={labels.columns.linksPrefix.tooltip}\n              value={builderState.traceLinksColumnPrefix || ''}\n              onChange={onOptionChange('traceLinksColumnPrefix')}\n          />\n        </div>\n      </Collapse>\n      <Collapse label={labels.filtersSection}\n        collapsible\n        isOpen={isFiltersOpen}\n        onToggle={setFiltersOpen}\n      >\n        <OrderByEditor\n          orderByOptions={getOrderByOptions(builderOptions, allColumns)}\n          orderBy={builderState.orderBy}\n          onOrderByChange={onOptionChange('orderBy')}\n        />\n        <LimitEditor limit={builderState.limit} onLimitChange={onOptionChange('limit')} />\n        <FiltersEditor\n          allColumns={allColumns}\n          filters={builderState.filters}\n          onFiltersChange={onOptionChange('filters')}\n          datasource={datasource}\n          database={builderOptions.database}\n          table={builderOptions.table}\n        />\n      </Collapse>\n      {builderState.isTraceIdMode && <TraceIdInput traceId={builderState.traceId} onChange={onOptionChange('traceId')} />}\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Datasource } from 'data/CHDatasource';\nimport otel from 'otel';\nimport { ColumnHint, DateFilterWithoutValue, Filter, FilterOperator, NumberFilter, OrderBy, OrderByDirection, QueryBuilderOptions, SelectedColumn, StringFilter } from 'types/queryBuilder';\nimport { BuilderOptionsReducerAction, setOptions } from 'hooks/useBuilderOptionsState';\n\n/**\n * Loads the default configuration for new queries. (Only runs on new queries)\n */\nexport const useTraceDefaultsOnMount = (datasource: Datasource, isNewQuery: boolean, builderOptions: QueryBuilderOptions, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetDefaults = useRef<boolean>(false);\n  useEffect(() => {\n    if (!isNewQuery || didSetDefaults.current) {\n      return;\n    }\n\n    const defaultDb = datasource.getDefaultTraceDatabase() || datasource.getDefaultDatabase();\n    const defaultTable = datasource.getDefaultTraceTable() || datasource.getDefaultTable();\n    const defaultDurationUnit = datasource.getDefaultTraceDurationUnit();\n    const otelVersion = datasource.getTraceOtelVersion();\n    const defaultColumns = datasource.getDefaultTraceColumns();\n    const defaultFlattenNested = datasource.getDefaultTraceFlattenNested();\n    const defaultEventsColumnPrefix = datasource.getDefaultTraceEventsColumnPrefix();\n    const defaultLinksColumnPrefix = datasource.getDefaultTraceLinksColumnPrefix();\n\n    const nextColumns: SelectedColumn[] = [];\n    for (let [hint, colName] of defaultColumns) {\n      nextColumns.push({ name: colName, hint });\n    }\n\n    builderOptionsDispatch(setOptions({\n      database: defaultDb,\n      table: defaultTable || builderOptions.table,\n      columns: nextColumns,\n      meta: {\n        otelEnabled: Boolean(otelVersion),\n        otelVersion,\n        traceDurationUnit: defaultDurationUnit,\n        flattenNested: defaultFlattenNested,\n        traceEventsColumnPrefix: defaultEventsColumnPrefix,\n        traceLinksColumnPrefix: defaultLinksColumnPrefix,\n      }\n    }));\n    didSetDefaults.current = true;\n  }, [builderOptions.columns, builderOptions.orderBy, builderOptions.table, builderOptionsDispatch, datasource, isNewQuery]);\n};\n\n/**\n * Sets OTEL Trace columns automatically when OTEL is enabled\n * Does not run if OTEL is already enabled, only when it's changed.\n */\nexport const useOtelColumns = (otelEnabled: boolean, otelVersion: string, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const didSetColumns = useRef<boolean>(otelEnabled);\n  if (!otelEnabled) {\n    didSetColumns.current = false;\n  }\n\n  useEffect(() => {\n    if (!otelEnabled || didSetColumns.current) {\n      return;\n    }\n\n    const otelConfig = otel.getVersion(otelVersion);\n    const traceColumnMap = otelConfig?.traceColumnMap;\n    if (!traceColumnMap) {\n      return;\n    }\n\n    const columns: SelectedColumn[] = [];\n    traceColumnMap.forEach((name, hint) => {\n      columns.push({ name, hint });\n    });\n\n    builderOptionsDispatch(setOptions({\n      columns,\n      meta: {\n        traceDurationUnit: otelConfig.traceDurationUnit,\n        flattenNested: otelConfig.flattenNested,\n        traceEventsColumnPrefix: otelConfig.traceEventsColumnPrefix,\n        traceLinksColumnPrefix: otelConfig.traceLinksColumnPrefix,\n      }\n    }));\n    didSetColumns.current = true;\n  }, [otelEnabled, otelVersion, builderOptionsDispatch]);\n};\n\n// Apply default filters on table change\nexport const useDefaultFilters = (table: string, isTraceIdMode: boolean, isNewQuery: boolean, builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>) => {\n  const appliedDefaultFilters = useRef<boolean>(!isNewQuery);\n  const lastTable = useRef<string>(table || '');\n  if (table !== lastTable.current) {\n    appliedDefaultFilters.current = false;\n  }\n\n  useEffect(() => {\n    if (isTraceIdMode || !table || appliedDefaultFilters.current) {\n      return;\n    }\n\n    const defaultFilters: Filter[] = [\n      {\n        type: 'datetime',\n        operator: FilterOperator.WithInGrafanaTimeRange,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.Time,\n        condition: 'AND'\n      } as DateFilterWithoutValue, // Filter to dashboard time range\n      {\n        type: 'string',\n        operator: FilterOperator.IsEmpty,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceParentSpanId,\n        condition: 'AND',\n        value: ''\n      } as StringFilter, // Only show top level spans\n      {\n        type: 'UInt64',\n        operator: FilterOperator.GreaterThan,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceDurationTime,\n        condition: 'AND',\n        value: 0\n      } as NumberFilter, // Only show spans where duration > 0\n      {\n        type: 'string',\n        operator: FilterOperator.IsAnything,\n        filterType: 'custom',\n        key: '',\n        hint: ColumnHint.TraceServiceName,\n        condition: 'AND',\n        value: ''\n      } as StringFilter, // Placeholder service name filter for convenience\n    ];\n    \n    const defaultOrderBy: OrderBy[] = [\n      { name: '', hint: ColumnHint.Time, dir: OrderByDirection.DESC, default: true },\n      { name: '', hint: ColumnHint.TraceDurationTime, dir: OrderByDirection.DESC, default: true },\n    ];\n\n    lastTable.current = table;\n    appliedDefaultFilters.current = true;\n    builderOptionsDispatch(setOptions({\n      filters: defaultFilters,\n      orderBy: defaultOrderBy,\n    }));\n  }, [table, isTraceIdMode, builderOptionsDispatch]);\n};\n","import React, { useMemo } from 'react';\nimport { Datasource } from 'data/CHDatasource';\nimport { QueryType, QueryBuilderOptions, ColumnHint, StringFilter } from 'types/queryBuilder';\nimport { CoreApp } from '@grafana/data';\nimport { LogsQueryBuilder } from './views/LogsQueryBuilder';\nimport { TimeSeriesQueryBuilder } from './views/TimeSeriesQueryBuilder';\nimport { TableQueryBuilder } from './views/TableQueryBuilder';\nimport { SqlPreview } from './SqlPreview';\nimport { DatabaseTableSelect } from 'components/queryBuilder/DatabaseTableSelect';\nimport { QueryTypeSwitcher } from 'components/queryBuilder/QueryTypeSwitcher';\nimport { styles } from 'styles';\nimport { TraceQueryBuilder } from './views/TraceQueryBuilder';\nimport { BuilderOptionsReducerAction, setBuilderMinimized, setDatabase, setQueryType, setTable } from 'hooks/useBuilderOptionsState';\nimport TraceIdInput from './TraceIdInput';\nimport { Alert, Button, VerticalGroup } from '@grafana/ui';\nimport { Components as allSelectors } from 'selectors';\nimport allLabels from 'labels';\n\ninterface QueryBuilderProps {\n  app: CoreApp | undefined;\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n  datasource: Datasource;\n  generatedSql: string;\n}\n\nexport const QueryBuilder = (props: QueryBuilderProps) => {\n  const { datasource, builderOptions, builderOptionsDispatch, generatedSql } = props;\n\n  const onDatabaseChange = (database: string) => builderOptionsDispatch(setDatabase(database));\n  const onTableChange = (table: string) => builderOptionsDispatch(setTable(table));\n  const onQueryTypeChange = (queryType: QueryType) => builderOptionsDispatch(setQueryType(queryType));\n\n  if (builderOptions.meta?.minimized) {\n    return (\n      <MinimizedQueryViewer\n        builderOptions={builderOptions}\n        builderOptionsDispatch={builderOptionsDispatch}\n        datasource={datasource}\n      />\n    );\n  }\n\n  return (\n    <div data-testid=\"query-editor-section-builder\">\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <DatabaseTableSelect\n          datasource={datasource}\n          database={builderOptions.database} onDatabaseChange={onDatabaseChange}\n          table={builderOptions.table} onTableChange={onTableChange}\n        />\n      </div>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <QueryTypeSwitcher queryType={builderOptions.queryType} onChange={onQueryTypeChange} />\n      </div>\n\n      { builderOptions.queryType === QueryType.Table && <TableQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n      { builderOptions.queryType === QueryType.Logs && <LogsQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n      { builderOptions.queryType === QueryType.TimeSeries && <TimeSeriesQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n      { builderOptions.queryType === QueryType.Traces && <TraceQueryBuilder datasource={datasource} builderOptions={builderOptions} builderOptionsDispatch={builderOptionsDispatch} /> }\n\n      <SqlPreview sql={generatedSql} />\n    </div>\n  );\n}\n\ninterface MinimizedQueryBuilder {\n  builderOptions: QueryBuilderOptions;\n  builderOptionsDispatch: React.Dispatch<BuilderOptionsReducerAction>;\n  datasource: Datasource;\n}\n\nconst MinimizedQueryViewer = (props: MinimizedQueryBuilder) => {\n  const { builderOptions, builderOptionsDispatch, datasource } = props;\n  const defaultColumns = useMemo<Map<ColumnHint, string> | undefined>(() => {\n    if (builderOptions.queryType === QueryType.Logs) {\n      return datasource.getDefaultLogsColumns();\n    } else if (builderOptions.queryType === QueryType.Traces) {\n      return datasource.getDefaultTraceColumns();\n    }\n\n    return undefined;\n  }, [builderOptions.queryType, datasource]);\n  const showConfigWarning = defaultColumns?.size === 0 && builderOptions.columns?.length === 0;\n  const configQueryType = (\n    builderOptions.queryType === QueryType.Logs ? 'logs' :\n    builderOptions.queryType === QueryType.Traces ? 'trace' :\n    builderOptions.queryType\n  );\n\n  let traceId;\n  if (builderOptions.queryType === QueryType.Traces && builderOptions.meta?.isTraceIdMode && builderOptions.meta.traceId) {\n    traceId = builderOptions.meta.traceId!;\n  } else if (builderOptions.queryType === QueryType.Logs && builderOptions.filters?.find(f => f.hint === ColumnHint.TraceId && 'value' in f)) {\n    const traceIdFilter = builderOptions.filters?.find(f => f.hint === ColumnHint.TraceId && 'value' in f) as StringFilter;\n    traceId = traceIdFilter.value;\n  }\n\n  return (\n    <div data-testid=\"query-editor-minimized-viewer\">\n      { showConfigWarning && (\n        <Alert title=\"\" severity=\"warning\">\n          <VerticalGroup>\n            <div>\n              {`To enable data linking, enter your default ${configQueryType} configuration in your `}\n              <a style={{ textDecoration: 'underline' }} href={`/connections/datasources/edit/${encodeURIComponent(datasource.uid)}#${builderOptions.queryType}-config`}>ClickHouse Data Source settings</a>\n            </div>\n          </VerticalGroup>\n        </Alert>\n      )}\n      { !traceId && (\n        <Alert title=\"\" severity=\"warning\">\n          <VerticalGroup>\n            <div>Trace ID is empty</div>\n          </VerticalGroup>\n        </Alert>\n      )}\n\n      {traceId && <TraceIdInput traceId={traceId} onChange={() => {}} disabled /> }\n\n      <Button\n        data-testid={allSelectors.QueryBuilder.expandBuilderButton}\n        icon=\"plus\"\n        variant=\"secondary\"\n        size=\"md\"\n        onClick={() => builderOptionsDispatch(setBuilderMinimized(false))}\n        className={styles.Common.smallBtn}\n        tooltip={allLabels.components.expandBuilderButton.tooltip}\n      >\n        {allLabels.components.expandBuilderButton.label}\n      </Button>\n    </div>\n  );\n}\n","/**\n * Performs expandSinglePhrase() on array\n */\nexport const expandPhrases = (phrases) => phrases.flatMap(expandSinglePhrase);\n/**\n * Expands a syntax description like\n *\n *     \"CREATE [OR REPLACE] [TEMP|TEMPORARY] TABLE\"\n *\n * into an array of all possible combinations like:\n *\n *     [ \"CREATE TABLE\",\n *       \"CREATE TEMP TABLE\",\n *       \"CREATE TEMPORARY TABLE\",\n *       \"CREATE OR REPLACE TABLE\",\n *       \"CREATE OR REPLACE TEMP TABLE\",\n *       \"CREATE OR REPLACE TEMPORARY TABLE\" ]\n *\n * The [] and {} parenthesis can also be nested like\n *\n *     \"FOR [OF {UNIQUE | MANDATORY} TABLES]\"\n *\n * resulting in:\n *\n *     [ \"FOR\",\n *       \"FOR OF UNIQUE TABLES\",\n *       \"FOR OF MANDATORY TABLES\" ]\n */\nexport const expandSinglePhrase = (phrase) => buildCombinations(parsePhrase(phrase)).map(stripExtraWhitespace);\nconst stripExtraWhitespace = (text) => text.replace(/ +/g, ' ').trim();\nconst parsePhrase = (text) => ({\n    type: 'mandatory_block',\n    items: parseAlteration(text, 0)[0],\n});\nconst parseAlteration = (text, index, expectClosing) => {\n    const alterations = [];\n    while (text[index]) {\n        const [term, newIndex] = parseConcatenation(text, index);\n        alterations.push(term);\n        index = newIndex;\n        if (text[index] === '|') {\n            index++;\n        }\n        else if (text[index] === '}' || text[index] === ']') {\n            if (expectClosing !== text[index]) {\n                throw new Error(`Unbalanced parenthesis in: ${text}`);\n            }\n            index++;\n            return [alterations, index];\n        }\n        else if (index === text.length) {\n            if (expectClosing) {\n                throw new Error(`Unbalanced parenthesis in: ${text}`);\n            }\n            return [alterations, index];\n        }\n        else {\n            throw new Error(`Unexpected \"${text[index]}\"`);\n        }\n    }\n    return [alterations, index];\n};\nconst parseConcatenation = (text, index) => {\n    const items = [];\n    while (true) {\n        const [term, newIndex] = parseTerm(text, index);\n        if (term) {\n            items.push(term);\n            index = newIndex;\n        }\n        else {\n            break;\n        }\n    }\n    return items.length === 1 ? [items[0], index] : [{ type: 'concatenation', items }, index];\n};\nconst parseTerm = (text, index) => {\n    if (text[index] === '{') {\n        return parseMandatoryBlock(text, index + 1);\n    }\n    else if (text[index] === '[') {\n        return parseOptionalBlock(text, index + 1);\n    }\n    else {\n        let word = '';\n        while (text[index] && /[A-Za-z0-9_ ]/.test(text[index])) {\n            word += text[index];\n            index++;\n        }\n        return [word, index];\n    }\n};\nconst parseMandatoryBlock = (text, index) => {\n    const [items, newIndex] = parseAlteration(text, index, '}');\n    return [{ type: 'mandatory_block', items }, newIndex];\n};\nconst parseOptionalBlock = (text, index) => {\n    const [items, newIndex] = parseAlteration(text, index, ']');\n    return [{ type: 'optional_block', items }, newIndex];\n};\nconst buildCombinations = (node) => {\n    if (typeof node === 'string') {\n        return [node];\n    }\n    else if (node.type === 'concatenation') {\n        return node.items.map(buildCombinations).reduce(stringCombinations, ['']);\n    }\n    else if (node.type === 'mandatory_block') {\n        return node.items.flatMap(buildCombinations);\n    }\n    else if (node.type === 'optional_block') {\n        return ['', ...node.items.flatMap(buildCombinations)];\n    }\n    else {\n        throw new Error(`Unknown node type: ${node}`);\n    }\n};\nconst stringCombinations = (xs, ys) => {\n    const results = [];\n    for (const x of xs) {\n        for (const y of ys) {\n            results.push(x + y);\n        }\n    }\n    return results;\n};\n//# sourceMappingURL=expandPhrases.js.map","/** Token type enum for all possible Token categories */\nexport var TokenType;\n(function (TokenType) {\n    TokenType[\"QUOTED_IDENTIFIER\"] = \"QUOTED_IDENTIFIER\";\n    TokenType[\"IDENTIFIER\"] = \"IDENTIFIER\";\n    TokenType[\"STRING\"] = \"STRING\";\n    TokenType[\"VARIABLE\"] = \"VARIABLE\";\n    TokenType[\"RESERVED_DATA_TYPE\"] = \"RESERVED_DATA_TYPE\";\n    TokenType[\"RESERVED_PARAMETERIZED_DATA_TYPE\"] = \"RESERVED_PARAMETERIZED_DATA_TYPE\";\n    TokenType[\"RESERVED_KEYWORD\"] = \"RESERVED_KEYWORD\";\n    TokenType[\"RESERVED_FUNCTION_NAME\"] = \"RESERVED_FUNCTION_NAME\";\n    TokenType[\"RESERVED_PHRASE\"] = \"RESERVED_PHRASE\";\n    TokenType[\"RESERVED_SET_OPERATION\"] = \"RESERVED_SET_OPERATION\";\n    TokenType[\"RESERVED_CLAUSE\"] = \"RESERVED_CLAUSE\";\n    TokenType[\"RESERVED_SELECT\"] = \"RESERVED_SELECT\";\n    TokenType[\"RESERVED_JOIN\"] = \"RESERVED_JOIN\";\n    TokenType[\"ARRAY_IDENTIFIER\"] = \"ARRAY_IDENTIFIER\";\n    TokenType[\"ARRAY_KEYWORD\"] = \"ARRAY_KEYWORD\";\n    TokenType[\"CASE\"] = \"CASE\";\n    TokenType[\"END\"] = \"END\";\n    TokenType[\"WHEN\"] = \"WHEN\";\n    TokenType[\"ELSE\"] = \"ELSE\";\n    TokenType[\"THEN\"] = \"THEN\";\n    TokenType[\"LIMIT\"] = \"LIMIT\";\n    TokenType[\"BETWEEN\"] = \"BETWEEN\";\n    TokenType[\"AND\"] = \"AND\";\n    TokenType[\"OR\"] = \"OR\";\n    TokenType[\"XOR\"] = \"XOR\";\n    TokenType[\"OPERATOR\"] = \"OPERATOR\";\n    TokenType[\"COMMA\"] = \"COMMA\";\n    TokenType[\"ASTERISK\"] = \"ASTERISK\";\n    TokenType[\"PROPERTY_ACCESS_OPERATOR\"] = \"PROPERTY_ACCESS_OPERATOR\";\n    TokenType[\"OPEN_PAREN\"] = \"OPEN_PAREN\";\n    TokenType[\"CLOSE_PAREN\"] = \"CLOSE_PAREN\";\n    TokenType[\"LINE_COMMENT\"] = \"LINE_COMMENT\";\n    TokenType[\"BLOCK_COMMENT\"] = \"BLOCK_COMMENT\";\n    // Text between /* sql-formatter-disable */ and /* sql-formatter-enable */\n    TokenType[\"DISABLE_COMMENT\"] = \"DISABLE_COMMENT\";\n    TokenType[\"NUMBER\"] = \"NUMBER\";\n    TokenType[\"NAMED_PARAMETER\"] = \"NAMED_PARAMETER\";\n    TokenType[\"QUOTED_PARAMETER\"] = \"QUOTED_PARAMETER\";\n    TokenType[\"NUMBERED_PARAMETER\"] = \"NUMBERED_PARAMETER\";\n    TokenType[\"POSITIONAL_PARAMETER\"] = \"POSITIONAL_PARAMETER\";\n    TokenType[\"CUSTOM_PARAMETER\"] = \"CUSTOM_PARAMETER\";\n    TokenType[\"DELIMITER\"] = \"DELIMITER\";\n    TokenType[\"EOF\"] = \"EOF\";\n})(TokenType = TokenType || (TokenType = {}));\n/** Creates EOF token positioned at given location */\nexport const createEofToken = (index) => ({\n    type: TokenType.EOF,\n    raw: '«EOF»',\n    text: '«EOF»',\n    start: index,\n});\n/**\n * For use as a \"missing token\"\n * e.g. in lookAhead and lookBehind to avoid dealing with null values\n */\nexport const EOF_TOKEN = createEofToken(Infinity);\n/** Checks if two tokens are equivalent */\nexport const testToken = (compareToken) => (token) => token.type === compareToken.type && token.text === compareToken.text;\n/** Util object that allows for easy checking of Reserved Keywords */\nexport const isToken = {\n    ARRAY: testToken({ text: 'ARRAY', type: TokenType.RESERVED_DATA_TYPE }),\n    BY: testToken({ text: 'BY', type: TokenType.RESERVED_KEYWORD }),\n    SET: testToken({ text: 'SET', type: TokenType.RESERVED_CLAUSE }),\n    STRUCT: testToken({ text: 'STRUCT', type: TokenType.RESERVED_DATA_TYPE }),\n    WINDOW: testToken({ text: 'WINDOW', type: TokenType.RESERVED_CLAUSE }),\n    VALUES: testToken({ text: 'VALUES', type: TokenType.RESERVED_CLAUSE }),\n};\n/** Checks if token is any Reserved Keyword or Clause */\nexport const isReserved = (type) => type === TokenType.RESERVED_DATA_TYPE ||\n    type === TokenType.RESERVED_KEYWORD ||\n    type === TokenType.RESERVED_FUNCTION_NAME ||\n    type === TokenType.RESERVED_PHRASE ||\n    type === TokenType.RESERVED_CLAUSE ||\n    type === TokenType.RESERVED_SELECT ||\n    type === TokenType.RESERVED_SET_OPERATION ||\n    type === TokenType.RESERVED_JOIN ||\n    type === TokenType.ARRAY_KEYWORD ||\n    type === TokenType.CASE ||\n    type === TokenType.END ||\n    type === TokenType.WHEN ||\n    type === TokenType.ELSE ||\n    type === TokenType.THEN ||\n    type === TokenType.LIMIT ||\n    type === TokenType.BETWEEN ||\n    type === TokenType.AND ||\n    type === TokenType.OR ||\n    type === TokenType.XOR;\nexport const isLogicalOperator = (type) => type === TokenType.AND || type === TokenType.OR || type === TokenType.XOR;\n//# sourceMappingURL=token.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { functions } from './bigquery.functions.js';\nimport { dataTypes, keywords } from './bigquery.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]']);\nconst reservedClauses = expandPhrases([\n    // Queries: https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'QUALIFY',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'OMIT RECORD IF',\n    // Data modification: https://cloud.google.com/bigquery/docs/reference/standard-sql/dml-syntax\n    // - insert:\n    'INSERT [INTO]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE [INTO]',\n    'WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]',\n    'UPDATE SET',\n    'CLUSTER BY',\n    'FOR SYSTEM_TIME AS OF',\n    'WITH CONNECTION',\n    'WITH PARTITION COLUMNS',\n    'REMOTE WITH CONNECTION',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n    'CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS]',\n    'ADD COLUMN [IF NOT EXISTS]',\n    'DROP COLUMN [IF EXISTS]',\n    'RENAME TO',\n    'ALTER COLUMN [IF EXISTS]',\n    'SET DEFAULT COLLATE',\n    'SET OPTIONS',\n    'DROP NOT NULL',\n    'SET DATA TYPE',\n    // - alter schema\n    'ALTER SCHEMA [IF EXISTS]',\n    // - alter view\n    'ALTER [MATERIALIZED] VIEW [IF EXISTS]',\n    // - alter bi_capacity\n    'ALTER BI_CAPACITY',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // - create schema\n    'CREATE SCHEMA [IF NOT EXISTS]',\n    'DEFAULT COLLATE',\n    // stored procedures\n    'CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]',\n    'CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]',\n    // row access policy\n    'CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]',\n    'GRANT TO',\n    'FILTER USING',\n    // capacity\n    'CREATE CAPACITY',\n    'AS JSON',\n    // reservation\n    'CREATE RESERVATION',\n    // assignment\n    'CREATE ASSIGNMENT',\n    // search index\n    'CREATE SEARCH INDEX [IF NOT EXISTS]',\n    // drop\n    'DROP SCHEMA [IF EXISTS]',\n    'DROP [MATERIALIZED] VIEW [IF EXISTS]',\n    'DROP [TABLE] FUNCTION [IF EXISTS]',\n    'DROP PROCEDURE [IF EXISTS]',\n    'DROP ROW ACCESS POLICY',\n    'DROP ALL ROW ACCESS POLICIES',\n    'DROP CAPACITY [IF EXISTS]',\n    'DROP RESERVATION [IF EXISTS]',\n    'DROP ASSIGNMENT [IF EXISTS]',\n    'DROP SEARCH INDEX [IF EXISTS]',\n    'DROP [IF EXISTS]',\n    // DCL, https://cloud.google.com/bigquery/docs/reference/standard-sql/data-control-language\n    'GRANT',\n    'REVOKE',\n    // Script, https://cloud.google.com/bigquery/docs/reference/standard-sql/scripting\n    'DECLARE',\n    'EXECUTE IMMEDIATE',\n    'LOOP',\n    'END LOOP',\n    'REPEAT',\n    'END REPEAT',\n    'WHILE',\n    'END WHILE',\n    'BREAK',\n    'LEAVE',\n    'CONTINUE',\n    'ITERATE',\n    'FOR',\n    'END FOR',\n    'BEGIN',\n    'BEGIN TRANSACTION',\n    'COMMIT TRANSACTION',\n    'ROLLBACK TRANSACTION',\n    'RAISE',\n    'RETURN',\n    'CALL',\n    // Debug, https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging-statements\n    'ASSERT',\n    // Other, https://cloud.google.com/bigquery/docs/reference/standard-sql/other-statements\n    'EXPORT DATA',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION {ALL | DISTINCT}',\n    'EXCEPT DISTINCT',\n    'INTERSECT DISTINCT',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#tablesample_operator\n    'TABLESAMPLE SYSTEM',\n    // From DDL: https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n    'ANY TYPE',\n    'ALL COLUMNS',\n    'NOT DETERMINISTIC',\n    // inside window definitions\n    '{ROWS | RANGE} BETWEEN',\n    // comparison operator\n    'IS [NOT] DISTINCT FROM',\n]);\n// https://cloud.google.com/bigquery/docs/reference/#standard-sql-reference\nexport const bigquery = {\n    name: 'bigquery',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...tabularOnelineClauses, ...standardOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\n            // The triple-quoted strings are listed first, so they get matched first.\n            // Otherwise the first two quotes of \"\"\" will get matched as an empty \"\" string.\n            { quote: '\"\"\"..\"\"\"', prefixes: ['R', 'B', 'RB', 'BR'] },\n            { quote: \"'''..'''\", prefixes: ['R', 'B', 'RB', 'BR'] },\n            '\"\"-bs',\n            \"''-bs\",\n            { quote: '\"\"-raw', prefixes: ['R', 'B', 'RB', 'BR'], requirePrefix: true },\n            { quote: \"''-raw\", prefixes: ['R', 'B', 'RB', 'BR'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { dashes: true },\n        paramTypes: { positional: true, named: ['@'], quoted: ['@'] },\n        variableTypes: [{ regex: String.raw `@@\\w+` }],\n        lineCommentTypes: ['--', '#'],\n        operators: ['&', '|', '^', '~', '>>', '<<', '||', '=>'],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\nfunction postProcess(tokens) {\n    return detectArraySubscripts(combineParameterizedTypes(tokens));\n}\n// Converts OFFSET token inside array from RESERVED_CLAUSE to RESERVED_FUNCTION_NAME\n// See: https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#array_subscript_operator\nfunction detectArraySubscripts(tokens) {\n    let prevToken = EOF_TOKEN;\n    return tokens.map(token => {\n        if (token.text === 'OFFSET' && prevToken.text === '[') {\n            prevToken = token;\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        else {\n            prevToken = token;\n            return token;\n        }\n    });\n}\n// Combines multiple tokens forming a parameterized type like STRUCT<ARRAY<INT64>> into a single token\nfunction combineParameterizedTypes(tokens) {\n    var _a;\n    const processed = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n        if ((isToken.ARRAY(token) || isToken.STRUCT(token)) && ((_a = tokens[i + 1]) === null || _a === void 0 ? void 0 : _a.text) === '<') {\n            const endIndex = findClosingAngleBracketIndex(tokens, i + 1);\n            const typeDefTokens = tokens.slice(i, endIndex + 1);\n            processed.push({\n                type: TokenType.IDENTIFIER,\n                raw: typeDefTokens.map(formatTypeDefToken('raw')).join(''),\n                text: typeDefTokens.map(formatTypeDefToken('text')).join(''),\n                start: token.start,\n            });\n            i = endIndex;\n        }\n        else {\n            processed.push(token);\n        }\n    }\n    return processed;\n}\nconst formatTypeDefToken = (key) => (token) => {\n    if (token.type === TokenType.IDENTIFIER || token.type === TokenType.COMMA) {\n        return token[key] + ' ';\n    }\n    else {\n        return token[key];\n    }\n};\nfunction findClosingAngleBracketIndex(tokens, startIndex) {\n    let level = 0;\n    for (let i = startIndex; i < tokens.length; i++) {\n        const token = tokens[i];\n        if (token.text === '<') {\n            level++;\n        }\n        else if (token.text === '>') {\n            level--;\n        }\n        else if (token.text === '>>') {\n            level -= 2;\n        }\n        if (level === 0) {\n            return i;\n        }\n    }\n    return tokens.length - 1;\n}\n//# sourceMappingURL=bigquery.formatter.js.map","export const keywords = [\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical#reserved_keywords\n    'ALL',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'ASSERT_ROWS_MODIFIED',\n    'AT',\n    'BETWEEN',\n    'BY',\n    'CASE',\n    'CAST',\n    'COLLATE',\n    'CONTAINS',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'DEFAULT',\n    'DEFINE',\n    'DESC',\n    'DISTINCT',\n    'ELSE',\n    'END',\n    'ENUM',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCLUDE',\n    'EXISTS',\n    'EXTRACT',\n    'FALSE',\n    'FETCH',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'GROUP',\n    'GROUPING',\n    'GROUPS',\n    'HASH',\n    'HAVING',\n    'IF',\n    'IGNORE',\n    'IN',\n    'INNER',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'JOIN',\n    'LATERAL',\n    'LEFT',\n    'LIMIT',\n    'LOOKUP',\n    'MERGE',\n    'NATURAL',\n    'NEW',\n    'NO',\n    'NOT',\n    'NULL',\n    'NULLS',\n    'OF',\n    'ON',\n    'OR',\n    'ORDER',\n    'OUTER',\n    'OVER',\n    'PARTITION',\n    'PRECEDING',\n    'PROTO',\n    'RANGE',\n    'RECURSIVE',\n    'RESPECT',\n    'RIGHT',\n    'ROLLUP',\n    'ROWS',\n    'SELECT',\n    'SET',\n    'SOME',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TREAT',\n    'TRUE',\n    'UNBOUNDED',\n    'UNION',\n    'UNNEST',\n    'USING',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    // misc\n    'SAFE',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language\n    'LIKE',\n    'COPY',\n    'CLONE',\n    'IN',\n    'OUT',\n    'INOUT',\n    'RETURNS',\n    'LANGUAGE',\n    'CASCADE',\n    'RESTRICT',\n    'DETERMINISTIC',\n];\nexport const dataTypes = [\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types\n    'ARRAY',\n    'BOOL',\n    'BYTES',\n    'DATE',\n    'DATETIME',\n    'GEOGRAPHY',\n    'INTERVAL',\n    'INT64',\n    'INT',\n    'SMALLINT',\n    'INTEGER',\n    'BIGINT',\n    'TINYINT',\n    'BYTEINT',\n    'NUMERIC',\n    'DECIMAL',\n    'BIGNUMERIC',\n    'BIGDECIMAL',\n    'FLOAT64',\n    'STRING',\n    'STRUCT',\n    'TIME',\n    'TIMEZONE',\n];\n//# sourceMappingURL=bigquery.keywords.js.map","export const functions = [\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aead_encryption_functions\n    'KEYS.NEW_KEYSET',\n    'KEYS.ADD_KEY_FROM_RAW_BYTES',\n    'AEAD.DECRYPT_BYTES',\n    'AEAD.DECRYPT_STRING',\n    'AEAD.ENCRYPT',\n    'KEYS.KEYSET_CHAIN',\n    'KEYS.KEYSET_FROM_JSON',\n    'KEYS.KEYSET_TO_JSON',\n    'KEYS.ROTATE_KEYSET',\n    'KEYS.KEYSET_LENGTH',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_analytic_functions\n    'ANY_VALUE',\n    'ARRAY_AGG',\n    'AVG',\n    'CORR',\n    'COUNT',\n    'COUNTIF',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'MAX',\n    'MIN',\n    'ST_CLUSTERDBSCAN',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRING_AGG',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/aggregate_functions\n    'ANY_VALUE',\n    'ARRAY_AGG',\n    'ARRAY_CONCAT_AGG',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'COUNT',\n    'COUNTIF',\n    'LOGICAL_AND',\n    'LOGICAL_OR',\n    'MAX',\n    'MIN',\n    'STRING_AGG',\n    'SUM',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/approximate_aggregate_functions\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_QUANTILES',\n    'APPROX_TOP_COUNT',\n    'APPROX_TOP_SUM',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/array_functions\n    // 'ARRAY',\n    'ARRAY_CONCAT',\n    'ARRAY_LENGTH',\n    'ARRAY_TO_STRING',\n    'GENERATE_ARRAY',\n    'GENERATE_DATE_ARRAY',\n    'GENERATE_TIMESTAMP_ARRAY',\n    'ARRAY_REVERSE',\n    'OFFSET',\n    'SAFE_OFFSET',\n    'ORDINAL',\n    'SAFE_ORDINAL',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/bit_functions\n    'BIT_COUNT',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conversion_functions\n    // 'CASE',\n    'PARSE_BIGNUMERIC',\n    'PARSE_NUMERIC',\n    'SAFE_CAST',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/date_functions\n    'CURRENT_DATE',\n    'EXTRACT',\n    'DATE',\n    'DATE_ADD',\n    'DATE_SUB',\n    'DATE_DIFF',\n    'DATE_TRUNC',\n    'DATE_FROM_UNIX_DATE',\n    'FORMAT_DATE',\n    'LAST_DAY',\n    'PARSE_DATE',\n    'UNIX_DATE',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/datetime_functions\n    'CURRENT_DATETIME',\n    'DATETIME',\n    'EXTRACT',\n    'DATETIME_ADD',\n    'DATETIME_SUB',\n    'DATETIME_DIFF',\n    'DATETIME_TRUNC',\n    'FORMAT_DATETIME',\n    'LAST_DAY',\n    'PARSE_DATETIME',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/debugging_functions\n    'ERROR',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/federated_query_functions\n    'EXTERNAL_QUERY',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/geography_functions\n    'S2_CELLIDFROMPOINT',\n    'S2_COVERINGCELLIDS',\n    'ST_ANGLE',\n    'ST_AREA',\n    'ST_ASBINARY',\n    'ST_ASGEOJSON',\n    'ST_ASTEXT',\n    'ST_AZIMUTH',\n    'ST_BOUNDARY',\n    'ST_BOUNDINGBOX',\n    'ST_BUFFER',\n    'ST_BUFFERWITHTOLERANCE',\n    'ST_CENTROID',\n    'ST_CENTROID_AGG',\n    'ST_CLOSESTPOINT',\n    'ST_CLUSTERDBSCAN',\n    'ST_CONTAINS',\n    'ST_CONVEXHULL',\n    'ST_COVEREDBY',\n    'ST_COVERS',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_DUMP',\n    'ST_DWITHIN',\n    'ST_ENDPOINT',\n    'ST_EQUALS',\n    'ST_EXTENT',\n    'ST_EXTERIORRING',\n    'ST_GEOGFROM',\n    'ST_GEOGFROMGEOJSON',\n    'ST_GEOGFROMTEXT',\n    'ST_GEOGFROMWKB',\n    'ST_GEOGPOINT',\n    'ST_GEOGPOINTFROMGEOHASH',\n    'ST_GEOHASH',\n    'ST_GEOMETRYTYPE',\n    'ST_INTERIORRINGS',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_INTERSECTSBOX',\n    'ST_ISCOLLECTION',\n    'ST_ISEMPTY',\n    'ST_LENGTH',\n    'ST_MAKELINE',\n    'ST_MAKEPOLYGON',\n    'ST_MAKEPOLYGONORIENTED',\n    'ST_MAXDISTANCE',\n    'ST_NPOINTS',\n    'ST_NUMGEOMETRIES',\n    'ST_NUMPOINTS',\n    'ST_PERIMETER',\n    'ST_POINTN',\n    'ST_SIMPLIFY',\n    'ST_SNAPTOGRID',\n    'ST_STARTPOINT',\n    'ST_TOUCHES',\n    'ST_UNION',\n    'ST_UNION_AGG',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_Y',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/hash_functions\n    'FARM_FINGERPRINT',\n    'MD5',\n    'SHA1',\n    'SHA256',\n    'SHA512',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/hll_functions\n    'HLL_COUNT.INIT',\n    'HLL_COUNT.MERGE',\n    'HLL_COUNT.MERGE_PARTIAL',\n    'HLL_COUNT.EXTRACT',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/interval_functions\n    'MAKE_INTERVAL',\n    'EXTRACT',\n    'JUSTIFY_DAYS',\n    'JUSTIFY_HOURS',\n    'JUSTIFY_INTERVAL',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/json_functions\n    'JSON_EXTRACT',\n    'JSON_QUERY',\n    'JSON_EXTRACT_SCALAR',\n    'JSON_VALUE',\n    'JSON_EXTRACT_ARRAY',\n    'JSON_QUERY_ARRAY',\n    'JSON_EXTRACT_STRING_ARRAY',\n    'JSON_VALUE_ARRAY',\n    'TO_JSON_STRING',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/mathematical_functions\n    'ABS',\n    'SIGN',\n    'IS_INF',\n    'IS_NAN',\n    'IEEE_DIVIDE',\n    'RAND',\n    'SQRT',\n    'POW',\n    'POWER',\n    'EXP',\n    'LN',\n    'LOG',\n    'LOG10',\n    'GREATEST',\n    'LEAST',\n    'DIV',\n    'SAFE_DIVIDE',\n    'SAFE_MULTIPLY',\n    'SAFE_NEGATE',\n    'SAFE_ADD',\n    'SAFE_SUBTRACT',\n    'MOD',\n    'ROUND',\n    'TRUNC',\n    'CEIL',\n    'CEILING',\n    'FLOOR',\n    'COS',\n    'COSH',\n    'ACOS',\n    'ACOSH',\n    'SIN',\n    'SINH',\n    'ASIN',\n    'ASINH',\n    'TAN',\n    'TANH',\n    'ATAN',\n    'ATANH',\n    'ATAN2',\n    'RANGE_BUCKET',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/navigation_functions\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'NTH_VALUE',\n    'LEAD',\n    'LAG',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/net_functions\n    'NET.IP_FROM_STRING',\n    'NET.SAFE_IP_FROM_STRING',\n    'NET.IP_TO_STRING',\n    'NET.IP_NET_MASK',\n    'NET.IP_TRUNC',\n    'NET.IPV4_FROM_INT64',\n    'NET.IPV4_TO_INT64',\n    'NET.HOST',\n    'NET.PUBLIC_SUFFIX',\n    'NET.REG_DOMAIN',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/numbering_functions\n    'RANK',\n    'DENSE_RANK',\n    'PERCENT_RANK',\n    'CUME_DIST',\n    'NTILE',\n    'ROW_NUMBER',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/security_functions\n    'SESSION_USER',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/statistical_aggregate_functions\n    'CORR',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STDDEV',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/string_functions\n    'ASCII',\n    'BYTE_LENGTH',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CODE_POINTS_TO_BYTES',\n    'CODE_POINTS_TO_STRING',\n    'CONCAT',\n    'CONTAINS_SUBSTR',\n    'ENDS_WITH',\n    'FORMAT',\n    'FROM_BASE32',\n    'FROM_BASE64',\n    'FROM_HEX',\n    'INITCAP',\n    'INSTR',\n    'LEFT',\n    'LENGTH',\n    'LPAD',\n    'LOWER',\n    'LTRIM',\n    'NORMALIZE',\n    'NORMALIZE_AND_CASEFOLD',\n    'OCTET_LENGTH',\n    'REGEXP_CONTAINS',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPLACE',\n    'REPEAT',\n    'REVERSE',\n    'RIGHT',\n    'RPAD',\n    'RTRIM',\n    'SAFE_CONVERT_BYTES_TO_STRING',\n    'SOUNDEX',\n    'SPLIT',\n    'STARTS_WITH',\n    'STRPOS',\n    'SUBSTR',\n    'SUBSTRING',\n    'TO_BASE32',\n    'TO_BASE64',\n    'TO_CODE_POINTS',\n    'TO_HEX',\n    'TRANSLATE',\n    'TRIM',\n    'UNICODE',\n    'UPPER',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/time_functions\n    'CURRENT_TIME',\n    'TIME',\n    'EXTRACT',\n    'TIME_ADD',\n    'TIME_SUB',\n    'TIME_DIFF',\n    'TIME_TRUNC',\n    'FORMAT_TIME',\n    'PARSE_TIME',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/timestamp_functions\n    'CURRENT_TIMESTAMP',\n    'EXTRACT',\n    'STRING',\n    'TIMESTAMP',\n    'TIMESTAMP_ADD',\n    'TIMESTAMP_SUB',\n    'TIMESTAMP_DIFF',\n    'TIMESTAMP_TRUNC',\n    'FORMAT_TIMESTAMP',\n    'PARSE_TIMESTAMP',\n    'TIMESTAMP_SECONDS',\n    'TIMESTAMP_MILLIS',\n    'TIMESTAMP_MICROS',\n    'UNIX_SECONDS',\n    'UNIX_MILLIS',\n    'UNIX_MICROS',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/uuid_functions\n    'GENERATE_UUID',\n    // https://cloud.google.com/bigquery/docs/reference/standard-sql/conditional_expressions\n    'COALESCE',\n    'IF',\n    'IFNULL',\n    'NULLIF',\n    // https://cloud.google.com/bigquery/docs/reference/legacy-sql\n    // legacyAggregate\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'CORR',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'EXACT_COUNT_DISTINCT',\n    'FIRST',\n    'GROUP_CONCAT',\n    'GROUP_CONCAT_UNQUOTED',\n    'LAST',\n    'MAX',\n    'MIN',\n    'NEST',\n    'NTH',\n    'QUANTILES',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'TOP',\n    'UNIQUE',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    // legacyBitwise\n    'BIT_COUNT',\n    // legacyCasting\n    'BOOLEAN',\n    'BYTES',\n    'CAST',\n    'FLOAT',\n    'HEX_STRING',\n    'INTEGER',\n    'STRING',\n    // legacyComparison\n    // expr 'IN',\n    'COALESCE',\n    'GREATEST',\n    'IFNULL',\n    'IS_INF',\n    'IS_NAN',\n    'IS_EXPLICITLY_DEFINED',\n    'LEAST',\n    'NVL',\n    // legacyDatetime\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATE',\n    'DATE_ADD',\n    'DATEDIFF',\n    'DAY',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'FORMAT_UTC_USEC',\n    'HOUR',\n    'MINUTE',\n    'MONTH',\n    'MSEC_TO_TIMESTAMP',\n    'NOW',\n    'PARSE_UTC_USEC',\n    'QUARTER',\n    'SEC_TO_TIMESTAMP',\n    'SECOND',\n    'STRFTIME_UTC_USEC',\n    'TIME',\n    'TIMESTAMP',\n    'TIMESTAMP_TO_MSEC',\n    'TIMESTAMP_TO_SEC',\n    'TIMESTAMP_TO_USEC',\n    'USEC_TO_TIMESTAMP',\n    'UTC_USEC_TO_DAY',\n    'UTC_USEC_TO_HOUR',\n    'UTC_USEC_TO_MONTH',\n    'UTC_USEC_TO_WEEK',\n    'UTC_USEC_TO_YEAR',\n    'WEEK',\n    'YEAR',\n    // legacyIp\n    'FORMAT_IP',\n    'PARSE_IP',\n    'FORMAT_PACKED_IP',\n    'PARSE_PACKED_IP',\n    // legacyJson\n    'JSON_EXTRACT',\n    'JSON_EXTRACT_SCALAR',\n    // legacyMath\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'ASIN',\n    'ASINH',\n    'ATAN',\n    'ATANH',\n    'ATAN2',\n    'CEIL',\n    'COS',\n    'COSH',\n    'DEGREES',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'LOG2',\n    'LOG10',\n    'PI',\n    'POW',\n    'RADIANS',\n    'RAND',\n    'ROUND',\n    'SIN',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TANH',\n    // legacyRegex\n    'REGEXP_MATCH',\n    'REGEXP_EXTRACT',\n    'REGEXP_REPLACE',\n    // legacyString\n    'CONCAT',\n    // expr CONTAINS 'str'\n    'INSTR',\n    'LEFT',\n    'LENGTH',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'REPLACE',\n    'RIGHT',\n    'RPAD',\n    'RTRIM',\n    'SPLIT',\n    'SUBSTR',\n    'UPPER',\n    // legacyTableWildcard\n    'TABLE_DATE_RANGE',\n    'TABLE_DATE_RANGE_STRICT',\n    'TABLE_QUERY',\n    // legacyUrl\n    'HOST',\n    'DOMAIN',\n    'TLD',\n    // legacyWindow\n    'AVG',\n    'COUNT',\n    'MAX',\n    'MIN',\n    'STDDEV',\n    'SUM',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    // legacyMisc\n    'CURRENT_USER',\n    'EVERY',\n    'FROM_BASE64',\n    'HASH',\n    'FARM_FINGERPRINT',\n    'IF',\n    'POSITION',\n    'SHA1',\n    'SOME',\n    'TO_BASE64',\n    // other\n    'BQ.JOBS.CANCEL',\n    'BQ.REFRESH_MATERIALIZED_VIEW',\n    // ddl\n    'OPTIONS',\n    // pivot\n    'PIVOT',\n    'UNPIVOT',\n];\n//# sourceMappingURL=bigquery.functions.js.map","export const functions = [\n    // https://www.ibm.com/docs/en/db2/11.5?topic=bif-aggregate-functions\n    'ARRAY_AGG',\n    'AVG',\n    'CORRELATION',\n    'COUNT',\n    'COUNT_BIG',\n    'COVARIANCE',\n    'COVARIANCE_SAMP',\n    'CUME_DIST',\n    'GROUPING',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_ICPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'STDDEV',\n    'STDDEV_SAMP',\n    'SUM',\n    'VARIANCE',\n    'VARIANCE_SAMP',\n    'XMLAGG',\n    'XMLGROUP',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=bif-scalar-functions\n    'ABS',\n    'ABSVAL',\n    'ACOS',\n    'ADD_DAYS',\n    'ADD_HOURS',\n    'ADD_MINUTES',\n    'ADD_MONTHS',\n    'ADD_SECONDS',\n    'ADD_YEARS',\n    'AGE',\n    'ARRAY_DELETE',\n    'ARRAY_FIRST',\n    'ARRAY_LAST',\n    'ARRAY_NEXT',\n    'ARRAY_PRIOR',\n    'ASCII',\n    'ASCII_STR',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BITAND',\n    'BITANDNOT',\n    'BITOR',\n    'BITXOR',\n    'BITNOT',\n    'BPCHAR',\n    'BSON_TO_JSON',\n    'BTRIM',\n    'CARDINALITY',\n    'CEILING',\n    'CEIL',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'COALESCE',\n    'COLLATION_KEY',\n    'COLLATION_KEY_BIT',\n    'COMPARE_DECFLOAT',\n    'CONCAT',\n    'COS',\n    'COSH',\n    'COT',\n    'CURSOR_ROWCOUNT',\n    'DATAPARTITIONNUM',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFWEEK_ISO',\n    'DAYOFYEAR',\n    'DAYS',\n    'DAYS_BETWEEN',\n    'DAYS_TO_END_OF_MONTH',\n    'DBPARTITIONNUM',\n    'DECFLOAT',\n    'DECFLOAT_FORMAT',\n    'DECODE',\n    'DECRYPT_BIN',\n    'DECRYPT_CHAR',\n    'DEGREES',\n    'DEREF',\n    'DIFFERENCE',\n    'DIGITS',\n    'DOUBLE_PRECISION',\n    'EMPTY_BLOB',\n    'EMPTY_CLOB',\n    'EMPTY_DBCLOB',\n    'EMPTY_NCLOB',\n    'ENCRYPT',\n    'EVENT_MON_STATE',\n    'EXP',\n    'EXTRACT',\n    'FIRST_DAY',\n    'FLOOR',\n    'FROM_UTC_TIMESTAMP',\n    'GENERATE_UNIQUE',\n    'GETHINT',\n    'GREATEST',\n    'HASH',\n    'HASH4',\n    'HASH8',\n    'HASHEDVALUE',\n    'HEX',\n    'HEXTORAW',\n    'HOUR',\n    'HOURS_BETWEEN',\n    'IDENTITY_VAL_LOCAL',\n    'IFNULL',\n    'INITCAP',\n    'INSERT',\n    'INSTR',\n    'INSTR2',\n    'INSTR4',\n    'INSTRB',\n    'INTNAND',\n    'INTNOR',\n    'INTNXOR',\n    'INTNNOT',\n    'ISNULL',\n    'JSON_ARRAY',\n    'JSON_OBJECT',\n    'JSON_QUERY',\n    'JSON_TO_BSON',\n    'JSON_VALUE',\n    'JULIAN_DAY',\n    'LAST_DAY',\n    'LCASE',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LENGTH2',\n    'LENGTH4',\n    'LENGTHB',\n    'LN',\n    'LOCATE',\n    'LOCATE_IN_STRING',\n    'LOG10',\n    'LONG_VARCHAR',\n    'LONG_VARGRAPHIC',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAX',\n    'MAX_CARDINALITY',\n    'MICROSECOND',\n    'MIDNIGHT_SECONDS',\n    'MIN',\n    'MINUTE',\n    'MINUTES_BETWEEN',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'MULTIPLY_ALT',\n    'NEXT_DAY',\n    'NEXT_MONTH',\n    'NEXT_QUARTER',\n    'NEXT_WEEK',\n    'NEXT_YEAR',\n    'NORMALIZE_DECFLOAT',\n    'NOW',\n    'NULLIF',\n    'NVL',\n    'NVL2',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARAMETER',\n    'POSITION',\n    'POSSTR',\n    'POW',\n    'POWER',\n    'QUANTIZE',\n    'QUARTER',\n    'QUOTE_IDENT',\n    'QUOTE_LITERAL',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RAND',\n    'RANDOM',\n    'RAWTOHEX',\n    'REC2XML',\n    'REGEXP_COUNT',\n    'REGEXP_EXTRACT',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_MATCH_COUNT',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPEAT',\n    'REPLACE',\n    'RID',\n    'RID_BIT',\n    'RIGHT',\n    'ROUND',\n    'ROUND_TIMESTAMP',\n    'RPAD',\n    'RTRIM',\n    'SECLABEL',\n    'SECLABEL_BY_NAME',\n    'SECLABEL_TO_CHAR',\n    'SECOND',\n    'SECONDS_BETWEEN',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SOUNDEX',\n    'SPACE',\n    'SQRT',\n    'STRIP',\n    'STRLEFT',\n    'STRPOS',\n    'STRRIGHT',\n    'SUBSTR',\n    'SUBSTR2',\n    'SUBSTR4',\n    'SUBSTRB',\n    'SUBSTRING',\n    'TABLE_NAME',\n    'TABLE_SCHEMA',\n    'TAN',\n    'TANH',\n    'THIS_MONTH',\n    'THIS_QUARTER',\n    'THIS_WEEK',\n    'THIS_YEAR',\n    'TIMESTAMP_FORMAT',\n    'TIMESTAMP_ISO',\n    'TIMESTAMPDIFF',\n    'TIMEZONE',\n    'TO_CHAR',\n    'TO_CLOB',\n    'TO_DATE',\n    'TO_HEX',\n    'TO_MULTI_BYTE',\n    'TO_NCHAR',\n    'TO_NCLOB',\n    'TO_NUMBER',\n    'TO_SINGLE_BYTE',\n    'TO_TIMESTAMP',\n    'TO_UTC_TIMESTAMP',\n    'TOTALORDER',\n    'TRANSLATE',\n    'TRIM',\n    'TRIM_ARRAY',\n    'TRUNC_TIMESTAMP',\n    'TRUNCATE',\n    'TRUNC',\n    'TYPE_ID',\n    'TYPE_NAME',\n    'TYPE_SCHEMA',\n    'UCASE',\n    'UNICODE_STR',\n    'UPPER',\n    'VALUE',\n    'VARCHAR_BIT_FORMAT',\n    'VARCHAR_FORMAT',\n    'VARCHAR_FORMAT_BIT',\n    'VERIFY_GROUP_FOR_USER',\n    'VERIFY_ROLE_FOR_USER',\n    'VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER',\n    'WEEK',\n    'WEEK_ISO',\n    'WEEKS_BETWEEN',\n    'WIDTH_BUCKET',\n    'XMLATTRIBUTES',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLDOCUMENT',\n    'XMLELEMENT',\n    'XMLFOREST',\n    'XMLNAMESPACES',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLQUERY',\n    'XMLROW',\n    'XMLSERIALIZE',\n    'XMLTEXT',\n    'XMLVALIDATE',\n    'XMLXSROBJECTID',\n    'XSLTRANSFORM',\n    'YEAR',\n    'YEARS_BETWEEN',\n    'YMD_BETWEEN',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=bif-table-functions\n    'BASE_TABLE',\n    'JSON_TABLE',\n    'UNNEST',\n    'XMLTABLE',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=expressions-olap-specification\n    // Additional function names not already present in the aggregate functions list\n    'RANK',\n    'DENSE_RANK',\n    'NTILE',\n    'LAG',\n    'LEAD',\n    'ROW_NUMBER',\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'NTH_VALUE',\n    'RATIO_TO_REPORT',\n    // Type casting\n    'CAST',\n];\n//# sourceMappingURL=db2.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './db2.functions.js';\nimport { dataTypes, keywords } from './db2.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY [INPUT SEQUENCE]',\n    'LIMIT',\n    'OFFSET',\n    'FETCH NEXT',\n    'FOR UPDATE [OF]',\n    'FOR {READ | FETCH} ONLY',\n    'FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]',\n    'WAIT FOR OUTCOME',\n    'SKIP LOCKED DATA',\n    'INTO',\n    // Data modification\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    'INSERT',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    'WITH {RR | RS | CS | UR}',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    'SET DATA TYPE',\n    'SET NOT NULL',\n    'DROP {DEFAULT | GENERATED | NOT NULL}',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://www.ibm.com/docs/en/db2/11.5?topic=s-statements\n    'ALLOCATE',\n    'ALTER AUDIT POLICY',\n    'ALTER BUFFERPOOL',\n    'ALTER DATABASE PARTITION GROUP',\n    'ALTER DATABASE',\n    'ALTER EVENT MONITOR',\n    'ALTER FUNCTION',\n    'ALTER HISTOGRAM TEMPLATE',\n    'ALTER INDEX',\n    'ALTER MASK',\n    'ALTER METHOD',\n    'ALTER MODULE',\n    'ALTER NICKNAME',\n    'ALTER PACKAGE',\n    'ALTER PERMISSION',\n    'ALTER PROCEDURE',\n    'ALTER SCHEMA',\n    'ALTER SECURITY LABEL COMPONENT',\n    'ALTER SECURITY POLICY',\n    'ALTER SEQUENCE',\n    'ALTER SERVER',\n    'ALTER SERVICE CLASS',\n    'ALTER STOGROUP',\n    'ALTER TABLESPACE',\n    'ALTER THRESHOLD',\n    'ALTER TRIGGER',\n    'ALTER TRUSTED CONTEXT',\n    'ALTER TYPE',\n    'ALTER USAGE LIST',\n    'ALTER USER MAPPING',\n    'ALTER VIEW',\n    'ALTER WORK ACTION SET',\n    'ALTER WORK CLASS SET',\n    'ALTER WORKLOAD',\n    'ALTER WRAPPER',\n    'ALTER XSROBJECT',\n    'ALTER STOGROUP',\n    'ALTER TABLESPACE',\n    'ALTER TRIGGER',\n    'ALTER TRUSTED CONTEXT',\n    'ALTER VIEW',\n    'ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}',\n    'AUDIT',\n    'BEGIN DECLARE SECTION',\n    'CALL',\n    'CLOSE',\n    'COMMENT ON',\n    'COMMIT [WORK]',\n    'CONNECT',\n    'CREATE [OR REPLACE] [PUBLIC] ALIAS',\n    'CREATE AUDIT POLICY',\n    'CREATE BUFFERPOOL',\n    'CREATE DATABASE PARTITION GROUP',\n    'CREATE EVENT MONITOR',\n    'CREATE [OR REPLACE] FUNCTION',\n    'CREATE FUNCTION MAPPING',\n    'CREATE HISTOGRAM TEMPLATE',\n    'CREATE [UNIQUE] INDEX',\n    'CREATE INDEX EXTENSION',\n    'CREATE [OR REPLACE] MASK',\n    'CREATE [SPECIFIC] METHOD',\n    'CREATE [OR REPLACE] MODULE',\n    'CREATE [OR REPLACE] NICKNAME',\n    'CREATE [OR REPLACE] PERMISSION',\n    'CREATE [OR REPLACE] PROCEDURE',\n    'CREATE ROLE',\n    'CREATE SCHEMA',\n    'CREATE SECURITY LABEL [COMPONENT]',\n    'CREATE SECURITY POLICY',\n    'CREATE [OR REPLACE] SEQUENCE',\n    'CREATE SERVICE CLASS',\n    'CREATE SERVER',\n    'CREATE STOGROUP',\n    'CREATE SYNONYM',\n    'CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE',\n    'CREATE THRESHOLD',\n    'CREATE {TRANSFORM | TRANSFORMS} FOR',\n    'CREATE [OR REPLACE] TRIGGER',\n    'CREATE TRUSTED CONTEXT',\n    'CREATE [OR REPLACE] TYPE',\n    'CREATE TYPE MAPPING',\n    'CREATE USAGE LIST',\n    'CREATE USER MAPPING FOR',\n    'CREATE [OR REPLACE] VARIABLE',\n    'CREATE WORK ACTION SET',\n    'CREATE WORK CLASS SET',\n    'CREATE WORKLOAD',\n    'CREATE WRAPPER',\n    'DECLARE',\n    'DECLARE GLOBAL TEMPORARY TABLE',\n    'DESCRIBE [INPUT | OUTPUT]',\n    'DISCONNECT',\n    'DROP [PUBLIC] ALIAS',\n    'DROP AUDIT POLICY',\n    'DROP BUFFERPOOL',\n    'DROP DATABASE PARTITION GROUP',\n    'DROP EVENT MONITOR',\n    'DROP [SPECIFIC] FUNCTION',\n    'DROP FUNCTION MAPPING',\n    'DROP HISTOGRAM TEMPLATE',\n    'DROP INDEX [EXTENSION]',\n    'DROP MASK',\n    'DROP [SPECIFIC] METHOD',\n    'DROP MODULE',\n    'DROP NICKNAME',\n    'DROP PACKAGE',\n    'DROP PERMISSION',\n    'DROP [SPECIFIC] PROCEDURE',\n    'DROP ROLE',\n    'DROP SCHEMA',\n    'DROP SECURITY LABEL [COMPONENT]',\n    'DROP SECURITY POLICY',\n    'DROP SEQUENCE',\n    'DROP SERVER',\n    'DROP SERVICE CLASS',\n    'DROP STOGROUP',\n    'DROP TABLE HIERARCHY',\n    'DROP {TABLESPACE | TABLESPACES}',\n    'DROP {TRANSFORM | TRANSFORMS}',\n    'DROP THRESHOLD',\n    'DROP TRIGGER',\n    'DROP TRUSTED CONTEXT',\n    'DROP TYPE [MAPPING]',\n    'DROP USAGE LIST',\n    'DROP USER MAPPING FOR',\n    'DROP VARIABLE',\n    'DROP VIEW [HIERARCHY]',\n    'DROP WORK {ACTION | CLASS} SET',\n    'DROP WORKLOAD',\n    'DROP WRAPPER',\n    'DROP XSROBJECT',\n    'END DECLARE SECTION',\n    'EXECUTE [IMMEDIATE]',\n    'EXPLAIN {PLAN [SECTION] | ALL}',\n    'FETCH [FROM]',\n    'FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL',\n    'FLUSH EVENT MONITOR',\n    'FLUSH FEDERATED CACHE',\n    'FLUSH OPTIMIZATION PROFILE CACHE',\n    'FLUSH PACKAGE CACHE [DYNAMIC]',\n    'FLUSH AUTHENTICATION CACHE [FOR ALL]',\n    'FREE LOCATOR',\n    'GET DIAGNOSTICS',\n    'GOTO',\n    'GRANT',\n    'INCLUDE',\n    'ITERATE',\n    'LEAVE',\n    'LOCK TABLE',\n    'LOOP',\n    'OPEN',\n    'PIPE',\n    'PREPARE',\n    'REFRESH TABLE',\n    'RELEASE',\n    'RELEASE [TO] SAVEPOINT',\n    'RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]',\n    'REPEAT',\n    'RESIGNAL',\n    'RETURN',\n    'REVOKE',\n    'ROLLBACK [WORK] [TO SAVEPOINT]',\n    'SAVEPOINT',\n    'SET COMPILATION ENVIRONMENT',\n    'SET CONNECTION',\n    'SET CURRENT',\n    'SET ENCRYPTION PASSWORD',\n    'SET EVENT MONITOR STATE',\n    'SET INTEGRITY',\n    'SET PASSTHRU',\n    'SET PATH',\n    'SET ROLE',\n    'SET SCHEMA',\n    'SET SERVER OPTION',\n    'SET {SESSION AUTHORIZATION | SESSION_USER}',\n    'SET USAGE LIST',\n    'SIGNAL',\n    'TRANSFER OWNERSHIP OF',\n    'WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}',\n    'WHILE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'SET NULL',\n    '{ROWS | RANGE} BETWEEN',\n]);\nexport const db2 = {\n    name: 'db2',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['G', 'N', 'U&'] },\n            { quote: \"''-raw\", prefixes: ['X', 'BX', 'GX', 'UX'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`],\n        identChars: { first: '@#$', rest: '@#$' },\n        paramTypes: { positional: true, named: [':'] },\n        paramChars: { first: '@#$', rest: '@#$' },\n        operators: [\n            '**',\n            '%',\n            '|',\n            '&',\n            '^',\n            '~',\n            '¬=',\n            '¬>',\n            '¬<',\n            '!>',\n            '!<',\n            '^=',\n            '^>',\n            '^<',\n            '||',\n            '->',\n            '=>',\n        ],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=db2.formatter.js.map","export const keywords = [\n    // https://www.ibm.com/docs/en/db2/11.5?topic=sql-reserved-schema-names-reserved-words\n    'ACTIVATE',\n    'ADD',\n    'AFTER',\n    'ALIAS',\n    'ALL',\n    'ALLOCATE',\n    'ALLOW',\n    'ALTER',\n    'AND',\n    'ANY',\n    'AS',\n    'ASENSITIVE',\n    'ASSOCIATE',\n    'ASUTIME',\n    'AT',\n    'ATTRIBUTES',\n    'AUDIT',\n    'AUTHORIZATION',\n    'AUX',\n    'AUXILIARY',\n    'BEFORE',\n    'BEGIN',\n    'BETWEEN',\n    'BINARY',\n    'BUFFERPOOL',\n    'BY',\n    'CACHE',\n    'CALL',\n    'CALLED',\n    'CAPTURE',\n    'CARDINALITY',\n    'CASCADED',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'CLONE',\n    'CLOSE',\n    'CLUSTER',\n    'COLLECTION',\n    'COLLID',\n    'COLUMN',\n    'COMMENT',\n    'COMMIT',\n    'CONCAT',\n    'CONDITION',\n    'CONNECT',\n    'CONNECTION',\n    'CONSTRAINT',\n    'CONTAINS',\n    'CONTINUE',\n    'COUNT',\n    'COUNT_BIG',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_LC_CTYPE',\n    'CURRENT_PATH',\n    'CURRENT_SCHEMA',\n    'CURRENT_SERVER',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_USER',\n    'CURSOR',\n    'CYCLE',\n    'DATA',\n    'DATABASE',\n    'DATAPARTITIONNAME',\n    'DATAPARTITIONNUM',\n    'DAY',\n    'DAYS',\n    'DB2GENERAL',\n    'DB2GENRL',\n    'DB2SQL',\n    'DBINFO',\n    'DBPARTITIONNAME',\n    'DBPARTITIONNUM',\n    'DEALLOCATE',\n    'DECLARE',\n    'DEFAULT',\n    'DEFAULTS',\n    'DEFINITION',\n    'DELETE',\n    'DENSERANK',\n    'DENSE_RANK',\n    'DESCRIBE',\n    'DESCRIPTOR',\n    'DETERMINISTIC',\n    'DIAGNOSTICS',\n    'DISABLE',\n    'DISALLOW',\n    'DISCONNECT',\n    'DISTINCT',\n    'DO',\n    'DOCUMENT',\n    'DROP',\n    'DSSIZE',\n    'DYNAMIC',\n    'EACH',\n    'EDITPROC',\n    'ELSE',\n    'ELSEIF',\n    'ENABLE',\n    'ENCODING',\n    'ENCRYPTION',\n    'END',\n    'END-EXEC',\n    'ENDING',\n    'ERASE',\n    'ESCAPE',\n    'EVERY',\n    'EXCEPT',\n    'EXCEPTION',\n    'EXCLUDING',\n    'EXCLUSIVE',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'EXTENDED',\n    'EXTERNAL',\n    'EXTRACT',\n    'FENCED',\n    'FETCH',\n    'FIELDPROC',\n    'FILE',\n    'FINAL',\n    'FIRST1',\n    'FOR',\n    'FOREIGN',\n    'FREE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GENERAL',\n    'GENERATED',\n    'GET',\n    'GLOBAL',\n    'GO',\n    'GOTO',\n    'GRANT',\n    'GRAPHIC',\n    'GROUP',\n    'HANDLER',\n    'HASH',\n    'HASHED_VALUE',\n    'HAVING',\n    'HINT',\n    'HOLD',\n    'HOUR',\n    'HOURS',\n    'IDENTITY',\n    'IF',\n    'IMMEDIATE',\n    'IMPORT',\n    'IN',\n    'INCLUDING',\n    'INCLUSIVE',\n    'INCREMENT',\n    'INDEX',\n    'INDICATOR',\n    'INDICATORS',\n    'INF',\n    'INFINITY',\n    'INHERIT',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INTEGRITY',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'ISOBID',\n    'ISOLATION',\n    'ITERATE',\n    'JAR',\n    'JAVA',\n    'JOIN',\n    'KEEP',\n    'KEY',\n    'LABEL',\n    'LANGUAGE',\n    'LAST3',\n    'LATERAL',\n    'LC_CTYPE',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINKTYPE',\n    'LOCAL',\n    'LOCALDATE',\n    'LOCALE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATOR',\n    'LOCATORS',\n    'LOCK',\n    'LOCKMAX',\n    'LOCKSIZE',\n    'LOOP',\n    'MAINTAINED',\n    'MATERIALIZED',\n    'MAXVALUE',\n    'MICROSECOND',\n    'MICROSECONDS',\n    'MINUTE',\n    'MINUTES',\n    'MINVALUE',\n    'MODE',\n    'MODIFIES',\n    'MONTH',\n    'MONTHS',\n    'NAN',\n    'NEW',\n    'NEW_TABLE',\n    'NEXTVAL',\n    'NO',\n    'NOCACHE',\n    'NOCYCLE',\n    'NODENAME',\n    'NODENUMBER',\n    'NOMAXVALUE',\n    'NOMINVALUE',\n    'NONE',\n    'NOORDER',\n    'NORMALIZED',\n    'NOT2',\n    'NOTNULL',\n    'NULL',\n    'NULLS',\n    'NUMPARTS',\n    'OBID',\n    'OF',\n    'OFF',\n    'OFFSET',\n    'OLD',\n    'OLD_TABLE',\n    'ON',\n    'OPEN',\n    'OPTIMIZATION',\n    'OPTIMIZE',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERRIDING',\n    'PACKAGE',\n    'PADDED',\n    'PAGESIZE',\n    'PARAMETER',\n    'PART',\n    'PARTITION',\n    'PARTITIONED',\n    'PARTITIONING',\n    'PARTITIONS',\n    'PASSWORD',\n    'PATH',\n    'PERCENT',\n    'PIECESIZE',\n    'PLAN',\n    'POSITION',\n    'PRECISION',\n    'PREPARE',\n    'PREVVAL',\n    'PRIMARY',\n    'PRIQTY',\n    'PRIVILEGES',\n    'PROCEDURE',\n    'PROGRAM',\n    'PSID',\n    'PUBLIC',\n    'QUERY',\n    'QUERYNO',\n    'RANGE',\n    'RANK',\n    'READ',\n    'READS',\n    'RECOVERY',\n    'REFERENCES',\n    'REFERENCING',\n    'REFRESH',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'RESET',\n    'RESIGNAL',\n    'RESTART',\n    'RESTRICT',\n    'RESULT',\n    'RESULT_SET_LOCATOR',\n    'RETURN',\n    'RETURNS',\n    'REVOKE',\n    'RIGHT',\n    'ROLE',\n    'ROLLBACK',\n    'ROUND_CEILING',\n    'ROUND_DOWN',\n    'ROUND_FLOOR',\n    'ROUND_HALF_DOWN',\n    'ROUND_HALF_EVEN',\n    'ROUND_HALF_UP',\n    'ROUND_UP',\n    'ROUTINE',\n    'ROW',\n    'ROWNUMBER',\n    'ROWS',\n    'ROWSET',\n    'ROW_NUMBER',\n    'RRN',\n    'RUN',\n    'SAVEPOINT',\n    'SCHEMA',\n    'SCRATCHPAD',\n    'SCROLL',\n    'SEARCH',\n    'SECOND',\n    'SECONDS',\n    'SECQTY',\n    'SECURITY',\n    'SELECT',\n    'SENSITIVE',\n    'SEQUENCE',\n    'SESSION',\n    'SESSION_USER',\n    'SET',\n    'SIGNAL',\n    'SIMPLE',\n    'SNAN',\n    'SOME',\n    'SOURCE',\n    'SPECIFIC',\n    'SQL',\n    'SQLID',\n    'STACKED',\n    'STANDARD',\n    'START',\n    'STARTING',\n    'STATEMENT',\n    'STATIC',\n    'STATMENT',\n    'STAY',\n    'STOGROUP',\n    'STORES',\n    'STYLE',\n    'SUBSTRING',\n    'SUMMARY',\n    'SYNONYM',\n    'SYSFUN',\n    'SYSIBM',\n    'SYSPROC',\n    'SYSTEM',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESPACE',\n    'THEN',\n    'TO',\n    'TRANSACTION',\n    'TRIGGER',\n    'TRIM',\n    'TRUNCATE',\n    'TYPE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNTIL',\n    'UPDATE',\n    'USAGE',\n    'USER',\n    'USING',\n    'VALIDPROC',\n    'VALUE',\n    'VALUES',\n    'VARIABLE',\n    'VARIANT',\n    'VCAT',\n    'VERSION',\n    'VIEW',\n    'VOLATILE',\n    'VOLUMES',\n    'WHEN',\n    'WHENEVER',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WITHOUT',\n    'WLM',\n    'WRITE',\n    'XMLELEMENT',\n    'XMLEXISTS',\n    'XMLNAMESPACES',\n    'YEAR',\n    'YEARS',\n];\nexport const dataTypes = [\n    // https://www.ibm.com/docs/en/db2-for-zos/12?topic=columns-data-types\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BLOB',\n    'BOOLEAN',\n    'CCSID',\n    'CHAR',\n    'CHARACTER',\n    'CLOB',\n    'DATE',\n    'DATETIME',\n    'DBCLOB',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'DOUBLE PRECISION',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'GRAPHIC',\n    'INT',\n    'INT2',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'INTERVAL',\n    'LONG VARCHAR',\n    'LONG VARGRAPHIC',\n    'NCHAR',\n    'NCHR',\n    'NCLOB',\n    'NVARCHAR',\n    'NUMERIC',\n    'SMALLINT',\n    'REAL',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n    'VARGRAPHIC',\n];\n//# sourceMappingURL=db2.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './db2i.functions.js';\nimport { dataTypes, keywords } from './db2i.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'INTO',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER [SIBLINGS] BY [INPUT SEQUENCE]',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR UPDATE [OF]',\n    'FOR READ ONLY',\n    'OPTIMIZE FOR',\n    // Data modification\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    'DELETE',\n    'INSERT',\n    // Data definition - table\n    'FOR SYSTEM NAME',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [OR REPLACE] TABLE']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [RECURSIVE] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    'WITH {NC | RR | RS | CS | UR}',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE',\n    // alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    'ALTER [COLUMN]',\n    'DROP [COLUMN]',\n    'SET DATA TYPE',\n    'SET {GENERATED ALWAYS | GENERATED BY DEFAULT}',\n    'SET NOT NULL',\n    'SET {NOT HIDDEN | IMPLICITLY HIDDEN}',\n    'SET FIELDPROC',\n    'DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // other\n    'SET [CURRENT] SCHEMA',\n    'SET CURRENT_SCHEMA',\n    // https://www.ibm.com/docs/en/i/7.5?topic=reference-statements\n    'ALLOCATE CURSOR',\n    'ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL',\n    'ALTER [SPECIFIC] {FUNCTION | PROCEDURE}',\n    'ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}',\n    'ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}',\n    'BEGIN DECLARE SECTION',\n    'CALL',\n    'CLOSE',\n    'COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}',\n    'COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}',\n    'COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}',\n    'COMMENT ON [TABLE FUNCTION] RETURN COLUMN',\n    'COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]',\n    'COMMIT [WORK] [HOLD]',\n    'CONNECT [TO | RESET] USER',\n    'CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}',\n    'CREATE [ENCODED VECTOR] INDEX',\n    'CREATE UNIQUE [WHERE NOT NULL] INDEX',\n    'CREATE SCHEMA',\n    'CREATE TYPE',\n    'DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]',\n    'DECLARE CURSOR',\n    'DECLARE GLOBAL TEMPORARY TABLE',\n    'DECLARE',\n    'DESCRIBE CURSOR',\n    'DESCRIBE INPUT',\n    'DESCRIBE [OUTPUT]',\n    'DESCRIBE {PROCEDURE | ROUTINE}',\n    'DESCRIBE TABLE',\n    'DISCONNECT ALL [SQL]',\n    'DISCONNECT [CURRENT]',\n    'DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]',\n    'DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]',\n    'END DECLARE SECTION',\n    'EXECUTE [IMMEDIATE]',\n    // 'FETCH {NEXT | PRIOR | FIRST | LAST | BEFORE | AFTER | CURRENT} [FROM]',\n    'FREE LOCATOR',\n    'GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]',\n    'GET [CURRENT | STACKED] DIAGNOSTICS',\n    'GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}',\n    'HOLD LOCATOR',\n    'INCLUDE',\n    'LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}',\n    'LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}',\n    'LOCK TABLE',\n    'OPEN',\n    'PREPARE',\n    'REFRESH TABLE',\n    'RELEASE',\n    'RELEASE [TO] SAVEPOINT',\n    'RENAME [TABLE | INDEX] TO',\n    'REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}',\n    'ROLLBACK [WORK] [HOLD | TO SAVEPOINT]',\n    'SAVEPOINT',\n    'SET CONNECTION',\n    'SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}',\n    'SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]',\n    'SET ENCRYPTION PASSWORD',\n    'SET OPTION',\n    'SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}',\n    'SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]',\n    'SET SESSION AUTHORIZATION',\n    'SET SESSION_USER',\n    'SET TRANSACTION',\n    'SIGNAL SQLSTATE [VALUE]',\n    'TAG',\n    'TRANSFER OWNERSHIP OF',\n    'WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '[LEFT | RIGHT] EXCEPTION JOIN',\n    '{INNER | CROSS} JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'SET NULL',\n    '{ROWS | RANGE} BETWEEN',\n]);\n// https://www.ibm.com/docs/en/i/7.5?topic=reference-sql\nexport const db2i = {\n    name: 'db2i',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        extraParens: ['[]'],\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['G', 'N'] },\n            { quote: \"''-raw\", prefixes: ['X', 'BX', 'GX', 'UX'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`],\n        identChars: { first: '@#$', rest: '@#$' },\n        paramTypes: { positional: true, named: [':'] },\n        paramChars: { first: '@#$', rest: '@#$' },\n        operators: ['**', '¬=', '¬>', '¬<', '!>', '!<', '||', '=>'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=db2i.formatter.js.map","export const keywords = [\n    // https://www.ibm.com/docs/en/i/7.5?topic=words-reserved\n    // TODO: This list likely contains all keywords, not only the reserved ones,\n    // try to filter it down to just the reserved keywords.\n    'ABSENT',\n    'ACCORDING',\n    'ACCTNG',\n    'ACTION',\n    'ACTIVATE',\n    'ADD',\n    'ALIAS',\n    'ALL',\n    'ALLOCATE',\n    'ALLOW',\n    'ALTER',\n    'AND',\n    'ANY',\n    'APPEND',\n    'APPLNAME',\n    'ARRAY',\n    'ARRAY_AGG',\n    'ARRAY_TRIM',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'ASSOCIATE',\n    'ATOMIC',\n    'ATTACH',\n    'ATTRIBUTES',\n    'AUTHORIZATION',\n    'AUTONOMOUS',\n    'BEFORE',\n    'BEGIN',\n    'BETWEEN',\n    'BIND',\n    'BSON',\n    'BUFFERPOOL',\n    'BY',\n    'CACHE',\n    'CALL',\n    'CALLED',\n    'CARDINALITY',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'CL',\n    'CLOSE',\n    'CLUSTER',\n    'COLLECT',\n    'COLLECTION',\n    'COLUMN',\n    'COMMENT',\n    'COMMIT',\n    'COMPACT',\n    'COMPARISONS',\n    'COMPRESS',\n    'CONCAT',\n    'CONCURRENT',\n    'CONDITION',\n    'CONNECT',\n    'CONNECT_BY_ROOT',\n    'CONNECTION',\n    'CONSTANT',\n    'CONSTRAINT',\n    'CONTAINS',\n    'CONTENT',\n    'CONTINUE',\n    'COPY',\n    'COUNT',\n    'COUNT_BIG',\n    'CREATE',\n    'CREATEIN',\n    'CROSS',\n    'CUBE',\n    'CUME_DIST',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_PATH',\n    'CURRENT_SCHEMA',\n    'CURRENT_SERVER',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_USER',\n    'CURSOR',\n    'CYCLE',\n    'DATABASE',\n    'DATAPARTITIONNAME',\n    'DATAPARTITIONNUM',\n    'DAY',\n    'DAYS',\n    'DB2GENERAL',\n    'DB2GENRL',\n    'DB2SQL',\n    'DBINFO',\n    'DBPARTITIONNAME',\n    'DBPARTITIONNUM',\n    'DEACTIVATE',\n    'DEALLOCATE',\n    'DECLARE',\n    'DEFAULT',\n    'DEFAULTS',\n    'DEFER',\n    'DEFINE',\n    'DEFINITION',\n    'DELETE',\n    'DELETING',\n    'DENSE_RANK',\n    'DENSERANK',\n    'DESC',\n    'DESCRIBE',\n    'DESCRIPTOR',\n    'DETACH',\n    'DETERMINISTIC',\n    'DIAGNOSTICS',\n    'DISABLE',\n    'DISALLOW',\n    'DISCONNECT',\n    'DISTINCT',\n    'DO',\n    'DOCUMENT',\n    'DROP',\n    'DYNAMIC',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'EMPTY',\n    'ENABLE',\n    'ENCODING',\n    'ENCRYPTION',\n    'END',\n    'END-EXEC',\n    'ENDING',\n    'ENFORCED',\n    'ERROR',\n    'ESCAPE',\n    'EVERY',\n    'EXCEPT',\n    'EXCEPTION',\n    'EXCLUDING',\n    'EXCLUSIVE',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXTEND',\n    'EXTERNAL',\n    'EXTRACT',\n    'FALSE',\n    'FENCED',\n    'FETCH',\n    'FIELDPROC',\n    'FILE',\n    'FINAL',\n    'FIRST_VALUE',\n    'FOR',\n    'FOREIGN',\n    'FORMAT',\n    'FREE',\n    'FREEPAGE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GBPCACHE',\n    'GENERAL',\n    'GENERATED',\n    'GET',\n    'GLOBAL',\n    'GO',\n    'GOTO',\n    'GRANT',\n    'GROUP',\n    'HANDLER',\n    'HASH',\n    'HASH_ROW',\n    'HASHED_VALUE',\n    'HAVING',\n    'HINT',\n    'HOLD',\n    'HOUR',\n    'HOURS',\n    // 'ID', Not actually a reserved keyword\n    'IDENTITY',\n    'IF',\n    'IGNORE',\n    'IMMEDIATE',\n    'IMPLICITLY',\n    'IN',\n    'INCLUDE',\n    'INCLUDING',\n    'INCLUSIVE',\n    'INCREMENT',\n    'INDEX',\n    'INDEXBP',\n    'INDICATOR',\n    'INF',\n    'INFINITY',\n    'INHERIT',\n    'INLINE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INSERTING',\n    'INTEGRITY',\n    'INTERPRET',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'ISOLATION',\n    'ITERATE',\n    'JAVA',\n    'JOIN',\n    'JSON',\n    'JSON_ARRAY',\n    'JSON_ARRAYAGG',\n    'JSON_EXISTS',\n    'JSON_OBJECT',\n    'JSON_OBJECTAGG',\n    'JSON_QUERY',\n    'JSON_TABLE',\n    'JSON_VALUE',\n    'KEEP',\n    'KEY',\n    'KEYS',\n    'LABEL',\n    'LAG',\n    'LANGUAGE',\n    'LAST_VALUE',\n    'LATERAL',\n    'LEAD',\n    'LEAVE',\n    'LEFT',\n    'LEVEL2',\n    'LIKE',\n    'LIMIT',\n    'LINKTYPE',\n    'LISTAGG',\n    'LOCAL',\n    'LOCALDATE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATION',\n    'LOCATOR',\n    'LOCK',\n    'LOCKSIZE',\n    'LOG',\n    'LOGGED',\n    'LOOP',\n    'MAINTAINED',\n    'MASK',\n    'MATCHED',\n    'MATERIALIZED',\n    'MAXVALUE',\n    'MERGE',\n    'MICROSECOND',\n    'MICROSECONDS',\n    'MINPCTUSED',\n    'MINUTE',\n    'MINUTES',\n    'MINVALUE',\n    'MIRROR',\n    'MIXED',\n    'MODE',\n    'MODIFIES',\n    'MONTH',\n    'MONTHS',\n    'NAMESPACE',\n    'NAN',\n    'NATIONAL',\n    'NCHAR',\n    'NCLOB',\n    'NESTED',\n    'NEW',\n    'NEW_TABLE',\n    'NEXTVAL',\n    'NO',\n    'NOCACHE',\n    'NOCYCLE',\n    'NODENAME',\n    'NODENUMBER',\n    'NOMAXVALUE',\n    'NOMINVALUE',\n    'NONE',\n    'NOORDER',\n    'NORMALIZED',\n    'NOT',\n    'NOTNULL',\n    'NTH_VALUE',\n    'NTILE',\n    'NULL',\n    'NULLS',\n    'NVARCHAR',\n    'OBID',\n    'OBJECT',\n    'OF',\n    'OFF',\n    'OFFSET',\n    'OLD',\n    'OLD_TABLE',\n    'OMIT',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'OPTIMIZE',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'ORDINALITY',\n    'ORGANIZE',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERLAY',\n    'OVERRIDING',\n    'PACKAGE',\n    'PADDED',\n    'PAGE',\n    'PAGESIZE',\n    'PARAMETER',\n    'PART',\n    'PARTITION',\n    'PARTITIONED',\n    'PARTITIONING',\n    'PARTITIONS',\n    'PASSING',\n    'PASSWORD',\n    'PATH',\n    'PCTFREE',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERIOD',\n    'PERMISSION',\n    'PIECESIZE',\n    'PIPE',\n    'PLAN',\n    'POSITION',\n    'PREPARE',\n    'PREVVAL',\n    'PRIMARY',\n    'PRIOR',\n    'PRIQTY',\n    'PRIVILEGES',\n    'PROCEDURE',\n    'PROGRAM',\n    'PROGRAMID',\n    'QUERY',\n    'RANGE',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'RCDFMT',\n    'READ',\n    'READS',\n    'RECOVERY',\n    'REFERENCES',\n    'REFERENCING',\n    'REFRESH',\n    'REGEXP_LIKE',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'RESET',\n    'RESIGNAL',\n    'RESTART',\n    'RESULT',\n    'RESULT_SET_LOCATOR',\n    'RETURN',\n    'RETURNING',\n    'RETURNS',\n    'REVOKE',\n    'RID',\n    'RIGHT',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROUTINE',\n    'ROW',\n    'ROW_NUMBER',\n    'ROWNUMBER',\n    'ROWS',\n    'RRN',\n    'RUN',\n    'SAVEPOINT',\n    'SBCS',\n    'SCALAR',\n    'SCHEMA',\n    'SCRATCHPAD',\n    'SCROLL',\n    'SEARCH',\n    'SECOND',\n    'SECONDS',\n    'SECQTY',\n    'SECURED',\n    'SELECT',\n    'SENSITIVE',\n    'SEQUENCE',\n    'SESSION',\n    'SESSION_USER',\n    'SET',\n    'SIGNAL',\n    'SIMPLE',\n    'SKIP',\n    'SNAN',\n    'SOME',\n    'SOURCE',\n    'SPECIFIC',\n    'SQL',\n    'SQLID',\n    'SQLIND_DEFAULT',\n    'SQLIND_UNASSIGNED',\n    'STACKED',\n    'START',\n    'STARTING',\n    'STATEMENT',\n    'STATIC',\n    'STOGROUP',\n    'SUBSTRING',\n    'SUMMARY',\n    'SYNONYM',\n    'SYSTEM_TIME',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESPACE',\n    'TABLESPACES',\n    'TAG',\n    'THEN',\n    'THREADSAFE',\n    'TO',\n    'TRANSACTION',\n    'TRANSFER',\n    'TRIGGER',\n    'TRIM',\n    'TRIM_ARRAY',\n    'TRUE',\n    'TRUNCATE',\n    'TRY_CAST',\n    'TYPE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNIT',\n    'UNKNOWN',\n    'UNNEST',\n    'UNTIL',\n    'UPDATE',\n    'UPDATING',\n    'URI',\n    'USAGE',\n    'USE',\n    'USER',\n    'USERID',\n    'USING',\n    'VALUE',\n    'VALUES',\n    'VARIABLE',\n    'VARIANT',\n    'VCAT',\n    'VERSION',\n    'VERSIONING',\n    'VIEW',\n    'VOLATILE',\n    'WAIT',\n    'WHEN',\n    'WHENEVER',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WITHIN',\n    'WITHOUT',\n    'WRAPPED',\n    'WRAPPER',\n    'WRITE',\n    'WRKSTNNAME',\n    'XMLAGG',\n    'XMLATTRIBUTES',\n    'XMLCAST',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLDOCUMENT',\n    'XMLELEMENT',\n    'XMLFOREST',\n    'XMLGROUP',\n    'XMLNAMESPACES',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLROW',\n    'XMLSERIALIZE',\n    'XMLTABLE',\n    'XMLTEXT',\n    'XMLVALIDATE',\n    'XSLTRANSFORM',\n    'XSROBJECT',\n    'YEAR',\n    'YEARS',\n    'YES',\n    'ZONE',\n];\nexport const dataTypes = [\n    // https://www.ibm.com/docs/en/i/7.2?topic=iaodsd-odbc-data-types-how-they-correspond-db2-i-database-types\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'BOOLEAN',\n    'CCSID',\n    'CHAR',\n    'CHARACTER',\n    'CLOB',\n    'DATA',\n    'DATALINK',\n    'DATE',\n    'DBCLOB',\n    'DECFLOAT',\n    'DECIMAL',\n    'DEC',\n    'DOUBLE',\n    'DOUBLE PRECISION',\n    'FLOAT',\n    'GRAPHIC',\n    'INT',\n    'INTEGER',\n    'LONG',\n    'NUMERIC',\n    'REAL',\n    'ROWID',\n    'SMALLINT',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n    'VARGRAPHIC',\n    'XML',\n];\n//# sourceMappingURL=db2i.keywords.js.map","export const functions = [\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-aggregate\n    // TODO: 'ANY', - conflicts with test for ANY predicate in 'operators.ys'!!\n    'ARRAY_AGG',\n    'AVG',\n    'CORR',\n    'CORRELATION',\n    'COUNT',\n    'COUNT_BIG',\n    'COVAR_POP',\n    'COVARIANCE',\n    'COVAR',\n    'COVAR_SAMP',\n    'COVARIANCE_SAMP',\n    'EVERY',\n    'GROUPING',\n    'JSON_ARRAYAGG',\n    'JSON_OBJECTAGG',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-regression'\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'SOME',\n    'STDDEV_POP',\n    'STDDEV',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VARIANCE',\n    'VAR',\n    'VAR_SAMP',\n    'VARIANCE_SAMP',\n    'XMLAGG',\n    'XMLGROUP',\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-scalar\n    'ABS',\n    'ABSVAL',\n    'ACOS',\n    'ADD_DAYS',\n    'ADD_HOURS',\n    'ADD_MINUTES',\n    'ADD_MONTHS',\n    'ADD_SECONDS',\n    'ADD_YEARS',\n    'ANTILOG',\n    'ARRAY_MAX_CARDINALITY',\n    'ARRAY_TRIM',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BASE64_DECODE',\n    'BASE64_ENCODE',\n    'BIT_LENGTH',\n    'BITAND',\n    'BITANDNOT',\n    'BITNOT',\n    'BITOR',\n    'BITXOR',\n    'BSON_TO_JSON',\n    'CARDINALITY',\n    'CEIL',\n    'CEILING',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'COALESCE',\n    'COMPARE_DECFLOAT',\n    'CONCAT',\n    'CONTAINS',\n    'COS',\n    'COSH',\n    'COT',\n    'CURDATE',\n    'CURTIME',\n    'DATABASE',\n    'DATAPARTITIONNAME',\n    'DATAPARTITIONNUM',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK_ISO',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DAYS',\n    'DBPARTITIONNAME',\n    'DBPARTITIONNUM',\n    'DECFLOAT_FORMAT',\n    'DECFLOAT_SORTKEY',\n    'DECRYPT_BINARY',\n    'DECRYPT_BIT',\n    'DECRYPT_CHAR',\n    'DECRYPT_DB',\n    'DEGREES',\n    'DIFFERENCE',\n    'DIGITS',\n    'DLCOMMENT',\n    'DLLINKTYPE',\n    'DLURLCOMPLETE',\n    'DLURLPATH',\n    'DLURLPATHONLY',\n    'DLURLSCHEME',\n    'DLURLSERVER',\n    'DLVALUE',\n    'DOUBLE_PRECISION',\n    'DOUBLE',\n    'ENCRPYT',\n    'ENCRYPT_AES',\n    'ENCRYPT_AES256',\n    'ENCRYPT_RC2',\n    'ENCRYPT_TDES',\n    'EXP',\n    'EXTRACT',\n    'FIRST_DAY',\n    'FLOOR',\n    'GENERATE_UNIQUE',\n    'GET_BLOB_FROM_FILE',\n    'GET_CLOB_FROM_FILE',\n    'GET_DBCLOB_FROM_FILE',\n    'GET_XML_FILE',\n    'GETHINT',\n    'GREATEST',\n    'HASH_MD5',\n    'HASH_ROW',\n    'HASH_SHA1',\n    'HASH_SHA256',\n    'HASH_SHA512',\n    'HASH_VALUES',\n    'HASHED_VALUE',\n    'HEX',\n    'HEXTORAW',\n    'HOUR',\n    'HTML_ENTITY_DECODE',\n    'HTML_ENTITY_ENCODE',\n    'HTTP_DELETE_BLOB',\n    'HTTP_DELETE',\n    'HTTP_GET_BLOB',\n    'HTTP_GET',\n    'HTTP_PATCH_BLOB',\n    'HTTP_PATCH',\n    'HTTP_POST_BLOB',\n    'HTTP_POST',\n    'HTTP_PUT_BLOB',\n    'HTTP_PUT',\n    'IDENTITY_VAL_LOCAL',\n    'IFNULL',\n    'INSERT',\n    'INSTR',\n    'INTERPRET',\n    'ISFALSE',\n    'ISNOTFALSE',\n    'ISNOTTRUE',\n    'ISTRUE',\n    'JSON_ARRAY',\n    'JSON_OBJECT',\n    'JSON_QUERY',\n    'JSON_TO_BSON',\n    'JSON_UPDATE',\n    'JSON_VALUE',\n    'JULIAN_DAY',\n    'LAND',\n    'LAST_DAY',\n    'LCASE',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LN',\n    'LNOT',\n    'LOCATE_IN_STRING',\n    'LOCATE',\n    'LOG10',\n    'LOR',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAX_CARDINALITY',\n    'MAX',\n    'MICROSECOND',\n    'MIDNIGHT_SECONDS',\n    'MIN',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'MQREAD',\n    'MQREADCLOB',\n    'MQRECEIVE',\n    'MQRECEIVECLOB',\n    'MQSEND',\n    'MULTIPLY_ALT',\n    'NEXT_DAY',\n    'NORMALIZE_DECFLOAT',\n    'NOW',\n    'NULLIF',\n    'NVL',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PI',\n    'POSITION',\n    'POSSTR',\n    'POW',\n    'POWER',\n    'QUANTIZE',\n    'QUARTER',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RANDOM',\n    'RAND',\n    'REGEXP_COUNT',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPEAT',\n    'REPLACE',\n    'RID',\n    'RIGHT',\n    'ROUND_TIMESTAMP',\n    'ROUND',\n    'RPAD',\n    'RRN',\n    'RTRIM',\n    'SCORE',\n    'SECOND',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SOUNDEX',\n    'SPACE',\n    'SQRT',\n    'STRIP',\n    'STRLEFT',\n    'STRPOS',\n    'STRRIGHT',\n    'SUBSTR',\n    'SUBSTRING',\n    'TABLE_NAME',\n    'TABLE_SCHEMA',\n    'TAN',\n    'TANH',\n    'TIMESTAMP_FORMAT',\n    'TIMESTAMP_ISO',\n    'TIMESTAMPDIFF_BIG',\n    'TIMESTAMPDIFF',\n    'TO_CHAR',\n    'TO_CLOB',\n    'TO_DATE',\n    'TO_NUMBER',\n    'TO_TIMESTAMP',\n    'TOTALORDER',\n    'TRANSLATE',\n    'TRIM_ARRAY',\n    'TRIM',\n    'TRUNC_TIMESTAMP',\n    'TRUNC',\n    'TRUNCATE',\n    'UCASE',\n    'UPPER',\n    'URL_DECODE',\n    'URL_ENCODE',\n    'VALUE',\n    'VARBINARY_FORMAT',\n    'VARCHAR_BIT_FORMAT',\n    'VARCHAR_FORMAT_BINARY',\n    'VARCHAR_FORMAT',\n    'VERIFY_GROUP_FOR_USER',\n    'WEEK_ISO',\n    'WEEK',\n    'WRAP',\n    'XMLATTRIBUTES',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLDOCUMENT',\n    'XMLELEMENT',\n    'XMLFOREST',\n    'XMLNAMESPACES',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLROW',\n    'XMLSERIALIZE',\n    'XMLTEXT',\n    'XMLVALIDATE',\n    'XOR',\n    'XSLTRANSFORM',\n    'YEAR',\n    'ZONED',\n    // https://www.ibm.com/docs/en/i/7.5?topic=functions-table\n    'BASE_TABLE',\n    'HTTP_DELETE_BLOB_VERBOSE',\n    'HTTP_DELETE_VERBOSE',\n    'HTTP_GET_BLOB_VERBOSE',\n    'HTTP_GET_VERBOSE',\n    'HTTP_PATCH_BLOB_VERBOSE',\n    'HTTP_PATCH_VERBOSE',\n    'HTTP_POST_BLOB_VERBOSE',\n    'HTTP_POST_VERBOSE',\n    'HTTP_PUT_BLOB_VERBOSE',\n    'HTTP_PUT_VERBOSE',\n    'JSON_TABLE',\n    'MQREADALL',\n    'MQREADALLCLOB',\n    'MQRECEIVEALL',\n    'MQRECEIVEALLCLOB',\n    'XMLTABLE',\n    // https://www.ibm.com/docs/en/db2-for-zos/11?topic=functions-row\n    'UNPACK',\n    // https://www.ibm.com/docs/en/i/7.5?topic=expressions-olap-specifications\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    // Type casting\n    'CAST',\n];\n//# sourceMappingURL=db2i.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './duckdb.functions.js';\nimport { dataTypes, keywords } from './duckdb.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY [ALL]',\n    'LIMIT',\n    'OFFSET',\n    // 'USING' (conflicts with 'USING' in JOIN)\n    'USING SAMPLE',\n    'QUALIFY',\n    // Data manipulation\n    // - insert:\n    'INSERT [OR REPLACE] INTO',\n    'VALUES',\n    'DEFAULT VALUES',\n    // - update:\n    'SET',\n    // other:\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // TABLE\n    // - update:\n    'UPDATE',\n    // - insert:\n    'ON CONFLICT',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - truncate\n    'TRUNCATE',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN] [IF NOT EXISTS]',\n    'ADD PRIMARY KEY',\n    'DROP [COLUMN] [IF EXISTS]',\n    'ALTER [COLUMN]',\n    'RENAME [COLUMN]',\n    'RENAME TO',\n    'SET [DATA] TYPE',\n    '{SET | DROP} DEFAULT',\n    '{SET | DROP} NOT NULL',\n    // MACRO / FUNCTION\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] {MACRO | FUNCTION}',\n    'DROP MACRO [TABLE] [IF EXISTS]',\n    'DROP FUNCTION [IF EXISTS]',\n    // INDEX\n    'CREATE [UNIQUE] INDEX [IF NOT EXISTS]',\n    'DROP INDEX [IF EXISTS]',\n    // SCHEMA\n    'CREATE [OR REPLACE] SCHEMA [IF NOT EXISTS]',\n    'DROP SCHEMA [IF EXISTS]',\n    // SECRET\n    'CREATE [OR REPLACE] [PERSISTENT | TEMPORARY] SECRET [IF NOT EXISTS]',\n    'DROP [PERSISTENT | TEMPORARY] SECRET [IF EXISTS]',\n    // SEQUENCE\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] SEQUENCE',\n    'DROP SEQUENCE [IF EXISTS]',\n    // VIEW\n    'CREATE [OR REPLACE] [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]',\n    'DROP VIEW [IF EXISTS]',\n    'ALTER VIEW',\n    // TYPE\n    'CREATE TYPE',\n    'DROP TYPE [IF EXISTS]',\n    // other\n    'ANALYZE',\n    'ATTACH [DATABASE] [IF NOT EXISTS]',\n    'DETACH [DATABASE] [IF EXISTS]',\n    'CALL',\n    '[FORCE] CHECKPOINT',\n    'COMMENT ON [TABLE | COLUMN | VIEW | INDEX | SEQUENCE | TYPE | MACRO | MACRO TABLE]',\n    'COPY [FROM DATABASE]',\n    'DESCRIBE',\n    'EXPORT DATABASE',\n    'IMPORT DATABASE',\n    'INSTALL',\n    'LOAD',\n    'PIVOT',\n    'PIVOT_WIDER',\n    'UNPIVOT',\n    'EXPLAIN [ANALYZE]',\n    // plain SET conflicts with SET clause in UPDATE\n    'SET {LOCAL | SESSION | GLOBAL}',\n    'RESET [LOCAL | SESSION | GLOBAL]',\n    '{SET | RESET} VARIABLE',\n    'SUMMARIZE',\n    'BEGIN TRANSACTION',\n    'ROLLBACK',\n    'COMMIT',\n    'ABORT',\n    'USE',\n    'VACUUM [ANALYZE]',\n    // prepared statements\n    'PREPARE',\n    'EXECUTE',\n    'DEALLOCATE [PREPARE]',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | BY NAME]',\n    'EXCEPT [ALL]',\n    'INTERSECT [ALL]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    '{NATURAL | ASOF} [INNER] JOIN',\n    '{NATURAL | ASOF} {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    'POSITIONAL JOIN',\n    'ANTI JOIN',\n    'SEMI JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    'SIMILAR TO',\n    'IS [NOT] DISTINCT FROM',\n    'TIMESTAMP WITH TIME ZONE',\n]);\nexport const duckdb = {\n    name: 'duckdb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        extraParens: ['[]', '{}'],\n        stringTypes: [\n            '$$',\n            \"''-qq\",\n            { quote: \"''-qq-bs\", prefixes: ['E'], requirePrefix: true },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`],\n        identChars: { rest: '$' },\n        // TODO: named params $foo currently conflict with $$-quoted strings\n        paramTypes: { positional: true, numbered: ['$'], quoted: ['$'] },\n        operators: [\n            // Arithmetic:\n            '//',\n            '%',\n            '**',\n            '^',\n            '!',\n            // Bitwise:\n            '&',\n            '|',\n            '~',\n            '<<',\n            '>>',\n            // Cast:\n            '::',\n            // Comparison:\n            '==',\n            // Lambda & JSON:\n            '->',\n            // JSON:\n            '->>',\n            // key-value separator:\n            ':',\n            // Named function params:\n            ':=',\n            '=>',\n            // Pattern matching:\n            '~~',\n            '!~~',\n            '~~*',\n            '!~~*',\n            '~~~',\n            // Regular expressions:\n            '~',\n            '!~',\n            '~*',\n            '!~*',\n            // String:\n            '^@',\n            '||',\n            // INET extension:\n            '>>=',\n            '<<=',\n        ],\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=duckdb.formatter.js.map","export const keywords = [\n    // Keywords from DuckDB:\n    // SELECT upper(keyword_name)\n    // FROM duckdb_keywords()\n    // WHERE keyword_category = 'reserved'\n    // ORDER BY keyword_name\n    'ALL',\n    'ANALYSE',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'ATTACH',\n    'ASYMMETRIC',\n    'BOTH',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONSTRAINT',\n    'CREATE',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DESC',\n    'DESCRIBE',\n    'DETACH',\n    'DISTINCT',\n    'DO',\n    'ELSE',\n    'END',\n    'EXCEPT',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FOREIGN',\n    'FROM',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'IN',\n    'INITIALLY',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'LATERAL',\n    'LEADING',\n    'LIMIT',\n    'NOT',\n    'NULL',\n    'OFFSET',\n    'ON',\n    'ONLY',\n    'OR',\n    'ORDER',\n    'PIVOT',\n    'PIVOT_LONGER',\n    'PIVOT_WIDER',\n    'PLACING',\n    'PRIMARY',\n    'REFERENCES',\n    'RETURNING',\n    'SELECT',\n    'SHOW',\n    'SOME',\n    'SUMMARIZE',\n    'SYMMETRIC',\n    'TABLE',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRUE',\n    'UNION',\n    'UNIQUE',\n    'UNPIVOT',\n    'USING',\n    'VARIADIC',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n];\nexport const dataTypes = [\n    // Types from DuckDB:\n    // SELECT DISTINCT upper(type_name)\n    // FROM duckdb_types()\n    // ORDER BY type_name\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BITSTRING',\n    'BLOB',\n    'BOOL',\n    'BOOLEAN',\n    'BPCHAR',\n    'BYTEA',\n    'CHAR',\n    'DATE',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'ENUM',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'GUID',\n    'HUGEINT',\n    'INET',\n    'INT',\n    'INT1',\n    'INT128',\n    'INT16',\n    'INT2',\n    'INT32',\n    'INT4',\n    'INT64',\n    'INT8',\n    'INTEGER',\n    'INTEGRAL',\n    'INTERVAL',\n    'JSON',\n    'LIST',\n    'LOGICAL',\n    'LONG',\n    'MAP',\n    // 'NULL' is a keyword\n    'NUMERIC',\n    'NVARCHAR',\n    'OID',\n    'REAL',\n    'ROW',\n    'SHORT',\n    'SIGNED',\n    'SMALLINT',\n    'STRING',\n    'STRUCT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP_MS',\n    'TIMESTAMP_NS',\n    'TIMESTAMP_S',\n    'TIMESTAMP_US',\n    'TIMESTAMP',\n    'TIMESTAMPTZ',\n    'TIMETZ',\n    'TINYINT',\n    'UBIGINT',\n    'UHUGEINT',\n    'UINT128',\n    'UINT16',\n    'UINT32',\n    'UINT64',\n    'UINT8',\n    'UINTEGER',\n    'UNION',\n    'USMALLINT',\n    'UTINYINT',\n    'UUID',\n    'VARBINARY',\n    'VARCHAR',\n];\n//# sourceMappingURL=duckdb.keywords.js.map","export const functions = [\n    // Functions from DuckDB (excluding those that start with an underscore):\n    // SELECT DISTINCT upper(function_name) AS function_name\n    // FROM duckdb_functions()\n    // WHERE function_name SIMILAR TO '^[a-z].*'\n    // ORDER BY function_name\n    'ABS',\n    'ACOS',\n    'ADD',\n    'ADD_PARQUET_KEY',\n    'AGE',\n    'AGGREGATE',\n    'ALIAS',\n    'ALL_PROFILING_OUTPUT',\n    'ANY_VALUE',\n    'APPLY',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_QUANTILE',\n    'ARBITRARY',\n    'ARGMAX',\n    'ARGMIN',\n    'ARG_MAX',\n    'ARG_MAX_NULL',\n    'ARG_MIN',\n    'ARG_MIN_NULL',\n    'ARRAY_AGG',\n    'ARRAY_AGGR',\n    'ARRAY_AGGREGATE',\n    'ARRAY_APPEND',\n    'ARRAY_APPLY',\n    'ARRAY_CAT',\n    'ARRAY_CONCAT',\n    'ARRAY_CONTAINS',\n    'ARRAY_COSINE_SIMILARITY',\n    'ARRAY_CROSS_PRODUCT',\n    'ARRAY_DISTANCE',\n    'ARRAY_DISTINCT',\n    'ARRAY_DOT_PRODUCT',\n    'ARRAY_EXTRACT',\n    'ARRAY_FILTER',\n    'ARRAY_GRADE_UP',\n    'ARRAY_HAS',\n    'ARRAY_HAS_ALL',\n    'ARRAY_HAS_ANY',\n    'ARRAY_INDEXOF',\n    'ARRAY_INNER_PRODUCT',\n    'ARRAY_INTERSECT',\n    'ARRAY_LENGTH',\n    'ARRAY_POP_BACK',\n    'ARRAY_POP_FRONT',\n    'ARRAY_POSITION',\n    'ARRAY_PREPEND',\n    'ARRAY_PUSH_BACK',\n    'ARRAY_PUSH_FRONT',\n    'ARRAY_REDUCE',\n    'ARRAY_RESIZE',\n    'ARRAY_REVERSE',\n    'ARRAY_REVERSE_SORT',\n    'ARRAY_SELECT',\n    'ARRAY_SLICE',\n    'ARRAY_SORT',\n    'ARRAY_TO_JSON',\n    'ARRAY_TO_STRING',\n    'ARRAY_TRANSFORM',\n    'ARRAY_UNIQUE',\n    'ARRAY_VALUE',\n    'ARRAY_WHERE',\n    'ARRAY_ZIP',\n    'ARROW_SCAN',\n    'ARROW_SCAN_DUMB',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BASE64',\n    'BIN',\n    'BITSTRING',\n    'BITSTRING_AGG',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BIT_OR',\n    'BIT_POSITION',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'CARDINALITY',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CENTURY',\n    'CHECKPOINT',\n    'CHR',\n    'COLLATIONS',\n    'COL_DESCRIPTION',\n    'COMBINE',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONSTANT_OR_NULL',\n    'CONTAINS',\n    'COPY_DATABASE',\n    'CORR',\n    'COS',\n    'COT',\n    'COUNT',\n    'COUNT_IF',\n    'COUNT_STAR',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CREATE_SORT_KEY',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_DATE',\n    'CURRENT_LOCALTIME',\n    'CURRENT_LOCALTIMESTAMP',\n    'CURRENT_QUERY',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_SETTING',\n    'CURRENT_USER',\n    'CURRVAL',\n    'DAMERAU_LEVENSHTEIN',\n    'DATABASE_LIST',\n    'DATABASE_SIZE',\n    'DATEDIFF',\n    'DATEPART',\n    'DATESUB',\n    'DATETRUNC',\n    'DATE_ADD',\n    'DATE_DIFF',\n    'DATE_PART',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DECADE',\n    'DECODE',\n    'DEGREES',\n    'DISABLE_CHECKPOINT_ON_SHUTDOWN',\n    'DISABLE_OBJECT_CACHE',\n    'DISABLE_OPTIMIZER',\n    'DISABLE_PRINT_PROGRESS_BAR',\n    'DISABLE_PROFILE',\n    'DISABLE_PROFILING',\n    'DISABLE_PROGRESS_BAR',\n    'DISABLE_VERIFICATION',\n    'DISABLE_VERIFY_EXTERNAL',\n    'DISABLE_VERIFY_FETCH_ROW',\n    'DISABLE_VERIFY_PARALLELISM',\n    'DISABLE_VERIFY_SERIALIZER',\n    'DIVIDE',\n    'DUCKDB_COLUMNS',\n    'DUCKDB_CONSTRAINTS',\n    'DUCKDB_DATABASES',\n    'DUCKDB_DEPENDENCIES',\n    'DUCKDB_EXTENSIONS',\n    'DUCKDB_FUNCTIONS',\n    'DUCKDB_INDEXES',\n    'DUCKDB_KEYWORDS',\n    'DUCKDB_MEMORY',\n    'DUCKDB_OPTIMIZERS',\n    'DUCKDB_SCHEMAS',\n    'DUCKDB_SECRETS',\n    'DUCKDB_SEQUENCES',\n    'DUCKDB_SETTINGS',\n    'DUCKDB_TABLES',\n    'DUCKDB_TEMPORARY_FILES',\n    'DUCKDB_TYPES',\n    'DUCKDB_VIEWS',\n    'EDIT',\n    'EDITDIST3',\n    'ELEMENT_AT',\n    'ENABLE_CHECKPOINT_ON_SHUTDOWN',\n    'ENABLE_OBJECT_CACHE',\n    'ENABLE_OPTIMIZER',\n    'ENABLE_PRINT_PROGRESS_BAR',\n    'ENABLE_PROFILE',\n    'ENABLE_PROFILING',\n    'ENABLE_PROGRESS_BAR',\n    'ENABLE_VERIFICATION',\n    'ENCODE',\n    'ENDS_WITH',\n    'ENTROPY',\n    'ENUM_CODE',\n    'ENUM_FIRST',\n    'ENUM_LAST',\n    'ENUM_RANGE',\n    'ENUM_RANGE_BOUNDARY',\n    'EPOCH',\n    'EPOCH_MS',\n    'EPOCH_NS',\n    'EPOCH_US',\n    'ERA',\n    'ERROR',\n    'EVEN',\n    'EXP',\n    'FACTORIAL',\n    'FAVG',\n    'FDIV',\n    'FILTER',\n    'FINALIZE',\n    'FIRST',\n    'FLATTEN',\n    'FLOOR',\n    'FMOD',\n    'FORCE_CHECKPOINT',\n    'FORMAT',\n    'FORMATREADABLEDECIMALSIZE',\n    'FORMATREADABLESIZE',\n    'FORMAT_BYTES',\n    'FORMAT_PG_TYPE',\n    'FORMAT_TYPE',\n    'FROM_BASE64',\n    'FROM_BINARY',\n    'FROM_HEX',\n    'FROM_JSON',\n    'FROM_JSON_STRICT',\n    'FSUM',\n    'FUNCTIONS',\n    'GAMMA',\n    'GCD',\n    'GENERATE_SERIES',\n    'GENERATE_SUBSCRIPTS',\n    'GEN_RANDOM_UUID',\n    'GEOMEAN',\n    'GEOMETRIC_MEAN',\n    'GETENV',\n    'GET_BIT',\n    'GET_BLOCK_SIZE',\n    'GET_CURRENT_TIME',\n    'GET_CURRENT_TIMESTAMP',\n    'GLOB',\n    'GRADE_UP',\n    'GREATEST',\n    'GREATEST_COMMON_DIVISOR',\n    'GROUP_CONCAT',\n    'HAMMING',\n    'HASH',\n    'HAS_ANY_COLUMN_PRIVILEGE',\n    'HAS_COLUMN_PRIVILEGE',\n    'HAS_DATABASE_PRIVILEGE',\n    'HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE',\n    'HAS_FUNCTION_PRIVILEGE',\n    'HAS_LANGUAGE_PRIVILEGE',\n    'HAS_SCHEMA_PRIVILEGE',\n    'HAS_SEQUENCE_PRIVILEGE',\n    'HAS_SERVER_PRIVILEGE',\n    'HAS_TABLESPACE_PRIVILEGE',\n    'HAS_TABLE_PRIVILEGE',\n    'HEX',\n    'HISTOGRAM',\n    'HOUR',\n    'ICU_CALENDAR_NAMES',\n    'ICU_SORT_KEY',\n    'ILIKE_ESCAPE',\n    'IMPORT_DATABASE',\n    'INDEX_SCAN',\n    'INET_CLIENT_ADDR',\n    'INET_CLIENT_PORT',\n    'INET_SERVER_ADDR',\n    'INET_SERVER_PORT',\n    'INSTR',\n    'IN_SEARCH_PATH',\n    'ISFINITE',\n    'ISINF',\n    'ISNAN',\n    'ISODOW',\n    'ISOYEAR',\n    'JACCARD',\n    'JARO_SIMILARITY',\n    'JARO_WINKLER_SIMILARITY',\n    // 'JSON',\n    'JSON_ARRAY',\n    'JSON_ARRAY_LENGTH',\n    'JSON_CONTAINS',\n    'JSON_DESERIALIZE_SQL',\n    'JSON_EXECUTE_SERIALIZED_SQL',\n    'JSON_EXTRACT',\n    'JSON_EXTRACT_PATH',\n    'JSON_EXTRACT_PATH_TEXT',\n    'JSON_EXTRACT_STRING',\n    'JSON_GROUP_ARRAY',\n    'JSON_GROUP_OBJECT',\n    'JSON_GROUP_STRUCTURE',\n    'JSON_KEYS',\n    'JSON_MERGE_PATCH',\n    'JSON_OBJECT',\n    'JSON_QUOTE',\n    'JSON_SERIALIZE_PLAN',\n    'JSON_SERIALIZE_SQL',\n    'JSON_STRUCTURE',\n    'JSON_TRANSFORM',\n    'JSON_TRANSFORM_STRICT',\n    'JSON_TYPE',\n    'JSON_VALID',\n    'JULIAN',\n    'KAHAN_SUM',\n    'KURTOSIS',\n    'KURTOSIS_POP',\n    'LAST',\n    'LAST_DAY',\n    'LCASE',\n    'LCM',\n    'LEAST',\n    'LEAST_COMMON_MULTIPLE',\n    'LEFT',\n    'LEFT_GRAPHEME',\n    'LEN',\n    'LENGTH',\n    'LENGTH_GRAPHEME',\n    'LEVENSHTEIN',\n    'LGAMMA',\n    'LIKE_ESCAPE',\n    'LIST',\n    'LISTAGG',\n    'LIST_AGGR',\n    'LIST_AGGREGATE',\n    'LIST_ANY_VALUE',\n    'LIST_APPEND',\n    'LIST_APPLY',\n    'LIST_APPROX_COUNT_DISTINCT',\n    'LIST_AVG',\n    'LIST_BIT_AND',\n    'LIST_BIT_OR',\n    'LIST_BIT_XOR',\n    'LIST_BOOL_AND',\n    'LIST_BOOL_OR',\n    'LIST_CAT',\n    'LIST_CONCAT',\n    'LIST_CONTAINS',\n    'LIST_COSINE_SIMILARITY',\n    'LIST_COUNT',\n    'LIST_DISTANCE',\n    'LIST_DISTINCT',\n    'LIST_DOT_PRODUCT',\n    'LIST_ELEMENT',\n    'LIST_ENTROPY',\n    'LIST_EXTRACT',\n    'LIST_FILTER',\n    'LIST_FIRST',\n    'LIST_GRADE_UP',\n    'LIST_HAS',\n    'LIST_HAS_ALL',\n    'LIST_HAS_ANY',\n    'LIST_HISTOGRAM',\n    'LIST_INDEXOF',\n    'LIST_INNER_PRODUCT',\n    'LIST_INTERSECT',\n    'LIST_KURTOSIS',\n    'LIST_KURTOSIS_POP',\n    'LIST_LAST',\n    'LIST_MAD',\n    'LIST_MAX',\n    'LIST_MEDIAN',\n    'LIST_MIN',\n    'LIST_MODE',\n    'LIST_PACK',\n    'LIST_POSITION',\n    'LIST_PREPEND',\n    'LIST_PRODUCT',\n    'LIST_REDUCE',\n    'LIST_RESIZE',\n    'LIST_REVERSE',\n    'LIST_REVERSE_SORT',\n    'LIST_SELECT',\n    'LIST_SEM',\n    'LIST_SKEWNESS',\n    'LIST_SLICE',\n    'LIST_SORT',\n    'LIST_STDDEV_POP',\n    'LIST_STDDEV_SAMP',\n    'LIST_STRING_AGG',\n    'LIST_SUM',\n    'LIST_TRANSFORM',\n    'LIST_UNIQUE',\n    'LIST_VALUE',\n    'LIST_VAR_POP',\n    'LIST_VAR_SAMP',\n    'LIST_WHERE',\n    'LIST_ZIP',\n    'LN',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LSMODE',\n    'LTRIM',\n    'MAD',\n    'MAKE_DATE',\n    'MAKE_TIME',\n    'MAKE_TIMESTAMP',\n    'MAKE_TIMESTAMPTZ',\n    'MAP',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_EXTRACT',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'MAX',\n    'MAX_BY',\n    'MD5',\n    'MD5_NUMBER',\n    'MD5_NUMBER_LOWER',\n    'MD5_NUMBER_UPPER',\n    'MEAN',\n    'MEDIAN',\n    'METADATA_INFO',\n    'MICROSECOND',\n    'MILLENNIUM',\n    'MILLISECOND',\n    'MIN',\n    'MINUTE',\n    'MIN_BY',\n    'MISMATCHES',\n    'MOD',\n    'MODE',\n    'MONTH',\n    'MONTHNAME',\n    'MULTIPLY',\n    'NEXTAFTER',\n    'NEXTVAL',\n    'NFC_NORMALIZE',\n    'NOT_ILIKE_ESCAPE',\n    'NOT_LIKE_ESCAPE',\n    'NOW',\n    'NULLIF',\n    'OBJ_DESCRIPTION',\n    'OCTET_LENGTH',\n    'ORD',\n    'PARQUET_FILE_METADATA',\n    'PARQUET_KV_METADATA',\n    'PARQUET_METADATA',\n    'PARQUET_SCAN',\n    'PARQUET_SCHEMA',\n    'PARSE_DIRNAME',\n    'PARSE_DIRPATH',\n    'PARSE_FILENAME',\n    'PARSE_PATH',\n    'PG_COLLATION_IS_VISIBLE',\n    'PG_CONF_LOAD_TIME',\n    'PG_CONVERSION_IS_VISIBLE',\n    'PG_FUNCTION_IS_VISIBLE',\n    'PG_GET_CONSTRAINTDEF',\n    'PG_GET_EXPR',\n    'PG_GET_VIEWDEF',\n    'PG_HAS_ROLE',\n    'PG_IS_OTHER_TEMP_SCHEMA',\n    'PG_MY_TEMP_SCHEMA',\n    'PG_OPCLASS_IS_VISIBLE',\n    'PG_OPERATOR_IS_VISIBLE',\n    'PG_OPFAMILY_IS_VISIBLE',\n    'PG_POSTMASTER_START_TIME',\n    'PG_SIZE_PRETTY',\n    'PG_TABLE_IS_VISIBLE',\n    'PG_TIMEZONE_NAMES',\n    'PG_TS_CONFIG_IS_VISIBLE',\n    'PG_TS_DICT_IS_VISIBLE',\n    'PG_TS_PARSER_IS_VISIBLE',\n    'PG_TS_TEMPLATE_IS_VISIBLE',\n    'PG_TYPEOF',\n    'PG_TYPE_IS_VISIBLE',\n    'PI',\n    'PLATFORM',\n    'POSITION',\n    'POW',\n    'POWER',\n    'PRAGMA_COLLATIONS',\n    'PRAGMA_DATABASE_SIZE',\n    'PRAGMA_METADATA_INFO',\n    'PRAGMA_PLATFORM',\n    'PRAGMA_SHOW',\n    'PRAGMA_STORAGE_INFO',\n    'PRAGMA_TABLE_INFO',\n    'PRAGMA_USER_AGENT',\n    'PRAGMA_VERSION',\n    'PREFIX',\n    'PRINTF',\n    'PRODUCT',\n    'QUANTILE',\n    'QUANTILE_CONT',\n    'QUANTILE_DISC',\n    'QUARTER',\n    'RADIANS',\n    'RANDOM',\n    'RANGE',\n    'READFILE',\n    'READ_BLOB',\n    'READ_CSV',\n    'READ_CSV_AUTO',\n    'READ_JSON',\n    'READ_JSON_AUTO',\n    'READ_JSON_OBJECTS',\n    'READ_JSON_OBJECTS_AUTO',\n    'READ_NDJSON',\n    'READ_NDJSON_AUTO',\n    'READ_NDJSON_OBJECTS',\n    'READ_PARQUET',\n    'READ_TEXT',\n    'REDUCE',\n    'REGEXP_ESCAPE',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_FULL_MATCH',\n    'REGEXP_MATCHES',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT_TO_ARRAY',\n    'REGEXP_SPLIT_TO_TABLE',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'REPEAT',\n    'REPEAT_ROW',\n    'REPLACE',\n    'RESERVOIR_QUANTILE',\n    'REVERSE',\n    'RIGHT',\n    'RIGHT_GRAPHEME',\n    'ROUND',\n    'ROUNDBANKERS',\n    'ROUND_EVEN',\n    'ROW',\n    'ROW_TO_JSON',\n    'RPAD',\n    'RTRIM',\n    'SECOND',\n    'SEM',\n    'SEQ_SCAN',\n    'SESSION_USER',\n    'SETSEED',\n    'SET_BIT',\n    'SHA256',\n    'SHA3',\n    'SHELL_ADD_SCHEMA',\n    'SHELL_ESCAPE_CRNL',\n    'SHELL_IDQUOTE',\n    'SHELL_MODULE_SCHEMA',\n    'SHELL_PUTSNL',\n    'SHOBJ_DESCRIPTION',\n    'SHOW',\n    'SHOW_DATABASES',\n    'SHOW_TABLES',\n    'SHOW_TABLES_EXPANDED',\n    'SIGN',\n    'SIGNBIT',\n    'SIN',\n    'SKEWNESS',\n    'SNIFF_CSV',\n    'SPLIT',\n    'SPLIT_PART',\n    'SQL_AUTO_COMPLETE',\n    'SQRT',\n    'STARTS_WITH',\n    'STATS',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STORAGE_INFO',\n    'STRFTIME',\n    'STRING_AGG',\n    'STRING_SPLIT',\n    'STRING_SPLIT_REGEX',\n    'STRING_TO_ARRAY',\n    'STRIP_ACCENTS',\n    'STRLEN',\n    'STRPOS',\n    'STRPTIME',\n    'STRUCT_EXTRACT',\n    'STRUCT_INSERT',\n    'STRUCT_PACK',\n    'STR_SPLIT',\n    'STR_SPLIT_REGEX',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_GRAPHEME',\n    'SUBTRACT',\n    'SUFFIX',\n    'SUM',\n    'SUMKAHAN',\n    'SUMMARY',\n    'SUM_NO_OVERFLOW',\n    'TABLE_INFO',\n    'TAN',\n    'TEST_ALL_TYPES',\n    'TEST_VECTOR_TYPES',\n    'TIMEZONE',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TIME_BUCKET',\n    'TODAY',\n    'TO_BASE',\n    'TO_BASE64',\n    'TO_BINARY',\n    'TO_CENTURIES',\n    'TO_DAYS',\n    'TO_DECADES',\n    'TO_HEX',\n    'TO_HOURS',\n    'TO_JSON',\n    'TO_MICROSECONDS',\n    'TO_MILLENNIA',\n    'TO_MILLISECONDS',\n    'TO_MINUTES',\n    'TO_MONTHS',\n    'TO_SECONDS',\n    'TO_TIMESTAMP',\n    'TO_WEEKS',\n    'TO_YEARS',\n    'TRANSACTION_TIMESTAMP',\n    'TRANSLATE',\n    'TRIM',\n    'TRUNC',\n    'TRY_STRPTIME',\n    'TXID_CURRENT',\n    'TYPEOF',\n    'UCASE',\n    'UNBIN',\n    'UNHEX',\n    'UNICODE',\n    'UNION_EXTRACT',\n    'UNION_TAG',\n    'UNION_VALUE',\n    'UNNEST',\n    'UNPIVOT_LIST',\n    'UPPER',\n    'USER',\n    'USER_AGENT',\n    'UUID',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VECTOR_TYPE',\n    'VERIFY_EXTERNAL',\n    'VERIFY_FETCH_ROW',\n    'VERIFY_PARALLELISM',\n    'VERIFY_SERIALIZER',\n    'VERSION',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WHICH_SECRET',\n    'WRITEFILE',\n    'XOR',\n    'YEAR',\n    'YEARWEEK',\n    // Keywords that also need to be listed as functions\n    'CAST',\n    'COALESCE',\n    // 'NULL', we really prefer treating it as keyword\n    'RANK',\n    'ROW_NUMBER',\n];\n//# sourceMappingURL=duckdb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './hive.functions.js';\nimport { dataTypes, keywords } from './hive.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'SORT BY',\n    'CLUSTER BY',\n    'DISTRIBUTE BY',\n    'LIMIT',\n    // Data manipulation\n    // - insert:\n    //   Hive does not actually support plain INSERT INTO, only INSERT INTO TABLE\n    //   but it's a nuisance to not support it, as all other dialects do.\n    'INSERT INTO [TABLE]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    'INSERT [VALUES]',\n    // - insert overwrite directory:\n    //   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Writingdataintothefilesystemfromqueries\n    'INSERT OVERWRITE [LOCAL] DIRECTORY',\n    // - load:\n    //   https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DML#LanguageManualDML-Loadingfilesintotables\n    'LOAD DATA [LOCAL] INPATH',\n    '[OVERWRITE] INTO TABLE',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'RENAME TO',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // other\n    'ALTER',\n    'CREATE',\n    'USE',\n    'DESCRIBE',\n    'DROP',\n    'FETCH',\n    'SHOW',\n    'STORED AS',\n    'STORED BY',\n    'ROW FORMAT',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    // non-standard joins\n    'LEFT SEMI JOIN',\n]);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE} BETWEEN']);\n// https://cwiki.apache.org/confluence/display/Hive/LanguageManual\nexport const hive = {\n    name: 'hive',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: ['\"\"-bs', \"''-bs\"],\n        identTypes: ['``'],\n        variableTypes: [{ quote: '{}', prefixes: ['$'], requirePrefix: true }],\n        operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=hive.formatter.js.map","export const keywords = [\n    // https://cwiki.apache.org/confluence/display/hive/languagemanual+ddl\n    // Non-reserved keywords have proscribed meanings in. HiveQL, but can still be used as table or column names\n    'ADD',\n    'ADMIN',\n    'AFTER',\n    'ANALYZE',\n    'ARCHIVE',\n    'ASC',\n    'BEFORE',\n    'BUCKET',\n    'BUCKETS',\n    'CASCADE',\n    'CHANGE',\n    'CLUSTER',\n    'CLUSTERED',\n    'CLUSTERSTATUS',\n    'COLLECTION',\n    'COLUMNS',\n    'COMMENT',\n    'COMPACT',\n    'COMPACTIONS',\n    'COMPUTE',\n    'CONCATENATE',\n    'CONTINUE',\n    'DATA',\n    'DATABASES',\n    'DATETIME',\n    'DAY',\n    'DBPROPERTIES',\n    'DEFERRED',\n    'DEFINED',\n    'DELIMITED',\n    'DEPENDENCY',\n    'DESC',\n    'DIRECTORIES',\n    'DIRECTORY',\n    'DISABLE',\n    'DISTRIBUTE',\n    'ELEM_TYPE',\n    'ENABLE',\n    'ESCAPED',\n    'EXCLUSIVE',\n    'EXPLAIN',\n    'EXPORT',\n    'FIELDS',\n    'FILE',\n    'FILEFORMAT',\n    'FIRST',\n    'FORMAT',\n    'FORMATTED',\n    'FUNCTIONS',\n    'HOLD_DDLTIME',\n    'HOUR',\n    'IDXPROPERTIES',\n    'IGNORE',\n    'INDEX',\n    'INDEXES',\n    'INPATH',\n    'INPUTDRIVER',\n    'INPUTFORMAT',\n    'ITEMS',\n    'JAR',\n    'KEYS',\n    'KEY_TYPE',\n    'LIMIT',\n    'LINES',\n    'LOAD',\n    'LOCATION',\n    'LOCK',\n    'LOCKS',\n    'LOGICAL',\n    'LONG',\n    'MAPJOIN',\n    'MATERIALIZED',\n    'METADATA',\n    'MINUS',\n    'MINUTE',\n    'MONTH',\n    'MSCK',\n    'NOSCAN',\n    'NO_DROP',\n    'OFFLINE',\n    'OPTION',\n    'OUTPUTDRIVER',\n    'OUTPUTFORMAT',\n    'OVERWRITE',\n    'OWNER',\n    'PARTITIONED',\n    'PARTITIONS',\n    'PLUS',\n    'PRETTY',\n    'PRINCIPALS',\n    'PROTECTION',\n    'PURGE',\n    'READ',\n    'READONLY',\n    'REBUILD',\n    'RECORDREADER',\n    'RECORDWRITER',\n    'RELOAD',\n    'RENAME',\n    'REPAIR',\n    'REPLACE',\n    'REPLICATION',\n    'RESTRICT',\n    'REWRITE',\n    'ROLE',\n    'ROLES',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND',\n    'SEMI',\n    'SERDE',\n    'SERDEPROPERTIES',\n    'SERVER',\n    'SETS',\n    'SHARED',\n    'SHOW',\n    'SHOW_DATABASE',\n    'SKEWED',\n    'SORT',\n    'SORTED',\n    'SSL',\n    'STATISTICS',\n    'STORED',\n    'STREAMTABLE',\n    'STRING',\n    'TABLES',\n    'TBLPROPERTIES',\n    'TEMPORARY',\n    'TERMINATED',\n    'TINYINT',\n    'TOUCH',\n    'TRANSACTIONS',\n    'UNARCHIVE',\n    'UNDO',\n    'UNIONTYPE',\n    'UNLOCK',\n    'UNSET',\n    'UNSIGNED',\n    'URI',\n    'USE',\n    'UTC',\n    'UTCTIMESTAMP',\n    'VALUE_TYPE',\n    'VIEW',\n    'WHILE',\n    'YEAR',\n    'AUTOCOMMIT',\n    'ISOLATION',\n    'LEVEL',\n    'OFFSET',\n    'SNAPSHOT',\n    'TRANSACTION',\n    'WORK',\n    'WRITE',\n    'ABORT',\n    'KEY',\n    'LAST',\n    'NORELY',\n    'NOVALIDATE',\n    'NULLS',\n    'RELY',\n    'VALIDATE',\n    'DETAIL',\n    'DOW',\n    'EXPRESSION',\n    'OPERATOR',\n    'QUARTER',\n    'SUMMARY',\n    'VECTORIZATION',\n    'WEEK',\n    'YEARS',\n    'MONTHS',\n    'WEEKS',\n    'DAYS',\n    'HOURS',\n    'MINUTES',\n    'SECONDS',\n    'TIMESTAMPTZ',\n    'ZONE',\n    // reserved\n    'ALL',\n    'ALTER',\n    'AND',\n    'AS',\n    'AUTHORIZATION',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CASE',\n    'CAST',\n    'COLUMN',\n    'CONF',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'CURSOR',\n    'DATABASE',\n    'DELETE',\n    'DESCRIBE',\n    'DISTINCT',\n    'DROP',\n    'ELSE',\n    'END',\n    'EXCHANGE',\n    'EXISTS',\n    'EXTENDED',\n    'EXTERNAL',\n    'FALSE',\n    'FETCH',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GRANT',\n    'GROUP',\n    'GROUPING',\n    'HAVING',\n    'IF',\n    'IMPORT',\n    'IN',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'JOIN',\n    'LATERAL',\n    'LEFT',\n    'LESS',\n    'LIKE',\n    'LOCAL',\n    'MACRO',\n    'MORE',\n    'NONE',\n    'NOT',\n    'NULL',\n    'OF',\n    'ON',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'PARTIALSCAN',\n    'PARTITION',\n    'PERCENT',\n    'PRECEDING',\n    'PRESERVE',\n    'PROCEDURE',\n    'RANGE',\n    'READS',\n    'REDUCE',\n    'REVOKE',\n    'RIGHT',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'SELECT',\n    'SET',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TRANSFORM',\n    'TRIGGER',\n    'TRUE',\n    'TRUNCATE',\n    'UNBOUNDED',\n    'UNION',\n    'UNIQUEJOIN',\n    'UPDATE',\n    'USER',\n    'USING',\n    'UTC_TMESTAMP',\n    'VALUES',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'COMMIT',\n    'ONLY',\n    'REGEXP',\n    'RLIKE',\n    'ROLLBACK',\n    'START',\n    'CACHE',\n    'CONSTRAINT',\n    'FOREIGN',\n    'PRIMARY',\n    'REFERENCES',\n    'DAYOFWEEK',\n    'EXTRACT',\n    'FLOOR',\n    'VIEWS',\n    'TIME',\n    'SYNC',\n    // fileTypes\n    'TEXTFILE',\n    'SEQUENCEFILE',\n    'ORC',\n    'CSV',\n    'TSV',\n    'PARQUET',\n    'AVRO',\n    'RCFILE',\n    'JSONFILE',\n    'INPUTFORMAT',\n    'OUTPUTFORMAT',\n];\nexport const dataTypes = [\n    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BOOLEAN',\n    'CHAR',\n    'DATE',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'MAP',\n    'NUMERIC',\n    'PRECISION',\n    'SMALLINT',\n    'STRUCT',\n    'TIMESTAMP',\n    'VARCHAR',\n];\n//# sourceMappingURL=hive.keywords.js.map","export const functions = [\n    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF\n    // math\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'BIN',\n    'BROUND',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CONV',\n    'COS',\n    'DEGREES',\n    // 'E',\n    'EXP',\n    'FACTORIAL',\n    'FLOOR',\n    'GREATEST',\n    'HEX',\n    'LEAST',\n    'LN',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'NEGATIVE',\n    'PI',\n    'PMOD',\n    'POSITIVE',\n    'POW',\n    'POWER',\n    'RADIANS',\n    'RAND',\n    'ROUND',\n    'SHIFTLEFT',\n    'SHIFTRIGHT',\n    'SHIFTRIGHTUNSIGNED',\n    'SIGN',\n    'SIN',\n    'SQRT',\n    'TAN',\n    'UNHEX',\n    'WIDTH_BUCKET',\n    // array\n    'ARRAY_CONTAINS',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'SIZE',\n    'SORT_ARRAY',\n    // conversion\n    'BINARY',\n    'CAST',\n    // date\n    'ADD_MONTHS',\n    'DATE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATEDIFF',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFYEAR',\n    'EXTRACT',\n    'FROM_UNIXTIME',\n    'FROM_UTC_TIMESTAMP',\n    'HOUR',\n    'LAST_DAY',\n    'MINUTE',\n    'MONTH',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'QUARTER',\n    'SECOND',\n    'TIMESTAMP',\n    'TO_DATE',\n    'TO_UTC_TIMESTAMP',\n    'TRUNC',\n    'UNIX_TIMESTAMP',\n    'WEEKOFYEAR',\n    'YEAR',\n    // conditional\n    'ASSERT_TRUE',\n    'COALESCE',\n    'IF',\n    'ISNOTNULL',\n    'ISNULL',\n    'NULLIF',\n    'NVL',\n    // string\n    'ASCII',\n    'BASE64',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONTEXT_NGRAMS',\n    'DECODE',\n    'ELT',\n    'ENCODE',\n    'FIELD',\n    'FIND_IN_SET',\n    'FORMAT_NUMBER',\n    'GET_JSON_OBJECT',\n    'IN_FILE',\n    'INITCAP',\n    'INSTR',\n    'LCASE',\n    'LENGTH',\n    'LEVENSHTEIN',\n    'LOCATE',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'NGRAMS',\n    'OCTET_LENGTH',\n    'PARSE_URL',\n    'PRINTF',\n    'QUOTE',\n    'REGEXP_EXTRACT',\n    'REGEXP_REPLACE',\n    'REPEAT',\n    'REVERSE',\n    'RPAD',\n    'RTRIM',\n    'SENTENCES',\n    'SOUNDEX',\n    'SPACE',\n    'SPLIT',\n    'STR_TO_MAP',\n    'SUBSTR',\n    'SUBSTRING',\n    'TRANSLATE',\n    'TRIM',\n    'UCASE',\n    'UNBASE64',\n    'UPPER',\n    // masking\n    'MASK',\n    'MASK_FIRST_N',\n    'MASK_HASH',\n    'MASK_LAST_N',\n    'MASK_SHOW_FIRST_N',\n    'MASK_SHOW_LAST_N',\n    // misc\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    'CRC32',\n    'CURRENT_DATABASE',\n    'CURRENT_USER',\n    'HASH',\n    'JAVA_METHOD',\n    'LOGGED_IN_USER',\n    'MD5',\n    'REFLECT',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SURROGATE_KEY',\n    'VERSION',\n    // aggregate\n    'AVG',\n    'COLLECT_LIST',\n    'COLLECT_SET',\n    'CORR',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'HISTOGRAM_NUMERIC',\n    'MAX',\n    'MIN',\n    'NTILE',\n    'PERCENTILE',\n    'PERCENTILE_APPROX',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // table\n    'EXPLODE',\n    'INLINE',\n    'JSON_TUPLE',\n    'PARSE_URL_TUPLE',\n    'POSEXPLODE',\n    'STACK',\n    // https://cwiki.apache.org/confluence/display/Hive/LanguageManual+WindowingAndAnalytics\n    'LEAD',\n    'LAG',\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'RANK',\n    'ROW_NUMBER',\n    'DENSE_RANK',\n    'CUME_DIST',\n    'PERCENT_RANK',\n    'NTILE',\n];\n//# sourceMappingURL=hive.functions.js.map","import { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\n// Shared functionality used by all MariaDB-like SQL dialects.\nexport function postProcess(tokens) {\n    return tokens.map((token, i) => {\n        const nextToken = tokens[i + 1] || EOF_TOKEN;\n        if (isToken.SET(token) && nextToken.text === '(') {\n            // This is SET datatype, not SET statement\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        const prevToken = tokens[i - 1] || EOF_TOKEN;\n        if (isToken.VALUES(token) && prevToken.text === '=') {\n            // This is VALUES() function, not VALUES clause\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        return token;\n    });\n}\n//# sourceMappingURL=likeMariaDb.js.map","export const keywords = [\n    // https://mariadb.com/kb/en/reserved-words/\n    'ACCESSIBLE',\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'BEFORE',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONDITION',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECLARE',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DELETE_DOMAIN_ID',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DO_DOMAIN_IDS',\n    'DROP',\n    'DUAL',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FORCE',\n    'FOREIGN',\n    'FROM',\n    'FULLTEXT',\n    'GENERAL',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'IGNORE_DOMAIN_IDS',\n    'IGNORE_SERVER_IDS',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'IS',\n    'ITERATE',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINEAR',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LOOP',\n    'LOW_PRIORITY',\n    'MASTER_HEARTBEAT_PERIOD',\n    'MASTER_SSL_VERIFY_SERVER_CERT',\n    'MATCH',\n    'MAXVALUE',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'MODIFIES',\n    'NATURAL',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NULL',\n    'OFFSET',\n    'ON',\n    'OPTIMIZE',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PAGE_CHECKSUM',\n    'PARSE_VCOL_EXPR',\n    'PARTITION',\n    'POSITION',\n    'PRIMARY',\n    'PROCEDURE',\n    'PURGE',\n    'RANGE',\n    'READ',\n    'READS',\n    'READ_WRITE',\n    'RECURSIVE',\n    'REF_SYSTEM_ID',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESIGNAL',\n    'RESTRICT',\n    'RETURN',\n    'RETURNING',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW_NUMBER',\n    'ROWS',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SENSITIVE',\n    'SEPARATOR',\n    'SET',\n    'SHOW',\n    'SIGNAL',\n    'SLOW',\n    'SPATIAL',\n    'SPECIFIC',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'SQL_BIG_RESULT',\n    'SQL_CALC_FOUND_ROWS',\n    'SQL_SMALL_RESULT',\n    'SSL',\n    'STARTING',\n    'STATS_AUTO_RECALC',\n    'STATS_PERSISTENT',\n    'STATS_SAMPLE_PAGES',\n    'STRAIGHT_JOIN',\n    'TABLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UNSIGNED',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'VALUES',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL',\n];\nexport const dataTypes = [\n    // https://mariadb.com/kb/en/data-types/\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'CHAR BYTE',\n    'CHAR',\n    'CHARACTER',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONG',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MEDIUMTEXT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'VARYING',\n    'YEAR',\n    // 'NUMBER', // ?? In oracle mode only\n    // 'SET' // handled as special-case in postProcess\n];\n//# sourceMappingURL=mariadb.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from './likeMariaDb.js';\nimport { dataTypes, keywords } from './mariadb.keywords.js';\nimport { functions } from './mariadb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    // Data manipulation\n    // - insert:\n    'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]',\n    'REPLACE [LOW_PRIORITY | DELAYED] [INTO]',\n    'VALUES',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n    // other\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [LOW_PRIORITY] [IGNORE]',\n    // - delete:\n    'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM',\n    // - drop table:\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]',\n    'ADD [COLUMN] [IF NOT EXISTS]',\n    '{CHANGE | MODIFY} [COLUMN] [IF EXISTS]',\n    'DROP [COLUMN] [IF EXISTS]',\n    'RENAME [TO]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    'SET {VISIBLE | INVISIBLE}',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://mariadb.com/docs/reference/mdb/sql-statements/\n    'ALTER DATABASE',\n    'ALTER DATABASE COMMENT',\n    'ALTER EVENT',\n    'ALTER FUNCTION',\n    'ALTER PROCEDURE',\n    'ALTER SCHEMA',\n    'ALTER SCHEMA COMMENT',\n    'ALTER SEQUENCE',\n    'ALTER SERVER',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE',\n    'ANALYZE TABLE',\n    'BACKUP LOCK',\n    'BACKUP STAGE',\n    'BACKUP UNLOCK',\n    'BEGIN',\n    'BINLOG',\n    'CACHE INDEX',\n    'CALL',\n    'CHANGE MASTER TO',\n    'CHECK TABLE',\n    'CHECK VIEW',\n    'CHECKSUM TABLE',\n    'COMMIT',\n    'CREATE AGGREGATE FUNCTION',\n    'CREATE DATABASE',\n    'CREATE EVENT',\n    'CREATE FUNCTION',\n    'CREATE INDEX',\n    'CREATE PROCEDURE',\n    'CREATE ROLE',\n    'CREATE SEQUENCE',\n    'CREATE SERVER',\n    'CREATE SPATIAL INDEX',\n    'CREATE TRIGGER',\n    'CREATE UNIQUE INDEX',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DROP DATABASE',\n    'DROP EVENT',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP PREPARE',\n    'DROP PROCEDURE',\n    'DROP ROLE',\n    'DROP SEQUENCE',\n    'DROP SERVER',\n    'DROP TRIGGER',\n    'DROP USER',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FLUSH',\n    'GET DIAGNOSTICS',\n    'GET DIAGNOSTICS CONDITION',\n    'GRANT',\n    'HANDLER',\n    'HELP',\n    'INSTALL PLUGIN',\n    'INSTALL SONAME',\n    'KILL',\n    'LOAD DATA INFILE',\n    'LOAD INDEX INTO CACHE',\n    'LOAD XML INFILE',\n    'LOCK TABLE',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'PURGE BINARY LOGS',\n    'PURGE MASTER LOGS',\n    'RELEASE SAVEPOINT',\n    'RENAME TABLE',\n    'RENAME USER',\n    'REPAIR TABLE',\n    'REPAIR VIEW',\n    'RESET MASTER',\n    'RESET QUERY CACHE',\n    'RESET REPLICA',\n    'RESET SLAVE',\n    'RESIGNAL',\n    'REVOKE',\n    'ROLLBACK',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET GLOBAL TRANSACTION',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET ROLE',\n    'SET STATEMENT',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW ALL REPLICAS STATUS',\n    'SHOW ALL SLAVES STATUS',\n    'SHOW AUTHORS',\n    'SHOW BINARY LOGS',\n    'SHOW BINLOG EVENTS',\n    'SHOW BINLOG STATUS',\n    'SHOW CHARACTER SET',\n    'SHOW CLIENT_STATISTICS',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CONTRIBUTORS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE EVENT',\n    'SHOW CREATE FUNCTION',\n    'SHOW CREATE PACKAGE',\n    'SHOW CREATE PACKAGE BODY',\n    'SHOW CREATE PROCEDURE',\n    'SHOW CREATE SEQUENCE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE TRIGGER',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINE INNODB STATUS',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW EVENTS',\n    'SHOW EXPLAIN',\n    'SHOW FUNCTION CODE',\n    'SHOW FUNCTION STATUS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW INDEXES',\n    'SHOW INDEX_STATISTICS',\n    'SHOW KEYS',\n    'SHOW LOCALES',\n    'SHOW MASTER LOGS',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PACKAGE BODY CODE',\n    'SHOW PACKAGE BODY STATUS',\n    'SHOW PACKAGE STATUS',\n    'SHOW PLUGINS',\n    'SHOW PLUGINS SONAME',\n    'SHOW PRIVILEGES',\n    'SHOW PROCEDURE CODE',\n    'SHOW PROCEDURE STATUS',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW QUERY_RESPONSE_TIME',\n    'SHOW RELAYLOG EVENTS',\n    'SHOW REPLICA',\n    'SHOW REPLICA HOSTS',\n    'SHOW REPLICA STATUS',\n    'SHOW SCHEMAS',\n    'SHOW SLAVE',\n    'SHOW SLAVE HOSTS',\n    'SHOW SLAVE STATUS',\n    'SHOW STATUS',\n    'SHOW STORAGE ENGINES',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW TRIGGERS',\n    'SHOW USER_STATISTICS',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    'SHOW WSREP_MEMBERSHIP',\n    'SHOW WSREP_STATUS',\n    'SHUTDOWN',\n    'SIGNAL',\n    'START ALL REPLICAS',\n    'START ALL SLAVES',\n    'START REPLICA',\n    'START SLAVE',\n    'START TRANSACTION',\n    'STOP ALL REPLICAS',\n    'STOP ALL SLAVES',\n    'STOP REPLICA',\n    'STOP SLAVE',\n    'UNINSTALL PLUGIN',\n    'UNINSTALL SONAME',\n    'UNLOCK TABLE',\n    'USE',\n    'XA BEGIN',\n    'XA COMMIT',\n    'XA END',\n    'XA PREPARE',\n    'XA RECOVER',\n    'XA ROLLBACK',\n    'XA START',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n    'MINUS [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\n// For reference: https://mariadb.com/kb/en/sql-statements-structure/\nexport const mariadb = {\n    name: 'mariadb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: [\n            '\"\"-qq-bs',\n            \"''-qq-bs\",\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_.$]+' },\n            { quote: '\"\"-qq-bs', prefixes: ['@'], requirePrefix: true },\n            { quote: \"''-qq-bs\", prefixes: ['@'], requirePrefix: true },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        paramTypes: { positional: true },\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            '%',\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '&&',\n            '||',\n            '!',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=mariadb.formatter.js.map","export const functions = [\n    // https://mariadb.com/kb/en/information-schema-sql_functions-table/\n    'ADDDATE',\n    'ADD_MONTHS',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'CAST',\n    'COUNT',\n    'CUME_DIST',\n    'CURDATE',\n    'CURTIME',\n    'DATE_ADD',\n    'DATE_SUB',\n    'DATE_FORMAT',\n    'DECODE',\n    'DENSE_RANK',\n    'EXTRACT',\n    'FIRST_VALUE',\n    'GROUP_CONCAT',\n    'JSON_ARRAYAGG',\n    'JSON_OBJECTAGG',\n    'LAG',\n    'LEAD',\n    'MAX',\n    'MEDIAN',\n    'MID',\n    'MIN',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'POSITION',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'RANK',\n    'ROW_NUMBER',\n    'SESSION_USER',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUM',\n    'SYSTEM_USER',\n    'TRIM',\n    'TRIM_ORACLE',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'ABS',\n    'ACOS',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'BENCHMARK',\n    'BIN',\n    'BINLOG_GTID_POS',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'CEIL',\n    'CEILING',\n    'CHARACTER_LENGTH',\n    'CHAR_LENGTH',\n    'CHR',\n    'COERCIBILITY',\n    'COLUMN_CHECK',\n    'COLUMN_EXISTS',\n    'COLUMN_LIST',\n    'COLUMN_JSON',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_OPERATOR_ORACLE',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'CRC32',\n    'DATEDIFF',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DEGREES',\n    'DECODE_HISTOGRAM',\n    'DECODE_ORACLE',\n    'DES_DECRYPT',\n    'DES_ENCRYPT',\n    'ELT',\n    'ENCODE',\n    'ENCRYPT',\n    'EXP',\n    'EXPORT_SET',\n    'EXTRACTVALUE',\n    'FIELD',\n    'FIND_IN_SET',\n    'FLOOR',\n    'FORMAT',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GET_LOCK',\n    'GREATEST',\n    'HEX',\n    'IFNULL',\n    'INSTR',\n    'ISNULL',\n    'IS_FREE_LOCK',\n    'IS_USED_LOCK',\n    'JSON_ARRAY',\n    'JSON_ARRAY_APPEND',\n    'JSON_ARRAY_INSERT',\n    'JSON_COMPACT',\n    'JSON_CONTAINS',\n    'JSON_CONTAINS_PATH',\n    'JSON_DEPTH',\n    'JSON_DETAILED',\n    'JSON_EXISTS',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_KEYS',\n    'JSON_LENGTH',\n    'JSON_LOOSE',\n    'JSON_MERGE',\n    'JSON_MERGE_PATCH',\n    'JSON_MERGE_PRESERVE',\n    'JSON_QUERY',\n    'JSON_QUOTE',\n    'JSON_OBJECT',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SET',\n    'JSON_SEARCH',\n    'JSON_TYPE',\n    'JSON_UNQUOTE',\n    'JSON_VALID',\n    'JSON_VALUE',\n    'LAST_DAY',\n    'LAST_INSERT_ID',\n    'LCASE',\n    'LEAST',\n    'LENGTH',\n    'LENGTHB',\n    'LN',\n    'LOAD_FILE',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LPAD_ORACLE',\n    'LTRIM',\n    'LTRIM_ORACLE',\n    'MAKEDATE',\n    'MAKETIME',\n    'MAKE_SET',\n    'MASTER_GTID_WAIT',\n    'MASTER_POS_WAIT',\n    'MD5',\n    'MONTHNAME',\n    'NAME_CONST',\n    'NVL',\n    'NVL2',\n    'OCT',\n    'OCTET_LENGTH',\n    'ORD',\n    'PERIOD_ADD',\n    'PERIOD_DIFF',\n    'PI',\n    'POW',\n    'POWER',\n    'QUOTE',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'RADIANS',\n    'RAND',\n    'RELEASE_ALL_LOCKS',\n    'RELEASE_LOCK',\n    'REPLACE_ORACLE',\n    'REVERSE',\n    'ROUND',\n    'RPAD',\n    'RPAD_ORACLE',\n    'RTRIM',\n    'RTRIM_ORACLE',\n    'SEC_TO_TIME',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SOUNDEX',\n    'SPACE',\n    'SQRT',\n    'STRCMP',\n    'STR_TO_DATE',\n    'SUBSTR_ORACLE',\n    'SUBSTRING_INDEX',\n    'SUBTIME',\n    'SYS_GUID',\n    'TAN',\n    'TIMEDIFF',\n    'TIME_FORMAT',\n    'TIME_TO_SEC',\n    'TO_BASE64',\n    'TO_CHAR',\n    'TO_DAYS',\n    'TO_SECONDS',\n    'UCASE',\n    'UNCOMPRESS',\n    'UNCOMPRESSED_LENGTH',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPDATEXML',\n    'UPPER',\n    'UUID',\n    'UUID_SHORT',\n    'VERSION',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WSREP_LAST_WRITTEN_GTID',\n    'WSREP_LAST_SEEN_GTID',\n    'WSREP_SYNC_WAIT_UPTO_GTID',\n    'YEARWEEK',\n    // CASE expression shorthands\n    'COALESCE',\n    'NULLIF',\n];\n//# sourceMappingURL=mariadb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from '../mariadb/likeMariaDb.js';\nimport { dataTypes, keywords } from './mysql.keywords.js';\nimport { functions } from './mysql.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]',\n    'REPLACE [LOW_PRIORITY | DELAYED] [INTO]',\n    'VALUES',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [TEMPORARY] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [LOW_PRIORITY] [IGNORE]',\n    // - delete:\n    'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM',\n    // - drop table:\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    '{CHANGE | MODIFY} [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME [TO | AS]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://dev.mysql.com/doc/refman/8.0/en/sql-statements.html\n    'ALTER DATABASE',\n    'ALTER EVENT',\n    'ALTER FUNCTION',\n    'ALTER INSTANCE',\n    'ALTER LOGFILE GROUP',\n    'ALTER PROCEDURE',\n    'ALTER RESOURCE GROUP',\n    'ALTER SERVER',\n    'ALTER TABLESPACE',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE TABLE',\n    'BINLOG',\n    'CACHE INDEX',\n    'CALL',\n    'CHANGE MASTER TO',\n    'CHANGE REPLICATION FILTER',\n    'CHANGE REPLICATION SOURCE TO',\n    'CHECK TABLE',\n    'CHECKSUM TABLE',\n    'CLONE',\n    'COMMIT',\n    'CREATE DATABASE',\n    'CREATE EVENT',\n    'CREATE FUNCTION',\n    'CREATE FUNCTION',\n    'CREATE INDEX',\n    'CREATE LOGFILE GROUP',\n    'CREATE PROCEDURE',\n    'CREATE RESOURCE GROUP',\n    'CREATE ROLE',\n    'CREATE SERVER',\n    'CREATE SPATIAL REFERENCE SYSTEM',\n    'CREATE TABLESPACE',\n    'CREATE TRIGGER',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DROP DATABASE',\n    'DROP EVENT',\n    'DROP FUNCTION',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP LOGFILE GROUP',\n    'DROP PROCEDURE',\n    'DROP RESOURCE GROUP',\n    'DROP ROLE',\n    'DROP SERVER',\n    'DROP SPATIAL REFERENCE SYSTEM',\n    'DROP TABLESPACE',\n    'DROP TRIGGER',\n    'DROP USER',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FLUSH',\n    'GRANT',\n    'HANDLER',\n    'HELP',\n    'IMPORT TABLE',\n    'INSTALL COMPONENT',\n    'INSTALL PLUGIN',\n    'KILL',\n    'LOAD DATA',\n    'LOAD INDEX INTO CACHE',\n    'LOAD XML',\n    'LOCK INSTANCE FOR BACKUP',\n    'LOCK TABLES',\n    'MASTER_POS_WAIT',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'PURGE BINARY LOGS',\n    'RELEASE SAVEPOINT',\n    'RENAME TABLE',\n    'RENAME USER',\n    'REPAIR TABLE',\n    'RESET',\n    'RESET MASTER',\n    'RESET PERSIST',\n    'RESET REPLICA',\n    'RESET SLAVE',\n    'RESTART',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET RESOURCE GROUP',\n    'SET ROLE',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW BINARY LOGS',\n    'SHOW BINLOG EVENTS',\n    'SHOW CHARACTER SET',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE EVENT',\n    'SHOW CREATE FUNCTION',\n    'SHOW CREATE PROCEDURE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE TRIGGER',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW EVENTS',\n    'SHOW FUNCTION CODE',\n    'SHOW FUNCTION STATUS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PLUGINS',\n    'SHOW PRIVILEGES',\n    'SHOW PROCEDURE CODE',\n    'SHOW PROCEDURE STATUS',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW RELAYLOG EVENTS',\n    'SHOW REPLICA STATUS',\n    'SHOW REPLICAS',\n    'SHOW SLAVE',\n    'SHOW SLAVE HOSTS',\n    'SHOW STATUS',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW TRIGGERS',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    'SHUTDOWN',\n    'SOURCE_POS_WAIT',\n    'START GROUP_REPLICATION',\n    'START REPLICA',\n    'START SLAVE',\n    'START TRANSACTION',\n    'STOP GROUP_REPLICATION',\n    'STOP REPLICA',\n    'STOP SLAVE',\n    'TABLE',\n    'UNINSTALL COMPONENT',\n    'UNINSTALL PLUGIN',\n    'UNLOCK INSTANCE',\n    'UNLOCK TABLES',\n    'USE',\n    'XA',\n    // flow control\n    // 'IF',\n    'ITERATE',\n    'LEAVE',\n    'LOOP',\n    'REPEAT',\n    'RETURN',\n    'WHILE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL]',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\n// https://dev.mysql.com/doc/refman/8.0/en/\nexport const mysql = {\n    name: 'mysql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: [\n            '\"\"-qq-bs',\n            { quote: \"''-qq-bs\", prefixes: ['N'] },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_.$]+' },\n            { quote: '\"\"-qq-bs', prefixes: ['@'], requirePrefix: true },\n            { quote: \"''-qq-bs\", prefixes: ['@'], requirePrefix: true },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        paramTypes: { positional: true },\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            '%',\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '->',\n            '->>',\n            '&&',\n            '||',\n            '!',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=mysql.formatter.js.map","export const keywords = [\n    // https://dev.mysql.com/doc/refman/8.0/en/keywords.html\n    'ACCESSIBLE',\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'BEFORE',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONDITION',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CUME_DIST',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECLARE',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DENSE_RANK',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DROP',\n    'DUAL',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'EMPTY',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FIRST_VALUE',\n    'FOR',\n    'FORCE',\n    'FOREIGN',\n    'FROM',\n    'FULLTEXT',\n    'FUNCTION',\n    'GENERATED',\n    'GET',\n    'GRANT',\n    'GROUP',\n    'GROUPING',\n    'GROUPS',\n    'HAVING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'IN',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'IO_AFTER_GTIDS',\n    'IO_BEFORE_GTIDS',\n    'IS',\n    'ITERATE',\n    'JOIN',\n    'JSON_TABLE',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LAG',\n    'LAST_VALUE',\n    'LATERAL',\n    'LEAD',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINEAR',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LONG',\n    'LOOP',\n    'LOW_PRIORITY',\n    'MASTER_BIND',\n    'MASTER_SSL_VERIFY_SERVER_CERT',\n    'MATCH',\n    'MAXVALUE',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'MODIFIES',\n    'NATURAL',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NTH_VALUE',\n    'NTILE',\n    'NULL',\n    'OF',\n    'ON',\n    'OPTIMIZE',\n    'OPTIMIZER_COSTS',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PARTITION',\n    'PERCENT_RANK',\n    'PRIMARY',\n    'PROCEDURE',\n    'PURGE',\n    'RANGE',\n    'RANK',\n    'READ',\n    'READS',\n    'READ_WRITE',\n    'RECURSIVE',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESIGNAL',\n    'RESTRICT',\n    'RETURN',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW',\n    'ROWS',\n    'ROW_NUMBER',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SENSITIVE',\n    'SEPARATOR',\n    'SET',\n    'SHOW',\n    'SIGNAL',\n    'SPATIAL',\n    'SPECIFIC',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'SQL_BIG_RESULT',\n    'SQL_CALC_FOUND_ROWS',\n    'SQL_SMALL_RESULT',\n    'SSL',\n    'STARTING',\n    'STORED',\n    'STRAIGHT_JOIN',\n    'SYSTEM',\n    'TABLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UNSIGNED',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'VALUES',\n    'VIRTUAL',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL', // (R)\n];\nexport const dataTypes = [\n    // https://dev.mysql.com/doc/refman/8.0/en/data-types.html\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'BOOL',\n    'BOOLEAN',\n    'CHAR',\n    'CHARACTER',\n    'DATE',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MEDIUMTEXT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'VARYING',\n    'YEAR',\n    // 'SET' // handled as special-case in postProcess\n];\n//# sourceMappingURL=mysql.keywords.js.map","export const functions = [\n    // https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html\n    'ABS',\n    'ACOS',\n    'ADDDATE',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    // 'AND',\n    'ANY_VALUE',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BENCHMARK',\n    'BIN',\n    'BIN_TO_UUID',\n    'BINARY',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BIT_OR',\n    'BIT_XOR',\n    'CAN_ACCESS_COLUMN',\n    'CAN_ACCESS_DATABASE',\n    'CAN_ACCESS_TABLE',\n    'CAN_ACCESS_USER',\n    'CAN_ACCESS_VIEW',\n    'CAST',\n    'CEIL',\n    'CEILING',\n    'CHAR',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHARSET',\n    'COALESCE',\n    'COERCIBILITY',\n    'COLLATION',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'COUNT',\n    'CRC32',\n    'CUME_DIST',\n    'CURDATE',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURTIME',\n    'DATABASE',\n    'DATE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATEDIFF',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DEFAULT',\n    'DEGREES',\n    'DENSE_RANK',\n    'DIV',\n    'ELT',\n    'EXP',\n    'EXPORT_SET',\n    'EXTRACT',\n    'EXTRACTVALUE',\n    'FIELD',\n    'FIND_IN_SET',\n    'FIRST_VALUE',\n    'FLOOR',\n    'FORMAT',\n    'FORMAT_BYTES',\n    'FORMAT_PICO_TIME',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GEOMCOLLECTION',\n    'GEOMETRYCOLLECTION',\n    'GET_DD_COLUMN_PRIVILEGES',\n    'GET_DD_CREATE_OPTIONS',\n    'GET_DD_INDEX_SUB_PART_LENGTH',\n    'GET_FORMAT',\n    'GET_LOCK',\n    'GREATEST',\n    'GROUP_CONCAT',\n    'GROUPING',\n    'GTID_SUBSET',\n    'GTID_SUBTRACT',\n    'HEX',\n    'HOUR',\n    'ICU_VERSION',\n    'IF',\n    'IFNULL',\n    // 'IN',\n    'INET_ATON',\n    'INET_NTOA',\n    'INET6_ATON',\n    'INET6_NTOA',\n    'INSERT',\n    'INSTR',\n    'INTERNAL_AUTO_INCREMENT',\n    'INTERNAL_AVG_ROW_LENGTH',\n    'INTERNAL_CHECK_TIME',\n    'INTERNAL_CHECKSUM',\n    'INTERNAL_DATA_FREE',\n    'INTERNAL_DATA_LENGTH',\n    'INTERNAL_DD_CHAR_LENGTH',\n    'INTERNAL_GET_COMMENT_OR_ERROR',\n    'INTERNAL_GET_ENABLED_ROLE_JSON',\n    'INTERNAL_GET_HOSTNAME',\n    'INTERNAL_GET_USERNAME',\n    'INTERNAL_GET_VIEW_WARNING_OR_ERROR',\n    'INTERNAL_INDEX_COLUMN_CARDINALITY',\n    'INTERNAL_INDEX_LENGTH',\n    'INTERNAL_IS_ENABLED_ROLE',\n    'INTERNAL_IS_MANDATORY_ROLE',\n    'INTERNAL_KEYS_DISABLED',\n    'INTERNAL_MAX_DATA_LENGTH',\n    'INTERNAL_TABLE_ROWS',\n    'INTERNAL_UPDATE_TIME',\n    'INTERVAL',\n    'IS',\n    'IS_FREE_LOCK',\n    'IS_IPV4',\n    'IS_IPV4_COMPAT',\n    'IS_IPV4_MAPPED',\n    'IS_IPV6',\n    'IS NOT',\n    'IS NOT NULL',\n    'IS NULL',\n    'IS_USED_LOCK',\n    'IS_UUID',\n    'ISNULL',\n    'JSON_ARRAY',\n    'JSON_ARRAY_APPEND',\n    'JSON_ARRAY_INSERT',\n    'JSON_ARRAYAGG',\n    'JSON_CONTAINS',\n    'JSON_CONTAINS_PATH',\n    'JSON_DEPTH',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_KEYS',\n    'JSON_LENGTH',\n    'JSON_MERGE',\n    'JSON_MERGE_PATCH',\n    'JSON_MERGE_PRESERVE',\n    'JSON_OBJECT',\n    'JSON_OBJECTAGG',\n    'JSON_OVERLAPS',\n    'JSON_PRETTY',\n    'JSON_QUOTE',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SCHEMA_VALID',\n    'JSON_SCHEMA_VALIDATION_REPORT',\n    'JSON_SEARCH',\n    'JSON_SET',\n    'JSON_STORAGE_FREE',\n    'JSON_STORAGE_SIZE',\n    'JSON_TABLE',\n    'JSON_TYPE',\n    'JSON_UNQUOTE',\n    'JSON_VALID',\n    'JSON_VALUE',\n    'LAG',\n    'LAST_DAY',\n    'LAST_INSERT_ID',\n    'LAST_VALUE',\n    'LCASE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LIKE',\n    'LINESTRING',\n    'LN',\n    'LOAD_FILE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAKE_SET',\n    'MAKEDATE',\n    'MAKETIME',\n    'MASTER_POS_WAIT',\n    'MATCH',\n    'MAX',\n    'MBRCONTAINS',\n    'MBRCOVEREDBY',\n    'MBRCOVERS',\n    'MBRDISJOINT',\n    'MBREQUALS',\n    'MBRINTERSECTS',\n    'MBROVERLAPS',\n    'MBRTOUCHES',\n    'MBRWITHIN',\n    'MD5',\n    'MEMBER OF',\n    'MICROSECOND',\n    'MID',\n    'MIN',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MULTILINESTRING',\n    'MULTIPOINT',\n    'MULTIPOLYGON',\n    'NAME_CONST',\n    'NOT',\n    'NOT IN',\n    'NOT LIKE',\n    'NOT REGEXP',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'OCT',\n    'OCTET_LENGTH',\n    // 'OR',\n    'ORD',\n    'PERCENT_RANK',\n    'PERIOD_ADD',\n    'PERIOD_DIFF',\n    'PI',\n    'POINT',\n    'POLYGON',\n    'POSITION',\n    'POW',\n    'POWER',\n    'PS_CURRENT_THREAD_ID',\n    'PS_THREAD_ID',\n    'QUARTER',\n    'QUOTE',\n    'RADIANS',\n    'RAND',\n    'RANDOM_BYTES',\n    'RANK',\n    'REGEXP',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'RELEASE_ALL_LOCKS',\n    'RELEASE_LOCK',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RLIKE',\n    'ROLES_GRAPHML',\n    'ROUND',\n    'ROW_COUNT',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA',\n    'SEC_TO_TIME',\n    'SECOND',\n    'SESSION_USER',\n    'SHA1',\n    'SHA2',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SOUNDEX',\n    'SOUNDS LIKE',\n    'SOURCE_POS_WAIT',\n    'SPACE',\n    'SQRT',\n    'ST_AREA',\n    'ST_ASBINARY',\n    'ST_ASGEOJSON',\n    'ST_ASTEXT',\n    'ST_BUFFER',\n    'ST_BUFFER_STRATEGY',\n    'ST_CENTROID',\n    'ST_COLLECT',\n    'ST_CONTAINS',\n    'ST_CONVEXHULL',\n    'ST_CROSSES',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_DISTANCE_SPHERE',\n    'ST_ENDPOINT',\n    'ST_ENVELOPE',\n    'ST_EQUALS',\n    'ST_EXTERIORRING',\n    'ST_FRECHETDISTANCE',\n    'ST_GEOHASH',\n    'ST_GEOMCOLLFROMTEXT',\n    'ST_GEOMCOLLFROMWKB',\n    'ST_GEOMETRYN',\n    'ST_GEOMETRYTYPE',\n    'ST_GEOMFROMGEOJSON',\n    'ST_GEOMFROMTEXT',\n    'ST_GEOMFROMWKB',\n    'ST_HAUSDORFFDISTANCE',\n    'ST_INTERIORRINGN',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_ISCLOSED',\n    'ST_ISEMPTY',\n    'ST_ISSIMPLE',\n    'ST_ISVALID',\n    'ST_LATFROMGEOHASH',\n    'ST_LATITUDE',\n    'ST_LENGTH',\n    'ST_LINEFROMTEXT',\n    'ST_LINEFROMWKB',\n    'ST_LINEINTERPOLATEPOINT',\n    'ST_LINEINTERPOLATEPOINTS',\n    'ST_LONGFROMGEOHASH',\n    'ST_LONGITUDE',\n    'ST_MAKEENVELOPE',\n    'ST_MLINEFROMTEXT',\n    'ST_MLINEFROMWKB',\n    'ST_MPOINTFROMTEXT',\n    'ST_MPOINTFROMWKB',\n    'ST_MPOLYFROMTEXT',\n    'ST_MPOLYFROMWKB',\n    'ST_NUMGEOMETRIES',\n    'ST_NUMINTERIORRING',\n    'ST_NUMPOINTS',\n    'ST_OVERLAPS',\n    'ST_POINTATDISTANCE',\n    'ST_POINTFROMGEOHASH',\n    'ST_POINTFROMTEXT',\n    'ST_POINTFROMWKB',\n    'ST_POINTN',\n    'ST_POLYFROMTEXT',\n    'ST_POLYFROMWKB',\n    'ST_SIMPLIFY',\n    'ST_SRID',\n    'ST_STARTPOINT',\n    'ST_SWAPXY',\n    'ST_SYMDIFFERENCE',\n    'ST_TOUCHES',\n    'ST_TRANSFORM',\n    'ST_UNION',\n    'ST_VALIDATE',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_Y',\n    'STATEMENT_DIGEST',\n    'STATEMENT_DIGEST_TEXT',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DATE',\n    'STRCMP',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'SUBTIME',\n    'SUM',\n    'SYSDATE',\n    'SYSTEM_USER',\n    'TAN',\n    'TIME',\n    'TIME_FORMAT',\n    'TIME_TO_SEC',\n    'TIMEDIFF',\n    'TIMESTAMP',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TO_BASE64',\n    'TO_DAYS',\n    'TO_SECONDS',\n    'TRIM',\n    'TRUNCATE',\n    'UCASE',\n    'UNCOMPRESS',\n    'UNCOMPRESSED_LENGTH',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPDATEXML',\n    'UPPER',\n    // 'USER',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'UUID',\n    'UUID_SHORT',\n    'UUID_TO_BIN',\n    'VALIDATE_PASSWORD_STRENGTH',\n    'VALUES',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    'VERSION',\n    'WAIT_FOR_EXECUTED_GTID_SET',\n    'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WEIGHT_STRING',\n    // 'XOR',\n    'YEAR',\n    'YEARWEEK',\n];\n//# sourceMappingURL=mysql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from '../mariadb/likeMariaDb.js';\nimport { dataTypes, keywords } from './tidb.keywords.js';\nimport { functions } from './tidb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]',\n    'REPLACE [LOW_PRIORITY | DELAYED] [INTO]',\n    'VALUES',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [TEMPORARY] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // https://docs.pingcap.com/tidb/stable/sql-statement-create-view\n    'CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-update\n    'UPDATE [LOW_PRIORITY] [IGNORE]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-delete\n    'DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-drop-table\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-table\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    '{CHANGE | MODIFY} [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME [TO | AS]',\n    'RENAME COLUMN',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-truncate\n    'TRUNCATE [TABLE]',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-database\n    'ALTER DATABASE',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-instance\n    'ALTER INSTANCE',\n    'ALTER RESOURCE GROUP',\n    'ALTER SEQUENCE',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-alter-user\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE TABLE',\n    'CHECK TABLE',\n    'CHECKSUM TABLE',\n    'COMMIT',\n    'CREATE DATABASE',\n    'CREATE INDEX',\n    'CREATE RESOURCE GROUP',\n    'CREATE ROLE',\n    'CREATE SEQUENCE',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DROP DATABASE',\n    'DROP INDEX',\n    'DROP RESOURCE GROUP',\n    'DROP ROLE',\n    'DROP TABLESPACE',\n    'DROP USER',\n    'DROP VIEW',\n    'EXPLAIN',\n    'FLUSH',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-grant-privileges\n    'GRANT',\n    'IMPORT TABLE',\n    'INSTALL COMPONENT',\n    'INSTALL PLUGIN',\n    'KILL',\n    'LOAD DATA',\n    'LOCK INSTANCE FOR BACKUP',\n    'LOCK TABLES',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'RELEASE SAVEPOINT',\n    'RENAME TABLE',\n    'RENAME USER',\n    'REPAIR TABLE',\n    'RESET',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET RESOURCE GROUP',\n    'SET ROLE',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW BINARY LOGS',\n    'SHOW BINLOG EVENTS',\n    'SHOW CHARACTER SET',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW EVENTS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PLUGINS',\n    'SHOW PRIVILEGES',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW STATUS',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW TRIGGERS',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-table\n    'TABLE',\n    'UNINSTALL COMPONENT',\n    'UNINSTALL PLUGIN',\n    'UNLOCK INSTANCE',\n    'UNLOCK TABLES',\n    // https://docs.pingcap.com/tidb/stable/sql-statement-use\n    'USE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL | DISTINCT]']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL]',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\n// https://docs.pingcap.com/tidb/stable/basic-features\nexport const tidb = {\n    name: 'tidb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _ char set prefixes such as _utf8, _latin1, _binary, _utf8mb4, etc.\n        stringTypes: [\n            '\"\"-qq-bs',\n            { quote: \"''-qq-bs\", prefixes: ['N'] },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_.$]+' },\n            { quote: '\"\"-qq-bs', prefixes: ['@'], requirePrefix: true },\n            { quote: \"''-qq-bs\", prefixes: ['@'], requirePrefix: true },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        paramTypes: { positional: true },\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            '%',\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '->',\n            '->>',\n            '&&',\n            '||',\n            '!',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=tidb.formatter.js.map","export const keywords = [\n    // https://docs.pingcap.com/tidb/stable/keywords\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ARRAY',\n    'AS',\n    'ASC',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DESC',\n    'DESCRIBE',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DOUBLE',\n    'DROP',\n    'DUAL',\n    'ELSE',\n    'ELSEIF',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FORCE',\n    'FOREIGN',\n    'FROM',\n    'FULLTEXT',\n    'GENERATED',\n    'GRANT',\n    'GROUP',\n    'GROUPS',\n    'HAVING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'ILIKE',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSERT',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'IS',\n    'ITERATE',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINEAR',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LONG',\n    'LOW_PRIORITY',\n    'MATCH',\n    'MAXVALUE',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'NATURAL',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NULL',\n    'OF',\n    'ON',\n    'OPTIMIZE',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PARTITION',\n    'PRIMARY',\n    'PROCEDURE',\n    'RANGE',\n    'READ',\n    'RECURSIVE',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESTRICT',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW',\n    'ROWS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SET',\n    'SHOW',\n    'SPATIAL',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'SQL_BIG_RESULT',\n    'SQL_CALC_FOUND_ROWS',\n    'SQL_SMALL_RESULT',\n    'SSL',\n    'STARTING',\n    'STATS_EXTENDED',\n    'STORED',\n    'STRAIGHT_JOIN',\n    'TABLE',\n    'TABLESAMPLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'TiDB_CURRENT_TSO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UNSIGNED',\n    'UNTIL',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'VALUES',\n    'VIRTUAL',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL', // (R)\n];\nexport const dataTypes = [\n    // https://docs.pingcap.com/tidb/stable/data-type-overview\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'BOOL',\n    'BOOLEAN',\n    'CHAR',\n    'CHARACTER',\n    'DATE',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'VARYING',\n    'YEAR',\n    // 'SET' // handled as special-case in postProcess\n];\n//# sourceMappingURL=tidb.keywords.js.map","export const functions = [\n    // https://docs.pingcap.com/tidb/stable/sql-statement-show-builtins\n    // https://docs.pingcap.com/tidb/stable/functions-and-operators-overview\n    // + MySQL aggregate functions: https://dev.mysql.com/doc/refman/8.0/en/aggregate-functions.html\n    // + MySQL window functions: https://dev.mysql.com/doc/refman/8.0/en/window-functions-usage.html\n    'ABS',\n    'ACOS',\n    'ADDDATE',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    // 'AND',\n    'ANY_VALUE',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BENCHMARK',\n    'BIN',\n    'BIN_TO_UUID',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BIT_OR',\n    'BIT_XOR',\n    'BITAND',\n    'BITNEG',\n    'BITOR',\n    'BITXOR',\n    'CASE',\n    'CAST',\n    'CEIL',\n    'CEILING',\n    'CHAR_FUNC',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHARSET',\n    'COALESCE',\n    'COERCIBILITY',\n    'COLLATION',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'COUNT',\n    'CRC32',\n    'CUME_DIST',\n    'CURDATE',\n    'CURRENT_DATE',\n    'CURRENT_RESOURCE_GROUP',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURTIME',\n    'DATABASE',\n    'DATE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATEDIFF',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DECODE',\n    'DEFAULT_FUNC',\n    'DEGREES',\n    'DENSE_RANK',\n    'DES_DECRYPT',\n    'DES_ENCRYPT',\n    'DIV',\n    'ELT',\n    'ENCODE',\n    'ENCRYPT',\n    'EQ',\n    'EXP',\n    'EXPORT_SET',\n    'EXTRACT',\n    'FIELD',\n    'FIND_IN_SET',\n    'FIRST_VALUE',\n    'FLOOR',\n    'FORMAT',\n    'FORMAT_BYTES',\n    'FORMAT_NANO_TIME',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GE',\n    'GET_FORMAT',\n    'GET_LOCK',\n    'GETPARAM',\n    'GREATEST',\n    'GROUP_CONCAT',\n    'GROUPING',\n    'GT',\n    'HEX',\n    'HOUR',\n    'IF',\n    'IFNULL',\n    'ILIKE',\n    // 'IN',\n    'INET6_ATON',\n    'INET6_NTOA',\n    'INET_ATON',\n    'INET_NTOA',\n    'INSERT_FUNC',\n    'INSTR',\n    'INTDIV',\n    'INTERVAL',\n    'IS_FREE_LOCK',\n    'IS_IPV4',\n    'IS_IPV4_COMPAT',\n    'IS_IPV4_MAPPED',\n    'IS_IPV6',\n    'IS_USED_LOCK',\n    'IS_UUID',\n    'ISFALSE',\n    'ISNULL',\n    'ISTRUE',\n    'JSON_ARRAY',\n    'JSON_ARRAYAGG',\n    'JSON_ARRAY_APPEND',\n    'JSON_ARRAY_INSERT',\n    'JSON_CONTAINS',\n    'JSON_CONTAINS_PATH',\n    'JSON_DEPTH',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_KEYS',\n    'JSON_LENGTH',\n    'JSON_MEMBEROF',\n    'JSON_MERGE',\n    'JSON_MERGE_PATCH',\n    'JSON_MERGE_PRESERVE',\n    'JSON_OBJECT',\n    'JSON_OBJECTAGG',\n    'JSON_OVERLAPS',\n    'JSON_PRETTY',\n    'JSON_QUOTE',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SEARCH',\n    'JSON_SET',\n    'JSON_STORAGE_FREE',\n    'JSON_STORAGE_SIZE',\n    'JSON_TYPE',\n    'JSON_UNQUOTE',\n    'JSON_VALID',\n    'LAG',\n    'LAST_DAY',\n    'LAST_INSERT_ID',\n    'LAST_VALUE',\n    'LASTVAL',\n    'LCASE',\n    'LE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LEFTSHIFT',\n    'LENGTH',\n    'LIKE',\n    'LN',\n    'LOAD_FILE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LT',\n    'LTRIM',\n    'MAKE_SET',\n    'MAKEDATE',\n    'MAKETIME',\n    'MASTER_POS_WAIT',\n    'MAX',\n    'MD5',\n    'MICROSECOND',\n    'MID',\n    'MIN',\n    'MINUS',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MUL',\n    'NAME_CONST',\n    'NE',\n    'NEXTVAL',\n    'NOT',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLEQ',\n    'OCT',\n    'OCTET_LENGTH',\n    'OLD_PASSWORD',\n    // 'OR',\n    'ORD',\n    'PASSWORD_FUNC',\n    'PERCENT_RANK',\n    'PERIOD_ADD',\n    'PERIOD_DIFF',\n    'PI',\n    'PLUS',\n    'POSITION',\n    'POW',\n    'POWER',\n    'QUARTER',\n    'QUOTE',\n    'RADIANS',\n    'RAND',\n    'RANDOM_BYTES',\n    'RANK',\n    'REGEXP',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'RELEASE_ALL_LOCKS',\n    'RELEASE_LOCK',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RIGHTSHIFT',\n    'ROUND',\n    'ROW_COUNT',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA',\n    'SEC_TO_TIME',\n    'SECOND',\n    'SESSION_USER',\n    'SETVAL',\n    'SETVAR',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SM3',\n    'SPACE',\n    'SQRT',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DATE',\n    'STRCMP',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'SUBTIME',\n    'SUM',\n    'SYSDATE',\n    'SYSTEM_USER',\n    'TAN',\n    'TIDB_BOUNDED_STALENESS',\n    'TIDB_CURRENT_TSO',\n    'TIDB_DECODE_BINARY_PLAN',\n    'TIDB_DECODE_KEY',\n    'TIDB_DECODE_PLAN',\n    'TIDB_DECODE_SQL_DIGESTS',\n    'TIDB_ENCODE_SQL_DIGEST',\n    'TIDB_IS_DDL_OWNER',\n    'TIDB_PARSE_TSO',\n    'TIDB_PARSE_TSO_LOGICAL',\n    'TIDB_ROW_CHECKSUM',\n    'TIDB_SHARD',\n    'TIDB_VERSION',\n    'TIME',\n    'TIME_FORMAT',\n    'TIME_TO_SEC',\n    'TIMEDIFF',\n    'TIMESTAMP',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TO_BASE64',\n    'TO_DAYS',\n    'TO_SECONDS',\n    'TRANSLATE',\n    'TRIM',\n    'TRUNCATE',\n    'UCASE',\n    'UNARYMINUS',\n    'UNCOMPRESS',\n    'UNCOMPRESSED_LENGTH',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPPER',\n    // 'USER',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'UUID',\n    'UUID_SHORT',\n    'UUID_TO_BIN',\n    'VALIDATE_PASSWORD_STRENGTH',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    'VERSION',\n    'VITESS_HASH',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WEIGHT_STRING',\n    // 'XOR',\n    'YEAR',\n    'YEARWEEK',\n];\n//# sourceMappingURL=tidb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './n1ql.functions.js';\nimport { dataTypes, keywords } from './n1ql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE INTO',\n    'WHEN [NOT] MATCHED THEN',\n    'UPDATE SET',\n    'INSERT',\n    // other\n    'NEST',\n    'UNNEST',\n    'RETURNING',\n]);\nconst onelineClauses = expandPhrases([\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - set schema:\n    'SET SCHEMA',\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n    'ADVISE',\n    'ALTER INDEX',\n    'BEGIN TRANSACTION',\n    'BUILD INDEX',\n    'COMMIT TRANSACTION',\n    'CREATE COLLECTION',\n    'CREATE FUNCTION',\n    'CREATE INDEX',\n    'CREATE PRIMARY INDEX',\n    'CREATE SCOPE',\n    'DROP COLLECTION',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP PRIMARY INDEX',\n    'DROP SCOPE',\n    'EXECUTE',\n    'EXECUTE FUNCTION',\n    'EXPLAIN',\n    'GRANT',\n    'INFER',\n    'PREPARE',\n    'REVOKE',\n    'ROLLBACK TRANSACTION',\n    'SAVEPOINT',\n    'SET TRANSACTION',\n    'UPDATE STATISTICS',\n    'UPSERT',\n    // other\n    'LET',\n    'SET CURRENT SCHEMA',\n    'SHOW',\n    'USE [PRIMARY] KEYS',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT [ALL]', 'INTERSECT [ALL]']);\nconst reservedJoins = expandPhrases(['JOIN', '{LEFT | RIGHT} [OUTER] JOIN', 'INNER JOIN']);\nconst reservedPhrases = expandPhrases(['{ROWS | RANGE | GROUPS} BETWEEN']);\n// For reference: http://docs.couchbase.com.s3-website-us-west-1.amazonaws.com/server/6.0/n1ql/n1ql-language-reference/index.html\nexport const n1ql = {\n    name: 'n1ql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...onelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // NOTE: single quotes are actually not supported in N1QL,\n        // but we support them anyway as all other SQL dialects do,\n        // which simplifies writing tests that are shared between all dialects.\n        stringTypes: ['\"\"-bs', \"''-bs\"],\n        identTypes: ['``'],\n        extraParens: ['[]', '{}'],\n        paramTypes: { positional: true, numbered: ['$'], named: ['$'] },\n        lineCommentTypes: ['#', '--'],\n        operators: ['%', '==', ':', '||'],\n    },\n    formatOptions: {\n        onelineClauses,\n    },\n};\n//# sourceMappingURL=n1ql.formatter.js.map","export const keywords = [\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html\n    'ADVISE',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'ARRAY',\n    'AS',\n    'ASC',\n    'AT',\n    'BEGIN',\n    'BETWEEN',\n    'BINARY',\n    'BOOLEAN',\n    'BREAK',\n    'BUCKET',\n    'BUILD',\n    'BY',\n    'CALL',\n    'CASE',\n    'CAST',\n    'CLUSTER',\n    'COLLATE',\n    'COLLECTION',\n    'COMMIT',\n    'COMMITTED',\n    'CONNECT',\n    'CONTINUE',\n    'CORRELATED',\n    'COVER',\n    'CREATE',\n    'CURRENT',\n    'DATABASE',\n    'DATASET',\n    'DATASTORE',\n    'DECLARE',\n    'DECREMENT',\n    'DELETE',\n    'DERIVED',\n    'DESC',\n    'DESCRIBE',\n    'DISTINCT',\n    'DO',\n    'DROP',\n    'EACH',\n    'ELEMENT',\n    'ELSE',\n    'END',\n    'EVERY',\n    'EXCEPT',\n    'EXCLUDE',\n    'EXECUTE',\n    'EXISTS',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FILTER',\n    'FIRST',\n    'FLATTEN',\n    'FLUSH',\n    'FOLLOWING',\n    'FOR',\n    'FORCE',\n    'FROM',\n    'FTS',\n    'FUNCTION',\n    'GOLANG',\n    'GRANT',\n    'GROUP',\n    'GROUPS',\n    'GSI',\n    'HASH',\n    'HAVING',\n    'IF',\n    'IGNORE',\n    'ILIKE',\n    'IN',\n    'INCLUDE',\n    'INCREMENT',\n    'INDEX',\n    'INFER',\n    'INLINE',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISOLATION',\n    'JAVASCRIPT',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KEYSPACE',\n    'KNOWN',\n    'LANGUAGE',\n    'LAST',\n    'LEFT',\n    'LET',\n    'LETTING',\n    'LEVEL',\n    'LIKE',\n    'LIMIT',\n    'LSM',\n    'MAP',\n    'MAPPING',\n    'MATCHED',\n    'MATERIALIZED',\n    'MERGE',\n    'MINUS',\n    'MISSING',\n    'NAMESPACE',\n    'NEST',\n    'NL',\n    'NO',\n    'NOT',\n    'NTH_VALUE',\n    'NULL',\n    'NULLS',\n    'NUMBER',\n    'OBJECT',\n    'OFFSET',\n    'ON',\n    'OPTION',\n    'OPTIONS',\n    'OR',\n    'ORDER',\n    'OTHERS',\n    'OUTER',\n    'OVER',\n    'PARSE',\n    'PARTITION',\n    'PASSWORD',\n    'PATH',\n    'POOL',\n    'PRECEDING',\n    'PREPARE',\n    'PRIMARY',\n    'PRIVATE',\n    'PRIVILEGE',\n    'PROBE',\n    'PROCEDURE',\n    'PUBLIC',\n    'RANGE',\n    'RAW',\n    'REALM',\n    'REDUCE',\n    'RENAME',\n    'RESPECT',\n    'RETURN',\n    'RETURNING',\n    'REVOKE',\n    'RIGHT',\n    'ROLE',\n    'ROLLBACK',\n    'ROW',\n    'ROWS',\n    'SATISFIES',\n    'SAVEPOINT',\n    'SCHEMA',\n    'SCOPE',\n    'SELECT',\n    'SELF',\n    'SEMI',\n    'SET',\n    'SHOW',\n    'SOME',\n    'START',\n    'STATISTICS',\n    'STRING',\n    'SYSTEM',\n    'THEN',\n    'TIES',\n    'TO',\n    'TRAN',\n    'TRANSACTION',\n    'TRIGGER',\n    'TRUE',\n    'TRUNCATE',\n    'UNBOUNDED',\n    'UNDER',\n    'UNION',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNNEST',\n    'UNSET',\n    'UPDATE',\n    'UPSERT',\n    'USE',\n    'USER',\n    'USING',\n    'VALIDATE',\n    'VALUE',\n    'VALUED',\n    'VALUES',\n    'VIA',\n    'VIEW',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WORK',\n    'XOR',\n];\nexport const dataTypes = [\n// N1QL does not support any way of declaring types for columns.\n// It does not support the CREATE TABLE statement nor the CAST() expression.\n//\n// It does have several keywords like ARRAY and OBJECT, which seem to refer to types,\n// but they are used as operators. It also reserves several words like STRING and NUMBER,\n// which it actually doesn't use.\n//\n// https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/datatypes.html\n];\n//# sourceMappingURL=n1ql.keywords.js.map","export const functions = [\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/functions.html\n    'ABORT',\n    'ABS',\n    'ACOS',\n    'ADVISOR',\n    'ARRAY_AGG',\n    'ARRAY_AGG',\n    'ARRAY_APPEND',\n    'ARRAY_AVG',\n    'ARRAY_BINARY_SEARCH',\n    'ARRAY_CONCAT',\n    'ARRAY_CONTAINS',\n    'ARRAY_COUNT',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_FLATTEN',\n    'ARRAY_IFNULL',\n    'ARRAY_INSERT',\n    'ARRAY_INTERSECT',\n    'ARRAY_LENGTH',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_MOVE',\n    'ARRAY_POSITION',\n    'ARRAY_PREPEND',\n    'ARRAY_PUT',\n    'ARRAY_RANGE',\n    'ARRAY_REMOVE',\n    'ARRAY_REPEAT',\n    'ARRAY_REPLACE',\n    'ARRAY_REVERSE',\n    'ARRAY_SORT',\n    'ARRAY_STAR',\n    'ARRAY_SUM',\n    'ARRAY_SYMDIFF',\n    'ARRAY_SYMDIFF1',\n    'ARRAY_SYMDIFFN',\n    'ARRAY_UNION',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BASE64',\n    'BASE64_DECODE',\n    'BASE64_ENCODE',\n    'BITAND ',\n    'BITCLEAR ',\n    'BITNOT ',\n    'BITOR ',\n    'BITSET ',\n    'BITSHIFT ',\n    'BITTEST ',\n    'BITXOR ',\n    'CEIL',\n    'CLOCK_LOCAL',\n    'CLOCK_MILLIS',\n    'CLOCK_STR',\n    'CLOCK_TZ',\n    'CLOCK_UTC',\n    'COALESCE',\n    'CONCAT',\n    'CONCAT2',\n    'CONTAINS',\n    'CONTAINS_TOKEN',\n    'CONTAINS_TOKEN_LIKE',\n    'CONTAINS_TOKEN_REGEXP',\n    'COS',\n    'COUNT',\n    'COUNT',\n    'COUNTN',\n    'CUME_DIST',\n    'CURL',\n    'DATE_ADD_MILLIS',\n    'DATE_ADD_STR',\n    'DATE_DIFF_MILLIS',\n    'DATE_DIFF_STR',\n    'DATE_FORMAT_STR',\n    'DATE_PART_MILLIS',\n    'DATE_PART_STR',\n    'DATE_RANGE_MILLIS',\n    'DATE_RANGE_STR',\n    'DATE_TRUNC_MILLIS',\n    'DATE_TRUNC_STR',\n    'DECODE',\n    'DECODE_JSON',\n    'DEGREES',\n    'DENSE_RANK',\n    'DURATION_TO_STR',\n    // 'E',\n    'ENCODED_SIZE',\n    'ENCODE_JSON',\n    'EXP',\n    'FIRST_VALUE',\n    'FLOOR',\n    'GREATEST',\n    'HAS_TOKEN',\n    'IFINF',\n    'IFMISSING',\n    'IFMISSINGORNULL',\n    'IFNAN',\n    'IFNANORINF',\n    'IFNULL',\n    'INITCAP',\n    'ISARRAY',\n    'ISATOM',\n    'ISBITSET',\n    'ISBOOLEAN',\n    'ISNUMBER',\n    'ISOBJECT',\n    'ISSTRING',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'LEAST',\n    'LENGTH',\n    'LN',\n    'LOG',\n    'LOWER',\n    'LTRIM',\n    'MAX',\n    'MEAN',\n    'MEDIAN',\n    'META',\n    'MILLIS',\n    'MILLIS_TO_LOCAL',\n    'MILLIS_TO_STR',\n    'MILLIS_TO_TZ',\n    'MILLIS_TO_UTC',\n    'MILLIS_TO_ZONE_NAME',\n    'MIN',\n    'MISSINGIF',\n    'NANIF',\n    'NEGINFIF',\n    'NOW_LOCAL',\n    'NOW_MILLIS',\n    'NOW_STR',\n    'NOW_TZ',\n    'NOW_UTC',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'NVL',\n    'NVL2',\n    'OBJECT_ADD',\n    'OBJECT_CONCAT',\n    'OBJECT_INNER_PAIRS',\n    'OBJECT_INNER_VALUES',\n    'OBJECT_LENGTH',\n    'OBJECT_NAMES',\n    'OBJECT_PAIRS',\n    'OBJECT_PUT',\n    'OBJECT_REMOVE',\n    'OBJECT_RENAME',\n    'OBJECT_REPLACE',\n    'OBJECT_UNWRAP',\n    'OBJECT_VALUES',\n    'PAIRS',\n    'PERCENT_RANK',\n    'PI',\n    'POLY_LENGTH',\n    'POSINFIF',\n    'POSITION',\n    'POWER',\n    'RADIANS',\n    'RANDOM',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'REGEXP_CONTAINS',\n    'REGEXP_LIKE',\n    'REGEXP_MATCHES',\n    'REGEXP_POSITION',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT',\n    'REGEX_CONTAINS',\n    'REGEX_LIKE',\n    'REGEX_MATCHES',\n    'REGEX_POSITION',\n    'REGEX_REPLACE',\n    'REGEX_SPLIT',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'ROUND',\n    'ROW_NUMBER',\n    'RTRIM',\n    'SEARCH',\n    'SEARCH_META',\n    'SEARCH_SCORE',\n    'SIGN',\n    'SIN',\n    'SPLIT',\n    'SQRT',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DURATION',\n    'STR_TO_MILLIS',\n    'STR_TO_TZ',\n    'STR_TO_UTC',\n    'STR_TO_ZONE_NAME',\n    'SUBSTR',\n    'SUFFIXES',\n    'SUM',\n    'TAN',\n    'TITLE',\n    'TOARRAY',\n    'TOATOM',\n    'TOBOOLEAN',\n    'TOKENS',\n    'TOKENS',\n    'TONUMBER',\n    'TOOBJECT',\n    'TOSTRING',\n    'TRIM',\n    'TRUNC',\n    // 'TYPE', // disabled\n    'UPPER',\n    'UUID',\n    'VARIANCE',\n    'VARIANCE_POP',\n    'VARIANCE_SAMP',\n    'VAR_POP',\n    'VAR_SAMP',\n    'WEEKDAY_MILLIS',\n    'WEEKDAY_STR',\n    // type casting\n    // not implemented in N1QL, but added here now for the sake of tests\n    // https://docs.couchbase.com/server/current/analytics/3_query.html#Vs_SQL-92\n    'CAST',\n];\n//# sourceMappingURL=n1ql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { EOF_TOKEN, isReserved, isToken, TokenType } from '../../lexer/token.js';\nimport { dataTypes, keywords } from './plsql.keywords.js';\nimport { functions } from './plsql.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | UNIQUE]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER [SIBLINGS] BY',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR UPDATE [OF]',\n    // Data manipulation\n    // - insert:\n    'INSERT [INTO | ALL INTO]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE [INTO]',\n    'WHEN [NOT] MATCHED [THEN]',\n    'UPDATE SET',\n    // other\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW',\n    'CREATE MATERIALIZED VIEW',\n    // - update:\n    'UPDATE [ONLY]',\n    // - delete:\n    'DELETE FROM [ONLY]',\n    // - drop table:\n    'DROP TABLE',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD',\n    'DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}',\n    'MODIFY',\n    'RENAME TO',\n    'RENAME COLUMN',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'SET SCHEMA',\n    'BEGIN',\n    'CONNECT BY',\n    'DECLARE',\n    'EXCEPT',\n    'EXCEPTION',\n    'LOOP',\n    'START WITH',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'MINUS', 'INTERSECT']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    // non-standard joins\n    '{CROSS | OUTER} APPLY',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL]',\n    'ON COMMIT',\n    '{ROWS | RANGE} BETWEEN',\n]);\nexport const plsql = {\n    name: 'plsql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['N'] },\n            { quote: \"q''\", prefixes: ['N'] },\n        ],\n        // PL/SQL doesn't actually support escaping of quotes in identifiers,\n        // but for the sake of simpler testing we'll support this anyway\n        // as all other SQL dialects with \"identifiers\" do.\n        identTypes: [`\"\"-qq`],\n        identChars: { rest: '$#' },\n        variableTypes: [{ regex: '&{1,2}[A-Za-z][A-Za-z0-9_$#]*' }],\n        paramTypes: { numbered: [':'], named: [':'] },\n        operators: [\n            '**',\n            ':=',\n            '%',\n            '~=',\n            '^=',\n            // '..', // Conflicts with float followed by dot (so \"2..3\" gets parsed as [\"2.\", \".\", \"3\"])\n            '>>',\n            '<<',\n            '=>',\n            '@',\n            '||',\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['@'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\nfunction postProcess(tokens) {\n    let previousReservedToken = EOF_TOKEN;\n    return tokens.map(token => {\n        // BY [SET]\n        if (isToken.SET(token) && isToken.BY(previousReservedToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_KEYWORD });\n        }\n        if (isReserved(token.type)) {\n            previousReservedToken = token;\n        }\n        return token;\n    });\n}\n//# sourceMappingURL=plsql.formatter.js.map","export const keywords = [\n    // https://docs.oracle.com/cd/B19306_01/appdev.102/b14261/reservewords.htm\n    // 'A',\n    'ADD',\n    'AGENT',\n    'AGGREGATE',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ANY',\n    'ARROW',\n    'AS',\n    'ASC',\n    'AT',\n    'ATTRIBUTE',\n    'AUTHID',\n    'AVG',\n    'BEGIN',\n    'BETWEEN',\n    'BLOCK',\n    'BODY',\n    'BOTH',\n    'BOUND',\n    'BULK',\n    'BY',\n    'BYTE',\n    // 'C',\n    'CALL',\n    'CALLING',\n    'CASCADE',\n    'CASE',\n    'CHARSET',\n    'CHARSETFORM',\n    'CHARSETID',\n    'CHECK',\n    'CLOSE',\n    'CLUSTER',\n    'CLUSTERS',\n    'COLAUTH',\n    'COLLECT',\n    'COLUMNS',\n    'COMMENT',\n    'COMMIT',\n    'COMMITTED',\n    'COMPILED',\n    'COMPRESS',\n    'CONNECT',\n    'CONSTANT',\n    'CONSTRUCTOR',\n    'CONTEXT',\n    'CONVERT',\n    'COUNT',\n    'CRASH',\n    'CREATE',\n    'CURRENT',\n    'CURSOR',\n    'CUSTOMDATUM',\n    'DANGLING',\n    'DATA',\n    'DAY',\n    'DECLARE',\n    'DEFAULT',\n    'DEFINE',\n    'DELETE',\n    'DESC',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DROP',\n    'DURATION',\n    'ELEMENT',\n    'ELSE',\n    'ELSIF',\n    'EMPTY',\n    'END',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCEPTION',\n    'EXCEPTIONS',\n    'EXCLUSIVE',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXTERNAL',\n    'FETCH',\n    'FINAL',\n    'FIXED',\n    'FOR',\n    'FORALL',\n    'FORCE',\n    'FORM',\n    'FROM',\n    'FUNCTION',\n    'GENERAL',\n    'GOTO',\n    'GRANT',\n    'GROUP',\n    'HASH',\n    'HAVING',\n    'HEAP',\n    'HIDDEN',\n    'HOUR',\n    'IDENTIFIED',\n    'IF',\n    'IMMEDIATE',\n    'IN',\n    'INCLUDING',\n    'INDEX',\n    'INDEXES',\n    'INDICATOR',\n    'INDICES',\n    'INFINITE',\n    'INSERT',\n    'INSTANTIABLE',\n    'INTERFACE',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'INVALIDATE',\n    'IS',\n    'ISOLATION',\n    'JAVA',\n    'LANGUAGE',\n    'LARGE',\n    'LEADING',\n    'LENGTH',\n    'LEVEL',\n    'LIBRARY',\n    'LIKE',\n    'LIKE2',\n    'LIKE4',\n    'LIKEC',\n    'LIMIT',\n    'LIMITED',\n    'LOCAL',\n    'LOCK',\n    'LOOP',\n    'MAP',\n    'MAX',\n    'MAXLEN',\n    'MEMBER',\n    'MERGE',\n    'MIN',\n    'MINUS',\n    'MINUTE',\n    'MOD',\n    'MODE',\n    'MODIFY',\n    'MONTH',\n    'MULTISET',\n    'NAME',\n    'NAN',\n    'NATIONAL',\n    'NATIVE',\n    'NEW',\n    'NOCOMPRESS',\n    'NOCOPY',\n    'NOT',\n    'NOWAIT',\n    'NULL',\n    'OBJECT',\n    'OCICOLL',\n    'OCIDATE',\n    'OCIDATETIME',\n    'OCIDURATION',\n    'OCIINTERVAL',\n    'OCILOBLOCATOR',\n    'OCINUMBER',\n    'OCIRAW',\n    'OCIREF',\n    'OCIREFCURSOR',\n    'OCIROWID',\n    'OCISTRING',\n    'OCITYPE',\n    'OF',\n    'ON',\n    'ONLY',\n    'OPAQUE',\n    'OPEN',\n    'OPERATOR',\n    'OPTION',\n    'OR',\n    'ORACLE',\n    'ORADATA',\n    'ORDER',\n    'OVERLAPS',\n    'ORGANIZATION',\n    'ORLANY',\n    'ORLVARY',\n    'OTHERS',\n    'OUT',\n    'OVERRIDING',\n    'PACKAGE',\n    'PARALLEL_ENABLE',\n    'PARAMETER',\n    'PARAMETERS',\n    'PARTITION',\n    'PASCAL',\n    'PIPE',\n    'PIPELINED',\n    'PRAGMA',\n    'PRIOR',\n    'PRIVATE',\n    'PROCEDURE',\n    'PUBLIC',\n    'RAISE',\n    'RANGE',\n    'READ',\n    'RECORD',\n    'REF',\n    'REFERENCE',\n    'REM',\n    'REMAINDER',\n    'RENAME',\n    'RESOURCE',\n    'RESULT',\n    'RETURN',\n    'RETURNING',\n    'REVERSE',\n    'REVOKE',\n    'ROLLBACK',\n    'ROW',\n    'SAMPLE',\n    'SAVE',\n    'SAVEPOINT',\n    'SB1',\n    'SB2',\n    'SB4',\n    'SECOND',\n    'SEGMENT',\n    'SELECT',\n    'SELF',\n    'SEPARATE',\n    'SEQUENCE',\n    'SERIALIZABLE',\n    'SET',\n    'SHARE',\n    'SHORT',\n    'SIZE',\n    'SIZE_T',\n    'SOME',\n    'SPARSE',\n    'SQL',\n    'SQLCODE',\n    'SQLDATA',\n    'SQLNAME',\n    'SQLSTATE',\n    'STANDARD',\n    'START',\n    'STATIC',\n    'STDDEV',\n    'STORED',\n    'STRING',\n    'STRUCT',\n    'STYLE',\n    'SUBMULTISET',\n    'SUBPARTITION',\n    'SUBSTITUTABLE',\n    'SUBTYPE',\n    'SUM',\n    'SYNONYM',\n    'TABAUTH',\n    'TABLE',\n    'TDO',\n    'THE',\n    'THEN',\n    'TIME',\n    'TIMEZONE_ABBR',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TIMEZONE_REGION',\n    'TO',\n    'TRAILING',\n    'TRANSAC',\n    'TRANSACTIONAL',\n    'TRUSTED',\n    'TYPE',\n    'UB1',\n    'UB2',\n    'UB4',\n    'UNDER',\n    'UNION',\n    'UNIQUE',\n    'UNSIGNED',\n    'UNTRUSTED',\n    'UPDATE',\n    'USE',\n    'USING',\n    'VALIST',\n    'VALUE',\n    'VALUES',\n    'VARIABLE',\n    'VARIANCE',\n    'VARRAY',\n    'VIEW',\n    'VIEWS',\n    'VOID',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WORK',\n    'WRAPPED',\n    'WRITE',\n    'YEAR',\n    'ZONE',\n];\nexport const dataTypes = [\n    // https://www.ibm.com/docs/en/db2/10.5?topic=plsql-data-types\n    'ARRAY',\n    'BFILE_BASE',\n    'BINARY',\n    'BLOB_BASE',\n    'CHAR VARYING',\n    'CHAR_BASE',\n    'CHAR',\n    'CHARACTER VARYING',\n    'CHARACTER',\n    'CLOB_BASE',\n    'DATE_BASE',\n    'DATE',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTERVAL DAY',\n    'INTERVAL YEAR',\n    'LONG',\n    'NATIONAL CHAR VARYING',\n    'NATIONAL CHAR',\n    'NATIONAL CHARACTER VARYING',\n    'NATIONAL CHARACTER',\n    'NCHAR VARYING',\n    'NCHAR',\n    'NCHAR',\n    'NUMBER_BASE',\n    'NUMBER',\n    'NUMBERIC',\n    'NVARCHAR',\n    'PRECISION',\n    'RAW',\n    'TIMESTAMP',\n    'UROWID',\n    'VARCHAR',\n    'VARCHAR2',\n];\n//# sourceMappingURL=plsql.keywords.js.map","export const functions = [\n    // https://docs.oracle.com/cd/B19306_01/server.102/b14200/functions001.htm\n    // numeric\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'BITAND',\n    'CEIL',\n    'COS',\n    'COSH',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'MOD',\n    'NANVL',\n    'POWER',\n    'REMAINDER',\n    'ROUND',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TANH',\n    'TRUNC',\n    'WIDTH_BUCKET',\n    // character\n    'CHR',\n    'CONCAT',\n    'INITCAP',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'NLS_INITCAP',\n    'NLS_LOWER',\n    'NLSSORT',\n    'NLS_UPPER',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPLACE',\n    'RPAD',\n    'RTRIM',\n    'SOUNDEX',\n    'SUBSTR',\n    'TRANSLATE',\n    'TREAT',\n    'TRIM',\n    'UPPER',\n    'NLS_CHARSET_DECL_LEN',\n    'NLS_CHARSET_ID',\n    'NLS_CHARSET_NAME',\n    'ASCII',\n    'INSTR',\n    'LENGTH',\n    'REGEXP_INSTR',\n    // datetime\n    'ADD_MONTHS',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'DBTIMEZONE',\n    'EXTRACT',\n    'FROM_TZ',\n    'LAST_DAY',\n    'LOCALTIMESTAMP',\n    'MONTHS_BETWEEN',\n    'NEW_TIME',\n    'NEXT_DAY',\n    'NUMTODSINTERVAL',\n    'NUMTOYMINTERVAL',\n    'ROUND',\n    'SESSIONTIMEZONE',\n    'SYS_EXTRACT_UTC',\n    'SYSDATE',\n    'SYSTIMESTAMP',\n    'TO_CHAR',\n    'TO_TIMESTAMP',\n    'TO_TIMESTAMP_TZ',\n    'TO_DSINTERVAL',\n    'TO_YMINTERVAL',\n    'TRUNC',\n    'TZ_OFFSET',\n    // comparison\n    'GREATEST',\n    'LEAST',\n    // conversion\n    'ASCIISTR',\n    'BIN_TO_NUM',\n    'CAST',\n    'CHARTOROWID',\n    'COMPOSE',\n    'CONVERT',\n    'DECOMPOSE',\n    'HEXTORAW',\n    'NUMTODSINTERVAL',\n    'NUMTOYMINTERVAL',\n    'RAWTOHEX',\n    'RAWTONHEX',\n    'ROWIDTOCHAR',\n    'ROWIDTONCHAR',\n    'SCN_TO_TIMESTAMP',\n    'TIMESTAMP_TO_SCN',\n    'TO_BINARY_DOUBLE',\n    'TO_BINARY_FLOAT',\n    'TO_CHAR',\n    'TO_CLOB',\n    'TO_DATE',\n    'TO_DSINTERVAL',\n    'TO_LOB',\n    'TO_MULTI_BYTE',\n    'TO_NCHAR',\n    'TO_NCLOB',\n    'TO_NUMBER',\n    'TO_DSINTERVAL',\n    'TO_SINGLE_BYTE',\n    'TO_TIMESTAMP',\n    'TO_TIMESTAMP_TZ',\n    'TO_YMINTERVAL',\n    'TO_YMINTERVAL',\n    'TRANSLATE',\n    'UNISTR',\n    // largeObject\n    'BFILENAME',\n    'EMPTY_BLOB,',\n    'EMPTY_CLOB',\n    // collection\n    'CARDINALITY',\n    'COLLECT',\n    'POWERMULTISET',\n    'POWERMULTISET_BY_CARDINALITY',\n    'SET',\n    // hierarchical\n    'SYS_CONNECT_BY_PATH',\n    // dataMining\n    'CLUSTER_ID',\n    'CLUSTER_PROBABILITY',\n    'CLUSTER_SET',\n    'FEATURE_ID',\n    'FEATURE_SET',\n    'FEATURE_VALUE',\n    'PREDICTION',\n    'PREDICTION_COST',\n    'PREDICTION_DETAILS',\n    'PREDICTION_PROBABILITY',\n    'PREDICTION_SET',\n    // xml\n    'APPENDCHILDXML',\n    'DELETEXML',\n    'DEPTH',\n    'EXTRACT',\n    'EXISTSNODE',\n    'EXTRACTVALUE',\n    'INSERTCHILDXML',\n    'INSERTXMLBEFORE',\n    'PATH',\n    'SYS_DBURIGEN',\n    'SYS_XMLAGG',\n    'SYS_XMLGEN',\n    'UPDATEXML',\n    'XMLAGG',\n    'XMLCDATA',\n    'XMLCOLATTVAL',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLFOREST',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLQUERY',\n    'XMLROOT',\n    'XMLSEQUENCE',\n    'XMLSERIALIZE',\n    'XMLTABLE',\n    'XMLTRANSFORM',\n    // encoding\n    'DECODE',\n    'DUMP',\n    'ORA_HASH',\n    'VSIZE',\n    // nullRelated\n    'COALESCE',\n    'LNNVL',\n    'NULLIF',\n    'NVL',\n    'NVL2',\n    // env\n    'SYS_CONTEXT',\n    'SYS_GUID',\n    'SYS_TYPEID',\n    'UID',\n    'USER',\n    'USERENV',\n    // aggregate\n    'AVG',\n    'COLLECT',\n    'CORR',\n    'CORR_S',\n    'CORR_K',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST',\n    'GROUP_ID',\n    'GROUPING',\n    'GROUPING_ID',\n    'LAST',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'RANK',\n    'REGR_SLOPE',\n    'REGR_INTERCEPT',\n    'REGR_COUNT',\n    'REGR_R2',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_SXX',\n    'REGR_SYY',\n    'REGR_SXY',\n    'STATS_BINOMIAL_TEST',\n    'STATS_CROSSTAB',\n    'STATS_F_TEST',\n    'STATS_KS_TEST',\n    'STATS_MODE',\n    'STATS_MW_TEST',\n    'STATS_ONE_WAY_ANOVA',\n    'STATS_T_TEST_ONE',\n    'STATS_T_TEST_PAIRED',\n    'STATS_T_TEST_INDEP',\n    'STATS_T_TEST_INDEPU',\n    'STATS_WSR_TEST',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // Windowing functions (minus the ones already listed in aggregates)\n    // window\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTILE',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    // objectReference\n    'DEREF',\n    'MAKE_REF',\n    'REF',\n    'REFTOHEX',\n    'VALUE',\n    // model\n    'CV',\n    'ITERATION_NUMBER',\n    'PRESENTNNV',\n    'PRESENTV',\n    'PREVIOUS',\n];\n//# sourceMappingURL=plsql.functions.js.map","export const functions = [\n    // https://www.postgresql.org/docs/14/functions.html\n    //\n    // https://www.postgresql.org/docs/14/functions-math.html\n    'ABS',\n    'ACOS',\n    'ACOSD',\n    'ACOSH',\n    'ASIN',\n    'ASIND',\n    'ASINH',\n    'ATAN',\n    'ATAN2',\n    'ATAN2D',\n    'ATAND',\n    'ATANH',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'COS',\n    'COSD',\n    'COSH',\n    'COT',\n    'COTD',\n    'DEGREES',\n    'DIV',\n    'EXP',\n    'FACTORIAL',\n    'FLOOR',\n    'GCD',\n    'LCM',\n    'LN',\n    'LOG',\n    'LOG10',\n    'MIN_SCALE',\n    'MOD',\n    'PI',\n    'POWER',\n    'RADIANS',\n    'RANDOM',\n    'ROUND',\n    'SCALE',\n    'SETSEED',\n    'SIGN',\n    'SIN',\n    'SIND',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TAND',\n    'TANH',\n    'TRIM_SCALE',\n    'TRUNC',\n    'WIDTH_BUCKET',\n    // https://www.postgresql.org/docs/14/functions-string.html\n    'ABS',\n    'ASCII',\n    'BIT_LENGTH',\n    'BTRIM',\n    'CHARACTER_LENGTH',\n    'CHAR_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'FORMAT',\n    'INITCAP',\n    'LEFT',\n    'LENGTH',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MD5',\n    'NORMALIZE',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARSE_IDENT',\n    'PG_CLIENT_ENCODING',\n    'POSITION',\n    'QUOTE_IDENT',\n    'QUOTE_LITERAL',\n    'QUOTE_NULLABLE',\n    'REGEXP_MATCH',\n    'REGEXP_MATCHES',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT_TO_ARRAY',\n    'REGEXP_SPLIT_TO_TABLE',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RPAD',\n    'RTRIM',\n    'SPLIT_PART',\n    'SPRINTF',\n    'STARTS_WITH',\n    'STRING_AGG',\n    'STRING_TO_ARRAY',\n    'STRING_TO_TABLE',\n    'STRPOS',\n    'SUBSTR',\n    'SUBSTRING',\n    'TO_ASCII',\n    'TO_HEX',\n    'TRANSLATE',\n    'TRIM',\n    'UNISTR',\n    'UPPER',\n    // https://www.postgresql.org/docs/14/functions-binarystring.html\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'BTRIM',\n    'CONVERT',\n    'CONVERT_FROM',\n    'CONVERT_TO',\n    'DECODE',\n    'ENCODE',\n    'GET_BIT',\n    'GET_BYTE',\n    'LENGTH',\n    'LTRIM',\n    'MD5',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'POSITION',\n    'RTRIM',\n    'SET_BIT',\n    'SET_BYTE',\n    'SHA224',\n    'SHA256',\n    'SHA384',\n    'SHA512',\n    'STRING_AGG',\n    'SUBSTR',\n    'SUBSTRING',\n    'TRIM',\n    // https://www.postgresql.org/docs/14/functions-bitstring.html\n    'BIT_COUNT',\n    'BIT_LENGTH',\n    'GET_BIT',\n    'LENGTH',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'POSITION',\n    'SET_BIT',\n    'SUBSTRING',\n    // https://www.postgresql.org/docs/14/functions-matching.html\n    'REGEXP_MATCH',\n    'REGEXP_MATCHES',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT_TO_ARRAY',\n    'REGEXP_SPLIT_TO_TABLE',\n    // https://www.postgresql.org/docs/14/functions-formatting.html\n    'TO_CHAR',\n    'TO_DATE',\n    'TO_NUMBER',\n    'TO_TIMESTAMP',\n    // https://www.postgresql.org/docs/14/functions-datetime.html\n    // 'AGE',\n    'CLOCK_TIMESTAMP',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATE_BIN',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'EXTRACT',\n    'ISFINITE',\n    'JUSTIFY_DAYS',\n    'JUSTIFY_HOURS',\n    'JUSTIFY_INTERVAL',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'MAKE_DATE',\n    'MAKE_INTERVAL',\n    'MAKE_TIME',\n    'MAKE_TIMESTAMP',\n    'MAKE_TIMESTAMPTZ',\n    'NOW',\n    'PG_SLEEP',\n    'PG_SLEEP_FOR',\n    'PG_SLEEP_UNTIL',\n    'STATEMENT_TIMESTAMP',\n    'TIMEOFDAY',\n    'TO_TIMESTAMP',\n    'TRANSACTION_TIMESTAMP',\n    // https://www.postgresql.org/docs/14/functions-enum.html\n    'ENUM_FIRST',\n    'ENUM_LAST',\n    'ENUM_RANGE',\n    // https://www.postgresql.org/docs/14/functions-geometry.html\n    'AREA',\n    'BOUND_BOX',\n    'BOX',\n    'CENTER',\n    'CIRCLE',\n    'DIAGONAL',\n    'DIAMETER',\n    'HEIGHT',\n    'ISCLOSED',\n    'ISOPEN',\n    'LENGTH',\n    'LINE',\n    'LSEG',\n    'NPOINTS',\n    'PATH',\n    'PCLOSE',\n    'POINT',\n    'POLYGON',\n    'POPEN',\n    'RADIUS',\n    'SLOPE',\n    'WIDTH',\n    // https://www.postgresql.org/docs/14/functions-net.html\n    'ABBREV',\n    'BROADCAST',\n    'FAMILY',\n    'HOST',\n    'HOSTMASK',\n    'INET_MERGE',\n    'INET_SAME_FAMILY',\n    'MACADDR8_SET7BIT',\n    'MASKLEN',\n    'NETMASK',\n    'NETWORK',\n    'SET_MASKLEN',\n    // 'TEXT', // excluded because it's also a data type name\n    'TRUNC',\n    // https://www.postgresql.org/docs/14/functions-textsearch.html\n    'ARRAY_TO_TSVECTOR',\n    'GET_CURRENT_TS_CONFIG',\n    'JSONB_TO_TSVECTOR',\n    'JSON_TO_TSVECTOR',\n    'LENGTH',\n    'NUMNODE',\n    'PHRASETO_TSQUERY',\n    'PLAINTO_TSQUERY',\n    'QUERYTREE',\n    'SETWEIGHT',\n    'STRIP',\n    'TO_TSQUERY',\n    'TO_TSVECTOR',\n    'TSQUERY_PHRASE',\n    'TSVECTOR_TO_ARRAY',\n    'TS_DEBUG',\n    'TS_DELETE',\n    'TS_FILTER',\n    'TS_HEADLINE',\n    'TS_LEXIZE',\n    'TS_PARSE',\n    'TS_RANK',\n    'TS_RANK_CD',\n    'TS_REWRITE',\n    'TS_STAT',\n    'TS_TOKEN_TYPE',\n    'WEBSEARCH_TO_TSQUERY',\n    // https://www.postgresql.org/docs/14/functions-uuid.html\n    'UUID',\n    // https://www.postgresql.org/docs/14/functions-xml.html\n    'CURSOR_TO_XML',\n    'CURSOR_TO_XMLSCHEMA',\n    'DATABASE_TO_XML',\n    'DATABASE_TO_XMLSCHEMA',\n    'DATABASE_TO_XML_AND_XMLSCHEMA',\n    'NEXTVAL',\n    'QUERY_TO_XML',\n    'QUERY_TO_XMLSCHEMA',\n    'QUERY_TO_XML_AND_XMLSCHEMA',\n    'SCHEMA_TO_XML',\n    'SCHEMA_TO_XMLSCHEMA',\n    'SCHEMA_TO_XML_AND_XMLSCHEMA',\n    'STRING',\n    'TABLE_TO_XML',\n    'TABLE_TO_XMLSCHEMA',\n    'TABLE_TO_XML_AND_XMLSCHEMA',\n    'XMLAGG',\n    'XMLCOMMENT',\n    'XMLCONCAT',\n    'XMLELEMENT',\n    'XMLEXISTS',\n    'XMLFOREST',\n    'XMLPARSE',\n    'XMLPI',\n    'XMLROOT',\n    'XMLSERIALIZE',\n    'XMLTABLE',\n    'XML_IS_WELL_FORMED',\n    'XML_IS_WELL_FORMED_CONTENT',\n    'XML_IS_WELL_FORMED_DOCUMENT',\n    'XPATH',\n    'XPATH_EXISTS',\n    // https://www.postgresql.org/docs/14/functions-json.html\n    'ARRAY_TO_JSON',\n    'JSONB_AGG',\n    'JSONB_ARRAY_ELEMENTS',\n    'JSONB_ARRAY_ELEMENTS_TEXT',\n    'JSONB_ARRAY_LENGTH',\n    'JSONB_BUILD_ARRAY',\n    'JSONB_BUILD_OBJECT',\n    'JSONB_EACH',\n    'JSONB_EACH_TEXT',\n    'JSONB_EXTRACT_PATH',\n    'JSONB_EXTRACT_PATH_TEXT',\n    'JSONB_INSERT',\n    'JSONB_OBJECT',\n    'JSONB_OBJECT_AGG',\n    'JSONB_OBJECT_KEYS',\n    'JSONB_PATH_EXISTS',\n    'JSONB_PATH_EXISTS_TZ',\n    'JSONB_PATH_MATCH',\n    'JSONB_PATH_MATCH_TZ',\n    'JSONB_PATH_QUERY',\n    'JSONB_PATH_QUERY_ARRAY',\n    'JSONB_PATH_QUERY_ARRAY_TZ',\n    'JSONB_PATH_QUERY_FIRST',\n    'JSONB_PATH_QUERY_FIRST_TZ',\n    'JSONB_PATH_QUERY_TZ',\n    'JSONB_POPULATE_RECORD',\n    'JSONB_POPULATE_RECORDSET',\n    'JSONB_PRETTY',\n    'JSONB_SET',\n    'JSONB_SET_LAX',\n    'JSONB_STRIP_NULLS',\n    'JSONB_TO_RECORD',\n    'JSONB_TO_RECORDSET',\n    'JSONB_TYPEOF',\n    'JSON_AGG',\n    'JSON_ARRAY_ELEMENTS',\n    'JSON_ARRAY_ELEMENTS_TEXT',\n    'JSON_ARRAY_LENGTH',\n    'JSON_BUILD_ARRAY',\n    'JSON_BUILD_OBJECT',\n    'JSON_EACH',\n    'JSON_EACH_TEXT',\n    'JSON_EXTRACT_PATH',\n    'JSON_EXTRACT_PATH_TEXT',\n    'JSON_OBJECT',\n    'JSON_OBJECT_AGG',\n    'JSON_OBJECT_KEYS',\n    'JSON_POPULATE_RECORD',\n    'JSON_POPULATE_RECORDSET',\n    'JSON_STRIP_NULLS',\n    'JSON_TO_RECORD',\n    'JSON_TO_RECORDSET',\n    'JSON_TYPEOF',\n    'ROW_TO_JSON',\n    'TO_JSON',\n    'TO_JSONB',\n    'TO_TIMESTAMP',\n    // https://www.postgresql.org/docs/14/functions-sequence.html\n    'CURRVAL',\n    'LASTVAL',\n    'NEXTVAL',\n    'SETVAL',\n    // https://www.postgresql.org/docs/14/functions-conditional.html\n    // 'CASE',\n    'COALESCE',\n    'GREATEST',\n    'LEAST',\n    'NULLIF',\n    // https://www.postgresql.org/docs/14/functions-array.html\n    'ARRAY_AGG',\n    'ARRAY_APPEND',\n    'ARRAY_CAT',\n    'ARRAY_DIMS',\n    'ARRAY_FILL',\n    'ARRAY_LENGTH',\n    'ARRAY_LOWER',\n    'ARRAY_NDIMS',\n    'ARRAY_POSITION',\n    'ARRAY_POSITIONS',\n    'ARRAY_PREPEND',\n    'ARRAY_REMOVE',\n    'ARRAY_REPLACE',\n    'ARRAY_TO_STRING',\n    'ARRAY_UPPER',\n    'CARDINALITY',\n    'STRING_TO_ARRAY',\n    'TRIM_ARRAY',\n    'UNNEST',\n    // https://www.postgresql.org/docs/14/functions-range.html\n    'ISEMPTY',\n    'LOWER',\n    'LOWER_INC',\n    'LOWER_INF',\n    'MULTIRANGE',\n    'RANGE_MERGE',\n    'UPPER',\n    'UPPER_INC',\n    'UPPER_INF',\n    // https://www.postgresql.org/docs/14/functions-aggregate.html\n    // 'ANY',\n    'ARRAY_AGG',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'COALESCE',\n    'CORR',\n    'COUNT',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'EVERY',\n    'GROUPING',\n    'JSONB_AGG',\n    'JSONB_OBJECT_AGG',\n    'JSON_AGG',\n    'JSON_OBJECT_AGG',\n    'MAX',\n    'MIN',\n    'MODE',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'RANGE_AGG',\n    'RANGE_INTERSECT_AGG',\n    'RANK',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    // 'SOME',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRING_AGG',\n    'SUM',\n    'TO_JSON',\n    'TO_JSONB',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'XMLAGG',\n    // https://www.postgresql.org/docs/14/functions-window.html\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'ROW_NUMBER',\n    // https://www.postgresql.org/docs/14/functions-srf.html\n    'GENERATE_SERIES',\n    'GENERATE_SUBSCRIPTS',\n    // https://www.postgresql.org/docs/14/functions-info.html\n    'ACLDEFAULT',\n    'ACLEXPLODE',\n    'COL_DESCRIPTION',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_QUERY',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_USER',\n    'FORMAT_TYPE',\n    'HAS_ANY_COLUMN_PRIVILEGE',\n    'HAS_COLUMN_PRIVILEGE',\n    'HAS_DATABASE_PRIVILEGE',\n    'HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE',\n    'HAS_FUNCTION_PRIVILEGE',\n    'HAS_LANGUAGE_PRIVILEGE',\n    'HAS_SCHEMA_PRIVILEGE',\n    'HAS_SEQUENCE_PRIVILEGE',\n    'HAS_SERVER_PRIVILEGE',\n    'HAS_TABLESPACE_PRIVILEGE',\n    'HAS_TABLE_PRIVILEGE',\n    'HAS_TYPE_PRIVILEGE',\n    'INET_CLIENT_ADDR',\n    'INET_CLIENT_PORT',\n    'INET_SERVER_ADDR',\n    'INET_SERVER_PORT',\n    'MAKEACLITEM',\n    'OBJ_DESCRIPTION',\n    'PG_BACKEND_PID',\n    'PG_BLOCKING_PIDS',\n    'PG_COLLATION_IS_VISIBLE',\n    'PG_CONF_LOAD_TIME',\n    'PG_CONTROL_CHECKPOINT',\n    'PG_CONTROL_INIT',\n    'PG_CONTROL_SYSTEM',\n    'PG_CONVERSION_IS_VISIBLE',\n    'PG_CURRENT_LOGFILE',\n    'PG_CURRENT_SNAPSHOT',\n    'PG_CURRENT_XACT_ID',\n    'PG_CURRENT_XACT_ID_IF_ASSIGNED',\n    'PG_DESCRIBE_OBJECT',\n    'PG_FUNCTION_IS_VISIBLE',\n    'PG_GET_CATALOG_FOREIGN_KEYS',\n    'PG_GET_CONSTRAINTDEF',\n    'PG_GET_EXPR',\n    'PG_GET_FUNCTIONDEF',\n    'PG_GET_FUNCTION_ARGUMENTS',\n    'PG_GET_FUNCTION_IDENTITY_ARGUMENTS',\n    'PG_GET_FUNCTION_RESULT',\n    'PG_GET_INDEXDEF',\n    'PG_GET_KEYWORDS',\n    'PG_GET_OBJECT_ADDRESS',\n    'PG_GET_OWNED_SEQUENCE',\n    'PG_GET_RULEDEF',\n    'PG_GET_SERIAL_SEQUENCE',\n    'PG_GET_STATISTICSOBJDEF',\n    'PG_GET_TRIGGERDEF',\n    'PG_GET_USERBYID',\n    'PG_GET_VIEWDEF',\n    'PG_HAS_ROLE',\n    'PG_IDENTIFY_OBJECT',\n    'PG_IDENTIFY_OBJECT_AS_ADDRESS',\n    'PG_INDEXAM_HAS_PROPERTY',\n    'PG_INDEX_COLUMN_HAS_PROPERTY',\n    'PG_INDEX_HAS_PROPERTY',\n    'PG_IS_OTHER_TEMP_SCHEMA',\n    'PG_JIT_AVAILABLE',\n    'PG_LAST_COMMITTED_XACT',\n    'PG_LISTENING_CHANNELS',\n    'PG_MY_TEMP_SCHEMA',\n    'PG_NOTIFICATION_QUEUE_USAGE',\n    'PG_OPCLASS_IS_VISIBLE',\n    'PG_OPERATOR_IS_VISIBLE',\n    'PG_OPFAMILY_IS_VISIBLE',\n    'PG_OPTIONS_TO_TABLE',\n    'PG_POSTMASTER_START_TIME',\n    'PG_SAFE_SNAPSHOT_BLOCKING_PIDS',\n    'PG_SNAPSHOT_XIP',\n    'PG_SNAPSHOT_XMAX',\n    'PG_SNAPSHOT_XMIN',\n    'PG_STATISTICS_OBJ_IS_VISIBLE',\n    'PG_TABLESPACE_DATABASES',\n    'PG_TABLESPACE_LOCATION',\n    'PG_TABLE_IS_VISIBLE',\n    'PG_TRIGGER_DEPTH',\n    'PG_TS_CONFIG_IS_VISIBLE',\n    'PG_TS_DICT_IS_VISIBLE',\n    'PG_TS_PARSER_IS_VISIBLE',\n    'PG_TS_TEMPLATE_IS_VISIBLE',\n    'PG_TYPEOF',\n    'PG_TYPE_IS_VISIBLE',\n    'PG_VISIBLE_IN_SNAPSHOT',\n    'PG_XACT_COMMIT_TIMESTAMP',\n    'PG_XACT_COMMIT_TIMESTAMP_ORIGIN',\n    'PG_XACT_STATUS',\n    'PQSERVERVERSION',\n    'ROW_SECURITY_ACTIVE',\n    'SESSION_USER',\n    'SHOBJ_DESCRIPTION',\n    'TO_REGCLASS',\n    'TO_REGCOLLATION',\n    'TO_REGNAMESPACE',\n    'TO_REGOPER',\n    'TO_REGOPERATOR',\n    'TO_REGPROC',\n    'TO_REGPROCEDURE',\n    'TO_REGROLE',\n    'TO_REGTYPE',\n    'TXID_CURRENT',\n    'TXID_CURRENT_IF_ASSIGNED',\n    'TXID_CURRENT_SNAPSHOT',\n    'TXID_SNAPSHOT_XIP',\n    'TXID_SNAPSHOT_XMAX',\n    'TXID_SNAPSHOT_XMIN',\n    'TXID_STATUS',\n    'TXID_VISIBLE_IN_SNAPSHOT',\n    'USER',\n    'VERSION',\n    // https://www.postgresql.org/docs/14/functions-admin.html\n    'BRIN_DESUMMARIZE_RANGE',\n    'BRIN_SUMMARIZE_NEW_VALUES',\n    'BRIN_SUMMARIZE_RANGE',\n    'CONVERT_FROM',\n    'CURRENT_SETTING',\n    'GIN_CLEAN_PENDING_LIST',\n    'PG_ADVISORY_LOCK',\n    'PG_ADVISORY_LOCK_SHARED',\n    'PG_ADVISORY_UNLOCK',\n    'PG_ADVISORY_UNLOCK_ALL',\n    'PG_ADVISORY_UNLOCK_SHARED',\n    'PG_ADVISORY_XACT_LOCK',\n    'PG_ADVISORY_XACT_LOCK_SHARED',\n    'PG_BACKUP_START_TIME',\n    'PG_CANCEL_BACKEND',\n    'PG_COLLATION_ACTUAL_VERSION',\n    'PG_COLUMN_COMPRESSION',\n    'PG_COLUMN_SIZE',\n    'PG_COPY_LOGICAL_REPLICATION_SLOT',\n    'PG_COPY_PHYSICAL_REPLICATION_SLOT',\n    'PG_CREATE_LOGICAL_REPLICATION_SLOT',\n    'PG_CREATE_PHYSICAL_REPLICATION_SLOT',\n    'PG_CREATE_RESTORE_POINT',\n    'PG_CURRENT_WAL_FLUSH_LSN',\n    'PG_CURRENT_WAL_INSERT_LSN',\n    'PG_CURRENT_WAL_LSN',\n    'PG_DATABASE_SIZE',\n    'PG_DROP_REPLICATION_SLOT',\n    'PG_EXPORT_SNAPSHOT',\n    'PG_FILENODE_RELATION',\n    'PG_GET_WAL_REPLAY_PAUSE_STATE',\n    'PG_IMPORT_SYSTEM_COLLATIONS',\n    'PG_INDEXES_SIZE',\n    'PG_IS_IN_BACKUP',\n    'PG_IS_IN_RECOVERY',\n    'PG_IS_WAL_REPLAY_PAUSED',\n    'PG_LAST_WAL_RECEIVE_LSN',\n    'PG_LAST_WAL_REPLAY_LSN',\n    'PG_LAST_XACT_REPLAY_TIMESTAMP',\n    'PG_LOGICAL_EMIT_MESSAGE',\n    'PG_LOGICAL_SLOT_GET_BINARY_CHANGES',\n    'PG_LOGICAL_SLOT_GET_CHANGES',\n    'PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES',\n    'PG_LOGICAL_SLOT_PEEK_CHANGES',\n    'PG_LOG_BACKEND_MEMORY_CONTEXTS',\n    'PG_LS_ARCHIVE_STATUSDIR',\n    'PG_LS_DIR',\n    'PG_LS_LOGDIR',\n    'PG_LS_TMPDIR',\n    'PG_LS_WALDIR',\n    'PG_PARTITION_ANCESTORS',\n    'PG_PARTITION_ROOT',\n    'PG_PARTITION_TREE',\n    'PG_PROMOTE',\n    'PG_READ_BINARY_FILE',\n    'PG_READ_FILE',\n    'PG_RELATION_FILENODE',\n    'PG_RELATION_FILEPATH',\n    'PG_RELATION_SIZE',\n    'PG_RELOAD_CONF',\n    'PG_REPLICATION_ORIGIN_ADVANCE',\n    'PG_REPLICATION_ORIGIN_CREATE',\n    'PG_REPLICATION_ORIGIN_DROP',\n    'PG_REPLICATION_ORIGIN_OID',\n    'PG_REPLICATION_ORIGIN_PROGRESS',\n    'PG_REPLICATION_ORIGIN_SESSION_IS_SETUP',\n    'PG_REPLICATION_ORIGIN_SESSION_PROGRESS',\n    'PG_REPLICATION_ORIGIN_SESSION_RESET',\n    'PG_REPLICATION_ORIGIN_SESSION_SETUP',\n    'PG_REPLICATION_ORIGIN_XACT_RESET',\n    'PG_REPLICATION_ORIGIN_XACT_SETUP',\n    'PG_REPLICATION_SLOT_ADVANCE',\n    'PG_ROTATE_LOGFILE',\n    'PG_SIZE_BYTES',\n    'PG_SIZE_PRETTY',\n    'PG_START_BACKUP',\n    'PG_STAT_FILE',\n    'PG_STOP_BACKUP',\n    'PG_SWITCH_WAL',\n    'PG_TABLESPACE_SIZE',\n    'PG_TABLE_SIZE',\n    'PG_TERMINATE_BACKEND',\n    'PG_TOTAL_RELATION_SIZE',\n    'PG_TRY_ADVISORY_LOCK',\n    'PG_TRY_ADVISORY_LOCK_SHARED',\n    'PG_TRY_ADVISORY_XACT_LOCK',\n    'PG_TRY_ADVISORY_XACT_LOCK_SHARED',\n    'PG_WALFILE_NAME',\n    'PG_WALFILE_NAME_OFFSET',\n    'PG_WAL_LSN_DIFF',\n    'PG_WAL_REPLAY_PAUSE',\n    'PG_WAL_REPLAY_RESUME',\n    'SET_CONFIG',\n    // https://www.postgresql.org/docs/14/functions-trigger.html\n    'SUPPRESS_REDUNDANT_UPDATES_TRIGGER',\n    'TSVECTOR_UPDATE_TRIGGER',\n    'TSVECTOR_UPDATE_TRIGGER_COLUMN',\n    // https://www.postgresql.org/docs/14/functions-event-triggers.html\n    'PG_EVENT_TRIGGER_DDL_COMMANDS',\n    'PG_EVENT_TRIGGER_DROPPED_OBJECTS',\n    'PG_EVENT_TRIGGER_TABLE_REWRITE_OID',\n    'PG_EVENT_TRIGGER_TABLE_REWRITE_REASON',\n    'PG_GET_OBJECT_ADDRESS',\n    // https://www.postgresql.org/docs/14/functions-statistics.html\n    'PG_MCV_LIST_ITEMS',\n    // cast\n    'CAST',\n];\n//# sourceMappingURL=postgresql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './postgresql.functions.js';\nimport { dataTypes, keywords } from './postgresql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL | DISTINCT]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    'DEFAULT VALUES',\n    // - update:\n    'SET',\n    // other\n    'RETURNING',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create\n    'CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW',\n    'CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [ONLY]',\n    'WHERE CURRENT OF',\n    // - insert:\n    'ON CONFLICT',\n    // - delete:\n    'DELETE FROM [ONLY]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS] [ONLY]',\n    'ALTER TABLE ALL IN TABLESPACE',\n    'RENAME [COLUMN]',\n    'RENAME TO',\n    'ADD [COLUMN] [IF NOT EXISTS]',\n    'DROP [COLUMN] [IF EXISTS]',\n    'ALTER [COLUMN]',\n    'SET DATA TYPE',\n    '{SET | DROP} DEFAULT',\n    '{SET | DROP} NOT NULL',\n    // - truncate:\n    'TRUNCATE [TABLE] [ONLY]',\n    // other\n    'SET SCHEMA',\n    'AFTER',\n    // https://www.postgresql.org/docs/14/sql-commands.html\n    'ABORT',\n    'ALTER AGGREGATE',\n    'ALTER COLLATION',\n    'ALTER CONVERSION',\n    'ALTER DATABASE',\n    'ALTER DEFAULT PRIVILEGES',\n    'ALTER DOMAIN',\n    'ALTER EVENT TRIGGER',\n    'ALTER EXTENSION',\n    'ALTER FOREIGN DATA WRAPPER',\n    'ALTER FOREIGN TABLE',\n    'ALTER FUNCTION',\n    'ALTER GROUP',\n    'ALTER INDEX',\n    'ALTER LANGUAGE',\n    'ALTER LARGE OBJECT',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER OPERATOR',\n    'ALTER OPERATOR CLASS',\n    'ALTER OPERATOR FAMILY',\n    'ALTER POLICY',\n    'ALTER PROCEDURE',\n    'ALTER PUBLICATION',\n    'ALTER ROLE',\n    'ALTER ROUTINE',\n    'ALTER RULE',\n    'ALTER SCHEMA',\n    'ALTER SEQUENCE',\n    'ALTER SERVER',\n    'ALTER STATISTICS',\n    'ALTER SUBSCRIPTION',\n    'ALTER SYSTEM',\n    'ALTER TABLESPACE',\n    'ALTER TEXT SEARCH CONFIGURATION',\n    'ALTER TEXT SEARCH DICTIONARY',\n    'ALTER TEXT SEARCH PARSER',\n    'ALTER TEXT SEARCH TEMPLATE',\n    'ALTER TRIGGER',\n    'ALTER TYPE',\n    'ALTER USER',\n    'ALTER USER MAPPING',\n    'ALTER VIEW',\n    'ANALYZE',\n    'BEGIN',\n    'CALL',\n    'CHECKPOINT',\n    'CLOSE',\n    'CLUSTER',\n    'COMMIT',\n    'COMMIT PREPARED',\n    'COPY',\n    'CREATE ACCESS METHOD',\n    'CREATE [OR REPLACE] AGGREGATE',\n    'CREATE CAST',\n    'CREATE COLLATION',\n    'CREATE [DEFAULT] CONVERSION',\n    'CREATE DATABASE',\n    'CREATE DOMAIN',\n    'CREATE EVENT TRIGGER',\n    'CREATE EXTENSION',\n    'CREATE FOREIGN DATA WRAPPER',\n    'CREATE FOREIGN TABLE',\n    'CREATE [OR REPLACE] FUNCTION',\n    'CREATE GROUP',\n    'CREATE [UNIQUE] INDEX',\n    'CREATE [OR REPLACE] [TRUSTED] [PROCEDURAL] LANGUAGE',\n    'CREATE OPERATOR',\n    'CREATE OPERATOR CLASS',\n    'CREATE OPERATOR FAMILY',\n    'CREATE POLICY',\n    'CREATE [OR REPLACE] PROCEDURE',\n    'CREATE PUBLICATION',\n    'CREATE ROLE',\n    'CREATE [OR REPLACE] RULE',\n    'CREATE SCHEMA [AUTHORIZATION]',\n    'CREATE [TEMPORARY | TEMP | UNLOGGED] SEQUENCE',\n    'CREATE SERVER',\n    'CREATE STATISTICS',\n    'CREATE SUBSCRIPTION',\n    'CREATE TABLESPACE',\n    'CREATE TEXT SEARCH CONFIGURATION',\n    'CREATE TEXT SEARCH DICTIONARY',\n    'CREATE TEXT SEARCH PARSER',\n    'CREATE TEXT SEARCH TEMPLATE',\n    'CREATE [OR REPLACE] TRANSFORM',\n    'CREATE [OR REPLACE] [CONSTRAINT] TRIGGER',\n    'CREATE TYPE',\n    'CREATE USER',\n    'CREATE USER MAPPING',\n    'DEALLOCATE',\n    'DECLARE',\n    'DISCARD',\n    'DROP ACCESS METHOD',\n    'DROP AGGREGATE',\n    'DROP CAST',\n    'DROP COLLATION',\n    'DROP CONVERSION',\n    'DROP DATABASE',\n    'DROP DOMAIN',\n    'DROP EVENT TRIGGER',\n    'DROP EXTENSION',\n    'DROP FOREIGN DATA WRAPPER',\n    'DROP FOREIGN TABLE',\n    'DROP FUNCTION',\n    'DROP GROUP',\n    'DROP IDENTITY',\n    'DROP INDEX',\n    'DROP LANGUAGE',\n    'DROP MATERIALIZED VIEW [IF EXISTS]',\n    'DROP OPERATOR',\n    'DROP OPERATOR CLASS',\n    'DROP OPERATOR FAMILY',\n    'DROP OWNED',\n    'DROP POLICY',\n    'DROP PROCEDURE',\n    'DROP PUBLICATION',\n    'DROP ROLE',\n    'DROP ROUTINE',\n    'DROP RULE',\n    'DROP SCHEMA',\n    'DROP SEQUENCE',\n    'DROP SERVER',\n    'DROP STATISTICS',\n    'DROP SUBSCRIPTION',\n    'DROP TABLESPACE',\n    'DROP TEXT SEARCH CONFIGURATION',\n    'DROP TEXT SEARCH DICTIONARY',\n    'DROP TEXT SEARCH PARSER',\n    'DROP TEXT SEARCH TEMPLATE',\n    'DROP TRANSFORM',\n    'DROP TRIGGER',\n    'DROP TYPE',\n    'DROP USER',\n    'DROP USER MAPPING',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FETCH',\n    'GRANT',\n    'IMPORT FOREIGN SCHEMA',\n    'LISTEN',\n    'LOAD',\n    'LOCK',\n    'MOVE',\n    'NOTIFY',\n    'OVERRIDING SYSTEM VALUE',\n    'PREPARE',\n    'PREPARE TRANSACTION',\n    'REASSIGN OWNED',\n    'REFRESH MATERIALIZED VIEW',\n    'REINDEX',\n    'RELEASE SAVEPOINT',\n    'RESET [ALL|ROLE|SESSION AUTHORIZATION]',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK PREPARED',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SECURITY LABEL',\n    'SELECT INTO',\n    'SET CONSTRAINTS',\n    'SET ROLE',\n    'SET SESSION AUTHORIZATION',\n    'SET TRANSACTION',\n    'SHOW',\n    'START TRANSACTION',\n    'UNLISTEN',\n    'VACUUM',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'PRIMARY KEY',\n    'GENERATED {ALWAYS | BY DEFAULT} AS IDENTITY',\n    'ON {UPDATE | DELETE} [NO ACTION | RESTRICT | CASCADE | SET NULL | SET DEFAULT]',\n    'DO {NOTHING | UPDATE}',\n    'AS MATERIALIZED',\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    // https://www.postgresql.org/docs/current/datatype-datetime.html\n    '[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE',\n    // comparison operator\n    'IS [NOT] DISTINCT FROM',\n    'NULLS {FIRST | LAST}',\n    'WITH ORDINALITY',\n]);\n// https://www.postgresql.org/docs/14/index.html\nexport const postgresql = {\n    name: 'postgresql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        extraParens: ['[]'],\n        stringTypes: [\n            '$$',\n            { quote: \"''-qq\", prefixes: ['U&'] },\n            { quote: \"''-qq-bs\", prefixes: ['E'], requirePrefix: true },\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: [{ quote: '\"\"-qq', prefixes: ['U&'] }],\n        identChars: { rest: '$' },\n        paramTypes: { numbered: ['$'] },\n        operators: [\n            // Arithmetic\n            '%',\n            '^',\n            '|/',\n            '||/',\n            '@',\n            // Assignment\n            ':=',\n            // Bitwise\n            '&',\n            '|',\n            '#',\n            '~',\n            '<<',\n            '>>',\n            // Byte comparison\n            '~>~',\n            '~<~',\n            '~>=~',\n            '~<=~',\n            // Geometric\n            '@-@',\n            '@@',\n            '##',\n            '<->',\n            '&&',\n            '&<',\n            '&>',\n            '<<|',\n            '&<|',\n            '|>>',\n            '|&>',\n            '<^',\n            '^>',\n            '?#',\n            '?-',\n            '?|',\n            '?-|',\n            '?||',\n            '@>',\n            '<@',\n            '~=',\n            // JSON\n            '?',\n            '@?',\n            '?&',\n            '->',\n            '->>',\n            '#>',\n            '#>>',\n            '#-',\n            // Named function params\n            '=>',\n            // Network address\n            '>>=',\n            '<<=',\n            // Pattern matching\n            '~~',\n            '~~*',\n            '!~~',\n            '!~~*',\n            // POSIX RegExp\n            '~',\n            '~*',\n            '!~',\n            '!~*',\n            // Range/multirange\n            '-|-',\n            // String concatenation\n            '||',\n            // Text search\n            '@@@',\n            '!!',\n            '^@',\n            // Trigram/trigraph\n            '<%',\n            '%>',\n            '<<%',\n            '%>>',\n            '<<->',\n            '<->>',\n            '<<<->',\n            '<->>>',\n            // Type cast\n            '::',\n            ':',\n            // Custom operators defined by pgvector extension\n            // https://github.com/pgvector/pgvector#querying\n            '<#>',\n            '<=>',\n            '<+>',\n            '<~>',\n            '<%>',\n        ],\n        operatorKeyword: true,\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::', ':'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=postgresql.formatter.js.map","export const keywords = [\n    // https://www.postgresql.org/docs/14/sql-keywords-appendix.html\n    'ALL',\n    'ANALYSE',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'ASYMMETRIC',\n    'AUTHORIZATION',\n    'BETWEEN',\n    'BINARY',\n    'BOTH',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLLATE',\n    'COLLATION',\n    'COLUMN',\n    'CONCURRENTLY',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_CATALOG',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'DAY',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DESC',\n    'DISTINCT',\n    'DO',\n    'ELSE',\n    'END',\n    'EXCEPT',\n    'EXISTS',\n    'FALSE',\n    'FETCH',\n    'FILTER',\n    'FOR',\n    'FOREIGN',\n    'FREEZE',\n    'FROM',\n    'FULL',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HOUR',\n    'ILIKE',\n    'IN',\n    'INITIALLY',\n    'INNER',\n    'INOUT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'JOIN',\n    'LATERAL',\n    'LEADING',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'MINUTE',\n    'MONTH',\n    'NATURAL',\n    'NOT',\n    'NOTNULL',\n    'NULL',\n    'NULLIF',\n    'OFFSET',\n    'ON',\n    'ONLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERLAPS',\n    'PLACING',\n    'PRIMARY',\n    'REFERENCES',\n    'RETURNING',\n    'RIGHT',\n    'ROW',\n    'SECOND',\n    'SELECT',\n    'SESSION_USER',\n    'SIMILAR',\n    'SOME',\n    'SYMMETRIC',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRUE',\n    'UNION',\n    'UNIQUE',\n    'USER',\n    'USING',\n    'VALUES',\n    'VARIADIC',\n    'VERBOSE',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WITHOUT',\n    'YEAR', // requires AS\n];\nexport const dataTypes = [\n    // https://www.postgresql.org/docs/current/datatype.html\n    'ARRAY',\n    'BIGINT',\n    'BIT',\n    'BIT VARYING',\n    'BOOL',\n    'BOOLEAN',\n    'CHAR',\n    'CHARACTER',\n    'CHARACTER VARYING',\n    'DECIMAL',\n    'DEC',\n    'DOUBLE',\n    'ENUM',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'NCHAR',\n    'NUMERIC',\n    'JSON',\n    'JSONB',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TIMESTAMPTZ',\n    'VARCHAR',\n    'XML',\n    'ZONE',\n];\n//# sourceMappingURL=postgresql.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './redshift.functions.js';\nimport { dataTypes, keywords } from './redshift.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'QUALIFY',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE | MATERIALIZED] VIEW',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ALTER TABLE APPEND',\n    'ADD [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME TO',\n    'RENAME COLUMN',\n    'ALTER COLUMN',\n    'TYPE',\n    'ENCODE',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_SQL_commands.html\n    'ABORT',\n    'ALTER DATABASE',\n    'ALTER DATASHARE',\n    'ALTER DEFAULT PRIVILEGES',\n    'ALTER GROUP',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER PROCEDURE',\n    'ALTER SCHEMA',\n    'ALTER USER',\n    'ANALYSE',\n    'ANALYZE',\n    'ANALYSE COMPRESSION',\n    'ANALYZE COMPRESSION',\n    'BEGIN',\n    'CALL',\n    'CANCEL',\n    'CLOSE',\n    'COMMIT',\n    'COPY',\n    'CREATE DATABASE',\n    'CREATE DATASHARE',\n    'CREATE EXTERNAL FUNCTION',\n    'CREATE EXTERNAL SCHEMA',\n    'CREATE EXTERNAL TABLE',\n    'CREATE FUNCTION',\n    'CREATE GROUP',\n    'CREATE LIBRARY',\n    'CREATE MODEL',\n    'CREATE PROCEDURE',\n    'CREATE SCHEMA',\n    'CREATE USER',\n    'DEALLOCATE',\n    'DECLARE',\n    'DESC DATASHARE',\n    'DROP DATABASE',\n    'DROP DATASHARE',\n    'DROP FUNCTION',\n    'DROP GROUP',\n    'DROP LIBRARY',\n    'DROP MODEL',\n    'DROP MATERIALIZED VIEW',\n    'DROP PROCEDURE',\n    'DROP SCHEMA',\n    'DROP USER',\n    'DROP VIEW',\n    'DROP',\n    'EXECUTE',\n    'EXPLAIN',\n    'FETCH',\n    'GRANT',\n    'LOCK',\n    'PREPARE',\n    'REFRESH MATERIALIZED VIEW',\n    'RESET',\n    'REVOKE',\n    'ROLLBACK',\n    'SELECT INTO',\n    'SET SESSION AUTHORIZATION',\n    'SET SESSION CHARACTERISTICS',\n    'SHOW',\n    'SHOW EXTERNAL TABLE',\n    'SHOW MODEL',\n    'SHOW DATASHARES',\n    'SHOW PROCEDURE',\n    'SHOW TABLE',\n    'SHOW VIEW',\n    'START TRANSACTION',\n    'UNLOAD',\n    'VACUUM',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT', 'MINUS']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n    'NULL AS',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html\n    'DATA CATALOG',\n    'HIVE METASTORE',\n    // in window specifications\n    '{ROWS | RANGE} BETWEEN',\n]);\n// https://docs.aws.amazon.com/redshift/latest/dg/cm_chap_SQLCommandRef.html\nexport const redshift = {\n    name: 'redshift',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\"''-qq\"],\n        identTypes: [`\"\"-qq`],\n        identChars: { first: '#' },\n        paramTypes: { numbered: ['$'] },\n        operators: [\n            '^',\n            '%',\n            '@',\n            '|/',\n            '||/',\n            '&',\n            '|',\n            // '#', conflicts with first char of identifier\n            '~',\n            '<<',\n            '>>',\n            '||',\n            '::',\n        ],\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=redshift.formatter.js.map","export const keywords = [\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html\n    'AES128',\n    'AES256',\n    'ALL',\n    'ALLOWOVERWRITE',\n    'ANY',\n    'AS',\n    'ASC',\n    'AUTHORIZATION',\n    'BACKUP',\n    'BETWEEN',\n    'BINARY',\n    'BOTH',\n    'CHECK',\n    'COLUMN',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DEFLATE',\n    'DEFRAG',\n    'DESC',\n    'DISABLE',\n    'DISTINCT',\n    'DO',\n    'ENABLE',\n    'ENCODE',\n    'ENCRYPT',\n    'ENCRYPTION',\n    'EXPLICIT',\n    'FALSE',\n    'FOR',\n    'FOREIGN',\n    'FREEZE',\n    'FROM',\n    'FULL',\n    'GLOBALDICT256',\n    'GLOBALDICT64K',\n    'GROUP',\n    'IDENTITY',\n    'IGNORE',\n    'ILIKE',\n    'IN',\n    'INITIALLY',\n    'INNER',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'LANGUAGE',\n    'LEADING',\n    'LIKE',\n    'LIMIT',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LUN',\n    'LUNS',\n    'MINUS',\n    'NATURAL',\n    'NEW',\n    'NOT',\n    'NOTNULL',\n    'NULL',\n    'NULLS',\n    'OFF',\n    'OFFLINE',\n    'OFFSET',\n    'OID',\n    'OLD',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'ORDER',\n    'OUTER',\n    'OVERLAPS',\n    'PARALLEL',\n    'PARTITION',\n    'PERCENT',\n    'PERMISSIONS',\n    'PLACING',\n    'PRIMARY',\n    'RECOVER',\n    'REFERENCES',\n    'REJECTLOG',\n    'RESORT',\n    'RESPECT',\n    'RESTORE',\n    'SIMILAR',\n    'SNAPSHOT',\n    'SOME',\n    'SYSTEM',\n    'TABLE',\n    'TAG',\n    'TDES',\n    'THEN',\n    'TIMESTAMP',\n    'TO',\n    'TOP',\n    'TRAILING',\n    'TRUE',\n    'UNIQUE',\n    'USING',\n    'VERBOSE',\n    'WALLET',\n    'WITHOUT',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-conversion.html\n    'ACCEPTANYDATE',\n    'ACCEPTINVCHARS',\n    'BLANKSASNULL',\n    'DATEFORMAT',\n    'EMPTYASNULL',\n    'ENCODING',\n    'ESCAPE',\n    'EXPLICIT_IDS',\n    'FILLRECORD',\n    'IGNOREBLANKLINES',\n    'IGNOREHEADER',\n    'REMOVEQUOTES',\n    'ROUNDEC',\n    'TIMEFORMAT',\n    'TRIMBLANKS',\n    'TRUNCATECOLUMNS',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-load.html\n    'COMPROWS',\n    'COMPUPDATE',\n    'MAXERROR',\n    'NOLOAD',\n    'STATUPDATE',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-data-format.html\n    'FORMAT',\n    'CSV',\n    'DELIMITER',\n    'FIXEDWIDTH',\n    'SHAPEFILE',\n    'AVRO',\n    'JSON',\n    'PARQUET',\n    'ORC',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-authorization.html\n    'ACCESS_KEY_ID',\n    'CREDENTIALS',\n    'ENCRYPTED',\n    'IAM_ROLE',\n    'MASTER_SYMMETRIC_KEY',\n    'SECRET_ACCESS_KEY',\n    'SESSION_TOKEN',\n    // https://docs.aws.amazon.com/redshift/latest/dg/copy-parameters-file-compression.html\n    'BZIP2',\n    'GZIP',\n    'LZOP',\n    'ZSTD',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_COPY-alphabetical-parm-list.html\n    'MANIFEST',\n    'READRATIO',\n    'REGION',\n    'SSH',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html\n    'RAW',\n    'AZ64',\n    'BYTEDICT',\n    'DELTA',\n    'DELTA32K',\n    'LZO',\n    'MOSTLY8',\n    'MOSTLY16',\n    'MOSTLY32',\n    'RUNLENGTH',\n    'TEXT255',\n    'TEXT32K',\n    // misc\n    // CREATE EXTERNAL SCHEMA (https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_EXTERNAL_SCHEMA.html)\n    'CATALOG_ROLE',\n    'SECRET_ARN',\n    'EXTERNAL',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_choosing_dist_sort.html\n    'AUTO',\n    'EVEN',\n    'KEY',\n    'PREDICATE',\n    // unknown\n    'COMPRESSION',\n    /**\n     * Other keywords not included:\n     * STL: https://docs.aws.amazon.com/redshift/latest/dg/c_intro_STL_tables.html\n     * SVCS: https://docs.aws.amazon.com/redshift/latest/dg/svcs_views.html\n     * SVL: https://docs.aws.amazon.com/redshift/latest/dg/svl_views.html\n     * SVV: https://docs.aws.amazon.com/redshift/latest/dg/svv_views.html\n     */\n];\nexport const dataTypes = [\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_Character_types.html#r_Character_types-text-and-bpchar-types\n    'ARRAY',\n    'BIGINT',\n    'BPCHAR',\n    'CHAR',\n    'CHARACTER VARYING',\n    'CHARACTER',\n    'DECIMAL',\n    'INT',\n    'INT2',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'NCHAR',\n    'NUMERIC',\n    'NVARCHAR',\n    'SMALLINT',\n    'TEXT',\n    'VARBYTE',\n    'VARCHAR',\n];\n//# sourceMappingURL=redshift.keywords.js.map","export const functions = [\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Aggregate_Functions.html\n    'ANY_VALUE',\n    'APPROXIMATE PERCENTILE_DISC',\n    'AVG',\n    'COUNT',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'PERCENTILE_CONT',\n    'STDDEV_SAMP',\n    'STDDEV_POP',\n    'SUM',\n    'VAR_SAMP',\n    'VAR_POP',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Array_Functions.html\n    'array',\n    'array_concat',\n    'array_flatten',\n    'get_array_length',\n    'split_to_array',\n    'subarray',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_bitwise_aggregate_functions.html\n    'BIT_AND',\n    'BIT_OR',\n    'BOOL_AND',\n    'BOOL_OR',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_conditional_expressions.html\n    'COALESCE',\n    'DECODE',\n    'GREATEST',\n    'LEAST',\n    'NVL',\n    'NVL2',\n    'NULLIF',\n    // https://docs.aws.amazon.com/redshift/latest/dg/Date_functions_header.html\n    'ADD_MONTHS',\n    'AT TIME ZONE',\n    'CONVERT_TIMEZONE',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATE_CMP',\n    'DATE_CMP_TIMESTAMP',\n    'DATE_CMP_TIMESTAMPTZ',\n    'DATE_PART_YEAR',\n    'DATEADD',\n    'DATEDIFF',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'EXTRACT',\n    'GETDATE',\n    'INTERVAL_CMP',\n    'LAST_DAY',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'SYSDATE',\n    'TIMEOFDAY',\n    'TIMESTAMP_CMP',\n    'TIMESTAMP_CMP_DATE',\n    'TIMESTAMP_CMP_TIMESTAMPTZ',\n    'TIMESTAMPTZ_CMP',\n    'TIMESTAMPTZ_CMP_DATE',\n    'TIMESTAMPTZ_CMP_TIMESTAMP',\n    'TIMEZONE',\n    'TO_TIMESTAMP',\n    'TRUNC',\n    // https://docs.aws.amazon.com/redshift/latest/dg/geospatial-functions.html\n    'AddBBox',\n    'DropBBox',\n    'GeometryType',\n    'ST_AddPoint',\n    'ST_Angle',\n    'ST_Area',\n    'ST_AsBinary',\n    'ST_AsEWKB',\n    'ST_AsEWKT',\n    'ST_AsGeoJSON',\n    'ST_AsText',\n    'ST_Azimuth',\n    'ST_Boundary',\n    'ST_Collect',\n    'ST_Contains',\n    'ST_ContainsProperly',\n    'ST_ConvexHull',\n    'ST_CoveredBy',\n    'ST_Covers',\n    'ST_Crosses',\n    'ST_Dimension',\n    'ST_Disjoint',\n    'ST_Distance',\n    'ST_DistanceSphere',\n    'ST_DWithin',\n    'ST_EndPoint',\n    'ST_Envelope',\n    'ST_Equals',\n    'ST_ExteriorRing',\n    'ST_Force2D',\n    'ST_Force3D',\n    'ST_Force3DM',\n    'ST_Force3DZ',\n    'ST_Force4D',\n    'ST_GeometryN',\n    'ST_GeometryType',\n    'ST_GeomFromEWKB',\n    'ST_GeomFromEWKT',\n    'ST_GeomFromText',\n    'ST_GeomFromWKB',\n    'ST_InteriorRingN',\n    'ST_Intersects',\n    'ST_IsPolygonCCW',\n    'ST_IsPolygonCW',\n    'ST_IsClosed',\n    'ST_IsCollection',\n    'ST_IsEmpty',\n    'ST_IsSimple',\n    'ST_IsValid',\n    'ST_Length',\n    'ST_LengthSphere',\n    'ST_Length2D',\n    'ST_LineFromMultiPoint',\n    'ST_LineInterpolatePoint',\n    'ST_M',\n    'ST_MakeEnvelope',\n    'ST_MakeLine',\n    'ST_MakePoint',\n    'ST_MakePolygon',\n    'ST_MemSize',\n    'ST_MMax',\n    'ST_MMin',\n    'ST_Multi',\n    'ST_NDims',\n    'ST_NPoints',\n    'ST_NRings',\n    'ST_NumGeometries',\n    'ST_NumInteriorRings',\n    'ST_NumPoints',\n    'ST_Perimeter',\n    'ST_Perimeter2D',\n    'ST_Point',\n    'ST_PointN',\n    'ST_Points',\n    'ST_Polygon',\n    'ST_RemovePoint',\n    'ST_Reverse',\n    'ST_SetPoint',\n    'ST_SetSRID',\n    'ST_Simplify',\n    'ST_SRID',\n    'ST_StartPoint',\n    'ST_Touches',\n    'ST_Within',\n    'ST_X',\n    'ST_XMax',\n    'ST_XMin',\n    'ST_Y',\n    'ST_YMax',\n    'ST_YMin',\n    'ST_Z',\n    'ST_ZMax',\n    'ST_ZMin',\n    'SupportsBBox',\n    // https://docs.aws.amazon.com/redshift/latest/dg/hash-functions.html\n    'CHECKSUM',\n    'FUNC_SHA1',\n    'FNV_HASH',\n    'MD5',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    // https://docs.aws.amazon.com/redshift/latest/dg/hyperloglog-functions.html\n    'HLL',\n    'HLL_CREATE_SKETCH',\n    'HLL_CARDINALITY',\n    'HLL_COMBINE',\n    // https://docs.aws.amazon.com/redshift/latest/dg/json-functions.html\n    'IS_VALID_JSON',\n    'IS_VALID_JSON_ARRAY',\n    'JSON_ARRAY_LENGTH',\n    'JSON_EXTRACT_ARRAY_ELEMENT_TEXT',\n    'JSON_EXTRACT_PATH_TEXT',\n    'JSON_PARSE',\n    'JSON_SERIALIZE',\n    // https://docs.aws.amazon.com/redshift/latest/dg/Math_functions.html\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'CBRT',\n    'CEILING',\n    'CEIL',\n    'COS',\n    'COT',\n    'DEGREES',\n    'DEXP',\n    'DLOG1',\n    'DLOG10',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'MOD',\n    'PI',\n    'POWER',\n    'RADIANS',\n    'RANDOM',\n    'ROUND',\n    'SIN',\n    'SIGN',\n    'SQRT',\n    'TAN',\n    'TO_HEX',\n    'TRUNC',\n    // https://docs.aws.amazon.com/redshift/latest/dg/ml-function.html\n    'EXPLAIN_MODEL',\n    // https://docs.aws.amazon.com/redshift/latest/dg/String_functions_header.html\n    'ASCII',\n    'BPCHARCMP',\n    'BTRIM',\n    'BTTEXT_PATTERN_CMP',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHARINDEX',\n    'CHR',\n    'COLLATE',\n    'CONCAT',\n    'CRC32',\n    'DIFFERENCE',\n    'INITCAP',\n    'LEFT',\n    'RIGHT',\n    'LEN',\n    'LENGTH',\n    'LOWER',\n    'LPAD',\n    'RPAD',\n    'LTRIM',\n    'OCTETINDEX',\n    'OCTET_LENGTH',\n    'POSITION',\n    'QUOTE_IDENT',\n    'QUOTE_LITERAL',\n    'REGEXP_COUNT',\n    'REGEXP_INSTR',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REPEAT',\n    'REPLACE',\n    'REPLICATE',\n    'REVERSE',\n    'RTRIM',\n    'SOUNDEX',\n    'SPLIT_PART',\n    'STRPOS',\n    'STRTOL',\n    'SUBSTRING',\n    'TEXTLEN',\n    'TRANSLATE',\n    'TRIM',\n    'UPPER',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Type_Info_Functions.html\n    'decimal_precision',\n    'decimal_scale',\n    'is_array',\n    'is_bigint',\n    'is_boolean',\n    'is_char',\n    'is_decimal',\n    'is_float',\n    'is_integer',\n    'is_object',\n    'is_scalar',\n    'is_smallint',\n    'is_varchar',\n    'json_typeof',\n    // https://docs.aws.amazon.com/redshift/latest/dg/c_Window_functions.html\n    'AVG',\n    'COUNT',\n    'CUME_DIST',\n    'DENSE_RANK',\n    'FIRST_VALUE',\n    'LAST_VALUE',\n    'LAG',\n    'LEAD',\n    'LISTAGG',\n    'MAX',\n    'MEDIAN',\n    'MIN',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'ROW_NUMBER',\n    'STDDEV_SAMP',\n    'STDDEV_POP',\n    'SUM',\n    'VAR_SAMP',\n    'VAR_POP',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_Data_type_formatting.html\n    'CAST',\n    'CONVERT',\n    'TO_CHAR',\n    'TO_DATE',\n    'TO_NUMBER',\n    'TEXT_TO_INT_ALT',\n    'TEXT_TO_NUMERIC_ALT',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_System_administration_functions.html\n    'CHANGE_QUERY_PRIORITY',\n    'CHANGE_SESSION_PRIORITY',\n    'CHANGE_USER_PRIORITY',\n    'CURRENT_SETTING',\n    'PG_CANCEL_BACKEND',\n    'PG_TERMINATE_BACKEND',\n    'REBOOT_CLUSTER',\n    'SET_CONFIG',\n    // https://docs.aws.amazon.com/redshift/latest/dg/r_System_information_functions.html\n    'CURRENT_AWS_ACCOUNT',\n    'CURRENT_DATABASE',\n    'CURRENT_NAMESPACE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_USER',\n    'CURRENT_USER_ID',\n    'HAS_ASSUMEROLE_PRIVILEGE',\n    'HAS_DATABASE_PRIVILEGE',\n    'HAS_SCHEMA_PRIVILEGE',\n    'HAS_TABLE_PRIVILEGE',\n    'PG_BACKEND_PID',\n    'PG_GET_COLS',\n    'PG_GET_GRANTEE_BY_IAM_ROLE',\n    'PG_GET_IAM_ROLE_BY_USER',\n    'PG_GET_LATE_BINDING_VIEW_COLS',\n    'PG_LAST_COPY_COUNT',\n    'PG_LAST_COPY_ID',\n    'PG_LAST_UNLOAD_ID',\n    'PG_LAST_QUERY_ID',\n    'PG_LAST_UNLOAD_COUNT',\n    'SESSION_USER',\n    'SLICE_NUM',\n    'USER',\n    'VERSION',\n];\n//# sourceMappingURL=redshift.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { EOF_TOKEN, isToken, TokenType } from '../../lexer/token.js';\nimport { dataTypes, keywords } from './spark.keywords.js';\nimport { functions } from './spark.functions.js';\n// http://spark.apache.org/docs/latest/sql-ref-syntax.html\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'SORT BY',\n    'CLUSTER BY',\n    'DISTRIBUTE BY',\n    'LIMIT',\n    // Data manipulation\n    // - insert:\n    'INSERT [INTO | OVERWRITE] [TABLE]',\n    'VALUES',\n    // - insert overwrite directory:\n    //   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-insert-overwrite-directory.html\n    'INSERT OVERWRITE [LOCAL] DIRECTORY',\n    // - load:\n    //   https://spark.apache.org/docs/latest/sql-ref-syntax-dml-load.html\n    'LOAD DATA [LOCAL] INPATH',\n    '[OVERWRITE] INTO TABLE',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [EXTERNAL] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD COLUMNS',\n    'DROP {COLUMN | COLUMNS}',\n    'RENAME TO',\n    'RENAME COLUMN',\n    'ALTER COLUMN',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'LATERAL VIEW',\n    'ALTER DATABASE',\n    'ALTER VIEW',\n    'CREATE DATABASE',\n    'CREATE FUNCTION',\n    'DROP DATABASE',\n    'DROP FUNCTION',\n    'DROP VIEW',\n    'REPAIR TABLE',\n    'USE DATABASE',\n    // Data Retrieval\n    'TABLESAMPLE',\n    'PIVOT',\n    'TRANSFORM',\n    'EXPLAIN',\n    // Auxiliary\n    'ADD FILE',\n    'ADD JAR',\n    'ANALYZE TABLE',\n    'CACHE TABLE',\n    'CLEAR CACHE',\n    'DESCRIBE DATABASE',\n    'DESCRIBE FUNCTION',\n    'DESCRIBE QUERY',\n    'DESCRIBE TABLE',\n    'LIST FILE',\n    'LIST JAR',\n    'REFRESH',\n    'REFRESH TABLE',\n    'REFRESH FUNCTION',\n    'RESET',\n    'SHOW COLUMNS',\n    'SHOW CREATE TABLE',\n    'SHOW DATABASES',\n    'SHOW FUNCTIONS',\n    'SHOW PARTITIONS',\n    'SHOW TABLE EXTENDED',\n    'SHOW TABLES',\n    'SHOW TBLPROPERTIES',\n    'SHOW VIEWS',\n    'UNCACHE TABLE',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    // non-standard-joins\n    '[LEFT] {ANTI | SEMI} JOIN',\n    'NATURAL [LEFT] {ANTI | SEMI} JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'CURRENT ROW',\n    '{ROWS | RANGE} BETWEEN',\n]);\n// http://spark.apache.org/docs/latest/sql-programming-guide.html\nexport const spark = {\n    name: 'spark',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        supportsXor: true,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        extraParens: ['[]'],\n        stringTypes: [\n            \"''-bs\",\n            '\"\"-bs',\n            { quote: \"''-raw\", prefixes: ['R', 'X'], requirePrefix: true },\n            { quote: '\"\"-raw', prefixes: ['R', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { allowFirstCharNumber: true },\n        variableTypes: [{ quote: '{}', prefixes: ['$'], requirePrefix: true }],\n        operators: ['%', '~', '^', '|', '&', '<=>', '==', '!', '||', '->'],\n        postProcess,\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\nfunction postProcess(tokens) {\n    return tokens.map((token, i) => {\n        const prevToken = tokens[i - 1] || EOF_TOKEN;\n        const nextToken = tokens[i + 1] || EOF_TOKEN;\n        // [WINDOW](...)\n        if (isToken.WINDOW(token) && nextToken.type === TokenType.OPEN_PAREN) {\n            // This is a function call, treat it as a reserved function name\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_FUNCTION_NAME });\n        }\n        // TODO: deprecate this once ITEMS is merged with COLLECTION\n        if (token.text === 'ITEMS' && token.type === TokenType.RESERVED_KEYWORD) {\n            if (!(prevToken.text === 'COLLECTION' && nextToken.text === 'TERMINATED')) {\n                // this is a word and not COLLECTION ITEMS\n                return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n            }\n        }\n        return token;\n    });\n}\n//# sourceMappingURL=spark.formatter.js.map","export const keywords = [\n    // https://deepkb.com/CO_000013/en/kb/IMPORT-fbfa59f0-2bf1-31fe-bb7b-0f9efe9932c6/spark-sql-keywords\n    'ADD',\n    'AFTER',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ANTI',\n    'ANY',\n    'ARCHIVE',\n    'AS',\n    'ASC',\n    'AT',\n    'AUTHORIZATION',\n    'BETWEEN',\n    'BOTH',\n    'BUCKET',\n    'BUCKETS',\n    'BY',\n    'CACHE',\n    'CASCADE',\n    'CAST',\n    'CHANGE',\n    'CHECK',\n    'CLEAR',\n    'CLUSTER',\n    'CLUSTERED',\n    'CODEGEN',\n    'COLLATE',\n    'COLLECTION',\n    'COLUMN',\n    'COLUMNS',\n    'COMMENT',\n    'COMMIT',\n    'COMPACT',\n    'COMPACTIONS',\n    'COMPUTE',\n    'CONCATENATE',\n    'CONSTRAINT',\n    'COST',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'DATA',\n    'DATABASE',\n    'DATABASES',\n    'DAY',\n    'DBPROPERTIES',\n    'DEFINED',\n    'DELETE',\n    'DELIMITED',\n    'DESC',\n    'DESCRIBE',\n    'DFS',\n    'DIRECTORIES',\n    'DIRECTORY',\n    'DISTINCT',\n    'DISTRIBUTE',\n    'DIV',\n    'DROP',\n    'ESCAPE',\n    'ESCAPED',\n    'EXCEPT',\n    'EXCHANGE',\n    'EXISTS',\n    'EXPORT',\n    'EXTENDED',\n    'EXTERNAL',\n    'EXTRACT',\n    'FALSE',\n    'FETCH',\n    'FIELDS',\n    'FILTER',\n    'FILEFORMAT',\n    'FIRST',\n    'FIRST_VALUE',\n    'FOLLOWING',\n    'FOR',\n    'FOREIGN',\n    'FORMAT',\n    'FORMATTED',\n    'FULL',\n    'FUNCTION',\n    'FUNCTIONS',\n    'GLOBAL',\n    'GRANT',\n    'GROUP',\n    'GROUPING',\n    'HOUR',\n    'IF',\n    'IGNORE',\n    'IMPORT',\n    'IN',\n    'INDEX',\n    'INDEXES',\n    'INNER',\n    'INPATH',\n    'INPUTFORMAT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ITEMS',\n    'KEYS',\n    'LAST',\n    'LAST_VALUE',\n    'LATERAL',\n    'LAZY',\n    'LEADING',\n    'LEFT',\n    'LIKE',\n    'LINES',\n    'LIST',\n    'LOCAL',\n    'LOCATION',\n    'LOCK',\n    'LOCKS',\n    'LOGICAL',\n    'MACRO',\n    'MATCHED',\n    'MERGE',\n    'MINUTE',\n    'MONTH',\n    'MSCK',\n    'NAMESPACE',\n    'NAMESPACES',\n    'NATURAL',\n    'NO',\n    'NOT',\n    'NULL',\n    'NULLS',\n    'OF',\n    'ONLY',\n    'OPTION',\n    'OPTIONS',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTPUTFORMAT',\n    'OVER',\n    'OVERLAPS',\n    'OVERLAY',\n    'OVERWRITE',\n    'OWNER',\n    'PARTITION',\n    'PARTITIONED',\n    'PARTITIONS',\n    'PERCENT',\n    'PLACING',\n    'POSITION',\n    'PRECEDING',\n    'PRIMARY',\n    'PRINCIPALS',\n    'PROPERTIES',\n    'PURGE',\n    'QUERY',\n    'RANGE',\n    'RECORDREADER',\n    'RECORDWRITER',\n    'RECOVER',\n    'REDUCE',\n    'REFERENCES',\n    'RENAME',\n    'REPAIR',\n    'REPLACE',\n    'RESPECT',\n    'RESTRICT',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROLE',\n    'ROLES',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'SCHEMA',\n    'SECOND',\n    'SELECT',\n    'SEMI',\n    'SEPARATED',\n    'SERDE',\n    'SERDEPROPERTIES',\n    'SESSION_USER',\n    'SETS',\n    'SHOW',\n    'SKEWED',\n    'SOME',\n    'SORT',\n    'SORTED',\n    'START',\n    'STATISTICS',\n    'STORED',\n    'STRATIFY',\n    'SUBSTR',\n    'SUBSTRING',\n    'TABLE',\n    'TABLES',\n    'TBLPROPERTIES',\n    'TEMPORARY',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TOUCH',\n    'TRAILING',\n    'TRANSACTION',\n    'TRANSACTIONS',\n    'TRIM',\n    'TRUE',\n    'TRUNCATE',\n    'UNARCHIVE',\n    'UNBOUNDED',\n    'UNCACHE',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNLOCK',\n    'UNSET',\n    'USE',\n    'USER',\n    'USING',\n    'VIEW',\n    'WINDOW',\n    'YEAR',\n    // other\n    'ANALYSE',\n    'ARRAY_ZIP',\n    'COALESCE',\n    'CONTAINS',\n    'CONVERT',\n    'DAYS',\n    'DAY_HOUR',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECODE',\n    'DEFAULT',\n    'DISTINCTROW',\n    'ENCODE',\n    'EXPLODE',\n    'EXPLODE_OUTER',\n    'FIXED',\n    'GREATEST',\n    'GROUP_CONCAT',\n    'HOURS',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IFNULL',\n    'LEAST',\n    'LEVEL',\n    'MINUTE_SECOND',\n    'NULLIF',\n    'OFFSET',\n    'ON',\n    'OPTIMIZE',\n    'REGEXP',\n    'SEPARATOR',\n    'SIZE',\n    'TYPE',\n    'TYPES',\n    'UNSIGNED',\n    'VARIABLES',\n    'YEAR_MONTH',\n];\nexport const dataTypes = [\n    // https://spark.apache.org/docs/latest/sql-ref-datatypes.html\n    'ARRAY',\n    'BIGINT',\n    'BINARY',\n    'BOOLEAN',\n    'BYTE',\n    'CHAR',\n    'DATE',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'LONG',\n    'MAP',\n    'NUMERIC',\n    'REAL',\n    'SHORT',\n    'SMALLINT',\n    'STRING',\n    'STRUCT',\n    'TIMESTAMP_LTZ',\n    'TIMESTAMP_NTZ',\n    'TIMESTAMP',\n    'TINYINT',\n    'VARCHAR', // No varchar type in Spark, only STRING. Added for the sake of tests\n];\n//# sourceMappingURL=spark.keywords.js.map","export const functions = [\n    // http://spark.apache.org/docs/latest/sql-ref-functions.html\n    //\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#aggregate-functions\n    // 'ANY',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_PERCENTILE',\n    'AVG',\n    'BIT_AND',\n    'BIT_OR',\n    'BIT_XOR',\n    'BOOL_AND',\n    'BOOL_OR',\n    'COLLECT_LIST',\n    'COLLECT_SET',\n    'CORR',\n    'COUNT',\n    'COUNT',\n    'COUNT',\n    'COUNT_IF',\n    'COUNT_MIN_SKETCH',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'EVERY',\n    'FIRST',\n    'FIRST_VALUE',\n    'GROUPING',\n    'GROUPING_ID',\n    'KURTOSIS',\n    'LAST',\n    'LAST_VALUE',\n    'MAX',\n    'MAX_BY',\n    'MEAN',\n    'MIN',\n    'MIN_BY',\n    'PERCENTILE',\n    'PERCENTILE',\n    'PERCENTILE_APPROX',\n    'SKEWNESS',\n    // 'SOME',\n    'STD',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'SUM',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#window-functions\n    'CUME_DIST',\n    'DENSE_RANK',\n    'LAG',\n    'LEAD',\n    'NTH_VALUE',\n    'NTILE',\n    'PERCENT_RANK',\n    'RANK',\n    'ROW_NUMBER',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#array-functions\n    'ARRAY',\n    'ARRAY_CONTAINS',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_INTERSECT',\n    'ARRAY_JOIN',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_POSITION',\n    'ARRAY_REMOVE',\n    'ARRAY_REPEAT',\n    'ARRAY_UNION',\n    'ARRAYS_OVERLAP',\n    'ARRAYS_ZIP',\n    'FLATTEN',\n    'SEQUENCE',\n    'SHUFFLE',\n    'SLICE',\n    'SORT_ARRAY',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#map-functions\n    'ELEMENT_AT',\n    'ELEMENT_AT',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_FROM_ARRAYS',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_VALUES',\n    'STR_TO_MAP',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#date-and-timestamp-functions\n    'ADD_MONTHS',\n    'CURRENT_DATE',\n    'CURRENT_DATE',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'DATE_ADD',\n    'DATE_FORMAT',\n    'DATE_FROM_UNIX_DATE',\n    'DATE_PART',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DATEDIFF',\n    'DAY',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'EXTRACT',\n    'FROM_UNIXTIME',\n    'FROM_UTC_TIMESTAMP',\n    'HOUR',\n    'LAST_DAY',\n    'MAKE_DATE',\n    'MAKE_DT_INTERVAL',\n    'MAKE_INTERVAL',\n    'MAKE_TIMESTAMP',\n    'MAKE_YM_INTERVAL',\n    'MINUTE',\n    'MONTH',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'NOW',\n    'QUARTER',\n    'SECOND',\n    'SESSION_WINDOW',\n    'TIMESTAMP_MICROS',\n    'TIMESTAMP_MILLIS',\n    'TIMESTAMP_SECONDS',\n    'TO_DATE',\n    'TO_TIMESTAMP',\n    'TO_UNIX_TIMESTAMP',\n    'TO_UTC_TIMESTAMP',\n    'TRUNC',\n    'UNIX_DATE',\n    'UNIX_MICROS',\n    'UNIX_MILLIS',\n    'UNIX_SECONDS',\n    'UNIX_TIMESTAMP',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'WINDOW',\n    'YEAR',\n    // http://spark.apache.org/docs/latest/sql-ref-functions-builtin.html#json-functions\n    'FROM_JSON',\n    'GET_JSON_OBJECT',\n    'JSON_ARRAY_LENGTH',\n    'JSON_OBJECT_KEYS',\n    'JSON_TUPLE',\n    'SCHEMA_OF_JSON',\n    'TO_JSON',\n    // http://spark.apache.org/docs/latest/api/sql/index.html\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'AGGREGATE',\n    'ARRAY_SORT',\n    'ASCII',\n    'ASIN',\n    'ASINH',\n    'ASSERT_TRUE',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'BASE64',\n    'BIN',\n    'BIT_COUNT',\n    'BIT_GET',\n    'BIT_LENGTH',\n    'BROUND',\n    'BTRIM',\n    'CARDINALITY',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'CHR',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONV',\n    'COS',\n    'COSH',\n    'COT',\n    'CRC32',\n    'CURRENT_CATALOG',\n    'CURRENT_DATABASE',\n    'CURRENT_USER',\n    'DEGREES',\n    // 'E',\n    'ELT',\n    'EXP',\n    'EXPM1',\n    'FACTORIAL',\n    'FIND_IN_SET',\n    'FLOOR',\n    'FORALL',\n    'FORMAT_NUMBER',\n    'FORMAT_STRING',\n    'FROM_CSV',\n    'GETBIT',\n    'HASH',\n    'HEX',\n    'HYPOT',\n    'INITCAP',\n    'INLINE',\n    'INLINE_OUTER',\n    'INPUT_FILE_BLOCK_LENGTH',\n    'INPUT_FILE_BLOCK_START',\n    'INPUT_FILE_NAME',\n    'INSTR',\n    'ISNAN',\n    'ISNOTNULL',\n    'ISNULL',\n    'JAVA_METHOD',\n    'LCASE',\n    'LEFT',\n    'LENGTH',\n    'LEVENSHTEIN',\n    'LN',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG1P',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MAP_FILTER',\n    'MAP_ZIP_WITH',\n    'MD5',\n    'MOD',\n    'MONOTONICALLY_INCREASING_ID',\n    'NAMED_STRUCT',\n    'NANVL',\n    'NEGATIVE',\n    'NVL',\n    'NVL2',\n    'OCTET_LENGTH',\n    'OVERLAY',\n    'PARSE_URL',\n    'PI',\n    'PMOD',\n    'POSEXPLODE',\n    'POSEXPLODE_OUTER',\n    'POSITION',\n    'POSITIVE',\n    'POW',\n    'POWER',\n    'PRINTF',\n    'RADIANS',\n    'RAISE_ERROR',\n    'RAND',\n    'RANDN',\n    'RANDOM',\n    'REFLECT',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RINT',\n    'ROUND',\n    'RPAD',\n    'RTRIM',\n    'SCHEMA_OF_CSV',\n    'SENTENCES',\n    'SHA',\n    'SHA1',\n    'SHA2',\n    'SHIFTLEFT',\n    'SHIFTRIGHT',\n    'SHIFTRIGHTUNSIGNED',\n    'SIGN',\n    'SIGNUM',\n    'SIN',\n    'SINH',\n    'SOUNDEX',\n    'SPACE',\n    'SPARK_PARTITION_ID',\n    'SPLIT',\n    'SQRT',\n    'STACK',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'TAN',\n    'TANH',\n    'TO_CSV',\n    'TRANSFORM_KEYS',\n    'TRANSFORM_VALUES',\n    'TRANSLATE',\n    'TRIM',\n    'TRY_ADD',\n    'TRY_DIVIDE',\n    'TYPEOF',\n    'UCASE',\n    'UNBASE64',\n    'UNHEX',\n    'UPPER',\n    'UUID',\n    'VERSION',\n    'WIDTH_BUCKET',\n    'XPATH',\n    'XPATH_BOOLEAN',\n    'XPATH_DOUBLE',\n    'XPATH_FLOAT',\n    'XPATH_INT',\n    'XPATH_LONG',\n    'XPATH_NUMBER',\n    'XPATH_SHORT',\n    'XPATH_STRING',\n    'XXHASH64',\n    'ZIP_WITH',\n    // cast\n    'CAST',\n    // Shorthand functions to use in place of CASE expression\n    'COALESCE',\n    'NULLIF',\n];\n//# sourceMappingURL=spark.functions.js.map","export const functions = [\n    // https://www.sqlite.org/lang_corefunc.html\n    'ABS',\n    'CHANGES',\n    'CHAR',\n    'COALESCE',\n    'FORMAT',\n    'GLOB',\n    'HEX',\n    'IFNULL',\n    'IIF',\n    'INSTR',\n    'LAST_INSERT_ROWID',\n    'LENGTH',\n    'LIKE',\n    'LIKELIHOOD',\n    'LIKELY',\n    'LOAD_EXTENSION',\n    'LOWER',\n    'LTRIM',\n    'NULLIF',\n    'PRINTF',\n    'QUOTE',\n    'RANDOM',\n    'RANDOMBLOB',\n    'REPLACE',\n    'ROUND',\n    'RTRIM',\n    'SIGN',\n    'SOUNDEX',\n    'SQLITE_COMPILEOPTION_GET',\n    'SQLITE_COMPILEOPTION_USED',\n    'SQLITE_OFFSET',\n    'SQLITE_SOURCE_ID',\n    'SQLITE_VERSION',\n    'SUBSTR',\n    'SUBSTRING',\n    'TOTAL_CHANGES',\n    'TRIM',\n    'TYPEOF',\n    'UNICODE',\n    'UNLIKELY',\n    'UPPER',\n    'ZEROBLOB',\n    // https://www.sqlite.org/lang_aggfunc.html\n    'AVG',\n    'COUNT',\n    'GROUP_CONCAT',\n    'MAX',\n    'MIN',\n    'SUM',\n    'TOTAL',\n    // https://www.sqlite.org/lang_datefunc.html\n    'DATE',\n    'TIME',\n    'DATETIME',\n    'JULIANDAY',\n    'UNIXEPOCH',\n    'STRFTIME',\n    // https://www.sqlite.org/windowfunctions.html#biwinfunc\n    'row_number',\n    'rank',\n    'dense_rank',\n    'percent_rank',\n    'cume_dist',\n    'ntile',\n    'lag',\n    'lead',\n    'first_value',\n    'last_value',\n    'nth_value',\n    // https://www.sqlite.org/lang_mathfunc.html\n    'ACOS',\n    'ACOSH',\n    'ASIN',\n    'ASINH',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'CEIL',\n    'CEILING',\n    'COS',\n    'COSH',\n    'DEGREES',\n    'EXP',\n    'FLOOR',\n    'LN',\n    'LOG',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'MOD',\n    'PI',\n    'POW',\n    'POWER',\n    'RADIANS',\n    'SIN',\n    'SINH',\n    'SQRT',\n    'TAN',\n    'TANH',\n    'TRUNC',\n    // https://www.sqlite.org/json1.html\n    'JSON',\n    'JSON_ARRAY',\n    'JSON_ARRAY_LENGTH',\n    'JSON_ARRAY_LENGTH',\n    'JSON_EXTRACT',\n    'JSON_INSERT',\n    'JSON_OBJECT',\n    'JSON_PATCH',\n    'JSON_REMOVE',\n    'JSON_REPLACE',\n    'JSON_SET',\n    'JSON_TYPE',\n    'JSON_TYPE',\n    'JSON_VALID',\n    'JSON_QUOTE',\n    'JSON_GROUP_ARRAY',\n    'JSON_GROUP_OBJECT',\n    'JSON_EACH',\n    'JSON_TREE',\n    // cast\n    'CAST',\n];\n//# sourceMappingURL=sqlite.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './sqlite.functions.js';\nimport { dataTypes, keywords } from './sqlite.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO',\n    'REPLACE INTO',\n    'VALUES',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]',\n    // - insert:\n    'ON CONFLICT',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD [COLUMN]',\n    'DROP [COLUMN]',\n    'RENAME [COLUMN]',\n    'RENAME TO',\n    // - set schema\n    'SET SCHEMA',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\n// joins - https://www.sqlite.org/syntax/join-operator.html\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    'DO UPDATE',\n]);\nexport const sqlite = {\n    name: 'sqlite',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\n            \"''-qq\",\n            { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n            // Depending on context SQLite also supports double-quotes for strings,\n            // and single-quotes for identifiers.\n        ],\n        identTypes: [`\"\"-qq`, '``', '[]'],\n        // https://www.sqlite.org/lang_expr.html#parameters\n        paramTypes: { positional: true, numbered: ['?'], named: [':', '@', '$'] },\n        operators: ['%', '~', '&', '|', '<<', '>>', '==', '->', '->>', '||'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=sqlite.formatter.js.map","export const keywords = [\n    // https://www.sqlite.org/lang_keywords.html\n    // Note: The keywords listed on that URL are not all reserved keywords.\n    // We'll need to clean up this list to only include reserved keywords.\n    'ABORT',\n    'ACTION',\n    'ADD',\n    'AFTER',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ARE',\n    'ALWAYS',\n    'ANALYZE',\n    'AS',\n    'ASC',\n    'ATTACH',\n    'AUTOINCREMENT',\n    'BEFORE',\n    'BEGIN',\n    'BETWEEN',\n    'BY',\n    'CASCADE',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'COMMIT',\n    'CONFLICT',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'DATABASE',\n    'DEFAULT',\n    'DEFERRABLE',\n    'DEFERRED',\n    'DELETE',\n    'DESC',\n    'DETACH',\n    'DISTINCT',\n    'DO',\n    'DROP',\n    'EACH',\n    'ELSE',\n    'END',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCLUDE',\n    'EXCLUSIVE',\n    'EXISTS',\n    'EXPLAIN',\n    'FAIL',\n    'FILTER',\n    'FIRST',\n    'FOLLOWING',\n    'FOR',\n    'FOREIGN',\n    'FROM',\n    'FULL',\n    'GENERATED',\n    'GLOB',\n    'GROUP',\n    'HAVING',\n    'IF',\n    'IGNORE',\n    'IMMEDIATE',\n    'IN',\n    'INDEX',\n    'INDEXED',\n    'INITIALLY',\n    'INNER',\n    'INSERT',\n    'INSTEAD',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISNULL',\n    'JOIN',\n    'KEY',\n    'LAST',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'MATCH',\n    'MATERIALIZED',\n    'NATURAL',\n    'NO',\n    'NOT',\n    'NOTHING',\n    'NOTNULL',\n    'NULL',\n    'NULLS',\n    'OF',\n    'OFFSET',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'OR',\n    'ORDER',\n    'OTHERS',\n    'OUTER',\n    'OVER',\n    'PARTITION',\n    'PLAN',\n    'PRAGMA',\n    'PRECEDING',\n    'PRIMARY',\n    'QUERY',\n    'RAISE',\n    'RANGE',\n    'RECURSIVE',\n    'REFERENCES',\n    'REGEXP',\n    'REINDEX',\n    'RELEASE',\n    'RENAME',\n    'REPLACE',\n    'RESTRICT',\n    'RETURNING',\n    'RIGHT',\n    'ROLLBACK',\n    'ROW',\n    'ROWS',\n    'SAVEPOINT',\n    'SELECT',\n    'SET',\n    'TABLE',\n    'TEMP',\n    'TEMPORARY',\n    'THEN',\n    'TIES',\n    'TO',\n    'TRANSACTION',\n    'TRIGGER',\n    'UNBOUNDED',\n    'UNION',\n    'UNIQUE',\n    'UPDATE',\n    'USING',\n    'VACUUM',\n    'VALUES',\n    'VIEW',\n    'VIRTUAL',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHOUT',\n];\nexport const dataTypes = [\n    // SQLite allows any word as a data type, e.g. CREATE TABLE foo (col1 madeupname(123));\n    // Here we just list some common ones as SQL Formatter\n    // is only able to detect a predefined list of data types.\n    // https://www.sqlite.org/stricttables.html\n    // https://www.sqlite.org/datatype3.html\n    'ANY',\n    'ARRAY',\n    'BLOB',\n    'CHARACTER',\n    'DECIMAL',\n    'INT',\n    'INTEGER',\n    'NATIVE CHARACTER',\n    'NCHAR',\n    'NUMERIC',\n    'NVARCHAR',\n    'REAL',\n    'TEXT',\n    'VARCHAR',\n    'VARYING CHARACTER',\n];\n//# sourceMappingURL=sqlite.keywords.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './sql.functions.js';\nimport { dataTypes, keywords } from './sql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL | DISTINCT]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [RECURSIVE] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD COLUMN',\n    'DROP [COLUMN]',\n    'RENAME COLUMN',\n    'RENAME TO',\n    'ALTER [COLUMN]',\n    '{SET | DROP} DEFAULT',\n    'ADD SCOPE',\n    'DROP SCOPE {CASCADE | RESTRICT}',\n    'RESTART WITH',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'SET SCHEMA',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    '{ROWS | RANGE} BETWEEN',\n]);\nexport const sql = {\n    name: 'sql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: [\n            { quote: \"''-qq-bs\", prefixes: ['N', 'U&'] },\n            { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n        ],\n        identTypes: [`\"\"-qq`, '``'],\n        paramTypes: { positional: true },\n        operators: ['||'],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=sql.formatter.js.map","export const keywords = [\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word\n    'ALL',\n    'ALLOCATE',\n    'ALTER',\n    'ANY',\n    'ARE',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'ASYMMETRIC',\n    'AT',\n    'ATOMIC',\n    'AUTHORIZATION',\n    'BEGIN',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CALLED',\n    'CASCADED',\n    'CAST',\n    'CHECK',\n    'CLOSE',\n    'COALESCE',\n    'COLLATE',\n    'COLUMN',\n    'COMMIT',\n    'CONDITION',\n    'CONNECT',\n    'CONSTRAINT',\n    'CORRESPONDING',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_CATALOG',\n    'CURRENT_DEFAULT_TRANSFORM_GROUP',\n    'CURRENT_PATH',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_TRANSFORM_GROUP_FOR_TYPE',\n    'CURRENT_USER',\n    'CURSOR',\n    'CYCLE',\n    'DEALLOCATE',\n    'DAY',\n    'DECLARE',\n    'DEFAULT',\n    'DELETE',\n    'DEREF',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISCONNECT',\n    'DISTINCT',\n    'DROP',\n    'DYNAMIC',\n    'EACH',\n    'ELEMENT',\n    'END-EXEC',\n    'ESCAPE',\n    'EVERY',\n    'EXCEPT',\n    'EXEC',\n    'EXECUTE',\n    'EXISTS',\n    'EXTERNAL',\n    'FALSE',\n    'FETCH',\n    'FILTER',\n    'FOR',\n    'FOREIGN',\n    'FREE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GET',\n    'GLOBAL',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HOLD',\n    'HOUR',\n    'IDENTITY',\n    'IN',\n    'INDICATOR',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'LANGUAGE',\n    'LARGE',\n    'LATERAL',\n    'LEADING',\n    'LEFT',\n    'LIKE',\n    'LIKE_REGEX',\n    'LOCAL',\n    'MATCH',\n    'MEMBER',\n    'MERGE',\n    'METHOD',\n    'MINUTE',\n    'MODIFIES',\n    'MODULE',\n    'MONTH',\n    'NATURAL',\n    'NEW',\n    'NO',\n    'NONE',\n    'NOT',\n    'NULL',\n    'NULLIF',\n    'OF',\n    'OLD',\n    'ON',\n    'ONLY',\n    'OPEN',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OVER',\n    'OVERLAPS',\n    'PARAMETER',\n    'PARTITION',\n    'PRECISION',\n    'PREPARE',\n    'PRIMARY',\n    'PROCEDURE',\n    'RANGE',\n    'READS',\n    'REAL',\n    'RECURSIVE',\n    'REF',\n    'REFERENCES',\n    'REFERENCING',\n    'RELEASE',\n    'RESULT',\n    'RETURN',\n    'RETURNS',\n    'REVOKE',\n    'RIGHT',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'SAVEPOINT',\n    'SCOPE',\n    'SCROLL',\n    'SEARCH',\n    'SECOND',\n    'SELECT',\n    'SENSITIVE',\n    'SESSION_USER',\n    'SET',\n    'SIMILAR',\n    'SOME',\n    'SPECIFIC',\n    'SQL',\n    'SQLEXCEPTION',\n    'SQLSTATE',\n    'SQLWARNING',\n    'START',\n    'STATIC',\n    'SUBMULTISET',\n    'SYMMETRIC',\n    'SYSTEM',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TO',\n    'TRAILING',\n    'TRANSLATION',\n    'TREAT',\n    'TRIGGER',\n    'TRUE',\n    'UESCAPE',\n    'UNION',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNNEST',\n    'UPDATE',\n    'USER',\n    'USING',\n    'VALUE',\n    'VALUES',\n    'WHENEVER',\n    'WINDOW',\n    'WITHIN',\n    'WITHOUT',\n    'YEAR',\n];\nexport const dataTypes = [\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_1_data_type\n    'ARRAY',\n    'BIGINT',\n    'BINARY LARGE OBJECT',\n    'BINARY VARYING',\n    'BINARY',\n    'BLOB',\n    'BOOLEAN',\n    'CHAR LARGE OBJECT',\n    'CHAR VARYING',\n    'CHAR',\n    'CHARACTER LARGE OBJECT',\n    'CHARACTER VARYING',\n    'CHARACTER',\n    'CLOB',\n    'DATE',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'INTERVAL',\n    'MULTISET',\n    'NATIONAL CHAR VARYING',\n    'NATIONAL CHAR',\n    'NATIONAL CHARACTER LARGE OBJECT',\n    'NATIONAL CHARACTER VARYING',\n    'NATIONAL CHARACTER',\n    'NCHAR LARGE OBJECT',\n    'NCHAR VARYING',\n    'NCHAR',\n    'NCLOB',\n    'NUMERIC',\n    'SMALLINT',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n];\n//# sourceMappingURL=sql.keywords.js.map","export const functions = [\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_9_set_function_specification\n    'GROUPING',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_10_window_function\n    'RANK',\n    'DENSE_RANK',\n    'PERCENT_RANK',\n    'CUME_DIST',\n    'ROW_NUMBER',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_27_numeric_value_function\n    'POSITION',\n    'OCCURRENCES_REGEX',\n    'POSITION_REGEX',\n    'EXTRACT',\n    'CHAR_LENGTH',\n    'CHARACTER_LENGTH',\n    'OCTET_LENGTH',\n    'CARDINALITY',\n    'ABS',\n    'MOD',\n    'LN',\n    'EXP',\n    'POWER',\n    'SQRT',\n    'FLOOR',\n    'CEIL',\n    'CEILING',\n    'WIDTH_BUCKET',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_29_string_value_function\n    'SUBSTRING',\n    'SUBSTRING_REGEX',\n    'UPPER',\n    'LOWER',\n    'CONVERT',\n    'TRANSLATE',\n    'TRANSLATE_REGEX',\n    'TRIM',\n    'OVERLAY',\n    'NORMALIZE',\n    'SPECIFICTYPE',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_31_datetime_value_function\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'LOCALTIME',\n    'CURRENT_TIMESTAMP',\n    'LOCALTIMESTAMP',\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_6_38_multiset_value_function\n    // SET serves multiple roles: a SET() function and a SET keyword e.g. in UPDATE table SET ...\n    // multiset\n    // 'SET', (disabled for now)\n    // https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#_10_9_aggregate_function\n    'COUNT',\n    'AVG',\n    'MAX',\n    'MIN',\n    'SUM',\n    // 'EVERY',\n    // 'ANY',\n    // 'SOME',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'VAR_SAMP',\n    'VAR_POP',\n    'COLLECT',\n    'FUSION',\n    'INTERSECTION',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CORR',\n    'REGR_SLOPE',\n    'REGR_INTERCEPT',\n    'REGR_COUNT',\n    'REGR_R2',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_SXX',\n    'REGR_SYY',\n    'REGR_SXY',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    // CAST is a pretty complex case, involving multiple forms:\n    // - CAST(col AS int)\n    // - CAST(...) WITH ...\n    // - CAST FROM int\n    // - CREATE CAST(mycol AS int) WITH ...\n    'CAST',\n    // Shorthand functions to use in place of CASE expression\n    'COALESCE',\n    'NULLIF',\n    // Non-standard functions that have widespread support\n    'ROUND',\n    'SIN',\n    'COS',\n    'TAN',\n    'ASIN',\n    'ACOS',\n    'ATAN',\n];\n//# sourceMappingURL=sql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './trino.functions.js';\nimport { dataTypes, keywords } from './trino.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L41\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY [ALL | DISTINCT]',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    // Data manipulation\n    // - insert:\n    'INSERT INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    // MATCH_RECOGNIZE\n    'MATCH_RECOGNIZE',\n    'MEASURES',\n    'ONE ROW PER MATCH',\n    'ALL ROWS PER MATCH',\n    'AFTER MATCH',\n    'PATTERN',\n    'SUBSET',\n    'DEFINE',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE TABLE [IF NOT EXISTS]']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [MATERIALIZED] VIEW',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS]',\n    'ADD COLUMN [IF NOT EXISTS]',\n    'DROP COLUMN [IF EXISTS]',\n    'RENAME COLUMN [IF EXISTS]',\n    'RENAME TO',\n    'SET AUTHORIZATION [USER | ROLE]',\n    'SET PROPERTIES',\n    'EXECUTE',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // other\n    'ALTER SCHEMA',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER VIEW',\n    'CREATE SCHEMA',\n    'CREATE ROLE',\n    'DROP SCHEMA',\n    'DROP MATERIALIZED VIEW',\n    'DROP VIEW',\n    'DROP ROLE',\n    // Auxiliary\n    'EXPLAIN',\n    'ANALYZE',\n    'EXPLAIN ANALYZE',\n    'EXPLAIN ANALYZE VERBOSE',\n    'USE',\n    'DESCRIBE INPUT',\n    'DESCRIBE OUTPUT',\n    'REFRESH MATERIALIZED VIEW',\n    'RESET SESSION',\n    'SET SESSION',\n    'SET PATH',\n    'SET TIME ZONE',\n    'SHOW GRANTS',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE SCHEMA',\n    'SHOW CREATE VIEW',\n    'SHOW CREATE MATERIALIZED VIEW',\n    'SHOW TABLES',\n    'SHOW SCHEMAS',\n    'SHOW CATALOGS',\n    'SHOW COLUMNS',\n    'SHOW STATS FOR',\n    'SHOW ROLES',\n    'SHOW CURRENT ROLES',\n    'SHOW ROLE GRANTS',\n    'SHOW FUNCTIONS',\n    'SHOW SESSION',\n]);\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L231-L235\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L288-L291\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT [ALL | DISTINCT]',\n    'INTERSECT [ALL | DISTINCT]',\n]);\n// https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L299-L313\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL [INNER] JOIN',\n    'NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    '{ROWS | RANGE | GROUPS} BETWEEN',\n    // comparison operator\n    'IS [NOT] DISTINCT FROM',\n]);\nexport const trino = {\n    name: 'trino',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // Trino also supports {- ... -} parenthesis.\n        // The formatting of these currently works out as a result of { and -\n        // not getting a space added in-between.\n        // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-syntax\n        extraParens: ['[]', '{}'],\n        // https://trino.io/docs/current/language/types.html#string\n        // https://trino.io/docs/current/language/types.html#varbinary\n        stringTypes: [\n            { quote: \"''-qq\", prefixes: ['U&'] },\n            { quote: \"''-raw\", prefixes: ['X'], requirePrefix: true },\n        ],\n        // https://trino.io/docs/current/language/reserved.html\n        identTypes: ['\"\"-qq'],\n        paramTypes: { positional: true },\n        operators: [\n            '%',\n            '->',\n            '=>',\n            ':',\n            '||',\n            // Row pattern syntax\n            '|',\n            '^',\n            '$',\n            // '?', conflicts with positional placeholders\n        ],\n    },\n    formatOptions: {\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=trino.formatter.js.map","export const keywords = [\n    // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-parser/src/main/antlr4/io/trino/sql/parser/SqlBase.g4#L858-L1128\n    'ABSENT',\n    'ADD',\n    'ADMIN',\n    'AFTER',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'AT',\n    'AUTHORIZATION',\n    'BERNOULLI',\n    'BETWEEN',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CATALOGS',\n    'COLUMN',\n    'COLUMNS',\n    'COMMENT',\n    'COMMIT',\n    'COMMITTED',\n    'CONDITIONAL',\n    'CONSTRAINT',\n    'COPARTITION',\n    'CREATE',\n    'CROSS',\n    'CUBE',\n    'CURRENT',\n    'CURRENT_PATH',\n    'CURRENT_ROLE',\n    'DATA',\n    'DEALLOCATE',\n    'DEFAULT',\n    'DEFINE',\n    'DEFINER',\n    'DELETE',\n    'DENY',\n    'DESC',\n    'DESCRIBE',\n    'DESCRIPTOR',\n    'DISTINCT',\n    'DISTRIBUTED',\n    'DOUBLE',\n    'DROP',\n    'ELSE',\n    'EMPTY',\n    'ENCODING',\n    'END',\n    'ERROR',\n    'ESCAPE',\n    'EXCEPT',\n    'EXCLUDING',\n    'EXECUTE',\n    'EXISTS',\n    'EXPLAIN',\n    'FALSE',\n    'FETCH',\n    'FINAL',\n    'FIRST',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'FUNCTIONS',\n    'GRANT',\n    'GRANTED',\n    'GRANTS',\n    'GRAPHVIZ',\n    'GROUP',\n    'GROUPING',\n    'GROUPS',\n    'HAVING',\n    'IGNORE',\n    'IN',\n    'INCLUDING',\n    'INITIAL',\n    'INNER',\n    'INPUT',\n    'INSERT',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'INVOKER',\n    'IO',\n    'IS',\n    'ISOLATION',\n    'JOIN',\n    'JSON',\n    'JSON_ARRAY',\n    'JSON_OBJECT',\n    'KEEP',\n    'KEY',\n    'KEYS',\n    'LAST',\n    'LATERAL',\n    'LEADING',\n    'LEFT',\n    'LEVEL',\n    'LIKE',\n    'LIMIT',\n    'LOCAL',\n    'LOGICAL',\n    'MATCH',\n    'MATCHED',\n    'MATCHES',\n    'MATCH_RECOGNIZE',\n    'MATERIALIZED',\n    'MEASURES',\n    'NATURAL',\n    'NEXT',\n    'NFC',\n    'NFD',\n    'NFKC',\n    'NFKD',\n    'NO',\n    'NONE',\n    'NOT',\n    'NULL',\n    'NULLS',\n    'OBJECT',\n    'OF',\n    'OFFSET',\n    'OMIT',\n    'ON',\n    'ONE',\n    'ONLY',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'ORDINALITY',\n    'OUTER',\n    'OUTPUT',\n    'OVER',\n    'OVERFLOW',\n    'PARTITION',\n    'PARTITIONS',\n    'PASSING',\n    'PAST',\n    'PATH',\n    'PATTERN',\n    'PER',\n    'PERMUTE',\n    'PRECEDING',\n    'PRECISION',\n    'PREPARE',\n    'PRIVILEGES',\n    'PROPERTIES',\n    'PRUNE',\n    'QUOTES',\n    'RANGE',\n    'READ',\n    'RECURSIVE',\n    'REFRESH',\n    'RENAME',\n    'REPEATABLE',\n    'RESET',\n    'RESPECT',\n    'RESTRICT',\n    'RETURNING',\n    'REVOKE',\n    'RIGHT',\n    'ROLE',\n    'ROLES',\n    'ROLLBACK',\n    'ROLLUP',\n    'ROW',\n    'ROWS',\n    'RUNNING',\n    'SCALAR',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECURITY',\n    'SEEK',\n    'SELECT',\n    'SERIALIZABLE',\n    'SESSION',\n    'SET',\n    'SETS',\n    'SHOW',\n    'SKIP',\n    'SOME',\n    'START',\n    'STATS',\n    'STRING',\n    'SUBSET',\n    'SYSTEM',\n    'TABLE',\n    'TABLES',\n    'TABLESAMPLE',\n    'TEXT',\n    'THEN',\n    'TIES',\n    'TIME',\n    'TIMESTAMP',\n    'TO',\n    'TRAILING',\n    'TRANSACTION',\n    'TRUE',\n    'TYPE',\n    'UESCAPE',\n    'UNBOUNDED',\n    'UNCOMMITTED',\n    'UNCONDITIONAL',\n    'UNION',\n    'UNIQUE',\n    'UNKNOWN',\n    'UNMATCHED',\n    'UNNEST',\n    'UPDATE',\n    'USE',\n    'USER',\n    'USING',\n    'UTF16',\n    'UTF32',\n    'UTF8',\n    'VALIDATE',\n    'VALUE',\n    'VALUES',\n    'VERBOSE',\n    'VIEW',\n    'WHEN',\n    'WHERE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WITHOUT',\n    'WORK',\n    'WRAPPER',\n    'WRITE',\n    'ZONE',\n];\nexport const dataTypes = [\n    // https://github.com/trinodb/trino/blob/432d2897bdef99388c1a47188743a061c4ac1f34/core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java#L131-L168\n    // or https://trino.io/docs/current/language/types.html\n    'BIGINT',\n    'INT',\n    'INTEGER',\n    'SMALLINT',\n    'TINYINT',\n    'BOOLEAN',\n    'DATE',\n    'DECIMAL',\n    'REAL',\n    'DOUBLE',\n    'HYPERLOGLOG',\n    'QDIGEST',\n    'TDIGEST',\n    'P4HYPERLOGLOG',\n    'INTERVAL',\n    'TIMESTAMP',\n    'TIME',\n    'VARBINARY',\n    'VARCHAR',\n    'CHAR',\n    'ROW',\n    'ARRAY',\n    'MAP',\n    'JSON',\n    'JSON2016',\n    'IPADDRESS',\n    'GEOMETRY',\n    'UUID',\n    'SETDIGEST',\n    'JONIREGEXP',\n    'RE2JREGEXP',\n    'LIKEPATTERN',\n    'COLOR',\n    'CODEPOINTS',\n    'FUNCTION',\n    'JSONPATH',\n];\n//# sourceMappingURL=trino.keywords.js.map","export const functions = [\n    // https://github.com/trinodb/trino/tree/432d2897bdef99388c1a47188743a061c4ac1f34/docs/src/main/sphinx/functions\n    // rg '^\\.\\. function::' ./docs/src/main/sphinx/functions | cut -d' ' -f 3 | cut -d '(' -f 1 | sort | uniq\n    // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep    '\\* :func:' | cut -d'`' -f 2\n    // rg '\\* ' ./docs/src/main/sphinx/functions/list-by-topic.rst | grep -v '\\* :func:'\n    // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep  -e '^- :func:' | cut -d'`' -f2\n    // grep -e '^- ' ./docs/src/main/sphinx/functions/list.rst | grep -ve '^- :func:'\n    'ABS',\n    'ACOS',\n    'ALL_MATCH',\n    'ANY_MATCH',\n    'APPROX_DISTINCT',\n    'APPROX_MOST_FREQUENT',\n    'APPROX_PERCENTILE',\n    'APPROX_SET',\n    'ARBITRARY',\n    'ARRAYS_OVERLAP',\n    'ARRAY_AGG',\n    'ARRAY_DISTINCT',\n    'ARRAY_EXCEPT',\n    'ARRAY_INTERSECT',\n    'ARRAY_JOIN',\n    'ARRAY_MAX',\n    'ARRAY_MIN',\n    'ARRAY_POSITION',\n    'ARRAY_REMOVE',\n    'ARRAY_SORT',\n    'ARRAY_UNION',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AT_TIMEZONE',\n    'AVG',\n    'BAR',\n    'BETA_CDF',\n    'BING_TILE',\n    'BING_TILES_AROUND',\n    'BING_TILE_AT',\n    'BING_TILE_COORDINATES',\n    'BING_TILE_POLYGON',\n    'BING_TILE_QUADKEY',\n    'BING_TILE_ZOOM_LEVEL',\n    'BITWISE_AND',\n    'BITWISE_AND_AGG',\n    'BITWISE_LEFT_SHIFT',\n    'BITWISE_NOT',\n    'BITWISE_OR',\n    'BITWISE_OR_AGG',\n    'BITWISE_RIGHT_SHIFT',\n    'BITWISE_RIGHT_SHIFT_ARITHMETIC',\n    'BITWISE_XOR',\n    'BIT_COUNT',\n    'BOOL_AND',\n    'BOOL_OR',\n    'CARDINALITY',\n    'CAST',\n    'CBRT',\n    'CEIL',\n    'CEILING',\n    'CHAR2HEXINT',\n    'CHECKSUM',\n    'CHR',\n    'CLASSIFY',\n    'COALESCE',\n    'CODEPOINT',\n    'COLOR',\n    'COMBINATIONS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONTAINS',\n    'CONTAINS_SEQUENCE',\n    'CONVEX_HULL_AGG',\n    'CORR',\n    'COS',\n    'COSH',\n    'COSINE_SIMILARITY',\n    'COUNT',\n    'COUNT_IF',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CRC32',\n    'CUME_DIST',\n    'CURRENT_CATALOG',\n    'CURRENT_DATE',\n    'CURRENT_GROUPS',\n    'CURRENT_SCHEMA',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_USER',\n    'DATE',\n    'DATE_ADD',\n    'DATE_DIFF',\n    'DATE_FORMAT',\n    'DATE_PARSE',\n    'DATE_TRUNC',\n    'DAY',\n    'DAY_OF_MONTH',\n    'DAY_OF_WEEK',\n    'DAY_OF_YEAR',\n    'DEGREES',\n    'DENSE_RANK',\n    'DOW',\n    'DOY',\n    'E',\n    'ELEMENT_AT',\n    'EMPTY_APPROX_SET',\n    'EVALUATE_CLASSIFIER_PREDICTIONS',\n    'EVERY',\n    'EXP',\n    'EXTRACT',\n    'FEATURES',\n    'FILTER',\n    'FIRST_VALUE',\n    'FLATTEN',\n    'FLOOR',\n    'FORMAT',\n    'FORMAT_DATETIME',\n    'FORMAT_NUMBER',\n    'FROM_BASE',\n    'FROM_BASE32',\n    'FROM_BASE64',\n    'FROM_BASE64URL',\n    'FROM_BIG_ENDIAN_32',\n    'FROM_BIG_ENDIAN_64',\n    'FROM_ENCODED_POLYLINE',\n    'FROM_GEOJSON_GEOMETRY',\n    'FROM_HEX',\n    'FROM_IEEE754_32',\n    'FROM_IEEE754_64',\n    'FROM_ISO8601_DATE',\n    'FROM_ISO8601_TIMESTAMP',\n    'FROM_ISO8601_TIMESTAMP_NANOS',\n    'FROM_UNIXTIME',\n    'FROM_UNIXTIME_NANOS',\n    'FROM_UTF8',\n    'GEOMETRIC_MEAN',\n    'GEOMETRY_FROM_HADOOP_SHAPE',\n    'GEOMETRY_INVALID_REASON',\n    'GEOMETRY_NEAREST_POINTS',\n    'GEOMETRY_TO_BING_TILES',\n    'GEOMETRY_UNION',\n    'GEOMETRY_UNION_AGG',\n    'GREATEST',\n    'GREAT_CIRCLE_DISTANCE',\n    'HAMMING_DISTANCE',\n    'HASH_COUNTS',\n    'HISTOGRAM',\n    'HMAC_MD5',\n    'HMAC_SHA1',\n    'HMAC_SHA256',\n    'HMAC_SHA512',\n    'HOUR',\n    'HUMAN_READABLE_SECONDS',\n    'IF',\n    'INDEX',\n    'INFINITY',\n    'INTERSECTION_CARDINALITY',\n    'INVERSE_BETA_CDF',\n    'INVERSE_NORMAL_CDF',\n    'IS_FINITE',\n    'IS_INFINITE',\n    'IS_JSON_SCALAR',\n    'IS_NAN',\n    'JACCARD_INDEX',\n    'JSON_ARRAY_CONTAINS',\n    'JSON_ARRAY_GET',\n    'JSON_ARRAY_LENGTH',\n    'JSON_EXISTS',\n    'JSON_EXTRACT',\n    'JSON_EXTRACT_SCALAR',\n    'JSON_FORMAT',\n    'JSON_PARSE',\n    'JSON_QUERY',\n    'JSON_SIZE',\n    'JSON_VALUE',\n    'KURTOSIS',\n    'LAG',\n    'LAST_DAY_OF_MONTH',\n    'LAST_VALUE',\n    'LEAD',\n    'LEARN_CLASSIFIER',\n    'LEARN_LIBSVM_CLASSIFIER',\n    'LEARN_LIBSVM_REGRESSOR',\n    'LEARN_REGRESSOR',\n    'LEAST',\n    'LENGTH',\n    'LEVENSHTEIN_DISTANCE',\n    'LINE_INTERPOLATE_POINT',\n    'LINE_INTERPOLATE_POINTS',\n    'LINE_LOCATE_POINT',\n    'LISTAGG',\n    'LN',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'LUHN_CHECK',\n    'MAKE_SET_DIGEST',\n    'MAP',\n    'MAP_AGG',\n    'MAP_CONCAT',\n    'MAP_ENTRIES',\n    'MAP_FILTER',\n    'MAP_FROM_ENTRIES',\n    'MAP_KEYS',\n    'MAP_UNION',\n    'MAP_VALUES',\n    'MAP_ZIP_WITH',\n    'MAX',\n    'MAX_BY',\n    'MD5',\n    'MERGE',\n    'MERGE_SET_DIGEST',\n    'MILLISECOND',\n    'MIN',\n    'MINUTE',\n    'MIN_BY',\n    'MOD',\n    'MONTH',\n    'MULTIMAP_AGG',\n    'MULTIMAP_FROM_ENTRIES',\n    'MURMUR3',\n    'NAN',\n    'NGRAMS',\n    'NONE_MATCH',\n    'NORMALIZE',\n    'NORMAL_CDF',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'NUMERIC_HISTOGRAM',\n    'OBJECTID',\n    'OBJECTID_TIMESTAMP',\n    'PARSE_DATA_SIZE',\n    'PARSE_DATETIME',\n    'PARSE_DURATION',\n    'PERCENT_RANK',\n    'PI',\n    'POSITION',\n    'POW',\n    'POWER',\n    'QDIGEST_AGG',\n    'QUARTER',\n    'RADIANS',\n    'RAND',\n    'RANDOM',\n    'RANK',\n    'REDUCE',\n    'REDUCE_AGG',\n    'REGEXP_COUNT',\n    'REGEXP_EXTRACT',\n    'REGEXP_EXTRACT_ALL',\n    'REGEXP_LIKE',\n    'REGEXP_POSITION',\n    'REGEXP_REPLACE',\n    'REGEXP_SPLIT',\n    'REGRESS',\n    'REGR_INTERCEPT',\n    'REGR_SLOPE',\n    'RENDER',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RGB',\n    'ROUND',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SECOND',\n    'SEQUENCE',\n    'SHA1',\n    'SHA256',\n    'SHA512',\n    'SHUFFLE',\n    'SIGN',\n    'SIMPLIFY_GEOMETRY',\n    'SIN',\n    'SKEWNESS',\n    'SLICE',\n    'SOUNDEX',\n    'SPATIAL_PARTITIONING',\n    'SPATIAL_PARTITIONS',\n    'SPLIT',\n    'SPLIT_PART',\n    'SPLIT_TO_MAP',\n    'SPLIT_TO_MULTIMAP',\n    'SPOOKY_HASH_V2_32',\n    'SPOOKY_HASH_V2_64',\n    'SQRT',\n    'STARTS_WITH',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRPOS',\n    'ST_AREA',\n    'ST_ASBINARY',\n    'ST_ASTEXT',\n    'ST_BOUNDARY',\n    'ST_BUFFER',\n    'ST_CENTROID',\n    'ST_CONTAINS',\n    'ST_CONVEXHULL',\n    'ST_COORDDIM',\n    'ST_CROSSES',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_ENDPOINT',\n    'ST_ENVELOPE',\n    'ST_ENVELOPEASPTS',\n    'ST_EQUALS',\n    'ST_EXTERIORRING',\n    'ST_GEOMETRIES',\n    'ST_GEOMETRYFROMTEXT',\n    'ST_GEOMETRYN',\n    'ST_GEOMETRYTYPE',\n    'ST_GEOMFROMBINARY',\n    'ST_INTERIORRINGN',\n    'ST_INTERIORRINGS',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_ISCLOSED',\n    'ST_ISEMPTY',\n    'ST_ISRING',\n    'ST_ISSIMPLE',\n    'ST_ISVALID',\n    'ST_LENGTH',\n    'ST_LINEFROMTEXT',\n    'ST_LINESTRING',\n    'ST_MULTIPOINT',\n    'ST_NUMGEOMETRIES',\n    'ST_NUMINTERIORRING',\n    'ST_NUMPOINTS',\n    'ST_OVERLAPS',\n    'ST_POINT',\n    'ST_POINTN',\n    'ST_POINTS',\n    'ST_POLYGON',\n    'ST_RELATE',\n    'ST_STARTPOINT',\n    'ST_SYMDIFFERENCE',\n    'ST_TOUCHES',\n    'ST_UNION',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_XMAX',\n    'ST_XMIN',\n    'ST_Y',\n    'ST_YMAX',\n    'ST_YMIN',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUM',\n    'TAN',\n    'TANH',\n    'TDIGEST_AGG',\n    'TIMESTAMP_OBJECTID',\n    'TIMEZONE_HOUR',\n    'TIMEZONE_MINUTE',\n    'TO_BASE',\n    'TO_BASE32',\n    'TO_BASE64',\n    'TO_BASE64URL',\n    'TO_BIG_ENDIAN_32',\n    'TO_BIG_ENDIAN_64',\n    'TO_CHAR',\n    'TO_DATE',\n    'TO_ENCODED_POLYLINE',\n    'TO_GEOJSON_GEOMETRY',\n    'TO_GEOMETRY',\n    'TO_HEX',\n    'TO_IEEE754_32',\n    'TO_IEEE754_64',\n    'TO_ISO8601',\n    'TO_MILLISECONDS',\n    'TO_SPHERICAL_GEOGRAPHY',\n    'TO_TIMESTAMP',\n    'TO_UNIXTIME',\n    'TO_UTF8',\n    'TRANSFORM',\n    'TRANSFORM_KEYS',\n    'TRANSFORM_VALUES',\n    'TRANSLATE',\n    'TRIM',\n    'TRIM_ARRAY',\n    'TRUNCATE',\n    'TRY',\n    'TRY_CAST',\n    'TYPEOF',\n    'UPPER',\n    'URL_DECODE',\n    'URL_ENCODE',\n    'URL_EXTRACT_FRAGMENT',\n    'URL_EXTRACT_HOST',\n    'URL_EXTRACT_PARAMETER',\n    'URL_EXTRACT_PATH',\n    'URL_EXTRACT_PORT',\n    'URL_EXTRACT_PROTOCOL',\n    'URL_EXTRACT_QUERY',\n    'UUID',\n    'VALUES_AT_QUANTILES',\n    'VALUE_AT_QUANTILE',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VERSION',\n    'WEEK',\n    'WEEK_OF_YEAR',\n    'WIDTH_BUCKET',\n    'WILSON_INTERVAL_LOWER',\n    'WILSON_INTERVAL_UPPER',\n    'WITH_TIMEZONE',\n    'WORD_STEM',\n    'XXHASH64',\n    'YEAR',\n    'YEAR_OF_WEEK',\n    'YOW',\n    'ZIP',\n    'ZIP_WITH',\n    // https://trino.io/docs/current/sql/match-recognize.html#row-pattern-recognition-expressions\n    'CLASSIFIER',\n    'FIRST',\n    'LAST',\n    'MATCH_NUMBER',\n    'NEXT',\n    'PERMUTE',\n    'PREV',\n];\n//# sourceMappingURL=trino.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './transactsql.functions.js';\nimport { dataTypes, keywords } from './transactsql.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'INTO',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'WINDOW',\n    'PARTITION BY',\n    'ORDER BY',\n    'OFFSET',\n    'FETCH {FIRST | NEXT}',\n    'FOR {BROWSE | XML | JSON}',\n    'OPTION',\n    // Data manipulation\n    // - insert:\n    'INSERT [INTO]',\n    'VALUES',\n    // - update:\n    'SET',\n    // - merge:\n    'MERGE [INTO]',\n    'WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]',\n    'UPDATE SET',\n    // Data definition\n    'CREATE [OR ALTER] {PROC | PROCEDURE}',\n]);\nconst standardOnelineClauses = expandPhrases(['CREATE TABLE']);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR ALTER] [MATERIALIZED] VIEW',\n    // - update:\n    'UPDATE',\n    'WHERE CURRENT OF',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE',\n    'ADD',\n    'DROP COLUMN [IF EXISTS]',\n    'ALTER COLUMN',\n    // - truncate:\n    'TRUNCATE TABLE',\n    // indexes\n    'CREATE [UNIQUE] [CLUSTERED] INDEX',\n    // databases\n    'CREATE DATABASE',\n    'ALTER DATABASE',\n    'DROP DATABASE [IF EXISTS]',\n    // other statements\n    'GO',\n    'USE',\n    // https://docs.microsoft.com/en-us/sql/t-sql/statements/statements?view=sql-server-ver15\n    'ADD SENSITIVITY CLASSIFICATION',\n    'ADD SIGNATURE',\n    'AGGREGATE',\n    'ANSI_DEFAULTS',\n    'ANSI_NULLS',\n    'ANSI_NULL_DFLT_OFF',\n    'ANSI_NULL_DFLT_ON',\n    'ANSI_PADDING',\n    'ANSI_WARNINGS',\n    'APPLICATION ROLE',\n    'ARITHABORT',\n    'ARITHIGNORE',\n    'ASSEMBLY',\n    'ASYMMETRIC KEY',\n    'AUTHORIZATION',\n    'AVAILABILITY GROUP',\n    'BACKUP',\n    'BACKUP CERTIFICATE',\n    'BACKUP MASTER KEY',\n    'BACKUP SERVICE MASTER KEY',\n    'BEGIN CONVERSATION TIMER',\n    'BEGIN DIALOG CONVERSATION',\n    'BROKER PRIORITY',\n    'BULK INSERT',\n    'CERTIFICATE',\n    'CLOSE MASTER KEY',\n    'CLOSE SYMMETRIC KEY',\n    'COLLATE',\n    'COLUMN ENCRYPTION KEY',\n    'COLUMN MASTER KEY',\n    'COLUMNSTORE INDEX',\n    'CONCAT_NULL_YIELDS_NULL',\n    'CONTEXT_INFO',\n    'CONTRACT',\n    'CREDENTIAL',\n    'CRYPTOGRAPHIC PROVIDER',\n    'CURSOR_CLOSE_ON_COMMIT',\n    'DATABASE',\n    'DATABASE AUDIT SPECIFICATION',\n    'DATABASE ENCRYPTION KEY',\n    'DATABASE HADR',\n    'DATABASE SCOPED CONFIGURATION',\n    'DATABASE SCOPED CREDENTIAL',\n    'DATABASE SET',\n    'DATEFIRST',\n    'DATEFORMAT',\n    'DEADLOCK_PRIORITY',\n    'DENY',\n    'DENY XML',\n    'DISABLE TRIGGER',\n    'ENABLE TRIGGER',\n    'END CONVERSATION',\n    'ENDPOINT',\n    'EVENT NOTIFICATION',\n    'EVENT SESSION',\n    'EXECUTE AS',\n    'EXTERNAL DATA SOURCE',\n    'EXTERNAL FILE FORMAT',\n    'EXTERNAL LANGUAGE',\n    'EXTERNAL LIBRARY',\n    'EXTERNAL RESOURCE POOL',\n    'EXTERNAL TABLE',\n    'FIPS_FLAGGER',\n    'FMTONLY',\n    'FORCEPLAN',\n    'FULLTEXT CATALOG',\n    'FULLTEXT INDEX',\n    'FULLTEXT STOPLIST',\n    'FUNCTION',\n    'GET CONVERSATION GROUP',\n    'GET_TRANSMISSION_STATUS',\n    'GRANT',\n    'GRANT XML',\n    'IDENTITY_INSERT',\n    'IMPLICIT_TRANSACTIONS',\n    'INDEX',\n    'LANGUAGE',\n    'LOCK_TIMEOUT',\n    'LOGIN',\n    'MASTER KEY',\n    'MESSAGE TYPE',\n    'MOVE CONVERSATION',\n    'NOCOUNT',\n    'NOEXEC',\n    'NUMERIC_ROUNDABORT',\n    'OFFSETS',\n    'OPEN MASTER KEY',\n    'OPEN SYMMETRIC KEY',\n    'PARSEONLY',\n    'PARTITION FUNCTION',\n    'PARTITION SCHEME',\n    'PROCEDURE',\n    'QUERY_GOVERNOR_COST_LIMIT',\n    'QUEUE',\n    'QUOTED_IDENTIFIER',\n    'RECEIVE',\n    'REMOTE SERVICE BINDING',\n    'REMOTE_PROC_TRANSACTIONS',\n    'RESOURCE GOVERNOR',\n    'RESOURCE POOL',\n    'RESTORE',\n    'RESTORE FILELISTONLY',\n    'RESTORE HEADERONLY',\n    'RESTORE LABELONLY',\n    'RESTORE MASTER KEY',\n    'RESTORE REWINDONLY',\n    'RESTORE SERVICE MASTER KEY',\n    'RESTORE VERIFYONLY',\n    'REVERT',\n    'REVOKE',\n    'REVOKE XML',\n    'ROLE',\n    'ROUTE',\n    'ROWCOUNT',\n    'RULE',\n    'SCHEMA',\n    'SEARCH PROPERTY LIST',\n    'SECURITY POLICY',\n    'SELECTIVE XML INDEX',\n    'SEND',\n    'SENSITIVITY CLASSIFICATION',\n    'SEQUENCE',\n    'SERVER AUDIT',\n    'SERVER AUDIT SPECIFICATION',\n    'SERVER CONFIGURATION',\n    'SERVER ROLE',\n    'SERVICE',\n    'SERVICE MASTER KEY',\n    'SETUSER',\n    'SHOWPLAN_ALL',\n    'SHOWPLAN_TEXT',\n    'SHOWPLAN_XML',\n    'SIGNATURE',\n    'SPATIAL INDEX',\n    'STATISTICS',\n    'STATISTICS IO',\n    'STATISTICS PROFILE',\n    'STATISTICS TIME',\n    'STATISTICS XML',\n    'SYMMETRIC KEY',\n    'SYNONYM',\n    'TABLE',\n    'TABLE IDENTITY',\n    'TEXTSIZE',\n    'TRANSACTION ISOLATION LEVEL',\n    'TRIGGER',\n    'TYPE',\n    'UPDATE STATISTICS',\n    'USER',\n    'WORKLOAD GROUP',\n    'XACT_ABORT',\n    'XML INDEX',\n    'XML SCHEMA COLLECTION',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    // non-standard joins\n    '{CROSS | OUTER} APPLY',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n    '{ROWS | RANGE} BETWEEN',\n]);\n// https://docs.microsoft.com/en-us/sql/t-sql/language-reference?view=sql-server-ver15\nexport const transactsql = {\n    name: 'transactsql',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        nestedBlockComments: true,\n        stringTypes: [{ quote: \"''-qq\", prefixes: ['N'] }],\n        identTypes: [`\"\"-qq`, '[]'],\n        identChars: { first: '#@', rest: '#@$' },\n        paramTypes: { named: ['@'], quoted: ['@'] },\n        operators: [\n            '%',\n            '&',\n            '|',\n            '^',\n            '~',\n            '!<',\n            '!>',\n            '+=',\n            '-=',\n            '*=',\n            '/=',\n            '%=',\n            '|=',\n            '&=',\n            '^=',\n            '::',\n            ':',\n        ],\n        propertyAccessOperators: ['..'],\n        // TODO: Support for money constants\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=transactsql.formatter.js.map","export const keywords = [\n    // https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-ver15\n    // standard\n    'ADD',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ANY',\n    'AS',\n    'ASC',\n    'AUTHORIZATION',\n    'BACKUP',\n    'BEGIN',\n    'BETWEEN',\n    'BREAK',\n    'BROWSE',\n    'BULK',\n    'BY',\n    'CASCADE',\n    'CHECK',\n    'CHECKPOINT',\n    'CLOSE',\n    'CLUSTERED',\n    'COALESCE',\n    'COLLATE',\n    'COLUMN',\n    'COMMIT',\n    'COMPUTE',\n    'CONSTRAINT',\n    'CONTAINS',\n    'CONTAINSTABLE',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DBCC',\n    'DEALLOCATE',\n    'DECLARE',\n    'DEFAULT',\n    'DELETE',\n    'DENY',\n    'DESC',\n    'DISK',\n    'DISTINCT',\n    'DISTRIBUTED',\n    'DROP',\n    'DUMP',\n    'ERRLVL',\n    'ESCAPE',\n    'EXEC',\n    'EXECUTE',\n    'EXISTS',\n    'EXIT',\n    'EXTERNAL',\n    'FETCH',\n    'FILE',\n    'FILLFACTOR',\n    'FOR',\n    'FOREIGN',\n    'FREETEXT',\n    'FREETEXTTABLE',\n    'FROM',\n    'FULL',\n    'FUNCTION',\n    'GOTO',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HOLDLOCK',\n    'IDENTITY',\n    'IDENTITYCOL',\n    'IDENTITY_INSERT',\n    'IF',\n    'IN',\n    'INDEX',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'JOIN',\n    'KEY',\n    'KILL',\n    'LEFT',\n    'LIKE',\n    'LINENO',\n    'LOAD',\n    'MERGE',\n    'NOCHECK',\n    'NONCLUSTERED',\n    'NOT',\n    'NULL',\n    'NULLIF',\n    'OF',\n    'OFF',\n    'OFFSETS',\n    'ON',\n    'OPEN',\n    'OPENDATASOURCE',\n    'OPENQUERY',\n    'OPENROWSET',\n    'OPENXML',\n    'OPTION',\n    'OR',\n    'ORDER',\n    'OUTER',\n    'OVER',\n    'PERCENT',\n    'PIVOT',\n    'PLAN',\n    'PRIMARY',\n    'PRINT',\n    'PROC',\n    'PROCEDURE',\n    'PUBLIC',\n    'RAISERROR',\n    'READ',\n    'READTEXT',\n    'RECONFIGURE',\n    'REFERENCES',\n    'REPLICATION',\n    'RESTORE',\n    'RESTRICT',\n    'RETURN',\n    'REVERT',\n    'REVOKE',\n    'RIGHT',\n    'ROLLBACK',\n    'ROWCOUNT',\n    'ROWGUIDCOL',\n    'RULE',\n    'SAVE',\n    'SCHEMA',\n    'SECURITYAUDIT',\n    'SELECT',\n    'SEMANTICKEYPHRASETABLE',\n    'SEMANTICSIMILARITYDETAILSTABLE',\n    'SEMANTICSIMILARITYTABLE',\n    'SESSION_USER',\n    'SET',\n    'SETUSER',\n    'SHUTDOWN',\n    'SOME',\n    'STATISTICS',\n    'SYSTEM_USER',\n    'TABLE',\n    'TABLESAMPLE',\n    'TEXTSIZE',\n    'THEN',\n    'TO',\n    'TOP',\n    'TRAN',\n    'TRANSACTION',\n    'TRIGGER',\n    'TRUNCATE',\n    'TRY_CONVERT',\n    'TSEQUAL',\n    'UNION',\n    'UNIQUE',\n    'UNPIVOT',\n    'UPDATE',\n    'UPDATETEXT',\n    'USE',\n    'USER',\n    'VALUES',\n    'VIEW',\n    'WAITFOR',\n    'WHERE',\n    'WHILE',\n    'WITH',\n    'WITHIN GROUP',\n    'WRITETEXT',\n    // https://learn.microsoft.com/en-us/sql/t-sql/queries/output-clause-transact-sql?view=sql-server-ver16#action\n    '$ACTION',\n];\nexport const dataTypes = [\n    // https://learn.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15\n    'BINARY',\n    'BIT',\n    'CHAR',\n    'CHAR',\n    'CHARACTER',\n    'DATE',\n    'DATETIME2',\n    'DATETIMEOFFSET',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE',\n    'FLOAT',\n    'INT',\n    'INTEGER',\n    'NATIONAL',\n    'NCHAR',\n    'NUMERIC',\n    'NVARCHAR',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TIME',\n    'TIMESTAMP',\n    'VARBINARY',\n    'VARCHAR',\n];\n//# sourceMappingURL=transactsql.keywords.js.map","export const functions = [\n    // https://docs.microsoft.com/en-us/sql/t-sql/functions/functions?view=sql-server-ver15\n    // aggregate\n    'APPROX_COUNT_DISTINCT',\n    'AVG',\n    'CHECKSUM_AGG',\n    'COUNT',\n    'COUNT_BIG',\n    'GROUPING',\n    'GROUPING_ID',\n    'MAX',\n    'MIN',\n    'STDEV',\n    'STDEVP',\n    'SUM',\n    'VAR',\n    'VARP',\n    // analytic\n    'CUME_DIST',\n    'FIRST_VALUE',\n    'LAG',\n    'LAST_VALUE',\n    'LEAD',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PERCENT_RANK',\n    'Collation - COLLATIONPROPERTY',\n    'Collation - TERTIARY_WEIGHTS',\n    // configuration\n    '@@DBTS',\n    '@@LANGID',\n    '@@LANGUAGE',\n    '@@LOCK_TIMEOUT',\n    '@@MAX_CONNECTIONS',\n    '@@MAX_PRECISION',\n    '@@NESTLEVEL',\n    '@@OPTIONS',\n    '@@REMSERVER',\n    '@@SERVERNAME',\n    '@@SERVICENAME',\n    '@@SPID',\n    '@@TEXTSIZE',\n    '@@VERSION',\n    // conversion\n    'CAST',\n    'CONVERT',\n    'PARSE',\n    'TRY_CAST',\n    'TRY_CONVERT',\n    'TRY_PARSE',\n    // cryptographic\n    'ASYMKEY_ID',\n    'ASYMKEYPROPERTY',\n    'CERTPROPERTY',\n    'CERT_ID',\n    'CRYPT_GEN_RANDOM',\n    'DECRYPTBYASYMKEY',\n    'DECRYPTBYCERT',\n    'DECRYPTBYKEY',\n    'DECRYPTBYKEYAUTOASYMKEY',\n    'DECRYPTBYKEYAUTOCERT',\n    'DECRYPTBYPASSPHRASE',\n    'ENCRYPTBYASYMKEY',\n    'ENCRYPTBYCERT',\n    'ENCRYPTBYKEY',\n    'ENCRYPTBYPASSPHRASE',\n    'HASHBYTES',\n    'IS_OBJECTSIGNED',\n    'KEY_GUID',\n    'KEY_ID',\n    'KEY_NAME',\n    'SIGNBYASYMKEY',\n    'SIGNBYCERT',\n    'SYMKEYPROPERTY',\n    'VERIFYSIGNEDBYCERT',\n    'VERIFYSIGNEDBYASYMKEY',\n    // cursor\n    '@@CURSOR_ROWS',\n    '@@FETCH_STATUS',\n    'CURSOR_STATUS',\n    // dataType\n    'DATALENGTH',\n    'IDENT_CURRENT',\n    'IDENT_INCR',\n    'IDENT_SEED',\n    'IDENTITY',\n    'SQL_VARIANT_PROPERTY',\n    // datetime\n    '@@DATEFIRST',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TIMEZONE',\n    'CURRENT_TIMEZONE_ID',\n    'DATEADD',\n    'DATEDIFF',\n    'DATEDIFF_BIG',\n    'DATEFROMPARTS',\n    'DATENAME',\n    'DATEPART',\n    'DATETIME2FROMPARTS',\n    'DATETIMEFROMPARTS',\n    'DATETIMEOFFSETFROMPARTS',\n    'DAY',\n    'EOMONTH',\n    'GETDATE',\n    'GETUTCDATE',\n    'ISDATE',\n    'MONTH',\n    'SMALLDATETIMEFROMPARTS',\n    'SWITCHOFFSET',\n    'SYSDATETIME',\n    'SYSDATETIMEOFFSET',\n    'SYSUTCDATETIME',\n    'TIMEFROMPARTS',\n    'TODATETIMEOFFSET',\n    'YEAR',\n    'JSON',\n    'ISJSON',\n    'JSON_VALUE',\n    'JSON_QUERY',\n    'JSON_MODIFY',\n    // mathematical\n    'ABS',\n    'ACOS',\n    'ASIN',\n    'ATAN',\n    'ATN2',\n    'CEILING',\n    'COS',\n    'COT',\n    'DEGREES',\n    'EXP',\n    'FLOOR',\n    'LOG',\n    'LOG10',\n    'PI',\n    'POWER',\n    'RADIANS',\n    'RAND',\n    'ROUND',\n    'SIGN',\n    'SIN',\n    'SQRT',\n    'SQUARE',\n    'TAN',\n    'CHOOSE',\n    'GREATEST',\n    'IIF',\n    'LEAST',\n    // metadata\n    '@@PROCID',\n    'APP_NAME',\n    'APPLOCK_MODE',\n    'APPLOCK_TEST',\n    'ASSEMBLYPROPERTY',\n    'COL_LENGTH',\n    'COL_NAME',\n    'COLUMNPROPERTY',\n    'DATABASEPROPERTYEX',\n    'DB_ID',\n    'DB_NAME',\n    'FILE_ID',\n    'FILE_IDEX',\n    'FILE_NAME',\n    'FILEGROUP_ID',\n    'FILEGROUP_NAME',\n    'FILEGROUPPROPERTY',\n    'FILEPROPERTY',\n    'FILEPROPERTYEX',\n    'FULLTEXTCATALOGPROPERTY',\n    'FULLTEXTSERVICEPROPERTY',\n    'INDEX_COL',\n    'INDEXKEY_PROPERTY',\n    'INDEXPROPERTY',\n    'NEXT VALUE FOR',\n    'OBJECT_DEFINITION',\n    'OBJECT_ID',\n    'OBJECT_NAME',\n    'OBJECT_SCHEMA_NAME',\n    'OBJECTPROPERTY',\n    'OBJECTPROPERTYEX',\n    'ORIGINAL_DB_NAME',\n    'PARSENAME',\n    'SCHEMA_ID',\n    'SCHEMA_NAME',\n    'SCOPE_IDENTITY',\n    'SERVERPROPERTY',\n    'STATS_DATE',\n    'TYPE_ID',\n    'TYPE_NAME',\n    'TYPEPROPERTY',\n    // ranking\n    'DENSE_RANK',\n    'NTILE',\n    'RANK',\n    'ROW_NUMBER',\n    'PUBLISHINGSERVERNAME',\n    // security\n    'CERTENCODED',\n    'CERTPRIVATEKEY',\n    'CURRENT_USER',\n    'DATABASE_PRINCIPAL_ID',\n    'HAS_DBACCESS',\n    'HAS_PERMS_BY_NAME',\n    'IS_MEMBER',\n    'IS_ROLEMEMBER',\n    'IS_SRVROLEMEMBER',\n    'LOGINPROPERTY',\n    'ORIGINAL_LOGIN',\n    'PERMISSIONS',\n    'PWDENCRYPT',\n    'PWDCOMPARE',\n    'SESSION_USER',\n    'SESSIONPROPERTY',\n    'SUSER_ID',\n    'SUSER_NAME',\n    'SUSER_SID',\n    'SUSER_SNAME',\n    'SYSTEM_USER',\n    'USER',\n    'USER_ID',\n    'USER_NAME',\n    // string\n    'ASCII',\n    'CHARINDEX',\n    'CONCAT',\n    'CONCAT_WS',\n    'DIFFERENCE',\n    'FORMAT',\n    'LEFT',\n    'LEN',\n    'LOWER',\n    'LTRIM',\n    'PATINDEX',\n    'QUOTENAME',\n    'REPLACE',\n    'REPLICATE',\n    'REVERSE',\n    'RIGHT',\n    'RTRIM',\n    'SOUNDEX',\n    'SPACE',\n    'STR',\n    'STRING_AGG',\n    'STRING_ESCAPE',\n    'STUFF',\n    'SUBSTRING',\n    'TRANSLATE',\n    'TRIM',\n    'UNICODE',\n    'UPPER',\n    // system\n    '$PARTITION',\n    '@@ERROR',\n    '@@IDENTITY',\n    '@@PACK_RECEIVED',\n    '@@ROWCOUNT',\n    '@@TRANCOUNT',\n    'BINARY_CHECKSUM',\n    'CHECKSUM',\n    'COMPRESS',\n    'CONNECTIONPROPERTY',\n    'CONTEXT_INFO',\n    'CURRENT_REQUEST_ID',\n    'CURRENT_TRANSACTION_ID',\n    'DECOMPRESS',\n    'ERROR_LINE',\n    'ERROR_MESSAGE',\n    'ERROR_NUMBER',\n    'ERROR_PROCEDURE',\n    'ERROR_SEVERITY',\n    'ERROR_STATE',\n    'FORMATMESSAGE',\n    'GET_FILESTREAM_TRANSACTION_CONTEXT',\n    'GETANSINULL',\n    'HOST_ID',\n    'HOST_NAME',\n    'ISNULL',\n    'ISNUMERIC',\n    'MIN_ACTIVE_ROWVERSION',\n    'NEWID',\n    'NEWSEQUENTIALID',\n    'ROWCOUNT_BIG',\n    'SESSION_CONTEXT',\n    'XACT_STATE',\n    // statistical\n    '@@CONNECTIONS',\n    '@@CPU_BUSY',\n    '@@IDLE',\n    '@@IO_BUSY',\n    '@@PACK_SENT',\n    '@@PACKET_ERRORS',\n    '@@TIMETICKS',\n    '@@TOTAL_ERRORS',\n    '@@TOTAL_READ',\n    '@@TOTAL_WRITE',\n    'TEXTPTR',\n    'TEXTVALID',\n    // trigger\n    'COLUMNS_UPDATED',\n    'EVENTDATA',\n    'TRIGGER_NESTLEVEL',\n    'UPDATE',\n    // Shorthand functions to use in place of CASE expression\n    'COALESCE',\n    'NULLIF',\n];\n//# sourceMappingURL=transactsql.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { postProcess } from '../mariadb/likeMariaDb.js';\nimport { dataTypes, keywords } from './singlestoredb.keywords.js';\nimport { functions } from './singlestoredb.functions.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT | DISTINCTROW]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY',\n    'LIMIT',\n    'OFFSET',\n    // Data manipulation\n    // - insert:\n    'INSERT [IGNORE] [INTO]',\n    'VALUES',\n    'REPLACE [INTO]',\n    'ON DUPLICATE KEY UPDATE',\n    // - update:\n    'SET',\n    // Data definition\n    'CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]',\n    'CREATE [OR REPLACE] [EXTERNAL] FUNCTION',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE VIEW',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE [FROM]',\n    // - drop table:\n    'DROP [TEMPORARY] TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER [ONLINE] TABLE',\n    'ADD [COLUMN]',\n    'ADD [UNIQUE] {INDEX | KEY}',\n    'DROP [COLUMN]',\n    'MODIFY [COLUMN]',\n    'CHANGE',\n    'RENAME [TO | AS]',\n    // - truncate:\n    'TRUNCATE [TABLE]',\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference.html\n    'ADD AGGREGATOR',\n    'ADD LEAF',\n    'AGGREGATOR SET AS MASTER',\n    'ALTER DATABASE',\n    'ALTER PIPELINE',\n    'ALTER RESOURCE POOL',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ANALYZE TABLE',\n    'ATTACH DATABASE',\n    'ATTACH LEAF',\n    'ATTACH LEAF ALL',\n    'BACKUP DATABASE',\n    'BINLOG',\n    'BOOTSTRAP AGGREGATOR',\n    'CACHE INDEX',\n    'CALL',\n    'CHANGE',\n    'CHANGE MASTER TO',\n    'CHANGE REPLICATION FILTER',\n    'CHANGE REPLICATION SOURCE TO',\n    'CHECK BLOB CHECKSUM',\n    'CHECK TABLE',\n    'CHECKSUM TABLE',\n    'CLEAR ORPHAN DATABASES',\n    'CLONE',\n    'COMMIT',\n    'CREATE DATABASE',\n    'CREATE GROUP',\n    'CREATE INDEX',\n    'CREATE LINK',\n    'CREATE MILESTONE',\n    'CREATE PIPELINE',\n    'CREATE RESOURCE POOL',\n    'CREATE ROLE',\n    'CREATE USER',\n    'DEALLOCATE PREPARE',\n    'DESCRIBE',\n    'DETACH DATABASE',\n    'DETACH PIPELINE',\n    'DROP DATABASE',\n    'DROP FUNCTION',\n    'DROP INDEX',\n    'DROP LINK',\n    'DROP PIPELINE',\n    'DROP PROCEDURE',\n    'DROP RESOURCE POOL',\n    'DROP ROLE',\n    'DROP USER',\n    'DROP VIEW',\n    'EXECUTE',\n    'EXPLAIN',\n    'FLUSH',\n    'FORCE',\n    'GRANT',\n    'HANDLER',\n    'HELP',\n    'KILL CONNECTION',\n    'KILLALL QUERIES',\n    'LOAD DATA',\n    'LOAD INDEX INTO CACHE',\n    'LOAD XML',\n    'LOCK INSTANCE FOR BACKUP',\n    'LOCK TABLES',\n    'MASTER_POS_WAIT',\n    'OPTIMIZE TABLE',\n    'PREPARE',\n    'PURGE BINARY LOGS',\n    'REBALANCE PARTITIONS',\n    'RELEASE SAVEPOINT',\n    'REMOVE AGGREGATOR',\n    'REMOVE LEAF',\n    'REPAIR TABLE',\n    'REPLACE',\n    'REPLICATE DATABASE',\n    'RESET',\n    'RESET MASTER',\n    'RESET PERSIST',\n    'RESET REPLICA',\n    'RESET SLAVE',\n    'RESTART',\n    'RESTORE DATABASE',\n    'RESTORE REDUNDANCY',\n    'REVOKE',\n    'ROLLBACK',\n    'ROLLBACK TO SAVEPOINT',\n    'SAVEPOINT',\n    'SET CHARACTER SET',\n    'SET DEFAULT ROLE',\n    'SET NAMES',\n    'SET PASSWORD',\n    'SET RESOURCE GROUP',\n    'SET ROLE',\n    'SET TRANSACTION',\n    'SHOW',\n    'SHOW CHARACTER SET',\n    'SHOW COLLATION',\n    'SHOW COLUMNS',\n    'SHOW CREATE DATABASE',\n    'SHOW CREATE FUNCTION',\n    'SHOW CREATE PIPELINE',\n    'SHOW CREATE PROCEDURE',\n    'SHOW CREATE TABLE',\n    'SHOW CREATE USER',\n    'SHOW CREATE VIEW',\n    'SHOW DATABASES',\n    'SHOW ENGINE',\n    'SHOW ENGINES',\n    'SHOW ERRORS',\n    'SHOW FUNCTION CODE',\n    'SHOW FUNCTION STATUS',\n    'SHOW GRANTS',\n    'SHOW INDEX',\n    'SHOW MASTER STATUS',\n    'SHOW OPEN TABLES',\n    'SHOW PLUGINS',\n    'SHOW PRIVILEGES',\n    'SHOW PROCEDURE CODE',\n    'SHOW PROCEDURE STATUS',\n    'SHOW PROCESSLIST',\n    'SHOW PROFILE',\n    'SHOW PROFILES',\n    'SHOW RELAYLOG EVENTS',\n    'SHOW REPLICA STATUS',\n    'SHOW REPLICAS',\n    'SHOW SLAVE',\n    'SHOW SLAVE HOSTS',\n    'SHOW STATUS',\n    'SHOW TABLE STATUS',\n    'SHOW TABLES',\n    'SHOW VARIABLES',\n    'SHOW WARNINGS',\n    'SHUTDOWN',\n    'SNAPSHOT DATABASE',\n    'SOURCE_POS_WAIT',\n    'START GROUP_REPLICATION',\n    'START PIPELINE',\n    'START REPLICA',\n    'START SLAVE',\n    'START TRANSACTION',\n    'STOP GROUP_REPLICATION',\n    'STOP PIPELINE',\n    'STOP REPLICA',\n    'STOP REPLICATING',\n    'STOP SLAVE',\n    'TEST PIPELINE',\n    'UNLOCK INSTANCE',\n    'UNLOCK TABLES',\n    'USE',\n    'XA',\n    // flow control\n    'ITERATE',\n    'LEAVE',\n    'LOOP',\n    'REPEAT',\n    'RETURN',\n    'WHILE',\n]);\nconst reservedSetOperations = expandPhrases([\n    'UNION [ALL | DISTINCT]',\n    'EXCEPT',\n    'INTERSECT',\n    'MINUS',\n]);\nconst reservedJoins = expandPhrases([\n    'JOIN',\n    '{LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{INNER | CROSS} JOIN',\n    'NATURAL {LEFT | RIGHT} [OUTER] JOIN',\n    // non-standard joins\n    'STRAIGHT_JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    'ON DELETE',\n    'ON UPDATE',\n    'CHARACTER SET',\n    '{ROWS | RANGE} BETWEEN',\n    'IDENTIFIED BY',\n]);\nexport const singlestoredb = {\n    name: 'singlestoredb',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        // TODO: support _binary\"some string\" prefix\n        stringTypes: [\n            '\"\"-qq-bs',\n            \"''-qq-bs\",\n            { quote: \"''-raw\", prefixes: ['B', 'X'], requirePrefix: true },\n        ],\n        identTypes: ['``'],\n        identChars: { first: '$', rest: '$', allowFirstCharNumber: true },\n        variableTypes: [\n            { regex: '@@?[A-Za-z0-9_$]+' },\n            { quote: '``', prefixes: ['@'], requirePrefix: true },\n        ],\n        lineCommentTypes: ['--', '#'],\n        operators: [\n            ':=',\n            '&',\n            '|',\n            '^',\n            '~',\n            '<<',\n            '>>',\n            '<=>',\n            '&&',\n            '||',\n            '::',\n            '::$',\n            '::%',\n            ':>',\n            '!:>',\n            '*.*', // Not actually an operator\n        ],\n        postProcess,\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::', '::$', '::%'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=singlestoredb.formatter.js.map","export const keywords = [\n    // List of all keywords taken from:\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/restricted-keywords/list-of-restricted-keywords.html\n    // Then filtered down to reserved keywords by running\n    // > SELECT * AS <keyword>;\n    // for each keyword in that list and observing which of these produce an error.\n    'ADD',\n    'ALL',\n    'ALTER',\n    'ANALYZE',\n    'AND',\n    'AS',\n    'ASC',\n    'ASENSITIVE',\n    'BEFORE',\n    'BETWEEN',\n    '_BINARY',\n    'BOTH',\n    'BY',\n    'CALL',\n    'CASCADE',\n    'CASE',\n    'CHANGE',\n    'CHECK',\n    'COLLATE',\n    'COLUMN',\n    'CONDITION',\n    'CONSTRAINT',\n    'CONTINUE',\n    'CONVERT',\n    'CREATE',\n    'CROSS',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURSOR',\n    'DATABASE',\n    'DATABASES',\n    'DAY_HOUR',\n    'DAY_MICROSECOND',\n    'DAY_MINUTE',\n    'DAY_SECOND',\n    'DECLARE',\n    'DEFAULT',\n    'DELAYED',\n    'DELETE',\n    'DESC',\n    'DESCRIBE',\n    'DETERMINISTIC',\n    'DISTINCT',\n    'DISTINCTROW',\n    'DIV',\n    'DROP',\n    'DUAL',\n    'EACH',\n    'ELSE',\n    'ELSEIF',\n    'ENCLOSED',\n    'ESCAPED',\n    'EXCEPT',\n    'EXISTS',\n    'EXIT',\n    'EXPLAIN',\n    'EXTRA_JOIN',\n    'FALSE',\n    'FETCH',\n    'FOR',\n    'FORCE',\n    'FORCE_COMPILED_MODE',\n    'FORCE_INTERPRETER_MODE',\n    'FOREIGN',\n    'FROM',\n    'FULL',\n    'FULLTEXT',\n    'GRANT',\n    'GROUP',\n    'HAVING',\n    'HEARTBEAT_NO_LOGGING',\n    'HIGH_PRIORITY',\n    'HOUR_MICROSECOND',\n    'HOUR_MINUTE',\n    'HOUR_SECOND',\n    'IF',\n    'IGNORE',\n    'IN',\n    'INDEX',\n    'INFILE',\n    'INNER',\n    'INOUT',\n    'INSENSITIVE',\n    'INSERT',\n    'IN',\n    '_INTERNAL_DYNAMIC_TYPECAST',\n    'INTERSECT',\n    'INTERVAL',\n    'INTO',\n    'ITERATE',\n    'JOIN',\n    'KEY',\n    'KEYS',\n    'KILL',\n    'LEADING',\n    'LEAVE',\n    'LEFT',\n    'LIKE',\n    'LIMIT',\n    'LINES',\n    'LOAD',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCK',\n    'LOOP',\n    'LOW_PRIORITY',\n    'MATCH',\n    'MAXVALUE',\n    'MINUS',\n    'MINUTE_MICROSECOND',\n    'MINUTE_SECOND',\n    'MOD',\n    'MODIFIES',\n    'NATURAL',\n    'NO_QUERY_REWRITE',\n    'NOT',\n    'NO_WRITE_TO_BINLOG',\n    'NO_QUERY_REWRITE',\n    'NULL',\n    'ON',\n    'OPTIMIZE',\n    'OPTION',\n    'OPTIONALLY',\n    'OR',\n    'ORDER',\n    'OUT',\n    'OUTER',\n    'OUTFILE',\n    'OVER',\n    'PRIMARY',\n    'PROCEDURE',\n    'PURGE',\n    'RANGE',\n    'READ',\n    'READS',\n    'REFERENCES',\n    'REGEXP',\n    'RELEASE',\n    'RENAME',\n    'REPEAT',\n    'REPLACE',\n    'REQUIRE',\n    'RESTRICT',\n    'RETURN',\n    'REVOKE',\n    'RIGHT',\n    'RIGHT_ANTI_JOIN',\n    'RIGHT_SEMI_JOIN',\n    'RIGHT_STRAIGHT_JOIN',\n    'RLIKE',\n    'SCHEMA',\n    'SCHEMAS',\n    'SECOND_MICROSECOND',\n    'SELECT',\n    'SEMI_JOIN',\n    'SENSITIVE',\n    'SEPARATOR',\n    'SET',\n    'SHOW',\n    'SIGNAL',\n    'SPATIAL',\n    'SPECIFIC',\n    'SQL',\n    'SQL_BIG_RESULT',\n    'SQL_BUFFER_RESULT',\n    'SQL_CACHE',\n    'SQL_CALC_FOUND_ROWS',\n    'SQLEXCEPTION',\n    'SQL_NO_CACHE',\n    'SQL_NO_LOGGING',\n    'SQL_SMALL_RESULT',\n    'SQLSTATE',\n    'SQLWARNING',\n    'STRAIGHT_JOIN',\n    'TABLE',\n    'TERMINATED',\n    'THEN',\n    'TO',\n    'TRAILING',\n    'TRIGGER',\n    'TRUE',\n    'UNBOUNDED',\n    'UNDO',\n    'UNION',\n    'UNIQUE',\n    'UNLOCK',\n    'UPDATE',\n    'USAGE',\n    'USE',\n    'USING',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    '_UTF8',\n    'VALUES',\n    'WHEN',\n    'WHERE',\n    'WHILE',\n    'WINDOW',\n    'WITH',\n    'WITHIN',\n    'WRITE',\n    'XOR',\n    'YEAR_MONTH',\n    'ZEROFILL',\n];\nexport const dataTypes = [\n    // https://docs.singlestore.com/cloud/reference/sql-reference/data-types/\n    'BIGINT',\n    'BINARY',\n    'BIT',\n    'BLOB',\n    'CHAR',\n    'CHARACTER',\n    'DATETIME',\n    'DEC',\n    'DECIMAL',\n    'DOUBLE PRECISION',\n    'DOUBLE',\n    'ENUM',\n    'FIXED',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'INT',\n    'INT1',\n    'INT2',\n    'INT3',\n    'INT4',\n    'INT8',\n    'INTEGER',\n    'LONG',\n    'LONGBLOB',\n    'LONGTEXT',\n    'MEDIUMBLOB',\n    'MEDIUMINT',\n    'MEDIUMTEXT',\n    'MIDDLEINT',\n    'NATIONAL CHAR',\n    'NATIONAL VARCHAR',\n    'NUMERIC',\n    'PRECISION',\n    'REAL',\n    'SMALLINT',\n    'TEXT',\n    'TIME',\n    'TIMESTAMP',\n    'TINYBLOB',\n    'TINYINT',\n    'TINYTEXT',\n    'UNSIGNED',\n    'VARBINARY',\n    'VARCHAR',\n    'VARCHARACTER',\n    'YEAR',\n];\n//# sourceMappingURL=singlestoredb.keywords.js.map","export const functions = [\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/vector-functions/vector-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/window-functions/window-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/string-functions/string-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/conditional-functions/conditional-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/numeric-functions/numeric-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/geospatial-functions/geospatial-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/json-functions/json-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/information-functions/information-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/aggregate-functions/aggregate-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/time-series-functions/time-series-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/identifier-generation-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/date-and-time-functions/date-and-time-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/distinct-count-estimation-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/full-text-search-functions/full-text-search-functions.html\n    // https://docs.singlestore.com/managed-service/en/reference/sql-reference/regular-expression-functions.html\n    'ABS',\n    'ACOS',\n    'ADDDATE',\n    'ADDTIME',\n    'AES_DECRYPT',\n    'AES_ENCRYPT',\n    'ANY_VALUE',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_COUNT_DISTINCT_ACCUMULATE',\n    'APPROX_COUNT_DISTINCT_COMBINE',\n    'APPROX_COUNT_DISTINCT_ESTIMATE',\n    'APPROX_GEOGRAPHY_INTERSECTS',\n    'APPROX_PERCENTILE',\n    'ASCII',\n    'ASIN',\n    'ATAN',\n    'ATAN2',\n    'AVG',\n    'BIN',\n    'BINARY',\n    'BIT_AND',\n    'BIT_COUNT',\n    'BIT_OR',\n    'BIT_XOR',\n    'CAST',\n    'CEIL',\n    'CEILING',\n    'CHAR',\n    'CHARACTER_LENGTH',\n    'CHAR_LENGTH',\n    'CHARSET',\n    'COALESCE',\n    'COERCIBILITY',\n    'COLLATION',\n    'COLLECT',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONNECTION_ID',\n    'CONV',\n    'CONVERT',\n    'CONVERT_TZ',\n    'COS',\n    'COT',\n    'COUNT',\n    'CUME_DIST',\n    'CURDATE',\n    'CURRENT_DATE',\n    'CURRENT_ROLE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'CURTIME',\n    'DATABASE',\n    'DATE',\n    'DATE_ADD',\n    'DATEDIFF',\n    'DATE_FORMAT',\n    'DATE_SUB',\n    'DATE_TRUNC',\n    'DAY',\n    'DAYNAME',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFYEAR',\n    'DECODE',\n    'DEFAULT',\n    'DEGREES',\n    'DENSE_RANK',\n    'DIV',\n    'DOT_PRODUCT',\n    'ELT',\n    'EUCLIDEAN_DISTANCE',\n    'EXP',\n    'EXTRACT',\n    'FIELD',\n    'FIRST',\n    'FIRST_VALUE',\n    'FLOOR',\n    'FORMAT',\n    'FOUND_ROWS',\n    'FROM_BASE64',\n    'FROM_DAYS',\n    'FROM_UNIXTIME',\n    'GEOGRAPHY_AREA',\n    'GEOGRAPHY_CONTAINS',\n    'GEOGRAPHY_DISTANCE',\n    'GEOGRAPHY_INTERSECTS',\n    'GEOGRAPHY_LATITUDE',\n    'GEOGRAPHY_LENGTH',\n    'GEOGRAPHY_LONGITUDE',\n    'GEOGRAPHY_POINT',\n    'GEOGRAPHY_WITHIN_DISTANCE',\n    'GEOMETRY_AREA',\n    'GEOMETRY_CONTAINS',\n    'GEOMETRY_DISTANCE',\n    'GEOMETRY_FILTER',\n    'GEOMETRY_INTERSECTS',\n    'GEOMETRY_LENGTH',\n    'GEOMETRY_POINT',\n    'GEOMETRY_WITHIN_DISTANCE',\n    'GEOMETRY_X',\n    'GEOMETRY_Y',\n    'GREATEST',\n    'GROUPING',\n    'GROUP_CONCAT',\n    'HEX',\n    'HIGHLIGHT',\n    'HOUR',\n    'ICU_VERSION',\n    'IF',\n    'IFNULL',\n    'INET_ATON',\n    'INET_NTOA',\n    'INET6_ATON',\n    'INET6_NTOA',\n    'INITCAP',\n    'INSERT',\n    'INSTR',\n    'INTERVAL',\n    'IS',\n    'IS NULL',\n    'JSON_AGG',\n    'JSON_ARRAY_CONTAINS_DOUBLE',\n    'JSON_ARRAY_CONTAINS_JSON',\n    'JSON_ARRAY_CONTAINS_STRING',\n    'JSON_ARRAY_PUSH_DOUBLE',\n    'JSON_ARRAY_PUSH_JSON',\n    'JSON_ARRAY_PUSH_STRING',\n    'JSON_DELETE_KEY',\n    'JSON_EXTRACT_DOUBLE',\n    'JSON_EXTRACT_JSON',\n    'JSON_EXTRACT_STRING',\n    'JSON_EXTRACT_BIGINT',\n    'JSON_GET_TYPE',\n    'JSON_LENGTH',\n    'JSON_SET_DOUBLE',\n    'JSON_SET_JSON',\n    'JSON_SET_STRING',\n    'JSON_SPLICE_DOUBLE',\n    'JSON_SPLICE_JSON',\n    'JSON_SPLICE_STRING',\n    'LAG',\n    'LAST_DAY',\n    'LAST_VALUE',\n    'LCASE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LIKE',\n    'LN',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOCATE',\n    'LOG',\n    'LOG10',\n    'LOG2',\n    'LPAD',\n    'LTRIM',\n    'MATCH',\n    'MAX',\n    'MD5',\n    'MEDIAN',\n    'MICROSECOND',\n    'MIN',\n    'MINUTE',\n    'MOD',\n    'MONTH',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'NOT',\n    'NOW',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'OCTET_LENGTH',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PI',\n    'PIVOT',\n    'POSITION',\n    'POW',\n    'POWER',\n    'QUARTER',\n    'QUOTE',\n    'RADIANS',\n    'RAND',\n    'RANK',\n    'REGEXP',\n    'REPEAT',\n    'REPLACE',\n    'REVERSE',\n    'RIGHT',\n    'RLIKE',\n    'ROUND',\n    'ROW_COUNT',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'SCALAR',\n    'SCHEMA',\n    'SEC_TO_TIME',\n    'SHA1',\n    'SHA2',\n    'SIGMOID',\n    'SIGN',\n    'SIN',\n    'SLEEP',\n    'SPLIT',\n    'SOUNDEX',\n    'SOUNDS LIKE',\n    'SOURCE_POS_WAIT',\n    'SPACE',\n    'SQRT',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STR_TO_DATE',\n    'SUBDATE',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUBSTRING_INDEX',\n    'SUM',\n    'SYS_GUID',\n    'TAN',\n    'TIME',\n    'TIMEDIFF',\n    'TIME_BUCKET',\n    'TIME_FORMAT',\n    'TIMESTAMP',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TIME_TO_SEC',\n    'TO_BASE64',\n    'TO_CHAR',\n    'TO_DAYS',\n    'TO_JSON',\n    'TO_NUMBER',\n    'TO_SECONDS',\n    'TO_TIMESTAMP',\n    'TRIM',\n    'TRUNC',\n    'TRUNCATE',\n    'UCASE',\n    'UNHEX',\n    'UNIX_TIMESTAMP',\n    'UPDATEXML',\n    'UPPER',\n    // 'USER',\n    'UTC_DATE',\n    'UTC_TIME',\n    'UTC_TIMESTAMP',\n    'UUID',\n    'VALUES',\n    'VARIANCE',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VECTOR_SUB',\n    'VERSION',\n    'WEEK',\n    'WEEKDAY',\n    'WEEKOFYEAR',\n    'YEAR',\n];\n//# sourceMappingURL=singlestoredb.functions.js.map","import { expandPhrases } from '../../expandPhrases.js';\nimport { functions } from './snowflake.functions.js';\nimport { dataTypes, keywords } from './snowflake.keywords.js';\nconst reservedSelect = expandPhrases(['SELECT [ALL | DISTINCT]']);\nconst reservedClauses = expandPhrases([\n    // queries\n    'WITH [RECURSIVE]',\n    'FROM',\n    'WHERE',\n    'GROUP BY',\n    'HAVING',\n    'PARTITION BY',\n    'ORDER BY',\n    'QUALIFY',\n    'LIMIT',\n    'OFFSET',\n    'FETCH [FIRST | NEXT]',\n    // Data manipulation\n    // - insert:\n    'INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]',\n    '{THEN | ELSE} INTO',\n    'VALUES',\n    // - update:\n    'SET',\n    'CLUSTER BY',\n    '[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}',\n    'COPY GRANTS',\n    'USING TEMPLATE',\n    'MERGE INTO',\n    'WHEN MATCHED [AND]',\n    'THEN {UPDATE SET | DELETE}',\n    'WHEN NOT MATCHED THEN INSERT',\n]);\nconst standardOnelineClauses = expandPhrases([\n    'CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]',\n    'CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]',\n]);\nconst tabularOnelineClauses = expandPhrases([\n    // - create:\n    'CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]',\n    // - update:\n    'UPDATE',\n    // - delete:\n    'DELETE FROM',\n    // - drop table:\n    'DROP TABLE [IF EXISTS]',\n    // - alter table:\n    'ALTER TABLE [IF EXISTS]',\n    'RENAME TO',\n    'SWAP WITH',\n    '[SUSPEND | RESUME] RECLUSTER',\n    'DROP CLUSTERING KEY',\n    'ADD [COLUMN]',\n    'RENAME COLUMN',\n    '{ALTER | MODIFY} [COLUMN]',\n    'DROP [COLUMN]',\n    '{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]',\n    'RENAME CONSTRAINT',\n    '{ADD | DROP} SEARCH OPTIMIZATION',\n    '{SET | UNSET} TAG',\n    '{ADD | DROP} ROW ACCESS POLICY',\n    'DROP ALL ROW ACCESS POLICIES',\n    '{SET | DROP} DEFAULT',\n    '{SET | DROP} NOT NULL',\n    'SET DATA TYPE',\n    'UNSET COMMENT',\n    '{SET | UNSET} MASKING POLICY',\n    // - truncate:\n    'TRUNCATE [TABLE] [IF EXISTS]',\n    // other\n    // https://docs.snowflake.com/en/sql-reference/sql-all.html\n    //\n    // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n    // 2. delete all lines that contain a sting like '(.*)', they are already covered in the list\n    // 3. delete all lines that contain a sting like '<.*>', they are already covered in the list\n    // 4. delete all lines that contain '…', they are part of a regex statement that can't be covered here\n    // 5. Manually add 'COPY INTO'\n    // 6. Remove all lines that are already in `reservedClauses`\n    //\n    // Steps 1-4 can be combined by the following script in the developer console:\n    // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n    //   filter(x => !x.match(/\\(.*\\)/) && !x.match(/…/) && !x.match(/<.*>/)) // Step 2-4\n    'ALTER ACCOUNT',\n    'ALTER API INTEGRATION',\n    'ALTER CONNECTION',\n    'ALTER DATABASE',\n    'ALTER EXTERNAL TABLE',\n    'ALTER FAILOVER GROUP',\n    'ALTER FILE FORMAT',\n    'ALTER FUNCTION',\n    'ALTER INTEGRATION',\n    'ALTER MASKING POLICY',\n    'ALTER MATERIALIZED VIEW',\n    'ALTER NETWORK POLICY',\n    'ALTER NOTIFICATION INTEGRATION',\n    'ALTER PIPE',\n    'ALTER PROCEDURE',\n    'ALTER REPLICATION GROUP',\n    'ALTER RESOURCE MONITOR',\n    'ALTER ROLE',\n    'ALTER ROW ACCESS POLICY',\n    'ALTER SCHEMA',\n    'ALTER SECURITY INTEGRATION',\n    'ALTER SEQUENCE',\n    'ALTER SESSION',\n    'ALTER SESSION POLICY',\n    'ALTER SHARE',\n    'ALTER STAGE',\n    'ALTER STORAGE INTEGRATION',\n    'ALTER STREAM',\n    'ALTER TAG',\n    'ALTER TASK',\n    'ALTER USER',\n    'ALTER VIEW',\n    'ALTER WAREHOUSE',\n    'BEGIN',\n    'CALL',\n    'COMMIT',\n    'COPY INTO',\n    'CREATE ACCOUNT',\n    'CREATE API INTEGRATION',\n    'CREATE CONNECTION',\n    'CREATE DATABASE',\n    'CREATE EXTERNAL FUNCTION',\n    'CREATE EXTERNAL TABLE',\n    'CREATE FAILOVER GROUP',\n    'CREATE FILE FORMAT',\n    'CREATE FUNCTION',\n    'CREATE INTEGRATION',\n    'CREATE MANAGED ACCOUNT',\n    'CREATE MASKING POLICY',\n    'CREATE MATERIALIZED VIEW',\n    'CREATE NETWORK POLICY',\n    'CREATE NOTIFICATION INTEGRATION',\n    'CREATE PIPE',\n    'CREATE PROCEDURE',\n    'CREATE REPLICATION GROUP',\n    'CREATE RESOURCE MONITOR',\n    'CREATE ROLE',\n    'CREATE ROW ACCESS POLICY',\n    'CREATE SCHEMA',\n    'CREATE SECURITY INTEGRATION',\n    'CREATE SEQUENCE',\n    'CREATE SESSION POLICY',\n    'CREATE SHARE',\n    'CREATE STAGE',\n    'CREATE STORAGE INTEGRATION',\n    'CREATE STREAM',\n    'CREATE TAG',\n    'CREATE TASK',\n    'CREATE USER',\n    'CREATE WAREHOUSE',\n    'DELETE',\n    'DESCRIBE DATABASE',\n    'DESCRIBE EXTERNAL TABLE',\n    'DESCRIBE FILE FORMAT',\n    'DESCRIBE FUNCTION',\n    'DESCRIBE INTEGRATION',\n    'DESCRIBE MASKING POLICY',\n    'DESCRIBE MATERIALIZED VIEW',\n    'DESCRIBE NETWORK POLICY',\n    'DESCRIBE PIPE',\n    'DESCRIBE PROCEDURE',\n    'DESCRIBE RESULT',\n    'DESCRIBE ROW ACCESS POLICY',\n    'DESCRIBE SCHEMA',\n    'DESCRIBE SEQUENCE',\n    'DESCRIBE SESSION POLICY',\n    'DESCRIBE SHARE',\n    'DESCRIBE STAGE',\n    'DESCRIBE STREAM',\n    'DESCRIBE TABLE',\n    'DESCRIBE TASK',\n    'DESCRIBE TRANSACTION',\n    'DESCRIBE USER',\n    'DESCRIBE VIEW',\n    'DESCRIBE WAREHOUSE',\n    'DROP CONNECTION',\n    'DROP DATABASE',\n    'DROP EXTERNAL TABLE',\n    'DROP FAILOVER GROUP',\n    'DROP FILE FORMAT',\n    'DROP FUNCTION',\n    'DROP INTEGRATION',\n    'DROP MANAGED ACCOUNT',\n    'DROP MASKING POLICY',\n    'DROP MATERIALIZED VIEW',\n    'DROP NETWORK POLICY',\n    'DROP PIPE',\n    'DROP PROCEDURE',\n    'DROP REPLICATION GROUP',\n    'DROP RESOURCE MONITOR',\n    'DROP ROLE',\n    'DROP ROW ACCESS POLICY',\n    'DROP SCHEMA',\n    'DROP SEQUENCE',\n    'DROP SESSION POLICY',\n    'DROP SHARE',\n    'DROP STAGE',\n    'DROP STREAM',\n    'DROP TAG',\n    'DROP TASK',\n    'DROP USER',\n    'DROP VIEW',\n    'DROP WAREHOUSE',\n    'EXECUTE IMMEDIATE',\n    'EXECUTE TASK',\n    'EXPLAIN',\n    'GET',\n    'GRANT OWNERSHIP',\n    'GRANT ROLE',\n    'INSERT',\n    'LIST',\n    'MERGE',\n    'PUT',\n    'REMOVE',\n    'REVOKE ROLE',\n    'ROLLBACK',\n    'SHOW COLUMNS',\n    'SHOW CONNECTIONS',\n    'SHOW DATABASES',\n    'SHOW DATABASES IN FAILOVER GROUP',\n    'SHOW DATABASES IN REPLICATION GROUP',\n    'SHOW DELEGATED AUTHORIZATIONS',\n    'SHOW EXTERNAL FUNCTIONS',\n    'SHOW EXTERNAL TABLES',\n    'SHOW FAILOVER GROUPS',\n    'SHOW FILE FORMATS',\n    'SHOW FUNCTIONS',\n    'SHOW GLOBAL ACCOUNTS',\n    'SHOW GRANTS',\n    'SHOW INTEGRATIONS',\n    'SHOW LOCKS',\n    'SHOW MANAGED ACCOUNTS',\n    'SHOW MASKING POLICIES',\n    'SHOW MATERIALIZED VIEWS',\n    'SHOW NETWORK POLICIES',\n    'SHOW OBJECTS',\n    'SHOW ORGANIZATION ACCOUNTS',\n    'SHOW PARAMETERS',\n    'SHOW PIPES',\n    'SHOW PRIMARY KEYS',\n    'SHOW PROCEDURES',\n    'SHOW REGIONS',\n    'SHOW REPLICATION ACCOUNTS',\n    'SHOW REPLICATION DATABASES',\n    'SHOW REPLICATION GROUPS',\n    'SHOW RESOURCE MONITORS',\n    'SHOW ROLES',\n    'SHOW ROW ACCESS POLICIES',\n    'SHOW SCHEMAS',\n    'SHOW SEQUENCES',\n    'SHOW SESSION POLICIES',\n    'SHOW SHARES',\n    'SHOW SHARES IN FAILOVER GROUP',\n    'SHOW SHARES IN REPLICATION GROUP',\n    'SHOW STAGES',\n    'SHOW STREAMS',\n    'SHOW TABLES',\n    'SHOW TAGS',\n    'SHOW TASKS',\n    'SHOW TRANSACTIONS',\n    'SHOW USER FUNCTIONS',\n    'SHOW USERS',\n    'SHOW VARIABLES',\n    'SHOW VIEWS',\n    'SHOW WAREHOUSES',\n    'TRUNCATE MATERIALIZED VIEW',\n    'UNDROP DATABASE',\n    'UNDROP SCHEMA',\n    'UNDROP TABLE',\n    'UNDROP TAG',\n    'UNSET',\n    'USE DATABASE',\n    'USE ROLE',\n    'USE SCHEMA',\n    'USE SECONDARY ROLES',\n    'USE WAREHOUSE',\n]);\nconst reservedSetOperations = expandPhrases(['UNION [ALL]', 'MINUS', 'EXCEPT', 'INTERSECT']);\nconst reservedJoins = expandPhrases([\n    '[INNER] JOIN',\n    '[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN',\n    '{CROSS | NATURAL} JOIN',\n]);\nconst reservedPhrases = expandPhrases([\n    '{ROWS | RANGE} BETWEEN',\n    'ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]',\n]);\nexport const snowflake = {\n    name: 'snowflake',\n    tokenizerOptions: {\n        reservedSelect,\n        reservedClauses: [...reservedClauses, ...standardOnelineClauses, ...tabularOnelineClauses],\n        reservedSetOperations,\n        reservedJoins,\n        reservedPhrases,\n        reservedKeywords: keywords,\n        reservedDataTypes: dataTypes,\n        reservedFunctionNames: functions,\n        stringTypes: ['$$', `''-qq-bs`],\n        identTypes: ['\"\"-qq'],\n        variableTypes: [\n            // for accessing columns at certain positons in the table\n            { regex: '[$][1-9]\\\\d*' },\n            // identifier style syntax\n            { regex: '[$][_a-zA-Z][_a-zA-Z0-9$]*' },\n        ],\n        extraParens: ['[]'],\n        identChars: { rest: '$' },\n        lineCommentTypes: ['--', '//'],\n        operators: [\n            // Modulo\n            '%',\n            // Type cast\n            '::',\n            // String concat\n            '||',\n            // Generators: https://docs.snowflake.com/en/sql-reference/functions/generator.html#generator\n            '=>',\n            // Assignment https://docs.snowflake.com/en/sql-reference/snowflake-scripting/let\n            ':=',\n            // Lambda: https://docs.snowflake.com/en/user-guide/querying-semistructured#lambda-expressions\n            '->',\n        ],\n        propertyAccessOperators: [':'],\n    },\n    formatOptions: {\n        alwaysDenseOperators: ['::'],\n        onelineClauses: [...standardOnelineClauses, ...tabularOnelineClauses],\n        tabularOnelineClauses,\n    },\n};\n//# sourceMappingURL=snowflake.formatter.js.map","export const keywords = [\n    // https://docs.snowflake.com/en/sql-reference/reserved-keywords.html\n    //\n    // run in console on this page: $x('//tbody/tr/*[1]/p/text()').map(x => x.nodeValue)\n    'ACCOUNT',\n    'ALL',\n    'ALTER',\n    'AND',\n    'ANY',\n    'AS',\n    'BETWEEN',\n    'BY',\n    'CASE',\n    'CAST',\n    'CHECK',\n    'COLUMN',\n    'CONNECT',\n    'CONNECTION',\n    'CONSTRAINT',\n    'CREATE',\n    'CROSS',\n    'CURRENT',\n    'CURRENT_DATE',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_USER',\n    'DATABASE',\n    'DELETE',\n    'DISTINCT',\n    'DROP',\n    'ELSE',\n    'EXISTS',\n    'FALSE',\n    'FOLLOWING',\n    'FOR',\n    'FROM',\n    'FULL',\n    'GRANT',\n    'GROUP',\n    'GSCLUSTER',\n    'HAVING',\n    'ILIKE',\n    'IN',\n    'INCREMENT',\n    'INNER',\n    'INSERT',\n    'INTERSECT',\n    'INTO',\n    'IS',\n    'ISSUE',\n    'JOIN',\n    'LATERAL',\n    'LEFT',\n    'LIKE',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'MINUS',\n    'NATURAL',\n    'NOT',\n    'NULL',\n    'OF',\n    'ON',\n    'OR',\n    'ORDER',\n    'ORGANIZATION',\n    'QUALIFY',\n    'REGEXP',\n    'REVOKE',\n    'RIGHT',\n    'RLIKE',\n    'ROW',\n    'ROWS',\n    'SAMPLE',\n    'SCHEMA',\n    'SELECT',\n    'SET',\n    'SOME',\n    'START',\n    'TABLE',\n    'TABLESAMPLE',\n    'THEN',\n    'TO',\n    'TRIGGER',\n    'TRUE',\n    'TRY_CAST',\n    'UNION',\n    'UNIQUE',\n    'UPDATE',\n    'USING',\n    'VALUES',\n    'VIEW',\n    'WHEN',\n    'WHENEVER',\n    'WHERE',\n    'WITH',\n    // These are definitely keywords, but haven't found a definite list in the docs\n    'COMMENT',\n];\nexport const dataTypes = [\n    'NUMBER',\n    'DECIMAL',\n    'NUMERIC',\n    'INT',\n    'INTEGER',\n    'BIGINT',\n    'SMALLINT',\n    'TINYINT',\n    'BYTEINT',\n    'FLOAT',\n    'FLOAT4',\n    'FLOAT8',\n    'DOUBLE',\n    'DOUBLE PRECISION',\n    'REAL',\n    'VARCHAR',\n    'CHAR',\n    'CHARACTER',\n    'STRING',\n    'TEXT',\n    'BINARY',\n    'VARBINARY',\n    'BOOLEAN',\n    'DATE',\n    'DATETIME',\n    'TIME',\n    'TIMESTAMP',\n    'TIMESTAMP_LTZ',\n    'TIMESTAMP_NTZ',\n    'TIMESTAMP',\n    'TIMESTAMP_TZ',\n    'VARIANT',\n    'OBJECT',\n    'ARRAY',\n    'GEOGRAPHY',\n    'GEOMETRY',\n];\n//# sourceMappingURL=snowflake.keywords.js.map","export const functions = [\n    // https://docs.snowflake.com/en/sql-reference-functions.html\n    //\n    // https://docs.snowflake.com/en/sql-reference/functions-all.html\n    // 1. run in console on this page: $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue)\n    // 2. split all lines that contain ',' or '/' into multiple lines\n    // 3. remove all '— Deprecated' parts from the strings\n    // 4. delete all strings that end with '<object_type>', they are already covered in the list\n    // 5. remove all strings that contain '[', they are operators not functions\n    // 6. fix all values that contain '*'\n    // 7. delete operatos ':', '::', '||'\n    //\n    // Steps 1-5 can be combined by the following script in the developer console:\n    // $x('//tbody/tr/*[1]//a/span/text()').map(x => x.nodeValue) // Step 1\n    //   .map(x => x.split(x.includes(',') ? ',' : '/')).flat().map(x => x.trim()) // Step 2\n    //   .map(x => x.replace('— Deprecated', '')) // Step 3\n    //   .filter(x => !x.endsWith('<object_type>')) // Step 4\n    //   .filter(x => !x.includes('[')) // Step 5\n    'ABS',\n    'ACOS',\n    'ACOSH',\n    'ADD_MONTHS',\n    'ALL_USER_NAMES',\n    'ANY_VALUE',\n    'APPROX_COUNT_DISTINCT',\n    'APPROX_PERCENTILE',\n    'APPROX_PERCENTILE_ACCUMULATE',\n    'APPROX_PERCENTILE_COMBINE',\n    'APPROX_PERCENTILE_ESTIMATE',\n    'APPROX_TOP_K',\n    'APPROX_TOP_K_ACCUMULATE',\n    'APPROX_TOP_K_COMBINE',\n    'APPROX_TOP_K_ESTIMATE',\n    'APPROXIMATE_JACCARD_INDEX',\n    'APPROXIMATE_SIMILARITY',\n    'ARRAY_AGG',\n    'ARRAY_APPEND',\n    'ARRAY_CAT',\n    'ARRAY_COMPACT',\n    'ARRAY_CONSTRUCT',\n    'ARRAY_CONSTRUCT_COMPACT',\n    'ARRAY_CONTAINS',\n    'ARRAY_INSERT',\n    'ARRAY_INTERSECTION',\n    'ARRAY_POSITION',\n    'ARRAY_PREPEND',\n    'ARRAY_SIZE',\n    'ARRAY_SLICE',\n    'ARRAY_TO_STRING',\n    'ARRAY_UNION_AGG',\n    'ARRAY_UNIQUE_AGG',\n    'ARRAYS_OVERLAP',\n    'AS_ARRAY',\n    'AS_BINARY',\n    'AS_BOOLEAN',\n    'AS_CHAR',\n    'AS_VARCHAR',\n    'AS_DATE',\n    'AS_DECIMAL',\n    'AS_NUMBER',\n    'AS_DOUBLE',\n    'AS_REAL',\n    'AS_INTEGER',\n    'AS_OBJECT',\n    'AS_TIME',\n    'AS_TIMESTAMP_LTZ',\n    'AS_TIMESTAMP_NTZ',\n    'AS_TIMESTAMP_TZ',\n    'ASCII',\n    'ASIN',\n    'ASINH',\n    'ATAN',\n    'ATAN2',\n    'ATANH',\n    'AUTO_REFRESH_REGISTRATION_HISTORY',\n    'AUTOMATIC_CLUSTERING_HISTORY',\n    'AVG',\n    'BASE64_DECODE_BINARY',\n    'BASE64_DECODE_STRING',\n    'BASE64_ENCODE',\n    'BIT_LENGTH',\n    'BITAND',\n    'BITAND_AGG',\n    'BITMAP_BIT_POSITION',\n    'BITMAP_BUCKET_NUMBER',\n    'BITMAP_CONSTRUCT_AGG',\n    'BITMAP_COUNT',\n    'BITMAP_OR_AGG',\n    'BITNOT',\n    'BITOR',\n    'BITOR_AGG',\n    'BITSHIFTLEFT',\n    'BITSHIFTRIGHT',\n    'BITXOR',\n    'BITXOR_AGG',\n    'BOOLAND',\n    'BOOLAND_AGG',\n    'BOOLNOT',\n    'BOOLOR',\n    'BOOLOR_AGG',\n    'BOOLXOR',\n    'BOOLXOR_AGG',\n    'BUILD_SCOPED_FILE_URL',\n    'BUILD_STAGE_FILE_URL',\n    'CASE',\n    'CAST',\n    'CBRT',\n    'CEIL',\n    'CHARINDEX',\n    'CHECK_JSON',\n    'CHECK_XML',\n    'CHR',\n    'CHAR',\n    'COALESCE',\n    'COLLATE',\n    'COLLATION',\n    'COMPLETE_TASK_GRAPHS',\n    'COMPRESS',\n    'CONCAT',\n    'CONCAT_WS',\n    'CONDITIONAL_CHANGE_EVENT',\n    'CONDITIONAL_TRUE_EVENT',\n    'CONTAINS',\n    'CONVERT_TIMEZONE',\n    'COPY_HISTORY',\n    'CORR',\n    'COS',\n    'COSH',\n    'COT',\n    'COUNT',\n    'COUNT_IF',\n    'COVAR_POP',\n    'COVAR_SAMP',\n    'CUME_DIST',\n    'CURRENT_ACCOUNT',\n    'CURRENT_AVAILABLE_ROLES',\n    'CURRENT_CLIENT',\n    'CURRENT_DATABASE',\n    'CURRENT_DATE',\n    'CURRENT_IP_ADDRESS',\n    'CURRENT_REGION',\n    'CURRENT_ROLE',\n    'CURRENT_SCHEMA',\n    'CURRENT_SCHEMAS',\n    'CURRENT_SECONDARY_ROLES',\n    'CURRENT_SESSION',\n    'CURRENT_STATEMENT',\n    'CURRENT_TASK_GRAPHS',\n    'CURRENT_TIME',\n    'CURRENT_TIMESTAMP',\n    'CURRENT_TRANSACTION',\n    'CURRENT_USER',\n    'CURRENT_VERSION',\n    'CURRENT_WAREHOUSE',\n    'DATA_TRANSFER_HISTORY',\n    'DATABASE_REFRESH_HISTORY',\n    'DATABASE_REFRESH_PROGRESS',\n    'DATABASE_REFRESH_PROGRESS_BY_JOB',\n    'DATABASE_STORAGE_USAGE_HISTORY',\n    'DATE_FROM_PARTS',\n    'DATE_PART',\n    'DATE_TRUNC',\n    'DATEADD',\n    'DATEDIFF',\n    'DAYNAME',\n    'DECODE',\n    'DECOMPRESS_BINARY',\n    'DECOMPRESS_STRING',\n    'DECRYPT',\n    'DECRYPT_RAW',\n    'DEGREES',\n    'DENSE_RANK',\n    'DIV0',\n    'EDITDISTANCE',\n    'ENCRYPT',\n    'ENCRYPT_RAW',\n    'ENDSWITH',\n    'EQUAL_NULL',\n    'EXP',\n    'EXPLAIN_JSON',\n    'EXTERNAL_FUNCTIONS_HISTORY',\n    'EXTERNAL_TABLE_FILES',\n    'EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY',\n    'EXTRACT',\n    'EXTRACT_SEMANTIC_CATEGORIES',\n    'FACTORIAL',\n    'FILTER',\n    'FIRST_VALUE',\n    'FLATTEN',\n    'FLOOR',\n    'GENERATE_COLUMN_DESCRIPTION',\n    'GENERATOR',\n    'GET',\n    'GET_ABSOLUTE_PATH',\n    'GET_DDL',\n    'GET_IGNORE_CASE',\n    'GET_OBJECT_REFERENCES',\n    'GET_PATH',\n    'GET_PRESIGNED_URL',\n    'GET_RELATIVE_PATH',\n    'GET_STAGE_LOCATION',\n    'GETBIT',\n    'GREATEST',\n    'GREATEST_IGNORE_NULLS',\n    'GROUPING',\n    'GROUPING_ID',\n    'HASH',\n    'HASH_AGG',\n    'HAVERSINE',\n    'HEX_DECODE_BINARY',\n    'HEX_DECODE_STRING',\n    'HEX_ENCODE',\n    'HLL',\n    'HLL_ACCUMULATE',\n    'HLL_COMBINE',\n    'HLL_ESTIMATE',\n    'HLL_EXPORT',\n    'HLL_IMPORT',\n    'HOUR',\n    'MINUTE',\n    'SECOND',\n    'IFF',\n    'IFNULL',\n    'ILIKE',\n    'ILIKE ANY',\n    'INFER_SCHEMA',\n    'INITCAP',\n    'INSERT',\n    'INVOKER_ROLE',\n    'INVOKER_SHARE',\n    'IS_ARRAY',\n    'IS_BINARY',\n    'IS_BOOLEAN',\n    'IS_CHAR',\n    'IS_VARCHAR',\n    'IS_DATE',\n    'IS_DATE_VALUE',\n    'IS_DECIMAL',\n    'IS_DOUBLE',\n    'IS_REAL',\n    'IS_GRANTED_TO_INVOKER_ROLE',\n    'IS_INTEGER',\n    'IS_NULL_VALUE',\n    'IS_OBJECT',\n    'IS_ROLE_IN_SESSION',\n    'IS_TIME',\n    'IS_TIMESTAMP_LTZ',\n    'IS_TIMESTAMP_NTZ',\n    'IS_TIMESTAMP_TZ',\n    'JAROWINKLER_SIMILARITY',\n    'JSON_EXTRACT_PATH_TEXT',\n    'KURTOSIS',\n    'LAG',\n    'LAST_DAY',\n    'LAST_QUERY_ID',\n    'LAST_TRANSACTION',\n    'LAST_VALUE',\n    'LEAD',\n    'LEAST',\n    'LEFT',\n    'LENGTH',\n    'LEN',\n    'LIKE',\n    'LIKE ALL',\n    'LIKE ANY',\n    'LISTAGG',\n    'LN',\n    'LOCALTIME',\n    'LOCALTIMESTAMP',\n    'LOG',\n    'LOGIN_HISTORY',\n    'LOGIN_HISTORY_BY_USER',\n    'LOWER',\n    'LPAD',\n    'LTRIM',\n    'MATERIALIZED_VIEW_REFRESH_HISTORY',\n    'MD5',\n    'MD5_HEX',\n    'MD5_BINARY',\n    'MD5_NUMBER — Obsoleted',\n    'MD5_NUMBER_LOWER64',\n    'MD5_NUMBER_UPPER64',\n    'MEDIAN',\n    'MIN',\n    'MAX',\n    'MINHASH',\n    'MINHASH_COMBINE',\n    'MOD',\n    'MODE',\n    'MONTHNAME',\n    'MONTHS_BETWEEN',\n    'NEXT_DAY',\n    'NORMAL',\n    'NTH_VALUE',\n    'NTILE',\n    'NULLIF',\n    'NULLIFZERO',\n    'NVL',\n    'NVL2',\n    'OBJECT_AGG',\n    'OBJECT_CONSTRUCT',\n    'OBJECT_CONSTRUCT_KEEP_NULL',\n    'OBJECT_DELETE',\n    'OBJECT_INSERT',\n    'OBJECT_KEYS',\n    'OBJECT_PICK',\n    'OCTET_LENGTH',\n    'PARSE_IP',\n    'PARSE_JSON',\n    'PARSE_URL',\n    'PARSE_XML',\n    'PERCENT_RANK',\n    'PERCENTILE_CONT',\n    'PERCENTILE_DISC',\n    'PI',\n    'PIPE_USAGE_HISTORY',\n    'POLICY_CONTEXT',\n    'POLICY_REFERENCES',\n    'POSITION',\n    'POW',\n    'POWER',\n    'PREVIOUS_DAY',\n    'QUERY_ACCELERATION_HISTORY',\n    'QUERY_HISTORY',\n    'QUERY_HISTORY_BY_SESSION',\n    'QUERY_HISTORY_BY_USER',\n    'QUERY_HISTORY_BY_WAREHOUSE',\n    'RADIANS',\n    'RANDOM',\n    'RANDSTR',\n    'RANK',\n    'RATIO_TO_REPORT',\n    'REGEXP',\n    'REGEXP_COUNT',\n    'REGEXP_INSTR',\n    'REGEXP_LIKE',\n    'REGEXP_REPLACE',\n    'REGEXP_SUBSTR',\n    'REGEXP_SUBSTR_ALL',\n    'REGR_AVGX',\n    'REGR_AVGY',\n    'REGR_COUNT',\n    'REGR_INTERCEPT',\n    'REGR_R2',\n    'REGR_SLOPE',\n    'REGR_SXX',\n    'REGR_SXY',\n    'REGR_SYY',\n    'REGR_VALX',\n    'REGR_VALY',\n    'REPEAT',\n    'REPLACE',\n    'REPLICATION_GROUP_REFRESH_HISTORY',\n    'REPLICATION_GROUP_REFRESH_PROGRESS',\n    'REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB',\n    'REPLICATION_GROUP_USAGE_HISTORY',\n    'REPLICATION_USAGE_HISTORY',\n    'REST_EVENT_HISTORY',\n    'RESULT_SCAN',\n    'REVERSE',\n    'RIGHT',\n    'RLIKE',\n    'ROUND',\n    'ROW_NUMBER',\n    'RPAD',\n    'RTRIM',\n    'RTRIMMED_LENGTH',\n    'SEARCH_OPTIMIZATION_HISTORY',\n    'SEQ1',\n    'SEQ2',\n    'SEQ4',\n    'SEQ8',\n    'SERVERLESS_TASK_HISTORY',\n    'SHA1',\n    'SHA1_HEX',\n    'SHA1_BINARY',\n    'SHA2',\n    'SHA2_HEX',\n    'SHA2_BINARY',\n    'SIGN',\n    'SIN',\n    'SINH',\n    'SKEW',\n    'SOUNDEX',\n    'SPACE',\n    'SPLIT',\n    'SPLIT_PART',\n    'SPLIT_TO_TABLE',\n    'SQRT',\n    'SQUARE',\n    'ST_AREA',\n    'ST_ASEWKB',\n    'ST_ASEWKT',\n    'ST_ASGEOJSON',\n    'ST_ASWKB',\n    'ST_ASBINARY',\n    'ST_ASWKT',\n    'ST_ASTEXT',\n    'ST_AZIMUTH',\n    'ST_CENTROID',\n    'ST_COLLECT',\n    'ST_CONTAINS',\n    'ST_COVEREDBY',\n    'ST_COVERS',\n    'ST_DIFFERENCE',\n    'ST_DIMENSION',\n    'ST_DISJOINT',\n    'ST_DISTANCE',\n    'ST_DWITHIN',\n    'ST_ENDPOINT',\n    'ST_ENVELOPE',\n    'ST_GEOGFROMGEOHASH',\n    'ST_GEOGPOINTFROMGEOHASH',\n    'ST_GEOGRAPHYFROMWKB',\n    'ST_GEOGRAPHYFROMWKT',\n    'ST_GEOHASH',\n    'ST_GEOMETRYFROMWKB',\n    'ST_GEOMETRYFROMWKT',\n    'ST_HAUSDORFFDISTANCE',\n    'ST_INTERSECTION',\n    'ST_INTERSECTS',\n    'ST_LENGTH',\n    'ST_MAKEGEOMPOINT',\n    'ST_GEOM_POINT',\n    'ST_MAKELINE',\n    'ST_MAKEPOINT',\n    'ST_POINT',\n    'ST_MAKEPOLYGON',\n    'ST_POLYGON',\n    'ST_NPOINTS',\n    'ST_NUMPOINTS',\n    'ST_PERIMETER',\n    'ST_POINTN',\n    'ST_SETSRID',\n    'ST_SIMPLIFY',\n    'ST_SRID',\n    'ST_STARTPOINT',\n    'ST_SYMDIFFERENCE',\n    'ST_UNION',\n    'ST_WITHIN',\n    'ST_X',\n    'ST_XMAX',\n    'ST_XMIN',\n    'ST_Y',\n    'ST_YMAX',\n    'ST_YMIN',\n    'STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY',\n    'STAGE_STORAGE_USAGE_HISTORY',\n    'STARTSWITH',\n    'STDDEV',\n    'STDDEV_POP',\n    'STDDEV_SAMP',\n    'STRIP_NULL_VALUE',\n    'STRTOK',\n    'STRTOK_SPLIT_TO_TABLE',\n    'STRTOK_TO_ARRAY',\n    'SUBSTR',\n    'SUBSTRING',\n    'SUM',\n    'SYSDATE',\n    'SYSTEM$ABORT_SESSION',\n    'SYSTEM$ABORT_TRANSACTION',\n    'SYSTEM$AUTHORIZE_PRIVATELINK',\n    'SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS',\n    'SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS',\n    'SYSTEM$CANCEL_ALL_QUERIES',\n    'SYSTEM$CANCEL_QUERY',\n    'SYSTEM$CLUSTERING_DEPTH',\n    'SYSTEM$CLUSTERING_INFORMATION',\n    'SYSTEM$CLUSTERING_RATIO ',\n    'SYSTEM$CURRENT_USER_TASK_NAME',\n    'SYSTEM$DATABASE_REFRESH_HISTORY ',\n    'SYSTEM$DATABASE_REFRESH_PROGRESS',\n    'SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ',\n    'SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE',\n    'SYSTEM$DISABLE_DATABASE_REPLICATION',\n    'SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE',\n    'SYSTEM$ESTIMATE_QUERY_ACCELERATION',\n    'SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS',\n    'SYSTEM$EXPLAIN_JSON_TO_TEXT',\n    'SYSTEM$EXPLAIN_PLAN_JSON',\n    'SYSTEM$EXTERNAL_TABLE_PIPE_STATUS',\n    'SYSTEM$GENERATE_SAML_CSR',\n    'SYSTEM$GENERATE_SCIM_ACCESS_TOKEN',\n    'SYSTEM$GET_AWS_SNS_IAM_POLICY',\n    'SYSTEM$GET_PREDECESSOR_RETURN_VALUE',\n    'SYSTEM$GET_PRIVATELINK',\n    'SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS',\n    'SYSTEM$GET_PRIVATELINK_CONFIG',\n    'SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO',\n    'SYSTEM$GET_TAG',\n    'SYSTEM$GET_TAG_ALLOWED_VALUES',\n    'SYSTEM$GET_TAG_ON_CURRENT_COLUMN',\n    'SYSTEM$GET_TAG_ON_CURRENT_TABLE',\n    'SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER',\n    'SYSTEM$LAST_CHANGE_COMMIT_TIME',\n    'SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME',\n    'SYSTEM$MIGRATE_SAML_IDP_REGISTRATION',\n    'SYSTEM$PIPE_FORCE_RESUME',\n    'SYSTEM$PIPE_STATUS',\n    'SYSTEM$REVOKE_PRIVATELINK',\n    'SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS',\n    'SYSTEM$SET_RETURN_VALUE',\n    'SYSTEM$SHOW_OAUTH_CLIENT_SECRETS',\n    'SYSTEM$STREAM_GET_TABLE_TIMESTAMP',\n    'SYSTEM$STREAM_HAS_DATA',\n    'SYSTEM$TASK_DEPENDENTS_ENABLE',\n    'SYSTEM$TYPEOF',\n    'SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS',\n    'SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN',\n    'SYSTEM$WAIT',\n    'SYSTEM$WHITELIST',\n    'SYSTEM$WHITELIST_PRIVATELINK',\n    'TAG_REFERENCES',\n    'TAG_REFERENCES_ALL_COLUMNS',\n    'TAG_REFERENCES_WITH_LINEAGE',\n    'TAN',\n    'TANH',\n    'TASK_DEPENDENTS',\n    'TASK_HISTORY',\n    'TIME_FROM_PARTS',\n    'TIME_SLICE',\n    'TIMEADD',\n    'TIMEDIFF',\n    'TIMESTAMP_FROM_PARTS',\n    'TIMESTAMPADD',\n    'TIMESTAMPDIFF',\n    'TO_ARRAY',\n    'TO_BINARY',\n    'TO_BOOLEAN',\n    'TO_CHAR',\n    'TO_VARCHAR',\n    'TO_DATE',\n    'DATE',\n    'TO_DECIMAL',\n    'TO_NUMBER',\n    'TO_NUMERIC',\n    'TO_DOUBLE',\n    'TO_GEOGRAPHY',\n    'TO_GEOMETRY',\n    'TO_JSON',\n    'TO_OBJECT',\n    'TO_TIME',\n    'TIME',\n    'TO_TIMESTAMP',\n    'TO_TIMESTAMP_LTZ',\n    'TO_TIMESTAMP_NTZ',\n    'TO_TIMESTAMP_TZ',\n    'TO_VARIANT',\n    'TO_XML',\n    'TRANSLATE',\n    'TRIM',\n    'TRUNCATE',\n    'TRUNC',\n    'TRUNC',\n    'TRY_BASE64_DECODE_BINARY',\n    'TRY_BASE64_DECODE_STRING',\n    'TRY_CAST',\n    'TRY_HEX_DECODE_BINARY',\n    'TRY_HEX_DECODE_STRING',\n    'TRY_PARSE_JSON',\n    'TRY_TO_BINARY',\n    'TRY_TO_BOOLEAN',\n    'TRY_TO_DATE',\n    'TRY_TO_DECIMAL',\n    'TRY_TO_NUMBER',\n    'TRY_TO_NUMERIC',\n    'TRY_TO_DOUBLE',\n    'TRY_TO_GEOGRAPHY',\n    'TRY_TO_GEOMETRY',\n    'TRY_TO_TIME',\n    'TRY_TO_TIMESTAMP',\n    'TRY_TO_TIMESTAMP_LTZ',\n    'TRY_TO_TIMESTAMP_NTZ',\n    'TRY_TO_TIMESTAMP_TZ',\n    'TYPEOF',\n    'UNICODE',\n    'UNIFORM',\n    'UPPER',\n    'UUID_STRING',\n    'VALIDATE',\n    'VALIDATE_PIPE_LOAD',\n    'VAR_POP',\n    'VAR_SAMP',\n    'VARIANCE',\n    'VARIANCE_SAMP',\n    'VARIANCE_POP',\n    'WAREHOUSE_LOAD_HISTORY',\n    'WAREHOUSE_METERING_HISTORY',\n    'WIDTH_BUCKET',\n    'XMLGET',\n    'YEAR',\n    'YEAROFWEEK',\n    'YEAROFWEEKISO',\n    'DAY',\n    'DAYOFMONTH',\n    'DAYOFWEEK',\n    'DAYOFWEEKISO',\n    'DAYOFYEAR',\n    'WEEK',\n    'WEEK',\n    'WEEKOFYEAR',\n    'WEEKISO',\n    'MONTH',\n    'QUARTER',\n    'ZEROIFNULL',\n    'ZIPF',\n];\n//# sourceMappingURL=snowflake.functions.js.map","export const dedupe = (arr) => [...new Set(arr)];\n// Last element from array\nexport const last = (arr) => arr[arr.length - 1];\n// Sorts strings by length, so that longer ones are first\n// Also sorts alphabetically after sorting by length.\nexport const sortByLengthDesc = (strings) => strings.sort((a, b) => b.length - a.length || a.localeCompare(b));\n/** Get length of longest string in list of strings */\nexport const maxLength = (strings) => strings.reduce((max, cur) => Math.max(max, cur.length), 0);\n// replaces long whitespace sequences with just one space\nexport const equalizeWhitespace = (s) => s.replace(/\\s+/gu, ' ');\n// True when string contains multiple lines\nexport const isMultiline = (text) => /\\n/.test(text);\n//# sourceMappingURL=utils.js.map","// Escapes regex special chars\nexport const escapeRegExp = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/gu, '\\\\$&');\nexport const WHITESPACE_REGEX = /\\s+/uy;\nexport const patternToRegex = (pattern) => new RegExp(`(?:${pattern})`, 'uy');\n// Converts \"ab\" to \"[Aa][Bb]\"\nexport const toCaseInsensitivePattern = (prefix) => prefix\n    .split('')\n    .map(char => (/ /gu.test(char) ? '\\\\s+' : `[${char.toUpperCase()}${char.toLowerCase()}]`))\n    .join('');\nexport const withDashes = (pattern) => pattern + '(?:-' + pattern + ')*';\n// Converts [\"a\", \"b\"] to \"(?:[Aa]|[Bb]|)\" or \"(?:[Aa]|[Bb])\" when required = true\nexport const prefixesPattern = ({ prefixes, requirePrefix }) => `(?:${prefixes.map(toCaseInsensitivePattern).join('|')}${requirePrefix ? '' : '|'})`;\n//# sourceMappingURL=regexUtil.js.map","import { sortByLengthDesc } from '../utils.js';\nimport { escapeRegExp, patternToRegex, prefixesPattern, withDashes } from './regexUtil.js';\n/**\n * Builds a RegExp for valid line comments in a SQL dialect\n * @param {string[]} lineCommentTypes - list of character strings that denote line comments\n */\nexport const lineComment = (lineCommentTypes) => new RegExp(`(?:${lineCommentTypes.map(escapeRegExp).join('|')}).*?(?=\\r\\n|\\r|\\n|$)`, 'uy');\n/**\n * Builds a RegExp for matching either open- or close-parenthesis patterns\n */\nexport const parenthesis = (kind, extraParens = []) => {\n    const index = kind === 'open' ? 0 : 1;\n    const parens = ['()', ...extraParens].map(pair => pair[index]);\n    return patternToRegex(parens.map(escapeRegExp).join('|'));\n};\n/**\n * Builds a RegExp containing all operators for a SQL dialect\n */\nexport const operator = (operators) => patternToRegex(`${sortByLengthDesc(operators).map(escapeRegExp).join('|')}`);\n// Negative lookahead to avoid matching a keyword that's actually part of identifier,\n// which can happen when identifier allows word-boundary characters inside it.\n//\n// For example \"SELECT$ME\" should be tokenized as:\n// - [\"SELECT$ME\"] when $ is allowed inside identifiers\n// - [\"SELECT\", \"$\", \"ME\"] when $ can't be part of identifiers.\nconst rejectIdentCharsPattern = ({ rest, dashes }) => rest || dashes ? `(?![${rest || ''}${dashes ? '-' : ''}])` : '';\n/**\n * Builds a RegExp for all Reserved Keywords in a SQL dialect\n */\nexport const reservedWord = (reservedKeywords, identChars = {}) => {\n    if (reservedKeywords.length === 0) {\n        return /^\\b$/u;\n    }\n    const avoidIdentChars = rejectIdentCharsPattern(identChars);\n    const reservedKeywordsPattern = sortByLengthDesc(reservedKeywords)\n        .map(escapeRegExp)\n        .join('|')\n        .replace(/ /gu, '\\\\s+');\n    return new RegExp(`(?:${reservedKeywordsPattern})${avoidIdentChars}\\\\b`, 'iuy');\n};\n/**\n * Builds a RegExp for parameter placeholder patterns\n * @param {string[]} paramTypes - list of strings that denote placeholder types\n * @param {string} pattern - string that denotes placeholder pattern\n */\nexport const parameter = (paramTypes, pattern) => {\n    if (!paramTypes.length) {\n        return undefined;\n    }\n    const typesRegex = paramTypes.map(escapeRegExp).join('|');\n    return patternToRegex(`(?:${typesRegex})(?:${pattern})`);\n};\nconst buildQStringPatterns = () => {\n    const specialDelimiterMap = {\n        '<': '>',\n        '[': ']',\n        '(': ')',\n        '{': '}',\n    };\n    // base pattern for special delimiters, left must correspond with right\n    const singlePattern = \"{left}(?:(?!{right}').)*?{right}\";\n    // replace {left} and {right} with delimiters, collect as array\n    const patternList = Object.entries(specialDelimiterMap).map(([left, right]) => singlePattern.replace(/{left}/g, escapeRegExp(left)).replace(/{right}/g, escapeRegExp(right)));\n    const specialDelimiters = escapeRegExp(Object.keys(specialDelimiterMap).join(''));\n    // standard pattern for common delimiters, ignores special delimiters\n    const standardDelimiterPattern = String.raw `(?<tag>[^\\s${specialDelimiters}])(?:(?!\\k<tag>').)*?\\k<tag>`;\n    // constructs final pattern by joining all cases\n    const qStringPattern = `[Qq]'(?:${standardDelimiterPattern}|${patternList.join('|')})'`;\n    return qStringPattern;\n};\n// Regex patterns for all supported quote styles.\n//\n// Most of them have a single escaping-style built in,\n// but \"\" and '' support multiple versions of escapes,\n// which must be selected with suffixes: -qq, -bs, -qq-bs, -raw\nexport const quotePatterns = {\n    // - backtick quoted (using `` to escape)\n    '``': '(?:`[^`]*`)+',\n    // - Transact-SQL square bracket quoted (using ]] to escape)\n    '[]': String.raw `(?:\\[[^\\]]*\\])(?:\\][^\\]]*\\])*`,\n    // double-quoted\n    '\"\"-qq': String.raw `(?:\"[^\"]*\")+`,\n    '\"\"-bs': String.raw `(?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")`,\n    '\"\"-qq-bs': String.raw `(?:\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")+`,\n    '\"\"-raw': String.raw `(?:\"[^\"]*\")`,\n    // single-quoted\n    \"''-qq\": String.raw `(?:'[^']*')+`,\n    \"''-bs\": String.raw `(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')`,\n    \"''-qq-bs\": String.raw `(?:'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')+`,\n    \"''-raw\": String.raw `(?:'[^']*')`,\n    // PostgreSQL dollar-quoted\n    '$$': String.raw `(?<tag>\\$\\w*\\$)[\\s\\S]*?\\k<tag>`,\n    // BigQuery '''triple-quoted''' (using \\' to escape)\n    \"'''..'''\": String.raw `'''[^\\\\]*?(?:\\\\.[^\\\\]*?)*?'''`,\n    // BigQuery \"\"\"triple-quoted\"\"\" (using \\\" to escape)\n    '\"\"\"..\"\"\"': String.raw `\"\"\"[^\\\\]*?(?:\\\\.[^\\\\]*?)*?\"\"\"`,\n    // Hive and Spark variables: ${name}\n    '{}': String.raw `(?:\\{[^\\}]*\\})`,\n    // Oracle q'' strings: q'<text>' q'|text|' ...\n    \"q''\": buildQStringPatterns(),\n};\nconst singleQuotePattern = (quoteTypes) => {\n    if (typeof quoteTypes === 'string') {\n        return quotePatterns[quoteTypes];\n    }\n    else if ('regex' in quoteTypes) {\n        return quoteTypes.regex;\n    }\n    else {\n        return prefixesPattern(quoteTypes) + quotePatterns[quoteTypes.quote];\n    }\n};\n/** Builds a RegExp for matching variables */\nexport const variable = (varTypes) => patternToRegex(varTypes\n    .map(varType => ('regex' in varType ? varType.regex : singleQuotePattern(varType)))\n    .join('|'));\n/** Builds a quote-delimited pattern for matching all given quote types */\nexport const stringPattern = (quoteTypes) => quoteTypes.map(singleQuotePattern).join('|');\n/** Builds a RegExp for matching quote-delimited patterns */\nexport const string = (quoteTypes) => patternToRegex(stringPattern(quoteTypes));\n/**\n * Builds a RegExp for valid identifiers in a SQL dialect\n */\nexport const identifier = (specialChars = {}) => patternToRegex(identifierPattern(specialChars));\n/**\n * Builds a RegExp string for valid identifiers in a SQL dialect\n */\nexport const identifierPattern = ({ first, rest, dashes, allowFirstCharNumber, } = {}) => {\n    // Unicode letters, diacritical marks and underscore\n    const letter = '\\\\p{Alphabetic}\\\\p{Mark}_';\n    // Numbers 0..9, plus various unicode numbers\n    const number = '\\\\p{Decimal_Number}';\n    const firstChars = escapeRegExp(first !== null && first !== void 0 ? first : '');\n    const restChars = escapeRegExp(rest !== null && rest !== void 0 ? rest : '');\n    const pattern = allowFirstCharNumber\n        ? `[${letter}${number}${firstChars}][${letter}${number}${restChars}]*`\n        : `[${letter}${firstChars}][${letter}${number}${restChars}]*`;\n    return dashes ? withDashes(pattern) : pattern;\n};\n//# sourceMappingURL=regexFactory.js.map","/**\n * Determines line and column number of character index in source code.\n */\nexport function lineColFromIndex(source, index) {\n    const lines = source.slice(0, index).split(/\\n/);\n    return { line: lines.length, col: lines[lines.length - 1].length + 1 };\n}\n//# sourceMappingURL=lineColFromIndex.js.map","import { lineColFromIndex } from './lineColFromIndex.js';\nimport { WHITESPACE_REGEX } from './regexUtil.js';\nexport default class TokenizerEngine {\n    constructor(rules, dialectName) {\n        this.rules = rules;\n        this.dialectName = dialectName;\n        this.input = ''; // The input SQL string to process\n        this.index = 0; // Current position in string\n    }\n    /**\n     * Takes a SQL string and breaks it into tokens.\n     * Each token is an object with type and value.\n     *\n     * @param {string} input - The SQL string\n     * @returns {Token[]} output token stream\n     */\n    tokenize(input) {\n        this.input = input;\n        this.index = 0;\n        const tokens = [];\n        let token;\n        // Keep processing the string until end is reached\n        while (this.index < this.input.length) {\n            // skip any preceding whitespace\n            const precedingWhitespace = this.getWhitespace();\n            if (this.index < this.input.length) {\n                // Get the next token and the token type\n                token = this.getNextToken();\n                if (!token) {\n                    throw this.createParseError();\n                }\n                tokens.push(Object.assign(Object.assign({}, token), { precedingWhitespace }));\n            }\n        }\n        return tokens;\n    }\n    createParseError() {\n        const text = this.input.slice(this.index, this.index + 10);\n        const { line, col } = lineColFromIndex(this.input, this.index);\n        return new Error(`Parse error: Unexpected \"${text}\" at line ${line} column ${col}.\\n${this.dialectInfo()}`);\n    }\n    dialectInfo() {\n        if (this.dialectName === 'sql') {\n            return (`This likely happens because you're using the default \"sql\" dialect.\\n` +\n                `If possible, please select a more specific dialect (like sqlite, postgresql, etc).`);\n        }\n        else {\n            return `SQL dialect used: \"${this.dialectName}\".`;\n        }\n    }\n    getWhitespace() {\n        WHITESPACE_REGEX.lastIndex = this.index;\n        const matches = WHITESPACE_REGEX.exec(this.input);\n        if (matches) {\n            // Advance current position by matched whitespace length\n            this.index += matches[0].length;\n            return matches[0];\n        }\n        return undefined;\n    }\n    getNextToken() {\n        for (const rule of this.rules) {\n            const token = this.match(rule);\n            if (token) {\n                return token;\n            }\n        }\n        return undefined;\n    }\n    // Attempts to match token rule regex at current position in input\n    match(rule) {\n        rule.regex.lastIndex = this.index;\n        const matches = rule.regex.exec(this.input);\n        if (matches) {\n            const matchedText = matches[0];\n            const token = {\n                type: rule.type,\n                raw: matchedText,\n                text: rule.text ? rule.text(matchedText) : matchedText,\n                start: this.index,\n            };\n            if (rule.key) {\n                token.key = rule.key(matchedText);\n            }\n            // Advance current position by matched token length\n            this.index += matchedText.length;\n            return token;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=TokenizerEngine.js.map","const START = /\\/\\*/uy; // matches: /*\nconst ANY_CHAR = /[\\s\\S]/uy; // matches single character\nconst END = /\\*\\//uy; // matches: */\n/**\n * An object mimicking a regular expression,\n * for matching nested block-comments.\n */\nexport class NestedComment {\n    constructor() {\n        this.lastIndex = 0;\n    }\n    exec(input) {\n        let result = '';\n        let match;\n        let nestLevel = 0;\n        if ((match = this.matchSection(START, input))) {\n            result += match;\n            nestLevel++;\n        }\n        else {\n            return null;\n        }\n        while (nestLevel > 0) {\n            if ((match = this.matchSection(START, input))) {\n                result += match;\n                nestLevel++;\n            }\n            else if ((match = this.matchSection(END, input))) {\n                result += match;\n                nestLevel--;\n            }\n            else if ((match = this.matchSection(ANY_CHAR, input))) {\n                result += match;\n            }\n            else {\n                return null;\n            }\n        }\n        return [result];\n    }\n    matchSection(regex, input) {\n        regex.lastIndex = this.lastIndex;\n        const matches = regex.exec(input);\n        if (matches) {\n            this.lastIndex += matches[0].length;\n        }\n        return matches ? matches[0] : null;\n    }\n}\n//# sourceMappingURL=NestedComment.js.map","import { TokenType } from './token.js';\nimport * as regex from './regexFactory.js';\nimport TokenizerEngine from './TokenizerEngine.js';\nimport { escapeRegExp, patternToRegex } from './regexUtil.js';\nimport { equalizeWhitespace } from '../utils.js';\nimport { NestedComment } from './NestedComment.js';\nexport default class Tokenizer {\n    constructor(cfg, dialectName) {\n        this.cfg = cfg;\n        this.dialectName = dialectName;\n        this.rulesBeforeParams = this.buildRulesBeforeParams(cfg);\n        this.rulesAfterParams = this.buildRulesAfterParams(cfg);\n    }\n    tokenize(input, paramTypesOverrides) {\n        const rules = [\n            ...this.rulesBeforeParams,\n            ...this.buildParamRules(this.cfg, paramTypesOverrides),\n            ...this.rulesAfterParams,\n        ];\n        const tokens = new TokenizerEngine(rules, this.dialectName).tokenize(input);\n        return this.cfg.postProcess ? this.cfg.postProcess(tokens) : tokens;\n    }\n    // These rules can be cached as they only depend on\n    // the Tokenizer config options specified for each SQL dialect\n    buildRulesBeforeParams(cfg) {\n        var _a, _b;\n        return this.validRules([\n            {\n                type: TokenType.BLOCK_COMMENT,\n                regex: /(\\/\\* *sql-formatter-disable *\\*\\/[\\s\\S]*?(?:\\/\\* *sql-formatter-enable *\\*\\/|$))/uy,\n            },\n            {\n                type: TokenType.BLOCK_COMMENT,\n                regex: cfg.nestedBlockComments ? new NestedComment() : /(\\/\\*[^]*?\\*\\/)/uy,\n            },\n            {\n                type: TokenType.LINE_COMMENT,\n                regex: regex.lineComment((_a = cfg.lineCommentTypes) !== null && _a !== void 0 ? _a : ['--']),\n            },\n            {\n                type: TokenType.QUOTED_IDENTIFIER,\n                regex: regex.string(cfg.identTypes),\n            },\n            {\n                type: TokenType.NUMBER,\n                regex: /(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\\s*)?(?:[0-9]*\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)(?:[eE][-+]?[0-9]+(?:\\.[0-9]+)?)?)(?![\\w\\p{Alphabetic}])/uy,\n            },\n            // RESERVED_PHRASE is matched before all other keyword tokens\n            // to e.g. prioritize matching \"TIMESTAMP WITH TIME ZONE\" phrase over \"WITH\" clause.\n            {\n                type: TokenType.RESERVED_PHRASE,\n                regex: regex.reservedWord((_b = cfg.reservedPhrases) !== null && _b !== void 0 ? _b : [], cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.CASE,\n                regex: /CASE\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.END,\n                regex: /END\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.BETWEEN,\n                regex: /BETWEEN\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.LIMIT,\n                regex: cfg.reservedClauses.includes('LIMIT') ? /LIMIT\\b/iuy : undefined,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_CLAUSE,\n                regex: regex.reservedWord(cfg.reservedClauses, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_SELECT,\n                regex: regex.reservedWord(cfg.reservedSelect, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_SET_OPERATION,\n                regex: regex.reservedWord(cfg.reservedSetOperations, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.WHEN,\n                regex: /WHEN\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.ELSE,\n                regex: /ELSE\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.THEN,\n                regex: /THEN\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_JOIN,\n                regex: regex.reservedWord(cfg.reservedJoins, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.AND,\n                regex: /AND\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.OR,\n                regex: /OR\\b/iuy,\n                text: toCanonical,\n            },\n            {\n                type: TokenType.XOR,\n                regex: cfg.supportsXor ? /XOR\\b/iuy : undefined,\n                text: toCanonical,\n            },\n            ...(cfg.operatorKeyword\n                ? [\n                    {\n                        type: TokenType.OPERATOR,\n                        regex: /OPERATOR *\\([^)]+\\)/iuy,\n                    },\n                ]\n                : []),\n            {\n                type: TokenType.RESERVED_FUNCTION_NAME,\n                regex: regex.reservedWord(cfg.reservedFunctionNames, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_DATA_TYPE,\n                regex: regex.reservedWord(cfg.reservedDataTypes, cfg.identChars),\n                text: toCanonical,\n            },\n            {\n                type: TokenType.RESERVED_KEYWORD,\n                regex: regex.reservedWord(cfg.reservedKeywords, cfg.identChars),\n                text: toCanonical,\n            },\n        ]);\n    }\n    // These rules can also be cached as they only depend on\n    // the Tokenizer config options specified for each SQL dialect\n    buildRulesAfterParams(cfg) {\n        var _a, _b;\n        return this.validRules([\n            {\n                type: TokenType.VARIABLE,\n                regex: cfg.variableTypes ? regex.variable(cfg.variableTypes) : undefined,\n            },\n            { type: TokenType.STRING, regex: regex.string(cfg.stringTypes) },\n            {\n                type: TokenType.IDENTIFIER,\n                regex: regex.identifier(cfg.identChars),\n            },\n            { type: TokenType.DELIMITER, regex: /[;]/uy },\n            { type: TokenType.COMMA, regex: /[,]/y },\n            {\n                type: TokenType.OPEN_PAREN,\n                regex: regex.parenthesis('open', cfg.extraParens),\n            },\n            {\n                type: TokenType.CLOSE_PAREN,\n                regex: regex.parenthesis('close', cfg.extraParens),\n            },\n            {\n                type: TokenType.OPERATOR,\n                regex: regex.operator([\n                    // standard operators\n                    '+',\n                    '-',\n                    '/',\n                    '>',\n                    '<',\n                    '=',\n                    '<>',\n                    '<=',\n                    '>=',\n                    '!=',\n                    ...((_a = cfg.operators) !== null && _a !== void 0 ? _a : []),\n                ]),\n            },\n            { type: TokenType.ASTERISK, regex: /[*]/uy },\n            {\n                type: TokenType.PROPERTY_ACCESS_OPERATOR,\n                regex: regex.operator(['.', ...((_b = cfg.propertyAccessOperators) !== null && _b !== void 0 ? _b : [])]),\n            },\n        ]);\n    }\n    // These rules can't be blindly cached as the paramTypesOverrides object\n    // can differ on each invocation of the format() function.\n    buildParamRules(cfg, paramTypesOverrides) {\n        var _a, _b, _c, _d, _e;\n        // Each dialect has its own default parameter types (if any),\n        // but these can be overriden by the user of the library.\n        const paramTypes = {\n            named: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.named) || ((_a = cfg.paramTypes) === null || _a === void 0 ? void 0 : _a.named) || [],\n            quoted: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.quoted) || ((_b = cfg.paramTypes) === null || _b === void 0 ? void 0 : _b.quoted) || [],\n            numbered: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.numbered) || ((_c = cfg.paramTypes) === null || _c === void 0 ? void 0 : _c.numbered) || [],\n            positional: typeof (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.positional) === 'boolean'\n                ? paramTypesOverrides.positional\n                : (_d = cfg.paramTypes) === null || _d === void 0 ? void 0 : _d.positional,\n            custom: (paramTypesOverrides === null || paramTypesOverrides === void 0 ? void 0 : paramTypesOverrides.custom) || ((_e = cfg.paramTypes) === null || _e === void 0 ? void 0 : _e.custom) || [],\n        };\n        return this.validRules([\n            {\n                type: TokenType.NAMED_PARAMETER,\n                regex: regex.parameter(paramTypes.named, regex.identifierPattern(cfg.paramChars || cfg.identChars)),\n                key: v => v.slice(1),\n            },\n            {\n                type: TokenType.QUOTED_PARAMETER,\n                regex: regex.parameter(paramTypes.quoted, regex.stringPattern(cfg.identTypes)),\n                key: v => (({ tokenKey, quoteChar }) => tokenKey.replace(new RegExp(escapeRegExp('\\\\' + quoteChar), 'gu'), quoteChar))({\n                    tokenKey: v.slice(2, -1),\n                    quoteChar: v.slice(-1),\n                }),\n            },\n            {\n                type: TokenType.NUMBERED_PARAMETER,\n                regex: regex.parameter(paramTypes.numbered, '[0-9]+'),\n                key: v => v.slice(1),\n            },\n            {\n                type: TokenType.POSITIONAL_PARAMETER,\n                regex: paramTypes.positional ? /[?]/y : undefined,\n            },\n            ...paramTypes.custom.map((customParam) => {\n                var _a;\n                return ({\n                    type: TokenType.CUSTOM_PARAMETER,\n                    regex: patternToRegex(customParam.regex),\n                    key: (_a = customParam.key) !== null && _a !== void 0 ? _a : (v => v),\n                });\n            }),\n        ]);\n    }\n    // filters out rules for token types whose regex is undefined\n    validRules(rules) {\n        return rules.filter((rule) => Boolean(rule.regex));\n    }\n}\n/**\n * Converts keywords (and keyword sequences) to canonical form:\n * - in uppercase\n * - single spaces between words\n */\nconst toCanonical = (v) => equalizeWhitespace(v.toUpperCase());\n//# sourceMappingURL=Tokenizer.js.map","import Tokenizer from './lexer/Tokenizer.js';\nconst cache = new Map();\n/**\n * Factory function for building Dialect objects.\n * When called repeatedly with same options object returns the cached Dialect,\n * to avoid the cost of creating it again.\n */\nexport const createDialect = (options) => {\n    let dialect = cache.get(options);\n    if (!dialect) {\n        dialect = dialectFromOptions(options);\n        cache.set(options, dialect);\n    }\n    return dialect;\n};\nconst dialectFromOptions = (dialectOptions) => ({\n    tokenizer: new Tokenizer(dialectOptions.tokenizerOptions, dialectOptions.name),\n    formatOptions: processDialectFormatOptions(dialectOptions.formatOptions),\n});\nconst processDialectFormatOptions = (options) => {\n    var _a;\n    return ({\n        alwaysDenseOperators: options.alwaysDenseOperators || [],\n        onelineClauses: Object.fromEntries(options.onelineClauses.map(name => [name, true])),\n        tabularOnelineClauses: Object.fromEntries(((_a = options.tabularOnelineClauses) !== null && _a !== void 0 ? _a : options.onelineClauses).map(name => [name, true])),\n    });\n};\n//# sourceMappingURL=dialect.js.map","// Utility functions for config options\n/**\n * Creates a string to use for one step of indentation.\n */\nexport function indentString(cfg) {\n    if (cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight') {\n        return ' '.repeat(10);\n    }\n    if (cfg.useTabs) {\n        return '\\t';\n    }\n    return ' '.repeat(cfg.tabWidth);\n}\n/**\n * True when indentStyle is one of the tabular ones.\n */\nexport function isTabularStyle(cfg) {\n    return cfg.indentStyle === 'tabularLeft' || cfg.indentStyle === 'tabularRight';\n}\n//# sourceMappingURL=config.js.map","/**\n * Handles placeholder replacement with given params.\n */\nexport default class Params {\n    constructor(params) {\n        this.params = params;\n        this.index = 0;\n    }\n    /**\n     * Returns param value that matches given placeholder with param key.\n     */\n    get({ key, text }) {\n        if (!this.params) {\n            return text;\n        }\n        if (key) {\n            return this.params[key];\n        }\n        return this.params[this.index++];\n    }\n    /**\n     * Returns index of current positional parameter.\n     */\n    getPositionalParameterIndex() {\n        return this.index;\n    }\n    /**\n     * Sets index of current positional parameter.\n     */\n    setPositionalParameterIndex(i) {\n        this.index = i;\n    }\n}\n//# sourceMappingURL=Params.js.map","import { isReserved, TokenType } from './token.js';\n/**\n * Ensures that no keyword token (RESERVED_*) is preceded or followed by a dot (.)\n * or any other property-access operator.\n *\n * Ensures that all RESERVED_FUNCTION_NAME tokens are followed by \"(\".\n * If they're not, converts the token to IDENTIFIER.\n *\n * Converts RESERVED_DATA_TYPE tokens followed by \"(\" to RESERVED_PARAMETERIZED_DATA_TYPE.\n *\n * When IDENTIFIER or RESERVED_DATA_TYPE token is followed by \"[\"\n * converts it to ARRAY_IDENTIFIER or ARRAY_KEYWORD accordingly.\n *\n * This is needed to avoid ambiguity in parser which expects function names\n * to always be followed by open-paren, and to distinguish between\n * array accessor `foo[1]` and array literal `[1, 2, 3]`.\n */\nexport function disambiguateTokens(tokens) {\n    return tokens\n        .map(propertyNameKeywordToIdent)\n        .map(funcNameToIdent)\n        .map(dataTypeToParameterizedDataType)\n        .map(identToArrayIdent)\n        .map(dataTypeToArrayKeyword);\n}\nconst propertyNameKeywordToIdent = (token, i, tokens) => {\n    if (isReserved(token.type)) {\n        const prevToken = prevNonCommentToken(tokens, i);\n        if (prevToken && prevToken.type === TokenType.PROPERTY_ACCESS_OPERATOR) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n        }\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && nextToken.type === TokenType.PROPERTY_ACCESS_OPERATOR) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n        }\n    }\n    return token;\n};\nconst funcNameToIdent = (token, i, tokens) => {\n    if (token.type === TokenType.RESERVED_FUNCTION_NAME) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (!nextToken || !isOpenParen(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.IDENTIFIER, text: token.raw });\n        }\n    }\n    return token;\n};\nconst dataTypeToParameterizedDataType = (token, i, tokens) => {\n    if (token.type === TokenType.RESERVED_DATA_TYPE) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && isOpenParen(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.RESERVED_PARAMETERIZED_DATA_TYPE });\n        }\n    }\n    return token;\n};\nconst identToArrayIdent = (token, i, tokens) => {\n    if (token.type === TokenType.IDENTIFIER) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && isOpenBracket(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.ARRAY_IDENTIFIER });\n        }\n    }\n    return token;\n};\nconst dataTypeToArrayKeyword = (token, i, tokens) => {\n    if (token.type === TokenType.RESERVED_DATA_TYPE) {\n        const nextToken = nextNonCommentToken(tokens, i);\n        if (nextToken && isOpenBracket(nextToken)) {\n            return Object.assign(Object.assign({}, token), { type: TokenType.ARRAY_KEYWORD });\n        }\n    }\n    return token;\n};\nconst prevNonCommentToken = (tokens, index) => nextNonCommentToken(tokens, index, -1);\nconst nextNonCommentToken = (tokens, index, dir = 1) => {\n    let i = 1;\n    while (tokens[index + i * dir] && isComment(tokens[index + i * dir])) {\n        i++;\n    }\n    return tokens[index + i * dir];\n};\nconst isOpenParen = (t) => t.type === TokenType.OPEN_PAREN && t.text === '(';\nconst isOpenBracket = (t) => t.type === TokenType.OPEN_PAREN && t.text === '[';\nconst isComment = (t) => t.type === TokenType.BLOCK_COMMENT || t.type === TokenType.LINE_COMMENT;\n//# sourceMappingURL=disambiguateTokens.js.map","import { lineColFromIndex } from '../lexer/lineColFromIndex.js';\nimport { TokenType } from '../lexer/token.js';\nexport default class LexerAdapter {\n    constructor(tokenize) {\n        this.tokenize = tokenize;\n        this.index = 0;\n        this.tokens = [];\n        this.input = '';\n    }\n    reset(chunk, _info) {\n        this.input = chunk;\n        this.index = 0;\n        this.tokens = this.tokenize(chunk);\n    }\n    next() {\n        return this.tokens[this.index++];\n    }\n    save() { }\n    formatError(token) {\n        const { line, col } = lineColFromIndex(this.input, token.start);\n        return `Parse error at token: ${token.text} at line ${line} column ${col}`;\n    }\n    has(name) {\n        return name in TokenType;\n    }\n}\n//# sourceMappingURL=LexerAdapter.js.map","export var NodeType;\n(function (NodeType) {\n    NodeType[\"statement\"] = \"statement\";\n    NodeType[\"clause\"] = \"clause\";\n    NodeType[\"set_operation\"] = \"set_operation\";\n    NodeType[\"function_call\"] = \"function_call\";\n    NodeType[\"parameterized_data_type\"] = \"parameterized_data_type\";\n    NodeType[\"array_subscript\"] = \"array_subscript\";\n    NodeType[\"property_access\"] = \"property_access\";\n    NodeType[\"parenthesis\"] = \"parenthesis\";\n    NodeType[\"between_predicate\"] = \"between_predicate\";\n    NodeType[\"case_expression\"] = \"case_expression\";\n    NodeType[\"case_when\"] = \"case_when\";\n    NodeType[\"case_else\"] = \"case_else\";\n    NodeType[\"limit_clause\"] = \"limit_clause\";\n    NodeType[\"all_columns_asterisk\"] = \"all_columns_asterisk\";\n    NodeType[\"literal\"] = \"literal\";\n    NodeType[\"identifier\"] = \"identifier\";\n    NodeType[\"keyword\"] = \"keyword\";\n    NodeType[\"data_type\"] = \"data_type\";\n    NodeType[\"parameter\"] = \"parameter\";\n    NodeType[\"operator\"] = \"operator\";\n    NodeType[\"comma\"] = \"comma\";\n    NodeType[\"line_comment\"] = \"line_comment\";\n    NodeType[\"block_comment\"] = \"block_comment\";\n    NodeType[\"disable_comment\"] = \"disable_comment\";\n})(NodeType = NodeType || (NodeType = {}));\n//# sourceMappingURL=ast.js.map","// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nfunction id(d) { return d[0]; }\nimport LexerAdapter from './LexerAdapter.js';\nimport { NodeType } from './ast.js';\nimport { TokenType } from '../lexer/token.js';\n// The lexer here is only to provide the has() method,\n// that's used inside the generated grammar definition.\n// A proper lexer gets passed to Nearley Parser constructor.\nconst lexer = new LexerAdapter(chunk => []);\n// Used for unwrapping grammar rules like:\n//\n//   rule -> ( foo | bar | baz )\n//\n// which otherwise produce single element nested inside two arrays\nconst unwrap = ([[el]]) => el;\nconst toKeywordNode = (token) => ({\n    type: NodeType.keyword,\n    tokenType: token.type,\n    text: token.text,\n    raw: token.raw,\n});\nconst toDataTypeNode = (token) => ({\n    type: NodeType.data_type,\n    text: token.text,\n    raw: token.raw,\n});\nconst addComments = (node, { leading, trailing }) => {\n    if (leading === null || leading === void 0 ? void 0 : leading.length) {\n        node = Object.assign(Object.assign({}, node), { leadingComments: leading });\n    }\n    if (trailing === null || trailing === void 0 ? void 0 : trailing.length) {\n        node = Object.assign(Object.assign({}, node), { trailingComments: trailing });\n    }\n    return node;\n};\nconst addCommentsToArray = (nodes, { leading, trailing }) => {\n    if (leading === null || leading === void 0 ? void 0 : leading.length) {\n        const [first, ...rest] = nodes;\n        nodes = [addComments(first, { leading }), ...rest];\n    }\n    if (trailing === null || trailing === void 0 ? void 0 : trailing.length) {\n        const lead = nodes.slice(0, -1);\n        const last = nodes[nodes.length - 1];\n        nodes = [...lead, addComments(last, { trailing })];\n    }\n    return nodes;\n};\n;\n;\n;\n;\nconst grammar = {\n    Lexer: lexer,\n    ParserRules: [\n        { \"name\": \"main$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"main$ebnf$1\", \"symbols\": [\"main$ebnf$1\", \"statement\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"main\", \"symbols\": [\"main$ebnf$1\"], \"postprocess\": ([statements]) => {\n                const last = statements[statements.length - 1];\n                if (last && !last.hasSemicolon) {\n                    // we have fully parsed the whole file\n                    // discard the last statement when it's empty\n                    return last.children.length > 0 ? statements : statements.slice(0, -1);\n                }\n                else {\n                    // parsing still in progress, do nothing\n                    return statements;\n                }\n            }\n        },\n        { \"name\": \"statement$subexpression$1\", \"symbols\": [(lexer.has(\"DELIMITER\") ? { type: \"DELIMITER\" } : DELIMITER)] },\n        { \"name\": \"statement$subexpression$1\", \"symbols\": [(lexer.has(\"EOF\") ? { type: \"EOF\" } : EOF)] },\n        { \"name\": \"statement\", \"symbols\": [\"expressions_or_clauses\", \"statement$subexpression$1\"], \"postprocess\": ([children, [delimiter]]) => ({\n                type: NodeType.statement,\n                children,\n                hasSemicolon: delimiter.type === TokenType.DELIMITER,\n            })\n        },\n        { \"name\": \"expressions_or_clauses$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expressions_or_clauses$ebnf$1\", \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expressions_or_clauses$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"expressions_or_clauses$ebnf$2\", \"symbols\": [\"expressions_or_clauses$ebnf$2\", \"clause\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expressions_or_clauses\", \"symbols\": [\"expressions_or_clauses$ebnf$1\", \"expressions_or_clauses$ebnf$2\"], \"postprocess\": ([expressions, clauses]) => [...expressions, ...clauses]\n        },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"limit_clause\"] },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"select_clause\"] },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"other_clause\"] },\n        { \"name\": \"clause$subexpression$1\", \"symbols\": [\"set_operation\"] },\n        { \"name\": \"clause\", \"symbols\": [\"clause$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [\"free_form_sql\"] },\n        { \"name\": \"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [\"limit_clause$ebnf$1$subexpression$1$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"limit_clause$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"COMMA\") ? { type: \"COMMA\" } : COMMA), \"limit_clause$ebnf$1$subexpression$1$ebnf$1\"] },\n        { \"name\": \"limit_clause$ebnf$1\", \"symbols\": [\"limit_clause$ebnf$1$subexpression$1\"], \"postprocess\": id },\n        { \"name\": \"limit_clause$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"limit_clause\", \"symbols\": [(lexer.has(\"LIMIT\") ? { type: \"LIMIT\" } : LIMIT), \"_\", \"expression_chain_\", \"limit_clause$ebnf$1\"], \"postprocess\": ([limitToken, _, exp1, optional]) => {\n                if (optional) {\n                    const [comma, exp2] = optional;\n                    return {\n                        type: NodeType.limit_clause,\n                        limitKw: addComments(toKeywordNode(limitToken), { trailing: _ }),\n                        offset: exp1,\n                        count: exp2,\n                    };\n                }\n                else {\n                    return {\n                        type: NodeType.limit_clause,\n                        limitKw: addComments(toKeywordNode(limitToken), { trailing: _ }),\n                        count: exp1,\n                    };\n                }\n            }\n        },\n        { \"name\": \"select_clause$subexpression$1$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"select_clause$subexpression$1$ebnf$1\", \"symbols\": [\"select_clause$subexpression$1$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_clause$subexpression$1\", \"symbols\": [\"all_columns_asterisk\", \"select_clause$subexpression$1$ebnf$1\"] },\n        { \"name\": \"select_clause$subexpression$1$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"select_clause$subexpression$1$ebnf$2\", \"symbols\": [\"select_clause$subexpression$1$ebnf$2\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"select_clause$subexpression$1\", \"symbols\": [\"asteriskless_free_form_sql\", \"select_clause$subexpression$1$ebnf$2\"] },\n        { \"name\": \"select_clause\", \"symbols\": [(lexer.has(\"RESERVED_SELECT\") ? { type: \"RESERVED_SELECT\" } : RESERVED_SELECT), \"select_clause$subexpression$1\"], \"postprocess\": ([nameToken, [exp, expressions]]) => ({\n                type: NodeType.clause,\n                nameKw: toKeywordNode(nameToken),\n                children: [exp, ...expressions],\n            })\n        },\n        { \"name\": \"select_clause\", \"symbols\": [(lexer.has(\"RESERVED_SELECT\") ? { type: \"RESERVED_SELECT\" } : RESERVED_SELECT)], \"postprocess\": ([nameToken]) => ({\n                type: NodeType.clause,\n                nameKw: toKeywordNode(nameToken),\n                children: [],\n            })\n        },\n        { \"name\": \"all_columns_asterisk\", \"symbols\": [(lexer.has(\"ASTERISK\") ? { type: \"ASTERISK\" } : ASTERISK)], \"postprocess\": () => ({ type: NodeType.all_columns_asterisk })\n        },\n        { \"name\": \"other_clause$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"other_clause$ebnf$1\", \"symbols\": [\"other_clause$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"other_clause\", \"symbols\": [(lexer.has(\"RESERVED_CLAUSE\") ? { type: \"RESERVED_CLAUSE\" } : RESERVED_CLAUSE), \"other_clause$ebnf$1\"], \"postprocess\": ([nameToken, children]) => ({\n                type: NodeType.clause,\n                nameKw: toKeywordNode(nameToken),\n                children,\n            })\n        },\n        { \"name\": \"set_operation$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"set_operation$ebnf$1\", \"symbols\": [\"set_operation$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"set_operation\", \"symbols\": [(lexer.has(\"RESERVED_SET_OPERATION\") ? { type: \"RESERVED_SET_OPERATION\" } : RESERVED_SET_OPERATION), \"set_operation$ebnf$1\"], \"postprocess\": ([nameToken, children]) => ({\n                type: NodeType.set_operation,\n                nameKw: toKeywordNode(nameToken),\n                children,\n            })\n        },\n        { \"name\": \"expression_chain_$ebnf$1\", \"symbols\": [\"expression_with_comments_\"] },\n        { \"name\": \"expression_chain_$ebnf$1\", \"symbols\": [\"expression_chain_$ebnf$1\", \"expression_with_comments_\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expression_chain_\", \"symbols\": [\"expression_chain_$ebnf$1\"], \"postprocess\": id },\n        { \"name\": \"expression_chain$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"expression_chain$ebnf$1\", \"symbols\": [\"expression_chain$ebnf$1\", \"_expression_with_comments\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"expression_chain\", \"symbols\": [\"expression\", \"expression_chain$ebnf$1\"], \"postprocess\": ([expr, chain]) => [expr, ...chain]\n        },\n        { \"name\": \"andless_expression_chain$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"andless_expression_chain$ebnf$1\", \"symbols\": [\"andless_expression_chain$ebnf$1\", \"_andless_expression_with_comments\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"andless_expression_chain\", \"symbols\": [\"andless_expression\", \"andless_expression_chain$ebnf$1\"], \"postprocess\": ([expr, chain]) => [expr, ...chain]\n        },\n        { \"name\": \"expression_with_comments_\", \"symbols\": [\"expression\", \"_\"], \"postprocess\": ([expr, _]) => addComments(expr, { trailing: _ })\n        },\n        { \"name\": \"_expression_with_comments\", \"symbols\": [\"_\", \"expression\"], \"postprocess\": ([_, expr]) => addComments(expr, { leading: _ })\n        },\n        { \"name\": \"_andless_expression_with_comments\", \"symbols\": [\"_\", \"andless_expression\"], \"postprocess\": ([_, expr]) => addComments(expr, { leading: _ })\n        },\n        { \"name\": \"free_form_sql$subexpression$1\", \"symbols\": [\"asteriskless_free_form_sql\"] },\n        { \"name\": \"free_form_sql$subexpression$1\", \"symbols\": [\"asterisk\"] },\n        { \"name\": \"free_form_sql\", \"symbols\": [\"free_form_sql$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"asteriskless_andless_expression\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"logic_operator\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"comma\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"comment\"] },\n        { \"name\": \"asteriskless_free_form_sql$subexpression$1\", \"symbols\": [\"other_keyword\"] },\n        { \"name\": \"asteriskless_free_form_sql\", \"symbols\": [\"asteriskless_free_form_sql$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"expression$subexpression$1\", \"symbols\": [\"andless_expression\"] },\n        { \"name\": \"expression$subexpression$1\", \"symbols\": [\"logic_operator\"] },\n        { \"name\": \"expression\", \"symbols\": [\"expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"andless_expression$subexpression$1\", \"symbols\": [\"asteriskless_andless_expression\"] },\n        { \"name\": \"andless_expression$subexpression$1\", \"symbols\": [\"asterisk\"] },\n        { \"name\": \"andless_expression\", \"symbols\": [\"andless_expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"asteriskless_andless_expression$subexpression$1\", \"symbols\": [\"atomic_expression\"] },\n        { \"name\": \"asteriskless_andless_expression$subexpression$1\", \"symbols\": [\"between_predicate\"] },\n        { \"name\": \"asteriskless_andless_expression$subexpression$1\", \"symbols\": [\"case_expression\"] },\n        { \"name\": \"asteriskless_andless_expression\", \"symbols\": [\"asteriskless_andless_expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"array_subscript\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"function_call\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"property_access\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"parenthesis\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"curly_braces\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"square_brackets\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"operator\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"identifier\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"parameter\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"literal\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"data_type\"] },\n        { \"name\": \"atomic_expression$subexpression$1\", \"symbols\": [\"keyword\"] },\n        { \"name\": \"atomic_expression\", \"symbols\": [\"atomic_expression$subexpression$1\"], \"postprocess\": unwrap },\n        { \"name\": \"array_subscript\", \"symbols\": [(lexer.has(\"ARRAY_IDENTIFIER\") ? { type: \"ARRAY_IDENTIFIER\" } : ARRAY_IDENTIFIER), \"_\", \"square_brackets\"], \"postprocess\": ([arrayToken, _, brackets]) => ({\n                type: NodeType.array_subscript,\n                array: addComments({ type: NodeType.identifier, quoted: false, text: arrayToken.text }, { trailing: _ }),\n                parenthesis: brackets,\n            })\n        },\n        { \"name\": \"array_subscript\", \"symbols\": [(lexer.has(\"ARRAY_KEYWORD\") ? { type: \"ARRAY_KEYWORD\" } : ARRAY_KEYWORD), \"_\", \"square_brackets\"], \"postprocess\": ([arrayToken, _, brackets]) => ({\n                type: NodeType.array_subscript,\n                array: addComments(toKeywordNode(arrayToken), { trailing: _ }),\n                parenthesis: brackets,\n            })\n        },\n        { \"name\": \"function_call\", \"symbols\": [(lexer.has(\"RESERVED_FUNCTION_NAME\") ? { type: \"RESERVED_FUNCTION_NAME\" } : RESERVED_FUNCTION_NAME), \"_\", \"parenthesis\"], \"postprocess\": ([nameToken, _, parens]) => ({\n                type: NodeType.function_call,\n                nameKw: addComments(toKeywordNode(nameToken), { trailing: _ }),\n                parenthesis: parens,\n            })\n        },\n        { \"name\": \"parenthesis\", \"symbols\": [{ \"literal\": \"(\" }, \"expressions_or_clauses\", { \"literal\": \")\" }], \"postprocess\": ([open, children, close]) => ({\n                type: NodeType.parenthesis,\n                children: children,\n                openParen: \"(\",\n                closeParen: \")\",\n            })\n        },\n        { \"name\": \"curly_braces$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"curly_braces$ebnf$1\", \"symbols\": [\"curly_braces$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"curly_braces\", \"symbols\": [{ \"literal\": \"{\" }, \"curly_braces$ebnf$1\", { \"literal\": \"}\" }], \"postprocess\": ([open, children, close]) => ({\n                type: NodeType.parenthesis,\n                children: children,\n                openParen: \"{\",\n                closeParen: \"}\",\n            })\n        },\n        { \"name\": \"square_brackets$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"square_brackets$ebnf$1\", \"symbols\": [\"square_brackets$ebnf$1\", \"free_form_sql\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"square_brackets\", \"symbols\": [{ \"literal\": \"[\" }, \"square_brackets$ebnf$1\", { \"literal\": \"]\" }], \"postprocess\": ([open, children, close]) => ({\n                type: NodeType.parenthesis,\n                children: children,\n                openParen: \"[\",\n                closeParen: \"]\",\n            })\n        },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"identifier\"] },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"array_subscript\"] },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"all_columns_asterisk\"] },\n        { \"name\": \"property_access$subexpression$1\", \"symbols\": [\"parameter\"] },\n        { \"name\": \"property_access\", \"symbols\": [\"atomic_expression\", \"_\", (lexer.has(\"PROPERTY_ACCESS_OPERATOR\") ? { type: \"PROPERTY_ACCESS_OPERATOR\" } : PROPERTY_ACCESS_OPERATOR), \"_\", \"property_access$subexpression$1\"], \"postprocess\": \n            // Allowing property to be <array_subscript> is currently a hack.\n            // A better way would be to allow <property_access> on the left side of array_subscript,\n            // but we currently can't do that because of another hack that requires\n            // %ARRAY_IDENTIFIER on the left side of <array_subscript>.\n            ([object, _1, dot, _2, [property]]) => {\n                return {\n                    type: NodeType.property_access,\n                    object: addComments(object, { trailing: _1 }),\n                    operator: dot.text,\n                    property: addComments(property, { leading: _2 }),\n                };\n            }\n        },\n        { \"name\": \"between_predicate\", \"symbols\": [(lexer.has(\"BETWEEN\") ? { type: \"BETWEEN\" } : BETWEEN), \"_\", \"andless_expression_chain\", \"_\", (lexer.has(\"AND\") ? { type: \"AND\" } : AND), \"_\", \"andless_expression\"], \"postprocess\": ([betweenToken, _1, expr1, _2, andToken, _3, expr2]) => ({\n                type: NodeType.between_predicate,\n                betweenKw: toKeywordNode(betweenToken),\n                expr1: addCommentsToArray(expr1, { leading: _1, trailing: _2 }),\n                andKw: toKeywordNode(andToken),\n                expr2: [addComments(expr2, { leading: _3 })],\n            })\n        },\n        { \"name\": \"case_expression$ebnf$1\", \"symbols\": [\"expression_chain_\"], \"postprocess\": id },\n        { \"name\": \"case_expression$ebnf$1\", \"symbols\": [], \"postprocess\": () => null },\n        { \"name\": \"case_expression$ebnf$2\", \"symbols\": [] },\n        { \"name\": \"case_expression$ebnf$2\", \"symbols\": [\"case_expression$ebnf$2\", \"case_clause\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"case_expression\", \"symbols\": [(lexer.has(\"CASE\") ? { type: \"CASE\" } : CASE), \"_\", \"case_expression$ebnf$1\", \"case_expression$ebnf$2\", (lexer.has(\"END\") ? { type: \"END\" } : END)], \"postprocess\": ([caseToken, _, expr, clauses, endToken]) => ({\n                type: NodeType.case_expression,\n                caseKw: addComments(toKeywordNode(caseToken), { trailing: _ }),\n                endKw: toKeywordNode(endToken),\n                expr: expr || [],\n                clauses,\n            })\n        },\n        { \"name\": \"case_clause\", \"symbols\": [(lexer.has(\"WHEN\") ? { type: \"WHEN\" } : WHEN), \"_\", \"expression_chain_\", (lexer.has(\"THEN\") ? { type: \"THEN\" } : THEN), \"_\", \"expression_chain_\"], \"postprocess\": ([whenToken, _1, cond, thenToken, _2, expr]) => ({\n                type: NodeType.case_when,\n                whenKw: addComments(toKeywordNode(whenToken), { trailing: _1 }),\n                thenKw: addComments(toKeywordNode(thenToken), { trailing: _2 }),\n                condition: cond,\n                result: expr,\n            })\n        },\n        { \"name\": \"case_clause\", \"symbols\": [(lexer.has(\"ELSE\") ? { type: \"ELSE\" } : ELSE), \"_\", \"expression_chain_\"], \"postprocess\": ([elseToken, _, expr]) => ({\n                type: NodeType.case_else,\n                elseKw: addComments(toKeywordNode(elseToken), { trailing: _ }),\n                result: expr,\n            })\n        },\n        { \"name\": \"comma$subexpression$1\", \"symbols\": [(lexer.has(\"COMMA\") ? { type: \"COMMA\" } : COMMA)] },\n        { \"name\": \"comma\", \"symbols\": [\"comma$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.comma }) },\n        { \"name\": \"asterisk$subexpression$1\", \"symbols\": [(lexer.has(\"ASTERISK\") ? { type: \"ASTERISK\" } : ASTERISK)] },\n        { \"name\": \"asterisk\", \"symbols\": [\"asterisk$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.operator, text: token.text }) },\n        { \"name\": \"operator$subexpression$1\", \"symbols\": [(lexer.has(\"OPERATOR\") ? { type: \"OPERATOR\" } : OPERATOR)] },\n        { \"name\": \"operator\", \"symbols\": [\"operator$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.operator, text: token.text }) },\n        { \"name\": \"identifier$subexpression$1\", \"symbols\": [(lexer.has(\"IDENTIFIER\") ? { type: \"IDENTIFIER\" } : IDENTIFIER)] },\n        { \"name\": \"identifier$subexpression$1\", \"symbols\": [(lexer.has(\"QUOTED_IDENTIFIER\") ? { type: \"QUOTED_IDENTIFIER\" } : QUOTED_IDENTIFIER)] },\n        { \"name\": \"identifier$subexpression$1\", \"symbols\": [(lexer.has(\"VARIABLE\") ? { type: \"VARIABLE\" } : VARIABLE)] },\n        { \"name\": \"identifier\", \"symbols\": [\"identifier$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.identifier, quoted: token.type !== \"IDENTIFIER\", text: token.text }) },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"NAMED_PARAMETER\") ? { type: \"NAMED_PARAMETER\" } : NAMED_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"QUOTED_PARAMETER\") ? { type: \"QUOTED_PARAMETER\" } : QUOTED_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"NUMBERED_PARAMETER\") ? { type: \"NUMBERED_PARAMETER\" } : NUMBERED_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"POSITIONAL_PARAMETER\") ? { type: \"POSITIONAL_PARAMETER\" } : POSITIONAL_PARAMETER)] },\n        { \"name\": \"parameter$subexpression$1\", \"symbols\": [(lexer.has(\"CUSTOM_PARAMETER\") ? { type: \"CUSTOM_PARAMETER\" } : CUSTOM_PARAMETER)] },\n        { \"name\": \"parameter\", \"symbols\": [\"parameter$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.parameter, key: token.key, text: token.text }) },\n        { \"name\": \"literal$subexpression$1\", \"symbols\": [(lexer.has(\"NUMBER\") ? { type: \"NUMBER\" } : NUMBER)] },\n        { \"name\": \"literal$subexpression$1\", \"symbols\": [(lexer.has(\"STRING\") ? { type: \"STRING\" } : STRING)] },\n        { \"name\": \"literal\", \"symbols\": [\"literal$subexpression$1\"], \"postprocess\": ([[token]]) => ({ type: NodeType.literal, text: token.text }) },\n        { \"name\": \"keyword$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_KEYWORD\") ? { type: \"RESERVED_KEYWORD\" } : RESERVED_KEYWORD)] },\n        { \"name\": \"keyword$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_PHRASE\") ? { type: \"RESERVED_PHRASE\" } : RESERVED_PHRASE)] },\n        { \"name\": \"keyword$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_JOIN\") ? { type: \"RESERVED_JOIN\" } : RESERVED_JOIN)] },\n        { \"name\": \"keyword\", \"symbols\": [\"keyword$subexpression$1\"], \"postprocess\": ([[token]]) => toKeywordNode(token)\n        },\n        { \"name\": \"data_type$subexpression$1\", \"symbols\": [(lexer.has(\"RESERVED_DATA_TYPE\") ? { type: \"RESERVED_DATA_TYPE\" } : RESERVED_DATA_TYPE)] },\n        { \"name\": \"data_type\", \"symbols\": [\"data_type$subexpression$1\"], \"postprocess\": ([[token]]) => toDataTypeNode(token)\n        },\n        { \"name\": \"data_type\", \"symbols\": [(lexer.has(\"RESERVED_PARAMETERIZED_DATA_TYPE\") ? { type: \"RESERVED_PARAMETERIZED_DATA_TYPE\" } : RESERVED_PARAMETERIZED_DATA_TYPE), \"_\", \"parenthesis\"], \"postprocess\": ([nameToken, _, parens]) => ({\n                type: NodeType.parameterized_data_type,\n                dataType: addComments(toDataTypeNode(nameToken), { trailing: _ }),\n                parenthesis: parens,\n            })\n        },\n        { \"name\": \"logic_operator$subexpression$1\", \"symbols\": [(lexer.has(\"AND\") ? { type: \"AND\" } : AND)] },\n        { \"name\": \"logic_operator$subexpression$1\", \"symbols\": [(lexer.has(\"OR\") ? { type: \"OR\" } : OR)] },\n        { \"name\": \"logic_operator$subexpression$1\", \"symbols\": [(lexer.has(\"XOR\") ? { type: \"XOR\" } : XOR)] },\n        { \"name\": \"logic_operator\", \"symbols\": [\"logic_operator$subexpression$1\"], \"postprocess\": ([[token]]) => toKeywordNode(token)\n        },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"WHEN\") ? { type: \"WHEN\" } : WHEN)] },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"THEN\") ? { type: \"THEN\" } : THEN)] },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"ELSE\") ? { type: \"ELSE\" } : ELSE)] },\n        { \"name\": \"other_keyword$subexpression$1\", \"symbols\": [(lexer.has(\"END\") ? { type: \"END\" } : END)] },\n        { \"name\": \"other_keyword\", \"symbols\": [\"other_keyword$subexpression$1\"], \"postprocess\": ([[token]]) => toKeywordNode(token)\n        },\n        { \"name\": \"_$ebnf$1\", \"symbols\": [] },\n        { \"name\": \"_$ebnf$1\", \"symbols\": [\"_$ebnf$1\", \"comment\"], \"postprocess\": (d) => d[0].concat([d[1]]) },\n        { \"name\": \"_\", \"symbols\": [\"_$ebnf$1\"], \"postprocess\": ([comments]) => comments },\n        { \"name\": \"comment\", \"symbols\": [(lexer.has(\"LINE_COMMENT\") ? { type: \"LINE_COMMENT\" } : LINE_COMMENT)], \"postprocess\": ([token]) => ({\n                type: NodeType.line_comment,\n                text: token.text,\n                precedingWhitespace: token.precedingWhitespace,\n            })\n        },\n        { \"name\": \"comment\", \"symbols\": [(lexer.has(\"BLOCK_COMMENT\") ? { type: \"BLOCK_COMMENT\" } : BLOCK_COMMENT)], \"postprocess\": ([token]) => ({\n                type: NodeType.block_comment,\n                text: token.text,\n                precedingWhitespace: token.precedingWhitespace,\n            })\n        },\n        { \"name\": \"comment\", \"symbols\": [(lexer.has(\"DISABLE_COMMENT\") ? { type: \"DISABLE_COMMENT\" } : DISABLE_COMMENT)], \"postprocess\": ([token]) => ({\n                type: NodeType.disable_comment,\n                text: token.text,\n                precedingWhitespace: token.precedingWhitespace,\n            })\n        }\n    ],\n    ParserStart: \"main\",\n};\nexport default grammar;\n//# sourceMappingURL=grammar.js.map","import nearley from 'nearley';\nimport { disambiguateTokens } from '../lexer/disambiguateTokens.js';\nimport grammar from './grammar.js';\nimport LexerAdapter from './LexerAdapter.js';\nimport { createEofToken } from '../lexer/token.js';\nconst { Parser: NearleyParser, Grammar } = nearley;\n/**\n * Creates a parser object which wraps the setup of Nearley parser\n */\nexport function createParser(tokenizer) {\n    let paramTypesOverrides = {};\n    const lexer = new LexerAdapter(chunk => [\n        ...disambiguateTokens(tokenizer.tokenize(chunk, paramTypesOverrides)),\n        createEofToken(chunk.length),\n    ]);\n    const parser = new NearleyParser(Grammar.fromCompiled(grammar), { lexer });\n    return {\n        parse: (sql, paramTypes) => {\n            // share paramTypesOverrides with Tokenizer\n            paramTypesOverrides = paramTypes;\n            const { results } = parser.feed(sql);\n            if (results.length === 1) {\n                return results[0];\n            }\n            else if (results.length === 0) {\n                // Ideally we would report a line number where the parser failed,\n                // but I haven't found a way to get this info from Nearley :(\n                throw new Error('Parse error: Invalid SQL');\n            }\n            else {\n                throw new Error(`Parse error: Ambiguous grammar\\n${JSON.stringify(results, undefined, 2)}`);\n            }\n        },\n    };\n}\n//# sourceMappingURL=createParser.js.map","import { last } from '../utils.js';\n/** Whitespace modifiers to be used with add() method */\nexport var WS;\n(function (WS) {\n    WS[WS[\"SPACE\"] = 0] = \"SPACE\";\n    WS[WS[\"NO_SPACE\"] = 1] = \"NO_SPACE\";\n    WS[WS[\"NO_NEWLINE\"] = 2] = \"NO_NEWLINE\";\n    WS[WS[\"NEWLINE\"] = 3] = \"NEWLINE\";\n    WS[WS[\"MANDATORY_NEWLINE\"] = 4] = \"MANDATORY_NEWLINE\";\n    WS[WS[\"INDENT\"] = 5] = \"INDENT\";\n    WS[WS[\"SINGLE_INDENT\"] = 6] = \"SINGLE_INDENT\";\n})(WS = WS || (WS = {}));\n/**\n * API for constructing SQL string (especially the whitespace part).\n *\n * It hides the internal implementation.\n * Originally it used plain string concatenation, which was expensive.\n * Now it's storing items to array and builds the string only in the end.\n */\nexport default class Layout {\n    constructor(indentation) {\n        this.indentation = indentation;\n        this.items = [];\n    }\n    /**\n     * Appends token strings and whitespace modifications to SQL string.\n     */\n    add(...items) {\n        for (const item of items) {\n            switch (item) {\n                case WS.SPACE:\n                    this.items.push(WS.SPACE);\n                    break;\n                case WS.NO_SPACE:\n                    this.trimHorizontalWhitespace();\n                    break;\n                case WS.NO_NEWLINE:\n                    this.trimWhitespace();\n                    break;\n                case WS.NEWLINE:\n                    this.trimHorizontalWhitespace();\n                    this.addNewline(WS.NEWLINE);\n                    break;\n                case WS.MANDATORY_NEWLINE:\n                    this.trimHorizontalWhitespace();\n                    this.addNewline(WS.MANDATORY_NEWLINE);\n                    break;\n                case WS.INDENT:\n                    this.addIndentation();\n                    break;\n                case WS.SINGLE_INDENT:\n                    this.items.push(WS.SINGLE_INDENT);\n                    break;\n                default:\n                    this.items.push(item);\n            }\n        }\n    }\n    trimHorizontalWhitespace() {\n        while (isHorizontalWhitespace(last(this.items))) {\n            this.items.pop();\n        }\n    }\n    trimWhitespace() {\n        while (isRemovableWhitespace(last(this.items))) {\n            this.items.pop();\n        }\n    }\n    addNewline(newline) {\n        if (this.items.length > 0) {\n            switch (last(this.items)) {\n                case WS.NEWLINE:\n                    this.items.pop();\n                    this.items.push(newline);\n                    break;\n                case WS.MANDATORY_NEWLINE:\n                    // keep as is\n                    break;\n                default:\n                    this.items.push(newline);\n                    break;\n            }\n        }\n    }\n    addIndentation() {\n        for (let i = 0; i < this.indentation.getLevel(); i++) {\n            this.items.push(WS.SINGLE_INDENT);\n        }\n    }\n    /**\n     * Returns the final SQL string.\n     */\n    toString() {\n        return this.items.map(item => this.itemToString(item)).join('');\n    }\n    /**\n     * Returns the internal layout data\n     */\n    getLayoutItems() {\n        return this.items;\n    }\n    itemToString(item) {\n        switch (item) {\n            case WS.SPACE:\n                return ' ';\n            case WS.NEWLINE:\n            case WS.MANDATORY_NEWLINE:\n                return '\\n';\n            case WS.SINGLE_INDENT:\n                return this.indentation.getSingleIndent();\n            default:\n                return item;\n        }\n    }\n}\nconst isHorizontalWhitespace = (item) => item === WS.SPACE || item === WS.SINGLE_INDENT;\nconst isRemovableWhitespace = (item) => item === WS.SPACE || item === WS.SINGLE_INDENT || item === WS.NEWLINE;\n//# sourceMappingURL=Layout.js.map","import { isLogicalOperator, TokenType } from '../lexer/token.js';\n/**\n * When tabular style enabled,\n * produces a 10-char wide version of token text.\n */\nexport default function toTabularFormat(tokenText, indentStyle) {\n    if (indentStyle === 'standard') {\n        return tokenText;\n    }\n    let tail = []; // rest of keyword\n    if (tokenText.length >= 10 && tokenText.includes(' ')) {\n        // split for long keywords like INNER JOIN or UNION DISTINCT\n        [tokenText, ...tail] = tokenText.split(' ');\n    }\n    if (indentStyle === 'tabularLeft') {\n        tokenText = tokenText.padEnd(9, ' ');\n    }\n    else {\n        tokenText = tokenText.padStart(9, ' ');\n    }\n    return tokenText + ['', ...tail].join(' ');\n}\n/**\n * True when the token can be formatted in tabular style\n */\nexport function isTabularToken(type) {\n    return (isLogicalOperator(type) ||\n        type === TokenType.RESERVED_CLAUSE ||\n        type === TokenType.RESERVED_SELECT ||\n        type === TokenType.RESERVED_SET_OPERATION ||\n        type === TokenType.RESERVED_JOIN ||\n        type === TokenType.LIMIT);\n}\n//# sourceMappingURL=tabularStyle.js.map","import { last } from '../utils.js';\nconst INDENT_TYPE_TOP_LEVEL = 'top-level';\nconst INDENT_TYPE_BLOCK_LEVEL = 'block-level';\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_CLAUSE words\n */\nexport default class Indentation {\n    /**\n     * @param {string} indent A string to indent with\n     */\n    constructor(indent) {\n        this.indent = indent;\n        this.indentTypes = [];\n    }\n    /**\n     * Returns indentation string for single indentation step.\n     */\n    getSingleIndent() {\n        return this.indent;\n    }\n    /**\n     * Returns current indentation level\n     */\n    getLevel() {\n        return this.indentTypes.length;\n    }\n    /**\n     * Increases indentation by one top-level indent.\n     */\n    increaseTopLevel() {\n        this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n    }\n    /**\n     * Increases indentation by one block-level indent.\n     */\n    increaseBlockLevel() {\n        this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n    }\n    /**\n     * Decreases indentation by one top-level indent.\n     * Does nothing when the previous indent is not top-level.\n     */\n    decreaseTopLevel() {\n        if (this.indentTypes.length > 0 && last(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n            this.indentTypes.pop();\n        }\n    }\n    /**\n     * Decreases indentation by one block-level indent.\n     * If there are top-level indents within the block-level indent,\n     * throws away these as well.\n     */\n    decreaseBlockLevel() {\n        while (this.indentTypes.length > 0) {\n            const type = this.indentTypes.pop();\n            if (type !== INDENT_TYPE_TOP_LEVEL) {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=Indentation.js.map","// eslint-disable-next-line max-classes-per-file\nimport Indentation from './Indentation.js';\nimport Layout, { WS } from './Layout.js';\n/**\n * Like Layout, but only formats single-line expressions.\n *\n * Throws InlineLayoutError:\n * - when encountering a newline\n * - when exceeding configured expressionWidth\n */\nexport default class InlineLayout extends Layout {\n    constructor(expressionWidth) {\n        super(new Indentation('')); // no indentation in inline layout\n        this.expressionWidth = expressionWidth;\n        this.length = 0;\n        // Keeps track of the trailing whitespace,\n        // so that we can decrease length when encountering WS.NO_SPACE,\n        // but only when there actually is a space to remove.\n        this.trailingSpace = false;\n    }\n    add(...items) {\n        items.forEach(item => this.addToLength(item));\n        if (this.length > this.expressionWidth) {\n            // We have exceeded the allowable width\n            throw new InlineLayoutError();\n        }\n        super.add(...items);\n    }\n    addToLength(item) {\n        if (typeof item === 'string') {\n            this.length += item.length;\n            this.trailingSpace = false;\n        }\n        else if (item === WS.MANDATORY_NEWLINE || item === WS.NEWLINE) {\n            // newlines not allowed within inline block\n            throw new InlineLayoutError();\n        }\n        else if (item === WS.INDENT || item === WS.SINGLE_INDENT || item === WS.SPACE) {\n            if (!this.trailingSpace) {\n                this.length++;\n                this.trailingSpace = true;\n            }\n        }\n        else if (item === WS.NO_NEWLINE || item === WS.NO_SPACE) {\n            if (this.trailingSpace) {\n                this.trailingSpace = false;\n                this.length--;\n            }\n        }\n    }\n}\n/**\n * Thrown when block of SQL can't be formatted as a single line.\n */\nexport class InlineLayoutError extends Error {\n}\n//# sourceMappingURL=InlineLayout.js.map","import { equalizeWhitespace, isMultiline, last } from '../utils.js';\nimport { isTabularStyle } from './config.js';\nimport { TokenType } from '../lexer/token.js';\nimport { NodeType, } from '../parser/ast.js';\nimport { WS } from './Layout.js';\nimport toTabularFormat, { isTabularToken } from './tabularStyle.js';\nimport InlineLayout, { InlineLayoutError } from './InlineLayout.js';\n/** Formats a generic SQL expression */\nexport default class ExpressionFormatter {\n    constructor({ cfg, dialectCfg, params, layout, inline = false }) {\n        this.inline = false;\n        this.nodes = [];\n        this.index = -1;\n        this.cfg = cfg;\n        this.dialectCfg = dialectCfg;\n        this.inline = inline;\n        this.params = params;\n        this.layout = layout;\n    }\n    format(nodes) {\n        this.nodes = nodes;\n        for (this.index = 0; this.index < this.nodes.length; this.index++) {\n            this.formatNode(this.nodes[this.index]);\n        }\n        return this.layout;\n    }\n    formatNode(node) {\n        this.formatComments(node.leadingComments);\n        this.formatNodeWithoutComments(node);\n        this.formatComments(node.trailingComments);\n    }\n    formatNodeWithoutComments(node) {\n        switch (node.type) {\n            case NodeType.function_call:\n                return this.formatFunctionCall(node);\n            case NodeType.parameterized_data_type:\n                return this.formatParameterizedDataType(node);\n            case NodeType.array_subscript:\n                return this.formatArraySubscript(node);\n            case NodeType.property_access:\n                return this.formatPropertyAccess(node);\n            case NodeType.parenthesis:\n                return this.formatParenthesis(node);\n            case NodeType.between_predicate:\n                return this.formatBetweenPredicate(node);\n            case NodeType.case_expression:\n                return this.formatCaseExpression(node);\n            case NodeType.case_when:\n                return this.formatCaseWhen(node);\n            case NodeType.case_else:\n                return this.formatCaseElse(node);\n            case NodeType.clause:\n                return this.formatClause(node);\n            case NodeType.set_operation:\n                return this.formatSetOperation(node);\n            case NodeType.limit_clause:\n                return this.formatLimitClause(node);\n            case NodeType.all_columns_asterisk:\n                return this.formatAllColumnsAsterisk(node);\n            case NodeType.literal:\n                return this.formatLiteral(node);\n            case NodeType.identifier:\n                return this.formatIdentifier(node);\n            case NodeType.parameter:\n                return this.formatParameter(node);\n            case NodeType.operator:\n                return this.formatOperator(node);\n            case NodeType.comma:\n                return this.formatComma(node);\n            case NodeType.line_comment:\n                return this.formatLineComment(node);\n            case NodeType.block_comment:\n                return this.formatBlockComment(node);\n            case NodeType.disable_comment:\n                return this.formatBlockComment(node);\n            case NodeType.data_type:\n                return this.formatDataType(node);\n            case NodeType.keyword:\n                return this.formatKeywordNode(node);\n        }\n    }\n    formatFunctionCall(node) {\n        this.withComments(node.nameKw, () => {\n            this.layout.add(this.showFunctionKw(node.nameKw));\n        });\n        this.formatNode(node.parenthesis);\n    }\n    formatParameterizedDataType(node) {\n        this.withComments(node.dataType, () => {\n            this.layout.add(this.showDataType(node.dataType));\n        });\n        this.formatNode(node.parenthesis);\n    }\n    formatArraySubscript(node) {\n        let formattedArray;\n        switch (node.array.type) {\n            case NodeType.data_type:\n                formattedArray = this.showDataType(node.array);\n                break;\n            case NodeType.keyword:\n                formattedArray = this.showKw(node.array);\n                break;\n            default:\n                formattedArray = this.showIdentifier(node.array);\n                break;\n        }\n        this.withComments(node.array, () => {\n            this.layout.add(formattedArray);\n        });\n        this.formatNode(node.parenthesis);\n    }\n    formatPropertyAccess(node) {\n        this.formatNode(node.object);\n        this.layout.add(WS.NO_SPACE, node.operator);\n        this.formatNode(node.property);\n    }\n    formatParenthesis(node) {\n        const inlineLayout = this.formatInlineExpression(node.children);\n        if (inlineLayout) {\n            this.layout.add(node.openParen);\n            this.layout.add(...inlineLayout.getLayoutItems());\n            this.layout.add(WS.NO_SPACE, node.closeParen, WS.SPACE);\n        }\n        else {\n            this.layout.add(node.openParen, WS.NEWLINE);\n            if (isTabularStyle(this.cfg)) {\n                this.layout.add(WS.INDENT);\n                this.layout = this.formatSubExpression(node.children);\n            }\n            else {\n                this.layout.indentation.increaseBlockLevel();\n                this.layout.add(WS.INDENT);\n                this.layout = this.formatSubExpression(node.children);\n                this.layout.indentation.decreaseBlockLevel();\n            }\n            this.layout.add(WS.NEWLINE, WS.INDENT, node.closeParen, WS.SPACE);\n        }\n    }\n    formatBetweenPredicate(node) {\n        this.layout.add(this.showKw(node.betweenKw), WS.SPACE);\n        this.layout = this.formatSubExpression(node.expr1);\n        this.layout.add(WS.NO_SPACE, WS.SPACE, this.showNonTabularKw(node.andKw), WS.SPACE);\n        this.layout = this.formatSubExpression(node.expr2);\n        this.layout.add(WS.SPACE);\n    }\n    formatCaseExpression(node) {\n        this.formatNode(node.caseKw);\n        this.layout.indentation.increaseBlockLevel();\n        this.layout = this.formatSubExpression(node.expr);\n        this.layout = this.formatSubExpression(node.clauses);\n        this.layout.indentation.decreaseBlockLevel();\n        this.layout.add(WS.NEWLINE, WS.INDENT);\n        this.formatNode(node.endKw);\n    }\n    formatCaseWhen(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT);\n        this.formatNode(node.whenKw);\n        this.layout = this.formatSubExpression(node.condition);\n        this.formatNode(node.thenKw);\n        this.layout = this.formatSubExpression(node.result);\n    }\n    formatCaseElse(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT);\n        this.formatNode(node.elseKw);\n        this.layout = this.formatSubExpression(node.result);\n    }\n    formatClause(node) {\n        if (this.isOnelineClause(node)) {\n            this.formatClauseInOnelineStyle(node);\n        }\n        else if (isTabularStyle(this.cfg)) {\n            this.formatClauseInTabularStyle(node);\n        }\n        else {\n            this.formatClauseInIndentedStyle(node);\n        }\n    }\n    isOnelineClause(node) {\n        if (isTabularStyle(this.cfg)) {\n            return this.dialectCfg.tabularOnelineClauses[node.nameKw.text];\n        }\n        else {\n            return this.dialectCfg.onelineClauses[node.nameKw.text];\n        }\n    }\n    formatClauseInIndentedStyle(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.NEWLINE);\n        this.layout.indentation.increaseTopLevel();\n        this.layout.add(WS.INDENT);\n        this.layout = this.formatSubExpression(node.children);\n        this.layout.indentation.decreaseTopLevel();\n    }\n    formatClauseInOnelineStyle(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.SPACE);\n        this.layout = this.formatSubExpression(node.children);\n    }\n    formatClauseInTabularStyle(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.SPACE);\n        this.layout.indentation.increaseTopLevel();\n        this.layout = this.formatSubExpression(node.children);\n        this.layout.indentation.decreaseTopLevel();\n    }\n    formatSetOperation(node) {\n        this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.nameKw), WS.NEWLINE);\n        this.layout.add(WS.INDENT);\n        this.layout = this.formatSubExpression(node.children);\n    }\n    formatLimitClause(node) {\n        this.withComments(node.limitKw, () => {\n            this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node.limitKw));\n        });\n        this.layout.indentation.increaseTopLevel();\n        if (isTabularStyle(this.cfg)) {\n            this.layout.add(WS.SPACE);\n        }\n        else {\n            this.layout.add(WS.NEWLINE, WS.INDENT);\n        }\n        if (node.offset) {\n            this.layout = this.formatSubExpression(node.offset);\n            this.layout.add(WS.NO_SPACE, ',', WS.SPACE);\n            this.layout = this.formatSubExpression(node.count);\n        }\n        else {\n            this.layout = this.formatSubExpression(node.count);\n        }\n        this.layout.indentation.decreaseTopLevel();\n    }\n    formatAllColumnsAsterisk(_node) {\n        this.layout.add('*', WS.SPACE);\n    }\n    formatLiteral(node) {\n        this.layout.add(node.text, WS.SPACE);\n    }\n    formatIdentifier(node) {\n        this.layout.add(this.showIdentifier(node), WS.SPACE);\n    }\n    formatParameter(node) {\n        this.layout.add(this.params.get(node), WS.SPACE);\n    }\n    formatOperator({ text }) {\n        if (this.cfg.denseOperators || this.dialectCfg.alwaysDenseOperators.includes(text)) {\n            this.layout.add(WS.NO_SPACE, text);\n        }\n        else if (text === ':') {\n            this.layout.add(WS.NO_SPACE, text, WS.SPACE);\n        }\n        else {\n            this.layout.add(text, WS.SPACE);\n        }\n    }\n    formatComma(_node) {\n        if (!this.inline) {\n            this.layout.add(WS.NO_SPACE, ',', WS.NEWLINE, WS.INDENT);\n        }\n        else {\n            this.layout.add(WS.NO_SPACE, ',', WS.SPACE);\n        }\n    }\n    withComments(node, fn) {\n        this.formatComments(node.leadingComments);\n        fn();\n        this.formatComments(node.trailingComments);\n    }\n    formatComments(comments) {\n        if (!comments) {\n            return;\n        }\n        comments.forEach(com => {\n            if (com.type === NodeType.line_comment) {\n                this.formatLineComment(com);\n            }\n            else {\n                this.formatBlockComment(com);\n            }\n        });\n    }\n    formatLineComment(node) {\n        if (isMultiline(node.precedingWhitespace || '')) {\n            this.layout.add(WS.NEWLINE, WS.INDENT, node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n        }\n        else if (this.layout.getLayoutItems().length > 0) {\n            this.layout.add(WS.NO_NEWLINE, WS.SPACE, node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n        }\n        else {\n            // comment is the first item in code - no need to add preceding spaces\n            this.layout.add(node.text, WS.MANDATORY_NEWLINE, WS.INDENT);\n        }\n    }\n    formatBlockComment(node) {\n        if (node.type === NodeType.block_comment && this.isMultilineBlockComment(node)) {\n            this.splitBlockComment(node.text).forEach(line => {\n                this.layout.add(WS.NEWLINE, WS.INDENT, line);\n            });\n            this.layout.add(WS.NEWLINE, WS.INDENT);\n        }\n        else {\n            this.layout.add(node.text, WS.SPACE);\n        }\n    }\n    isMultilineBlockComment(node) {\n        return isMultiline(node.text) || isMultiline(node.precedingWhitespace || '');\n    }\n    isDocComment(comment) {\n        const lines = comment.split(/\\n/);\n        return (\n        // first line starts with /* or /**\n        /^\\/\\*\\*?$/.test(lines[0]) &&\n            // intermediate lines start with *\n            lines.slice(1, lines.length - 1).every(line => /^\\s*\\*/.test(line)) &&\n            // last line ends with */\n            /^\\s*\\*\\/$/.test(last(lines)));\n    }\n    // Breaks up block comment to multiple lines.\n    // For example this doc-comment (dots representing leading whitespace):\n    //\n    //   ..../**\n    //   .....* Some description here\n    //   .....* and here too\n    //   .....*/\n    //\n    // gets broken to this array (note the leading single spaces):\n    //\n    //   [ '/**',\n    //     '.* Some description here',\n    //     '.* and here too',\n    //     '.*/' ]\n    //\n    // However, a normal comment (non-doc-comment) like this:\n    //\n    //   ..../*\n    //   ....Some description here\n    //   ....*/\n    //\n    // gets broken to this array (no leading spaces):\n    //\n    //   [ '/*',\n    //     'Some description here',\n    //     '*/' ]\n    //\n    splitBlockComment(comment) {\n        if (this.isDocComment(comment)) {\n            return comment.split(/\\n/).map(line => {\n                if (/^\\s*\\*/.test(line)) {\n                    return ' ' + line.replace(/^\\s*/, '');\n                }\n                else {\n                    return line;\n                }\n            });\n        }\n        else {\n            return comment.split(/\\n/).map(line => line.replace(/^\\s*/, ''));\n        }\n    }\n    formatSubExpression(nodes) {\n        return new ExpressionFormatter({\n            cfg: this.cfg,\n            dialectCfg: this.dialectCfg,\n            params: this.params,\n            layout: this.layout,\n            inline: this.inline,\n        }).format(nodes);\n    }\n    formatInlineExpression(nodes) {\n        const oldParamIndex = this.params.getPositionalParameterIndex();\n        try {\n            return new ExpressionFormatter({\n                cfg: this.cfg,\n                dialectCfg: this.dialectCfg,\n                params: this.params,\n                layout: new InlineLayout(this.cfg.expressionWidth),\n                inline: true,\n            }).format(nodes);\n        }\n        catch (e) {\n            if (e instanceof InlineLayoutError) {\n                // While formatting, some of the positional parameters might have\n                // been consumed, which increased the current parameter index.\n                // We reset the index to an earlier state, so we can run the\n                // formatting again and re-consume these parameters in non-inline mode.\n                this.params.setPositionalParameterIndex(oldParamIndex);\n                return undefined;\n            }\n            else {\n                // forward all unexpected errors\n                throw e;\n            }\n        }\n    }\n    formatKeywordNode(node) {\n        switch (node.tokenType) {\n            case TokenType.RESERVED_JOIN:\n                return this.formatJoin(node);\n            case TokenType.AND:\n            case TokenType.OR:\n            case TokenType.XOR:\n                return this.formatLogicalOperator(node);\n            default:\n                return this.formatKeyword(node);\n        }\n    }\n    formatJoin(node) {\n        if (isTabularStyle(this.cfg)) {\n            // in tabular style JOINs are at the same level as clauses\n            this.layout.indentation.decreaseTopLevel();\n            this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n            this.layout.indentation.increaseTopLevel();\n        }\n        else {\n            this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n        }\n    }\n    formatKeyword(node) {\n        this.layout.add(this.showKw(node), WS.SPACE);\n    }\n    formatLogicalOperator(node) {\n        if (this.cfg.logicalOperatorNewline === 'before') {\n            if (isTabularStyle(this.cfg)) {\n                // In tabular style AND/OR is placed on the same level as clauses\n                this.layout.indentation.decreaseTopLevel();\n                this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n                this.layout.indentation.increaseTopLevel();\n            }\n            else {\n                this.layout.add(WS.NEWLINE, WS.INDENT, this.showKw(node), WS.SPACE);\n            }\n        }\n        else {\n            this.layout.add(this.showKw(node), WS.NEWLINE, WS.INDENT);\n        }\n    }\n    formatDataType(node) {\n        this.layout.add(this.showDataType(node), WS.SPACE);\n    }\n    showKw(node) {\n        if (isTabularToken(node.tokenType)) {\n            return toTabularFormat(this.showNonTabularKw(node), this.cfg.indentStyle);\n        }\n        else {\n            return this.showNonTabularKw(node);\n        }\n    }\n    // Like showKw(), but skips tabular formatting\n    showNonTabularKw(node) {\n        switch (this.cfg.keywordCase) {\n            case 'preserve':\n                return equalizeWhitespace(node.raw);\n            case 'upper':\n                return node.text;\n            case 'lower':\n                return node.text.toLowerCase();\n        }\n    }\n    showFunctionKw(node) {\n        if (isTabularToken(node.tokenType)) {\n            return toTabularFormat(this.showNonTabularFunctionKw(node), this.cfg.indentStyle);\n        }\n        else {\n            return this.showNonTabularFunctionKw(node);\n        }\n    }\n    // Like showFunctionKw(), but skips tabular formatting\n    showNonTabularFunctionKw(node) {\n        switch (this.cfg.functionCase) {\n            case 'preserve':\n                return equalizeWhitespace(node.raw);\n            case 'upper':\n                return node.text;\n            case 'lower':\n                return node.text.toLowerCase();\n        }\n    }\n    showIdentifier(node) {\n        if (node.quoted) {\n            return node.text;\n        }\n        else {\n            switch (this.cfg.identifierCase) {\n                case 'preserve':\n                    return node.text;\n                case 'upper':\n                    return node.text.toUpperCase();\n                case 'lower':\n                    return node.text.toLowerCase();\n            }\n        }\n    }\n    showDataType(node) {\n        switch (this.cfg.dataTypeCase) {\n            case 'preserve':\n                return equalizeWhitespace(node.raw);\n            case 'upper':\n                return node.text;\n            case 'lower':\n                return node.text.toLowerCase();\n        }\n    }\n}\n//# sourceMappingURL=ExpressionFormatter.js.map","import { indentString } from './config.js';\nimport Params from './Params.js';\nimport { createParser } from '../parser/createParser.js';\nimport ExpressionFormatter from './ExpressionFormatter.js';\nimport Layout, { WS } from './Layout.js';\nimport Indentation from './Indentation.js';\n/** Main formatter class that produces a final output string from list of tokens */\nexport default class Formatter {\n    constructor(dialect, cfg) {\n        this.dialect = dialect;\n        this.cfg = cfg;\n        this.params = new Params(this.cfg.params);\n    }\n    /**\n     * Formats an SQL query.\n     * @param {string} query - The SQL query string to be formatted\n     * @return {string} The formatter query\n     */\n    format(query) {\n        const ast = this.parse(query);\n        const formattedQuery = this.formatAst(ast);\n        return formattedQuery.trimEnd();\n    }\n    parse(query) {\n        return createParser(this.dialect.tokenizer).parse(query, this.cfg.paramTypes || {});\n    }\n    formatAst(statements) {\n        return statements\n            .map(stat => this.formatStatement(stat))\n            .join('\\n'.repeat(this.cfg.linesBetweenQueries + 1));\n    }\n    formatStatement(statement) {\n        const layout = new ExpressionFormatter({\n            cfg: this.cfg,\n            dialectCfg: this.dialect.formatOptions,\n            params: this.params,\n            layout: new Layout(new Indentation(indentString(this.cfg))),\n        }).format(statement.children);\n        if (!statement.hasSemicolon) {\n            // do nothing\n        }\n        else if (this.cfg.newlineBeforeSemicolon) {\n            layout.add(WS.NEWLINE, ';');\n        }\n        else {\n            layout.add(WS.NO_NEWLINE, ';');\n        }\n        return layout.toString();\n    }\n}\n//# sourceMappingURL=Formatter.js.map","export class ConfigError extends Error {\n}\nexport function validateConfig(cfg) {\n    const removedOptions = [\n        'multilineLists',\n        'newlineBeforeOpenParen',\n        'newlineBeforeCloseParen',\n        'aliasAs',\n        'commaPosition',\n        'tabulateAlias',\n    ];\n    for (const optionName of removedOptions) {\n        if (optionName in cfg) {\n            throw new ConfigError(`${optionName} config is no more supported.`);\n        }\n    }\n    if (cfg.expressionWidth <= 0) {\n        throw new ConfigError(`expressionWidth config must be positive number. Received ${cfg.expressionWidth} instead.`);\n    }\n    if (cfg.params && !validateParams(cfg.params)) {\n        // eslint-disable-next-line no-console\n        console.warn('WARNING: All \"params\" option values should be strings.');\n    }\n    if (cfg.paramTypes && !validateParamTypes(cfg.paramTypes)) {\n        throw new ConfigError('Empty regex given in custom paramTypes. That would result in matching infinite amount of parameters.');\n    }\n    return cfg;\n}\nfunction validateParams(params) {\n    const paramValues = params instanceof Array ? params : Object.values(params);\n    return paramValues.every(p => typeof p === 'string');\n}\nfunction validateParamTypes(paramTypes) {\n    if (paramTypes.custom && Array.isArray(paramTypes.custom)) {\n        return paramTypes.custom.every(p => p.regex !== '');\n    }\n    return true;\n}\n//# sourceMappingURL=validateConfig.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as allDialects from './allDialects.js';\nimport { createDialect } from './dialect.js';\nimport Formatter from './formatter/Formatter.js';\nimport { ConfigError, validateConfig } from './validateConfig.js';\nconst dialectNameMap = {\n    bigquery: 'bigquery',\n    db2: 'db2',\n    db2i: 'db2i',\n    duckdb: 'duckdb',\n    hive: 'hive',\n    mariadb: 'mariadb',\n    mysql: 'mysql',\n    n1ql: 'n1ql',\n    plsql: 'plsql',\n    postgresql: 'postgresql',\n    redshift: 'redshift',\n    spark: 'spark',\n    sqlite: 'sqlite',\n    sql: 'sql',\n    tidb: 'tidb',\n    trino: 'trino',\n    transactsql: 'transactsql',\n    tsql: 'transactsql',\n    singlestoredb: 'singlestoredb',\n    snowflake: 'snowflake',\n};\nexport const supportedDialects = Object.keys(dialectNameMap);\nconst defaultOptions = {\n    tabWidth: 2,\n    useTabs: false,\n    keywordCase: 'preserve',\n    identifierCase: 'preserve',\n    dataTypeCase: 'preserve',\n    functionCase: 'preserve',\n    indentStyle: 'standard',\n    logicalOperatorNewline: 'before',\n    expressionWidth: 50,\n    linesBetweenQueries: 1,\n    denseOperators: false,\n    newlineBeforeSemicolon: false,\n};\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptionsWithLanguage} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\nexport const format = (query, cfg = {}) => {\n    if (typeof cfg.language === 'string' && !supportedDialects.includes(cfg.language)) {\n        throw new ConfigError(`Unsupported SQL dialect: ${cfg.language}`);\n    }\n    const canonicalDialectName = dialectNameMap[cfg.language || 'sql'];\n    return formatDialect(query, Object.assign(Object.assign({}, cfg), { dialect: allDialects[canonicalDialectName] }));\n};\n/**\n * Like the above format(), but language parameter is mandatory\n * and must be a Dialect object instead of a string.\n *\n * @param {string} query - input SQL query string\n * @param {FormatOptionsWithDialect} cfg Configuration options (see docs in README)\n * @return {string} formatted query\n */\nexport const formatDialect = (query, _a) => {\n    var { dialect } = _a, cfg = __rest(_a, [\"dialect\"]);\n    if (typeof query !== 'string') {\n        throw new Error('Invalid query argument. Expected string, instead got ' + typeof query);\n    }\n    const options = validateConfig(Object.assign(Object.assign({}, defaultOptions), cfg));\n    return new Formatter(createDialect(dialect), options).format(query);\n};\n//# sourceMappingURL=sqlFormatter.js.map","import { Monaco, MonacoEditor, monacoTypes } from '@grafana/ui';\nimport { format } from 'sql-formatter';\n\ndeclare const monaco: Monaco;\n\ninterface Model {\n  getValueInRange: Function;\n  getWordUntilPosition: Function;\n  getValue: Function;\n  getOffsetAt: Function;\n}\n\ninterface Position {\n  lineNumber: number;\n  column: number;\n}\n\nexport interface Range {\n  startLineNumber: number;\n  endLineNumber: number;\n  startColumn: number;\n  endColumn: number;\n}\n\nexport interface SuggestionResponse {\n  suggestions: monacoTypes.languages.CompletionItem[];\n}\n\nexport interface Suggestion {\n  label: string;\n  kind: number;\n  documentation: string;\n  insertText: string;\n  range: Range;\n  detail?: string;\n  sortText?: string;\n}\n\nexport type Fetcher = {\n  (text: string, range: Range, cursorPosition: number): Promise<SuggestionResponse>;\n};\n\nexport function formatSql(rawSql: string, tabWidth = 4): string {\n  // The default formatter doesn't like the $, so we swap it out\n  const macroPrefix = '$';\n  const swapIdentifier = 'GRAFANA_DOLLAR_TOKEN';\n  const removedVariables = rawSql.replaceAll(macroPrefix, swapIdentifier);\n  const formattedRaw = format(removedVariables, {\n    language: 'postgresql',\n    tabWidth\n  });\n\n  const formatted = formattedRaw.replaceAll(swapIdentifier, macroPrefix);\n  return formatted;\n}\n\nexport function registerSQL(lang: string, editor: MonacoEditor, fetchSuggestions: Fetcher) {\n  // show options outside query editor\n  editor.updateOptions({ fixedOverflowWidgets: true, scrollBeyondLastLine: false });\n\n  // const registeredLang = monaco.languages.getLanguages().find((l: Lang) => l.id === lang);\n  // if (registeredLang !== undefined) {\n  //   return monaco.editor;\n  // }\n\n  // monaco.languages.register({ id: lang });\n\n  // just extend sql for now so we get syntax highlighting\n  monaco.languages.registerCompletionItemProvider('sql', {\n    triggerCharacters: [' ', '.', '$'],\n    provideCompletionItems: async (model: Model, position: Position) => {\n      const word = model.getWordUntilPosition(position);\n      const range: Range = {\n        startLineNumber: position.lineNumber,\n        endLineNumber: position.lineNumber,\n        startColumn: word.startColumn,\n        endColumn: word.endColumn,\n      };\n\n      return fetchSuggestions(model.getValue(), range, model.getOffsetAt(position));\n    },\n  });\n\n  monaco.languages.registerDocumentFormattingEditProvider('sql', {\n    provideDocumentFormattingEdits(model, options) {\n      return [\n        {\n          range: model.getFullModelRange(),\n          text: formatSql(model.getValue(), options.tabSize)\n        }\n      ];\n    }\n  });\n\n  return monaco.editor;\n}\n","/**\n * Enum for all token types supported by the lexer\n */\nexport enum TokenType {\n\tWhitespace,\n\tComment,\n\n\tBareWord,               // Either keyword (SELECT) or identifier (column)\n\n\tNumber,                 // Always non-negative. No leading plus. 123 or something like 123.456e12, 0x123p12\n\tStringLiteral,          // 'hello word', 'hello''word', 'hello\\'word\\\\'\n\n\tQuotedIdentifier,       // \"x\", `x`\n\n\tOpeningRoundBracket,\n\tClosingRoundBracket,\n\n\tOpeningSquareBracket,\n\tClosingSquareBracket,\n\n\tOpeningCurlyBrace,\n\tClosingCurlyBrace,\n\n\tComma,\n\tSemicolon,\n\tVerticalDelimiter,      // Vertical delimiter \\G\n\tDot,                    // Compound identifiers, like a.b or tuple access operator a.1, (x, y).2.\n\t\t\t\t\t\t\t// Need to be distinguished from floating point number with omitted integer part: .1\n\n\tAsterisk,               // Could be used as multiplication operator or on it's own: \"SELECT *\"\n\n\tHereDoc,\n\n\tDollarSign,\n\tPlus,\n\tMinus,\n\tSlash,\n\tPercent,\n\tArrow,                  // ->. Should be distinguished from minus operator.\n\tQuestionMark,\n\tColon,\n\tCaret,\n\tDoubleColon,\n\tEquals,\n\tNotEquals,\n\tLess,\n\tGreater,\n\tLessOrEquals,\n\tGreaterOrEquals,\n\tSpaceship,              // <=>. Used in MySQL for NULL-safe equality comparison.\n\tPipeMark,\n\tConcatenation,          // String concatenation operator: ||\n\n\tAt,                     // @. Used for specifying user names and also for MySQL-style variables.\n\tDoubleAt,               // @@. Used for MySQL-style global variables.\n\n\t// Order is important. EndOfStream goes after all usual tokens, and special error tokens goes after EndOfStream.\n\n\tEndOfStream,\n\n\t// Something unrecognized.\n\tError,\n\t// Something is wrong and we have more information.\n\tErrorMultilineCommentIsNotClosed,\n\tErrorSingleQuoteIsNotClosed,\n\tErrorDoubleQuoteIsNotClosed,\n\tErrorBackQuoteIsNotClosed,\n\tErrorSingleExclamationMark,\n\tErrorSinglePipeMark,\n\tErrorWrongNumber,\n\tErrorMaxQuerySizeExceeded\n}\n\nexport const keywords = new Set([\n\t'SELECT', 'FROM', 'WHERE', 'GROUP', 'BY', 'HAVING', 'ORDER',\n\t'LIMIT', 'OFFSET', 'JOIN', 'INNER', 'OUTER', 'LEFT', 'RIGHT',\n\t'FULL', 'CROSS', 'ON', 'USING', 'AS', 'WITH', 'UNION', 'ALL',\n\t'DISTINCT', 'CASE', 'WHEN', 'THEN', 'ELSE', 'END', 'AND', 'OR',\n\t'NOT', 'IN', 'EXISTS', 'BETWEEN', 'LIKE', 'IS', 'NULL', 'ASC', 'DESC'\n]);\n\n/**\n * A token representing a lexical unit in the input\n */\nexport class Token {\n\ttype: TokenType;\n\tbegin: number;\n\tend: number;\n\ttext: string;\n\n\tconstructor(type: TokenType, begin: number, end: number, text: string) {\n\t\tthis.type = type;\n\t\tthis.begin = begin;\n\t\tthis.end = end;\n\t\tthis.text = text;\n\t}\n\n\tsize(): number {\n\t\treturn this.end - this.begin;\n\t}\n\n\tisSignificant(): boolean {\n\t\treturn this.type !== TokenType.Whitespace && this.type !== TokenType.Comment;\n\t}\n\n\tmatchKeyword(keyword: string): boolean {\n\t\treturn this.type === TokenType.BareWord && keywords.has(keyword.toUpperCase()) && (this.text.toUpperCase() === keyword.toUpperCase());\n\t}\n\n\tisKeyword(): boolean {\n\t\treturn this.type === TokenType.BareWord && keywords.has(this.text.toUpperCase());\n\t}\n\n\tisError(): boolean {\n\t\treturn this.type > TokenType.EndOfStream;\n\t}\n\n\tisEnd(): boolean {\n\t\treturn this.type === TokenType.EndOfStream;\n\t}\n}\n\n/**\n * Get the name of a token type (for debugging)\n */\nexport function getTokenName(type: TokenType): string {\n\treturn TokenType[type];\n}\n\n/**\n * Get the description of an error token\n */\nexport function getErrorTokenDescription(type: TokenType): string {\n\tswitch (type) {\n\t\tcase TokenType.Error:\n\t\t\treturn \"Unrecognized token\";\n\t\tcase TokenType.ErrorMultilineCommentIsNotClosed:\n\t\t\treturn \"Multiline comment is not closed\";\n\t\tcase TokenType.ErrorSingleQuoteIsNotClosed:\n\t\t\treturn \"Single quoted string is not closed\";\n\t\tcase TokenType.ErrorDoubleQuoteIsNotClosed:\n\t\t\treturn \"Double quoted string is not closed\";\n\t\tcase TokenType.ErrorBackQuoteIsNotClosed:\n\t\t\treturn \"Back quoted string is not closed\";\n\t\tcase TokenType.ErrorSingleExclamationMark:\n\t\t\treturn \"Exclamation mark can only occur in != operator\";\n\t\tcase TokenType.ErrorSinglePipeMark:\n\t\t\treturn \"Pipe symbol could only occur in || operator\";\n\t\tcase TokenType.ErrorWrongNumber:\n\t\t\treturn \"Wrong number\";\n\t\tcase TokenType.ErrorMaxQuerySizeExceeded:\n\t\t\treturn \"Max query size exceeded (can be increased with the `max_query_size` setting)\";\n\t\tdefault:\n\t\t\treturn \"Not an error\";\n\t}\n}\n","/**\n * Helper functions for character classification and string handling\n */\n\n/**\n * Check if a character is a whitespace ASCII character\n */\nexport function isWhitespaceASCII(c: string): boolean {\n\treturn c === ' ' || c === '\\t' || c === '\\n' || c === '\\r' || c === '\\f' || c === '\\v';\n}\n\n/**\n * Check if a character is a numeric ASCII character\n */\nexport function isNumericASCII(c: string): boolean {\n\treturn c >= '0' && c <= '9';\n}\n\n/**\n * Check if a character is a word character (letter, digit, or underscore)\n */\nexport function isWordCharASCII(c: string): boolean {\n\treturn (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '_';\n}\n\n/**\n * Check if a character is a hexadecimal digit\n */\nexport function isHexDigit(c: string): boolean {\n\treturn (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');\n}\n\n/**\n * Check if a character is a valid number separator, like underscore in 1_000_000\n */\nexport function isNumberSeparator(startOfBlock: boolean, hex: boolean, pos: number, text: string): boolean {\n\tif (startOfBlock) {\n\t\treturn false;\n\t}\n\n\tif (pos >= text.length) {\n\t\treturn false;\n\t}\n\n\tif (text[pos] !== '_') {\n\t\treturn false;\n\t}\n\n\tif (pos + 1 >= text.length) {\n\t\treturn false;\n\t}\n\n\tif (hex) {\n\t\treturn isHexDigit(text[pos + 1]);\n\t}\n\n\treturn isNumericASCII(text[pos + 1]);\n}\n\n/**\n * Find the first occurrence of any of the given characters\n */\nexport function findFirstSymbols(text: string, pos: number, end: number, ...symbols: string[]): number {\n\twhile (pos < end) {\n\t\tif (symbols.includes(text[pos])) {\n\t\t\treturn pos;\n\t\t}\n\t\tpos++;\n\t}\n\treturn end;\n}\n\n/**\n * Find the first character that is not any of the given characters\n */\nexport function findFirstNotSymbols(text: string, pos: number, end: number, ...symbols: string[]): number {\n\twhile (pos < end) {\n\t\tif (!symbols.includes(text[pos])) {\n\t\t\treturn pos;\n\t\t}\n\t\tpos++;\n\t}\n\treturn end;\n}\n\n/**\n * Skip UTF-8 whitespaces (including Unicode ones)\n */\nexport function skipWhitespacesUTF8(text: string, pos: number, end: number): number {\n\t// Skip whitespace characters in Unicode\n\t// This is a simplified version that just skips common Unicode whitespace\n\twhile (pos < end) {\n\t\tconst code = text.charCodeAt(pos);\n\n\t\t// Skip ASCII whitespace\n\t\tif (code <= 127 && isWhitespaceASCII(String.fromCharCode(code))) {\n\t\t\tpos++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Skip some common Unicode whitespace\n\t\t// U+00A0 - NO-BREAK SPACE\n\t\t// U+2000 to U+200A - Various space characters\n\t\t// U+2028 - LINE SEPARATOR\n\t\t// U+2029 - PARAGRAPH SEPARATOR\n\t\t// U+202F - NARROW NO-BREAK SPACE\n\t\t// U+205F - MEDIUM MATHEMATICAL SPACE\n\t\t// U+3000 - IDEOGRAPHIC SPACE\n\t\tif (\n\t\t\tcode === 0x00A0 ||\n\t\t\t(code >= 0x2000 && code <= 0x200A) ||\n\t\t\tcode === 0x2028 ||\n\t\t\tcode === 0x2029 ||\n\t\t\tcode === 0x202F ||\n\t\t\tcode === 0x205F ||\n\t\t\tcode === 0x3000\n\t\t) {\n\t\t\tpos++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\treturn pos;\n}\n\n/**\n * Check if a character is a UTF-8 continuation octet\n */\nexport function isContinuationOctet(c: string): boolean {\n\tconst code = c.charCodeAt(0);\n\treturn (code & 0xC0) === 0x80;\n}\n","import { Token, TokenType } from './types';\nimport {\n  isWhitespaceASCII,\n  isNumericASCII,\n  isWordCharASCII,\n  isHexDigit,\n  isNumberSeparator,\n  findFirstNotSymbols,\n  skipWhitespacesUTF8,\n  isContinuationOctet\n} from './helpers';\n\n/**\n * Lexer class for tokenizing input text\n */\nexport class Lexer {\n  private readonly text: string;\n  private pos: number;\n  private readonly end: number;\n  private readonly maxQuerySize: number;\n  private prevSignificantTokenType: TokenType = TokenType.Whitespace;\n\n  /**\n   * Create a new lexer for the given input\n   * @param text The input text to tokenize\n   * @param maxQuerySize Optional maximum query size (0 for unlimited)\n   */\n  public constructor(text: string, maxQuerySize = 0) {\n    this.text = text;\n    this.pos = 0;\n    this.end = text.length;\n    this.maxQuerySize = maxQuerySize;\n  }\n\n  /**\n   * Get the next token from the input\n   */\n  public nextToken(): Token {\n    const res = this.nextTokenImpl();\n    if (this.maxQuerySize && res.end > this.maxQuerySize) {\n      return new Token(TokenType.ErrorMaxQuerySizeExceeded, res.begin, res.end, this.text.substring(res.begin, res.end));\n    }\n    if (res.isSignificant()) {\n      this.prevSignificantTokenType = res.type;\n    }\n    return res;\n  }\n\n  /**\n   * Parse a quoted string\n   */\n  private parseQuotedString(quote: string, successToken: TokenType, errorToken: TokenType): Token {\n    const tokenBegin = this.pos;\n    \n    // Skip opening quote\n    this.pos++;\n    \n    while (this.pos < this.end) {\n      const nextQuotePos = this.text.indexOf(quote, this.pos);\n      const nextEscapePos = this.text.indexOf('\\\\', this.pos);\n      \n      if (nextQuotePos === -1) {\n        // No closing quote found\n        this.pos = this.end;\n        return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      if (nextEscapePos !== -1 && nextEscapePos < nextQuotePos) {\n        // Found escape character before quote\n        this.pos = nextEscapePos + 2; // Skip escape and the escaped character\n        continue;\n      }\n      \n      // Found quote\n      this.pos = nextQuotePos + 1;\n      \n      // Check for doubled quote which represents a single quote character\n      if (this.pos < this.end && this.text[this.pos] === quote) {\n        // Skip the second quote and continue searching\n        this.pos++;\n        continue;\n      }\n      \n      // Found end of quoted string\n      return new Token(successToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n    \n    // Reached end of input without closing quote\n    return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Parse a quoted hex or binary string (x'AB' or b'101')\n   */\n  private parseQuotedHexOrBinString(): Token {\n    const tokenBegin = this.pos;\n    const isHex = this.text[this.pos].toLowerCase() === 'x';\n    \n    // Skip 'x' and opening quote\n    this.pos += 2;\n    \n    if (isHex) {\n      // Find the first non-hex digit\n      while (this.pos < this.end && isHexDigit(this.text[this.pos])) {\n        this.pos++;\n      }\n    } else {\n      // Find the first non-binary digit\n      this.pos = findFirstNotSymbols(this.text, this.pos, this.end, '0', '1');\n    }\n    \n    if (this.pos >= this.end || this.text[this.pos] !== \"'\") {\n      this.pos = this.end;\n      return new Token(TokenType.ErrorSingleQuoteIsNotClosed, tokenBegin, this.pos, \n        this.text.substring(tokenBegin, this.pos));\n    }\n    \n    this.pos++; // Skip closing quote\n    return new Token(TokenType.StringLiteral, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Handle comment until end of line\n   */\n  private commentUntilEndOfLine(): Token {\n    const tokenBegin = this.pos;\n    const newlinePos = this.text.indexOf('\\n', this.pos);\n    \n    if (newlinePos === -1) {\n      this.pos = this.end;\n    } else {\n      this.pos = newlinePos;\n    }\n    \n    return new Token(TokenType.Comment, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Parse a unicode quoted string\n   */\n  private parseUnicodeQuotedString(expectedEndByte: number, successToken: TokenType, errorToken: TokenType): Token {\n    const tokenBegin = this.pos - 3; // Account for the starting quote sequence\n    \n    while (this.pos + 2 < this.end) {\n      const e2Pos = this.text.indexOf('\\u00E2', this.pos);\n      if (e2Pos === -1 || e2Pos + 2 >= this.end) {\n        this.pos = this.end;\n        return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      this.pos = e2Pos;\n      \n      if (this.text.charCodeAt(this.pos) === 0xE2 && \n          this.text.charCodeAt(this.pos + 1) === 0x80 && \n          this.text.charCodeAt(this.pos + 2) === expectedEndByte) {\n        \n        this.pos += 3; // Skip the closing quote\n        return new Token(successToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      this.pos++;\n    }\n    \n    this.pos = this.end;\n    return new Token(errorToken, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n\n  /**\n   * Implementation of nextToken that actually does the tokenization\n   */\n  private nextTokenImpl(): Token {\n    if (this.pos >= this.end) {\n      return new Token(TokenType.EndOfStream, this.end, this.end, \"\");\n    }\n    \n    const tokenBegin = this.pos;\n    const currentChar = this.text[this.pos];\n    \n    // Handle whitespace\n    if (isWhitespaceASCII(currentChar)) {\n      this.pos++;\n      while (this.pos < this.end && isWhitespaceASCII(this.text[this.pos])) {\n        this.pos++;\n      }\n      return new Token(TokenType.Whitespace, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n    \n    // Handle numbers\n    if (isNumericASCII(currentChar)) {\n      // For chained tuple access operators (x.1.1)\n      if (this.prevSignificantTokenType === TokenType.Dot) {\n        this.pos++;\n        while (this.pos < this.end && \n              (isNumericASCII(this.text[this.pos]) || \n               isNumberSeparator(false, false, this.pos, this.text))) {\n          this.pos++;\n        }\n      } else {\n        let startOfBlock = false;\n        let hex = false;\n        \n        // Check for hex (0x) or binary (0b) notation\n        if (this.pos + 2 < this.end && currentChar === '0' && \n            (this.text[this.pos + 1].toLowerCase() === 'x' || this.text[this.pos + 1].toLowerCase() === 'b')) {\n          \n          let isValid = false;\n          if (this.text[this.pos + 1].toLowerCase() === 'x') {\n            if (this.pos + 2 < this.end && isHexDigit(this.text[this.pos + 2])) {\n              hex = true;\n              isValid = true; // hex\n            }\n          } else if (this.text[this.pos + 2] === '0' || this.text[this.pos + 2] === '1') {\n            isValid = true; // binary\n          }\n          \n          if (isValid) {\n            this.pos += 2;\n            startOfBlock = true;\n          } else {\n            this.pos++; // consume the leading zero\n          }\n        } else {\n          this.pos++;\n        }\n        \n        // Parse integer part\n        while (this.pos < this.end && \n              ((hex ? isHexDigit(this.text[this.pos]) : isNumericASCII(this.text[this.pos])) || \n                isNumberSeparator(startOfBlock, hex, this.pos, this.text))) {\n          this.pos++;\n          startOfBlock = false;\n        }\n        \n        // Check for decimal point\n        if (this.pos < this.end && this.text[this.pos] === '.') {\n          startOfBlock = true;\n          this.pos++;\n          \n          // Parse fractional part\n          while (this.pos < this.end && \n                ((hex ? isHexDigit(this.text[this.pos]) : isNumericASCII(this.text[this.pos])) || \n                  isNumberSeparator(startOfBlock, hex, this.pos, this.text))) {\n            this.pos++;\n            startOfBlock = false;\n          }\n        }\n        \n        // Check for exponent\n        if (this.pos + 1 < this.end && \n            (hex ? (this.text[this.pos] === 'p' || this.text[this.pos] === 'P') \n                 : (this.text[this.pos] === 'e' || this.text[this.pos] === 'E'))) {\n          \n          startOfBlock = true;\n          this.pos++;\n          \n          // Check for sign of exponent\n          if (this.pos + 1 < this.end && (this.text[this.pos] === '-' || this.text[this.pos] === '+')) {\n            this.pos++;\n          }\n          \n          // Parse exponent\n          while (this.pos < this.end && \n                (isNumericASCII(this.text[this.pos]) || \n                 isNumberSeparator(startOfBlock, false, this.pos, this.text))) {\n            this.pos++;\n            startOfBlock = false;\n          }\n        }\n      }\n      \n      // Check if this is actually a numeric identifier (1identifier)\n      if (this.pos < this.end && isWordCharASCII(this.text[this.pos])) {\n        this.pos++;\n        while (this.pos < this.end && isWordCharASCII(this.text[this.pos])) {\n          this.pos++;\n        }\n        \n        // Check if it's a valid identifier or an error\n        for (let i = tokenBegin; i < this.pos; i++) {\n          if (!isWordCharASCII(this.text[i]) && this.text[i] !== '$') {\n            return new Token(TokenType.ErrorWrongNumber, tokenBegin, this.pos, \n              this.text.substring(tokenBegin, this.pos));\n          }\n        }\n        \n        return new Token(TokenType.BareWord, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      return new Token(TokenType.Number, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n    \n    // Handle quoted strings\n    switch (currentChar) {\n      case \"'\":\n        return this.parseQuotedString(\"'\", TokenType.StringLiteral, TokenType.ErrorSingleQuoteIsNotClosed);\n      case '\"':\n        return this.parseQuotedString('\"', TokenType.QuotedIdentifier, TokenType.ErrorDoubleQuoteIsNotClosed);\n      case '`':\n        return this.parseQuotedString('`', TokenType.QuotedIdentifier, TokenType.ErrorBackQuoteIsNotClosed);\n        \n      // Handle brackets\n      case '(':\n        return new Token(TokenType.OpeningRoundBracket, tokenBegin, ++this.pos, \"(\");\n      case ')':\n        return new Token(TokenType.ClosingRoundBracket, tokenBegin, ++this.pos, \")\");\n      case '[':\n        return new Token(TokenType.OpeningSquareBracket, tokenBegin, ++this.pos, \"[\");\n      case ']':\n        return new Token(TokenType.ClosingSquareBracket, tokenBegin, ++this.pos, \"]\");\n      case '{':\n        return new Token(TokenType.OpeningCurlyBrace, tokenBegin, ++this.pos, \"{\");\n      case '}':\n        return new Token(TokenType.ClosingCurlyBrace, tokenBegin, ++this.pos, \"}\");\n        \n      // Handle simple punctuation\n      case ',':\n        return new Token(TokenType.Comma, tokenBegin, ++this.pos, \",\");\n      case ';':\n        return new Token(TokenType.Semicolon, tokenBegin, ++this.pos, \";\");\n        \n      // Handle dot (qualifier, tuple access operator or start of floating point number)\n      case '.': {\n        // Check if dot follows an identifier, complex expression or number\n        if (this.pos > 0 &&\n            (!(this.pos + 1 < this.end && isNumericASCII(this.text[this.pos + 1])) ||\n              this.prevSignificantTokenType === TokenType.ClosingRoundBracket ||\n              this.prevSignificantTokenType === TokenType.ClosingSquareBracket ||\n              this.prevSignificantTokenType === TokenType.BareWord ||\n              this.prevSignificantTokenType === TokenType.QuotedIdentifier ||\n              this.prevSignificantTokenType === TokenType.Number)) {\n          \n          return new Token(TokenType.Dot, tokenBegin, ++this.pos, \".\");\n        }\n        \n        // Otherwise it's a number with fractional part but no integer part\n        let startOfBlock = true;\n        this.pos++;\n        \n        while (this.pos < this.end && \n              (isNumericASCII(this.text[this.pos]) || \n               isNumberSeparator(startOfBlock, false, this.pos, this.text))) {\n          this.pos++;\n          startOfBlock = false;\n        }\n        \n        // Check for exponent\n        if (this.pos + 1 < this.end && (this.text[this.pos] === 'e' || this.text[this.pos] === 'E')) {\n          startOfBlock = true;\n          this.pos++;\n          \n          // Check for sign of exponent\n          if (this.pos + 1 < this.end && (this.text[this.pos] === '-' || this.text[this.pos] === '+')) {\n            this.pos++;\n          }\n          \n          // Parse exponent\n          while (this.pos < this.end && \n                (isNumericASCII(this.text[this.pos]) || \n                 isNumberSeparator(startOfBlock, false, this.pos, this.text))) {\n            this.pos++;\n            startOfBlock = false;\n          }\n        }\n        \n        return new Token(TokenType.Number, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      // Handle operators\n      case '+':\n        return new Token(TokenType.Plus, tokenBegin, ++this.pos, \"+\");\n        \n      case '-': {\n        this.pos++;\n        \n        // Check for arrow operator\n        if (this.pos < this.end && this.text[this.pos] === '>') {\n          return new Token(TokenType.Arrow, tokenBegin, ++this.pos, \"->\");\n        }\n        \n        // Check for comment\n        if (this.pos < this.end && this.text[this.pos] === '-') {\n          this.pos++;\n          return this.commentUntilEndOfLine();\n        }\n        \n        return new Token(TokenType.Minus, tokenBegin, this.pos, \"-\");\n      }\n      \n      case '*':\n        return new Token(TokenType.Asterisk, tokenBegin, ++this.pos, \"*\");\n        \n      case '/': {\n        this.pos++;\n        \n        // Check for comment\n        if (this.pos < this.end) {\n          if (this.text[this.pos] === '/') {\n            this.pos++;\n            return this.commentUntilEndOfLine();\n          }\n          \n          if (this.text[this.pos] === '*') {\n            this.pos++;\n            let nestingLevel = 1;\n            \n            while (this.pos + 1 < this.end) {\n              if (this.text[this.pos] === '/' && this.text[this.pos + 1] === '*') {\n                this.pos += 2;\n                nestingLevel++;\n              } else if (this.text[this.pos] === '*' && this.text[this.pos + 1] === '/') {\n                this.pos += 2;\n                nestingLevel--;\n                \n                if (nestingLevel === 0) {\n                  return new Token(TokenType.Comment, tokenBegin, this.pos, \n                    this.text.substring(tokenBegin, this.pos));\n                }\n              } else {\n                this.pos++;\n              }\n            }\n            \n            this.pos = this.end;\n            return new Token(TokenType.ErrorMultilineCommentIsNotClosed, tokenBegin, this.pos, \n              this.text.substring(tokenBegin, this.pos));\n          }\n        }\n        \n        return new Token(TokenType.Slash, tokenBegin, this.pos, \"/\");\n      }\n      \n      case '#': {\n        this.pos++;\n        \n        // Comments only if followed by space or '!'\n        if (this.pos < this.end && (this.text[this.pos] === ' ' || this.text[this.pos] === '!')) {\n          return this.commentUntilEndOfLine();\n        }\n        \n        return new Token(TokenType.Error, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      case '%':\n        return new Token(TokenType.Percent, tokenBegin, ++this.pos, \"%\");\n        \n      case '=': {\n        this.pos++;\n        \n        // Check for == operator\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          this.pos++;\n        }\n        \n        return new Token(TokenType.Equals, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n      }\n      \n      case '!': {\n        this.pos++;\n        \n        // Only valid as != operator\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          return new Token(TokenType.NotEquals, tokenBegin, ++this.pos, \"!=\");\n        }\n        \n        return new Token(TokenType.ErrorSingleExclamationMark, tokenBegin, this.pos, \"!\");\n      }\n      \n      case '<': {\n        this.pos++;\n        \n        // Check for <=>, <=, <>\n        if (this.pos + 1 < this.end && this.text[this.pos] === '=' && this.text[this.pos + 1] === '>') {\n          this.pos += 2;\n          return new Token(TokenType.Spaceship, tokenBegin, this.pos, \"<=>\");\n        }\n        \n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          return new Token(TokenType.LessOrEquals, tokenBegin, ++this.pos, \"<=\");\n        }\n        \n        if (this.pos < this.end && this.text[this.pos] === '>') {\n          return new Token(TokenType.NotEquals, tokenBegin, ++this.pos, \"<>\");\n        }\n        \n        return new Token(TokenType.Less, tokenBegin, this.pos, \"<\");\n      }\n      \n      case '>': {\n        this.pos++;\n        \n        // Check for >= operator\n        if (this.pos < this.end && this.text[this.pos] === '=') {\n          return new Token(TokenType.GreaterOrEquals, tokenBegin, ++this.pos, \">=\");\n        }\n        \n        return new Token(TokenType.Greater, tokenBegin, this.pos, \">\");\n      }\n      \n      case '?':\n        return new Token(TokenType.QuestionMark, tokenBegin, ++this.pos, \"?\");\n        \n      case '^':\n        return new Token(TokenType.Caret, tokenBegin, ++this.pos, \"^\");\n        \n      case ':': {\n        this.pos++;\n        \n        // Check for :: operator\n        if (this.pos < this.end && this.text[this.pos] === ':') {\n          return new Token(TokenType.DoubleColon, tokenBegin, ++this.pos, \"::\");\n        }\n        \n        return new Token(TokenType.Colon, tokenBegin, this.pos, \":\");\n      }\n      \n      case '|': {\n        this.pos++;\n        \n        // Check for || operator (concatenation)\n        if (this.pos < this.end && this.text[this.pos] === '|') {\n          return new Token(TokenType.Concatenation, tokenBegin, ++this.pos, \"||\");\n        }\n        \n        return new Token(TokenType.PipeMark, tokenBegin, this.pos, \"|\");\n      }\n      \n      case '@': {\n        this.pos++;\n        \n        // Check for @@ operator\n        if (this.pos < this.end && this.text[this.pos] === '@') {\n          return new Token(TokenType.DoubleAt, tokenBegin, ++this.pos, \"@@\");\n        }\n        \n        return new Token(TokenType.At, tokenBegin, this.pos, \"@\");\n      }\n      \n      case '\\\\': {\n        this.pos++;\n        \n        // Check for \\G vertical delimiter\n        if (this.pos < this.end && this.text[this.pos] === 'G') {\n          return new Token(TokenType.VerticalDelimiter, tokenBegin, ++this.pos, \"\\\\G\");\n        }\n        \n        return new Token(TokenType.Error, tokenBegin, this.pos, \"\\\\\");\n      }\n      \n      // Handle Unicode special cases\n      case '\\u00E2': {\n        // Mathematical minus symbol in UTF-8\n        if (this.pos + 2 < this.end && \n            this.text.charCodeAt(this.pos + 1) === 0x88 && \n            this.text.charCodeAt(this.pos + 2) === 0x92) {\n          \n          this.pos += 3;\n          return new Token(TokenType.Minus, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n        }\n        \n        // Unicode quoted string\n        if (this.pos + 2 < this.end && \n            this.text.charCodeAt(this.pos) === 0xE2 && \n            this.text.charCodeAt(this.pos + 1) === 0x80 && \n            (this.text.charCodeAt(this.pos + 2) === 0x98 || this.text.charCodeAt(this.pos + 2) === 0x9C)) {\n          \n          const expectedEndByte = this.text.charCodeAt(this.pos + 2) + 1;\n          const successToken = this.text.charCodeAt(this.pos + 2) === 0x98 \n            ? TokenType.StringLiteral \n            : TokenType.QuotedIdentifier;\n          const errorToken = this.text.charCodeAt(this.pos + 2) === 0x98 \n            ? TokenType.ErrorSingleQuoteIsNotClosed \n            : TokenType.ErrorDoubleQuoteIsNotClosed;\n          \n          this.pos += 3;\n          return this.parseUnicodeQuotedString(expectedEndByte, successToken, errorToken);\n        }\n      }\n    }\n    \n    // Handle special cases\n    \n    // Dollar sign and here-document\n    if (currentChar === '$') {\n      // Try to parse here-doc\n      const tokenStream = this.text.substring(this.pos);\n      const heredocNameEndPosition = tokenStream.indexOf('$', 1);\n      \n      if (heredocNameEndPosition !== -1) {\n        const heredocSize = heredocNameEndPosition + 1;\n        const heredoc = tokenStream.substring(0, heredocSize);\n        \n        const heredocEndPosition = tokenStream.indexOf(heredoc, heredocSize);\n        if (heredocEndPosition !== -1) {\n          this.pos += heredocEndPosition + heredocSize;\n          return new Token(TokenType.HereDoc, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n        }\n      }\n      \n      // Standalone dollar sign\n      if ((this.pos + 1 < this.end && !isWordCharASCII(this.text[this.pos + 1])) || this.pos + 1 === this.end) {\n        return new Token(TokenType.DollarSign, tokenBegin, ++this.pos, \"$\");\n      }\n    }\n    \n    // Hex or binary string literals\n    if (this.pos + 2 < this.end && \n        this.text[this.pos + 1] === \"'\" && \n        (currentChar.toLowerCase() === 'x' || currentChar.toLowerCase() === 'b')) {\n      \n      return this.parseQuotedHexOrBinString();\n    }\n    \n    // Bare words (identifiers or keywords)\n    if (isWordCharASCII(currentChar) || currentChar === '$') {\n      this.pos++;\n      while (this.pos < this.end && (isWordCharASCII(this.text[this.pos]) || this.text[this.pos] === '$')) {\n        this.pos++;\n      }\n      return new Token(TokenType.BareWord, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n    \n    // Try to skip Unicode whitespace\n    const newPos = skipWhitespacesUTF8(this.text, this.pos, this.end);\n    if (newPos > this.pos) {\n      this.pos = newPos;\n      return new Token(TokenType.Whitespace, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n    }\n    \n    // Skip over any UTF-8 continuation bytes\n    this.pos++;\n    while (this.pos < this.end && isContinuationOctet(this.text[this.pos])) {\n      this.pos++;\n    }\n    \n    return new Token(TokenType.Error, tokenBegin, this.pos, this.text.substring(tokenBegin, this.pos));\n  }\n}\n","export interface PluginMacro {\n  name: string;\n  isFunction: boolean;\n  columnType?: string;\n  documentation: string;\n  example?: string;\n}\n\n// Taken from README/docs\nexport const pluginMacros: PluginMacro[] = [\n  {\n\tname: \"$__dateFilter\",\n\tisFunction: true,\n\tdocumentation: \"Filters the data based on the date range of the panel\",\n\texample: \"date >= toDate('2022-10-21') AND date <= toDate('2022-10-23')\"\n  },\n  {\n\tname: \"$__timeFilter\",\n\tisFunction: true,\n\tdocumentation: \"Filters the data based on the time range of the panel in seconds\",\n\texample: \"time >= toDateTime(1415792726) AND time <= toDateTime(1447328726)\"\n  },\n  {\n\tname: \"$__timeFilter_ms\",\n\tisFunction: true,\n\tdocumentation: \"Filters the data based on the time range of the panel in milliseconds\",\n\texample: \"time >= fromUnixTimestamp64Milli(1415792726123) AND time <= fromUnixTimestamp64Milli(1447328726456)\"\n  },\n  {\n\tname: \"$__dateTimeFilter\",\n\tisFunction: true,\n\tdocumentation: \"Shorthand that combines $__dateFilter() AND $__timeFilter() using separate Date and DateTime columns\",\n\texample: \"$__dateFilter(dateColumn) AND $__timeFilter(timeColumn)\"\n  },\n  {\n\tname: \"$__fromTime\",\n\tisFunction: false,\n\tcolumnType: \"DateTime\",\n\tdocumentation: \"Replaced by the starting time of the range of the panel casted to DateTime\",\n\texample: \"toDateTime(1415792726)\"\n  },\n  {\n\tname: \"$__toTime\",\n\tisFunction: false,\n\tcolumnType: \"DateTime\",\n\tdocumentation: \"Replaced by the ending time of the range of the panel casted to DateTime\",\n\texample: \"toDateTime(1447328726)\"\n  },\n  {\n\tname: \"$__fromTime_ms\",\n\tisFunction: false,\n\tcolumnType: \"DateTime64(3)\",\n\tdocumentation: \"Replaced by the starting time of the range of the panel casted to DateTime64(3)\",\n\texample: \"fromUnixTimestamp64Milli(1415792726123)\"\n  },\n  {\n\tname: \"$__toTime_ms\",\n\tisFunction: false,\n\tcolumnType: \"Datetime64(3)\",\n\tdocumentation: \"Replaced by the ending time of the range of the panel casted to DateTime64(3)\",\n\texample: \"fromUnixTimestamp64Milli(1447328726456)\"\n  },\n  {\n\tname: \"$__interval_s\",\n\tisFunction: false,\n\tcolumnType: \"INTERVAL\",\n\tdocumentation: \"Replaced by the interval in seconds\",\n\texample: \"20\"\n  },\n  {\n\tname: \"$__timeInterval\",\n\tisFunction: true,\n\tcolumnType: \"DateTime\",\n\tdocumentation: \"Replaced by a function calculating the interval based on window size in seconds, useful when grouping\",\n\texample: \"toStartOfInterval(toDateTime(column), INTERVAL 20 second)\"\n  },\n  {\n\tname: \"$__timeInterval_ms\",\n\tisFunction: true,\n\tcolumnType: \"DateTime64(3)\",\n\tdocumentation: \"Replaced by a function calculating the interval based on window size in milliseconds, useful when grouping\",\n\texample: \"toStartOfInterval(toDateTime64(column, 3), INTERVAL 20 millisecond)\"\n  },\n  {\n\tname: \"$__conditionalAll\",\n\tisFunction: true,\n\tcolumnType: \"Condition\",\n\tdocumentation: \"Replaced by the first parameter when the template variable in the second parameter does not select every value. Replaced by 1=1 when the template variable selects every value\",\n\texample: \"condition or 1=1\"\n  }\n];\n","import { Token, TokenType } from \"./types\";\n\nexport class QueryNodeParser {\n  private tokens: Token[];\n  private offset: number;\n\n  constructor(tokens: Token[]) {\n\tthis.tokens = tokens;\n\tthis.offset = 0;\n  }\n\n  public advance() {\n\tthis.offset++;\n  }\n\n  public hasNext(): boolean {\n\treturn this.offset < this.tokens.length;\n  }\n\n  public next(): Token {\n\tconst token = this.tokens[this.offset];\n\tthis.advance();\n\n\treturn token;\n  }\n\n  public peek(): Token {\n\treturn this.tokens[this.offset];\n  }\n\n  public nextIs(type: TokenType): boolean {\n\tconst next = this.peek();\n\tif (next.type === type) {\n\t  this.advance();\n\t  return true;\n\t}\n\n\treturn false;\n  }\n\n  public peekIs(type: TokenType): boolean {\n\treturn this.peek().type === type;\n  }\n}\n\nexport enum ClauseType {\n\tNone,\n\tWith,\n\tSelect,\n\tFrom,\n\tJoin,\n\tWhere,\n\tGroupBy,\n\tHaving,\n\tOrderBy,\n\tLimit,\n\tIdentifier,\n  }\n\nexport enum QueryNodeType {\n  Default,\n  Select,\n  From,\n  Identifier,\n}\n\nexport interface QueryNode {\n  type: QueryNodeType;\n  token: Token;\n  clause: ClauseType;\n  children?: QueryNode[];\n}\n\nexport interface FromQueryNode extends QueryNode {\n  token: Token;\n  database?: string;\n  table?: string;\n  prefix?: string;\n}\n\nexport interface IdentifierQueryNode extends QueryNode {\n  prefix?: string;\n}\n\nexport interface SelectQueryNode extends QueryNode {\n  from?: FromQueryNode\n}\n\nexport function parseSelectQueryNode(parser: QueryNodeParser): SelectQueryNode | null {\n  if (!parser.hasNext()) {\n\treturn null;\n  }\n\n  const firstToken = parser.peek();\n  const node: SelectQueryNode = {\n\ttype: QueryNodeType.Select,\n\tclause: ClauseType.Select,\n\tchildren: [],\n\ttoken: null!\n  };\n\n  if (firstToken.matchKeyword('WITH')) {\n\tnode.children!.push({ type: QueryNodeType.Default, token: firstToken, clause: ClauseType.With });\n  } else if (firstToken.matchKeyword('SELECT')) {\n\tnode.token = firstToken;\n  } else {\n\treturn null;\n  }\n  parser.advance();\n\n  let parenDepth = 0;\n  let endOfNode = false;\n  while (!endOfNode && parser.hasNext()) {\n\tconst token = parser.next();\n\n\tif (token.matchKeyword('SELECT')) {\n\t  node.token = token;\n\t} else if (token.matchKeyword('FROM') || token.matchKeyword('JOIN')) {\n\t  const fromNode: FromQueryNode = { type: QueryNodeType.From, token, clause: ClauseType.From };\n\t  node.children!.push(fromNode);\n\t  if (!node.from) {\n\t\tnode.from = fromNode;\n\t  }\n\n\t  if (parser.hasNext() && parser.peek().isError()) {\n\t\tfromNode.prefix = parser.peek().text;\n\t  }\n\n\t  if (parser.hasNext() && ((parser.peek().type === TokenType.BareWord && !parser.peek().isKeyword()) || parser.peek().type === TokenType.QuotedIdentifier)) {\n\t\tconst databaseOrTable = parser.next().text;\n\t\tif (parser.hasNext() && parser.peek().type === TokenType.Dot) {\n\t\t  parser.next()\n\t\t  fromNode.database = databaseOrTable;\n\n\t\t  if (parser.hasNext() && parser.peek().isError()) {\n\t\t\tfromNode.prefix = parser.peek().text;\n\t\t  }\n\t\t  \n\t\t  if (parser.hasNext() && ((parser.peek().type === TokenType.BareWord && !parser.peek().isKeyword()) || parser.peek().type === TokenType.QuotedIdentifier)) {\n\t\t\tfromNode.table = parser.next().text;\n\t\t  }\n\t\t} else {\n\t\t  fromNode.table = databaseOrTable\n\t\t}\n\t  }\n\t} else if (token.type === TokenType.OpeningRoundBracket) {\n\t  const nestedNode = parseSelectQueryNode(parser)\n\t  if (nestedNode === null) {\n\t\tparenDepth++;\n\t  } else {\n\t\tnode.children!.push(nestedNode);\n\t  }\n\t} else if (token.type === TokenType.ClosingRoundBracket) {\n\t  if (parenDepth === 0) {\n\t\tendOfNode = true;\n\t  } else {\n\t\tparenDepth--;\n\t  }\n\t} else if (token.matchKeyword('JOIN')) {\n\t  node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Join });\n\t} else if (token.matchKeyword('GROUP') && parser.hasNext() && parser.peek().matchKeyword('BY')) {\n\t  node.children!.push({ type: QueryNodeType.Default, token: parser.next(), clause: ClauseType.GroupBy });\n\t} else if (token.matchKeyword('WHERE')) {\n\t  node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Where });\n\t} else if (token.matchKeyword('HAVING')) {\n\t  node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Having });\n\t} else if (token.matchKeyword('ORDER') && parser.hasNext() && parser.peek().matchKeyword('BY')) {\n\t  node.children!.push({ type: QueryNodeType.Default, token: parser.next(), clause: ClauseType.OrderBy });\n\t} else if (token.matchKeyword('LIMIT')) {\n\t  node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.Limit });\n\t} else if (token.type === TokenType.BareWord && !token.isKeyword()) {\n\t  let fullIdent = token.text;\n\t  let identToken = token;\n\t  while (parser.hasNext() && (parser.peekIs(TokenType.Dot) || (parser.peekIs(TokenType.BareWord) && !parser.peek().isKeyword()))) {\n\t\tidentToken = parser.next();\n\t\tfullIdent += identToken.text;\n\t  }\n\t  node.children!.push({ type: QueryNodeType.Identifier, token: identToken, prefix: fullIdent, clause: ClauseType.Identifier } as IdentifierQueryNode);\n\t} else if (token.type === TokenType.DollarSign) {\n\t  node.children!.push({ type: QueryNodeType.Identifier, token, prefix: '$', clause: ClauseType.Identifier } as IdentifierQueryNode);\n\t} else {\n\t  node.children!.push({ type: QueryNodeType.Default, token, clause: ClauseType.None });\n\t}\n  }\n\n  return node;\n}\n","import { getTemplateSrv } from '@grafana/runtime';\nimport { Monaco, monacoTypes } from '@grafana/ui'\nimport { Range } from './sqlProvider';\nimport { Lexer } from 'ch-parser/lexer';\nimport { keywords, TokenType } from 'ch-parser/types';\nimport { SqlFunction, TableColumn } from 'types/queryBuilder';\nimport { pluginMacros } from 'ch-parser/pluginMacros';\nimport { ClauseType, FromQueryNode, IdentifierQueryNode, parseSelectQueryNode, QueryNodeParser, QueryNodeType, SelectQueryNode } from 'ch-parser/parser';\n\ndeclare const monaco: Monaco;\nexport interface Schema {\n  databases: () => Promise<string[]>;\n  tables: (db?: string) => Promise<string[]>;\n  columns: (db: string, table: string) => Promise<TableColumn[]>;\n  functions: () => Promise<SqlFunction[]>;\n  defaultDatabase?: string;\n}\n\ninterface CursorData {\n  clause: ClauseType;\n  identifiers: string[];\n  database?: string;\n  table?: string;\n  prefix?: string;\n\n  begin: number;\n  end: number;\n}\n\nfunction getCursorInSelectQueryNode(root: SelectQueryNode, cursorPosition: number): CursorData {\n  const cursorData: CursorData = {\n    clause: ClauseType.None,\n    identifiers: [],\n    begin: root.token.begin,\n    end: root.token.end\n  };\n\n  if (cursorPosition > root.token.end) {\n    cursorData.clause = ClauseType.Select;\n  }\n\n  if (root.from) {\n    cursorData.database = root.from.database;\n    cursorData.table = root.from.table;\n  }\n\n  if (!root.children) {\n    return cursorData;\n  }\n\n  for (const node of root.children) {\n    switch (node.type) {\n      case QueryNodeType.Select:\n        const selectNode = node as SelectQueryNode;\n        const nestedCursorData = getCursorInSelectQueryNode(selectNode, cursorPosition);\n        // +1/-1 to exclude subquery parenthesis\n        if (cursorPosition >= (nestedCursorData.begin-1) && cursorPosition <= (nestedCursorData.end+1)) {\n          return nestedCursorData;\n        }\n\n        break;\n      default:\n        cursorData.end = node.token.end;\n        if (node.type === QueryNodeType.From) {\n          const fromNode = node as FromQueryNode;\n          const dbLen = (fromNode.database?.length || 0);\n          const separatorLen = dbLen > 0 ? 1 : 0;\n          const tableLen = (fromNode.table?.length || 0);\n          const extendedTokenLen = dbLen + separatorLen + tableLen;\n          cursorData.end = fromNode.token.end + extendedTokenLen;\n\n          if ((node as FromQueryNode).prefix) {\n            cursorData.prefix = (node as FromQueryNode).prefix;\n          }\n        }\n\n        if (node.token.type === TokenType.QuotedIdentifier || node.type === QueryNodeType.Identifier || (node.token.type === TokenType.BareWord && !node.token.isKeyword())) {\n          if (node.type === QueryNodeType.Identifier) {\n            cursorData.identifiers.push((node as IdentifierQueryNode).prefix || node.token.text);\n          } else {\n            cursorData.identifiers.push(node.token.text);\n          }\n        }\n\n        if (node.type === QueryNodeType.Identifier && cursorPosition === node.token.end) {\n          cursorData.prefix = (node as IdentifierQueryNode).prefix;\n        }\n\n        if (cursorPosition < node.token.begin) {\n          break;\n        } else if (cursorPosition > node.token.end && node.clause !== ClauseType.None) {\n          cursorData.clause = node.clause;\n        }\n    }\n  }\n\n  return cursorData;\n}\n\nexport async function getSuggestions(text: string, schema: Schema, range: Range, cursorPosition: number): Promise<monacoTypes.languages.CompletionItem[]> {\n  const lexer = new Lexer(text);\n  const tokens = [];\n  while (true) {\n    const token = lexer.nextToken();\n    if (token.isEnd()) {\n      break;\n    }\n\n    if (!token.isSignificant()) {\n      continue;\n    }\n\n    tokens.push(token);\n  }\n\n  const parser = new QueryNodeParser(tokens);\n  const selectNode = parseSelectQueryNode(parser);\n  // console.log(selectNode);\n\n  if (!selectNode) {\n    return [];\n  }\n\n  const cursorData = getCursorInSelectQueryNode(selectNode, cursorPosition);\n  // console.log('database:', cursorData.database, 'table:', cursorData.table, 'identifiers:', cursorData.identifiers, 'prefix:', cursorData.prefix, 'clause:', cursorData.clause);\n\n  return await getSuggestionsFromCursorData(cursorData, schema, range);\n}\n\nasync function getSuggestionsFromCursorData(data: CursorData, schema: Schema, range: Range): Promise<monacoTypes.languages.CompletionItem[]> {\n  let results: monacoTypes.languages.CompletionItem[] = [];\n\n  if (data.database && (data.database.includes('\"') || data.database.includes('`'))) {\n    data.database = data.database.substring(1, data.database.length - 1);\n  }\n  if (data.table && (data.table.includes('\"') || data.table.includes('`'))) {\n    data.table = data.table.substring(1, data.table.length - 1);\n  }\n\n  const mapping = ({\n    [ClauseType.None]: 'keyword',\n    [ClauseType.With]: 'column',\n    [ClauseType.Select]: 'column',\n    [ClauseType.From]: 'database_or_table',\n    [ClauseType.Join]: 'database_or_table',\n    [ClauseType.Where]: 'column',\n    [ClauseType.GroupBy]: 'column',\n    [ClauseType.Having]: 'column',\n    [ClauseType.OrderBy]: 'column',\n    [ClauseType.Limit]: 'keyword',\n    [ClauseType.Identifier]: 'column',\n  });\n\n  if (data.database && !data.table) {\n    mapping[ClauseType.From] = 'table';\n    mapping[ClauseType.Join] = 'table';\n  } else if (data.table && !data.database) {\n    mapping[ClauseType.From] = 'database_or_table';\n    mapping[ClauseType.Join] = 'database_or_table';\n  } else if (data.database && data.table) {\n    mapping[ClauseType.From] = 'table';\n    mapping[ClauseType.Join] = 'table';\n  }\n\n  const contextType = mapping[data.clause];\n  // console.log(contextType);\n\n  const db = data.database || schema.defaultDatabase || 'default';\n  switch (contextType) {\n    case 'database':\n      results = await fetchDatabaseSuggestions(schema, range);\n      break;\n\n    case 'database_or_table':\n      const databases = await fetchDatabaseSuggestions(schema, range, data.prefix);\n      const defaultTables = await fetchTableSuggestions(schema, range, db, data.prefix);\n\n      results = [\n        ...databases,\n        ...defaultTables,\n      ];\n      break;\n\n    case 'table':\n      results = await fetchTableSuggestions(schema, range, db, data.prefix);\n      break;\n\n    case 'column':\n      const macros = await getMacroSuggestions(range, data.prefix);\n      results.push(...macros);\n      const variables = await getVariableSuggestions(range);\n      results.push(...variables);\n\n      // Causes duplicates. Must fix identifier parsing first, or filter/dupe check.\n      // results.push(...data.identifiers.map(id => ({\n      //   label: id,\n      //   insertText: id,\n      //   sortText: `!!${id}`,\n      //   kind: monaco.languages.CompletionItemKind.Field,\n      //   documentation: '',\n      //   range\n      // })));\n\n      results.push({\n        label: 'NULL',\n        insertText: 'NULL',\n        sortText: '!!!NULL',\n        kind: monaco.languages.CompletionItemKind.Keyword,\n        documentation: '',\n        range\n      });\n\n      const sqlFunctions = await fetchFunctionSuggestions(schema, range);\n      results.push(...sqlFunctions);\n\n      if (data.table) {\n        const database = data.database || schema.defaultDatabase || 'default';\n        const columns = await fetchFieldSuggestions(schema, range, database, data.table, data.prefix);\n        results.push(...columns);\n\n      }\n\n      break;\n    case 'keyword':\n      results = Array.from(keywords).map(keyword => ({\n        label: keyword,\n        insertText: keyword,\n        kind: monaco.languages.CompletionItemKind.Keyword,\n        documentation: '',\n        range\n      }));\n      break;\n  }\n\n  return results;\n}\n\n\nasync function fetchDatabaseSuggestions(schema: Schema, range: Range, prefix?: string) {\n  const databases = await schema.databases();\n  return databases.map((val) => {\n    let quoteType = '';\n    if (prefix && prefix.startsWith('\"')) {\n      quoteType = '\"';\n    } else if (prefix && prefix.startsWith('`')) {\n      quoteType = '`';\n    }\n    const quoteClosed = val.endsWith(quoteType);\n\n    return {\n      label: val,\n      kind: monaco.languages.CompletionItemKind.Module,\n      detail: 'Database',\n      documentation: 'Database',\n      insertText: quoteType ? `${val}${quoteClosed ? '' :quoteType}` : val,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      range,\n    }\n  });\n}\n\nasync function fetchTableSuggestions(schema: Schema, range: Range, database: string, prefix?: string) {\n  const tables = await schema.tables(database);\n  return tables.map((val) => {\n    let quoteType = '';\n    if (prefix && prefix.startsWith('\"')) {\n      quoteType = '\"';\n    } else if (prefix && prefix.startsWith('`')) {\n      quoteType = '`';\n    }\n    const quoteClosed = val.endsWith(quoteType);\n\n    return {\n      label: val,\n      kind: monaco.languages.CompletionItemKind.Class,\n      detail: 'Table',\n      documentation: 'Table',\n      insertText: quoteType ? `${val}${quoteClosed ? '' :quoteType}` : val,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      range,\n    }\n  });\n}\n\nasync function fetchFieldSuggestions(schema: Schema, range: Range, db: string, table: string, prefix?: string) {\n  const columns = await schema.columns(db, table);\n  return columns.map(c => ({\n    label: c.label!,\n    kind: monaco.languages.CompletionItemKind.Field,\n    sortText: `!!!!${c.label}`,\n    detail: c.type,\n    documentation: c.type,\n    insertText: prefix && prefix.includes('.') ? c.name.substring(prefix?.length || 0) : c.name,\n    range,\n  })).filter(c => !prefix || c.label.startsWith(prefix));\n}\n\nasync function fetchFunctionSuggestions(schema: Schema, range: Range) {\n  const sqlFunctions = await schema.functions();\n  return sqlFunctions.map(c => ({\n    label: c.name,\n    kind: monaco.languages.CompletionItemKind.Function,\n    sortText: `${c.name}`,\n    detail: c.categories || (c.isAggregate && 'Aggregate') || '',\n    documentation: [\n      `Category: ${c.categories || '(none)'}`,\n      `Alias: ${c.aliasTo || '(none)'}`,\n      `Aggregate: ${c.isAggregate}`,\n      `Case insensitive: ${c.caseInsensitive}`,\n      `Origin: ${c.origin}`,\n      `Description: ${c.description || '(none)'}`,\n      `Syntax: ${c.syntax || '(none)'}`,\n      `Arguments: ${c.arguments || '(none)'}`,\n      `Returned value: ${c.returnedValue || '(none)'}`,\n    ].join('\\n'),\n    insertText: `${c.name}(\\${1})`,\n    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n    range,\n  }));\n}\n\n\nexport function getVariableSuggestions(range: Range) {\n  const templateSrv = getTemplateSrv();\n  if (!templateSrv) {\n    return [];\n  }\n  return templateSrv.getVariables().map((variable) => {\n    const label = `\\${${variable.name}}`;\n    const val = templateSrv.replace(label);\n    return {\n      label,\n      detail: `(Template Variable) ${val}`,\n      kind: monaco.languages.CompletionItemKind.Variable,\n      sortText: `!!!${label}`,\n      documentation: `(Template Variable) ${val}`,\n      insertText: `\\${${variable.name}}`,\n      range,\n    };\n  });\n}\n\nexport function getMacroSuggestions(range: Range, prefix?: string) {\n  return pluginMacros.map(macro => {\n    const hasPrefix = (prefix || '').includes('$');\n    const nameNoPrefix = macro.name.substring(1);\n\n    return {\n      label: macro.name,\n      detail: `(Plugin Macro) ${macro.columnType || ''}`,\n      kind: macro.isFunction ? monaco.languages.CompletionItemKind.Function : monaco.languages.CompletionItemKind.Variable,\n      sortText: `!!${macro.name.substring(3)}`,\n      documentation: macro.documentation + (macro.example ? '\\nExample output: ' + macro.example : ''),\n      insertText: macro.isFunction ? `${hasPrefix ? nameNoPrefix : macro.name.replaceAll('$', '\\\\$')}(\\${1})` : (hasPrefix ? nameNoPrefix : macro.name),\n      insertTextRules: macro.isFunction ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : undefined,\n      range,\n    };\n  });\n}\n","import * as parser from 'js-sql-parser';\n\nexport interface Error {\n  startLine: number;\n  endLine: number;\n  startCol: number;\n  endCol: number;\n  message: string;\n  expected: string;\n}\n\nexport interface Validation {\n  valid: boolean;\n  error?: Error;\n}\n\nexport interface ParseError {\n  message: string;\n  hash: {\n    text: string;\n    loc: {\n      first_line: number;\n      last_line: number;\n      first_column: number;\n      last_column: number;\n    };\n  };\n}\n\n// the sql parser only handles generic syntax, allow any clickhouse specific syntax\nconst allow = ['INTERVAL'];\n\nexport function validate(sql: string): Validation {\n  try {\n    parser.parse(sql);\n    return { valid: true };\n  } catch (e: any) {\n    const err = e as ParseError;\n    const parts = err.message.split('\\n');\n    const loc = err.hash.loc;\n    const lines = sql.split('\\n');\n    const line = lines[loc.first_line - 1];\n    const bad = line.substring(loc.first_column, loc.last_column);\n    if (allow.includes(bad.toUpperCase())) {\n      return { valid: true };\n    }\n\n    if (line.trim() === bad) {\n      // issue is on next line\n      const nextLine = lines[loc.first_line];\n      if (nextLine?.trim().startsWith('$')) {\n        return { valid: true };\n      }\n    }\n\n    const badSection = line.substring(loc.last_column + 1);\n    if (badSection.trim().startsWith('$')) {\n      return { valid: true };\n    }\n\n    return {\n      valid: false,\n      error: {\n        startLine: loc.first_line,\n        endLine: loc.last_line,\n        startCol: loc.first_column + 1,\n        endCol: loc.last_column + 1,\n        message: e.message,\n        expected: parts[3],\n      },\n    };\n  }\n}\n","import { Schema } from \"components/suggestions\";\nimport { Datasource } from \"data/CHDatasource\";\nimport { useRef } from \"react\";\nimport { SqlFunction, TableColumn } from \"types/queryBuilder\";\n\nexport interface SchemaCache {\n\tfunctions: SqlFunction[] | null;\n\tdatabases: string[] | null;\n\ttables: Map<string, string[]>;\n\tcolumns: Map<string, TableColumn[]>;\n}\n\nfunction defaultSchemaCache(): SchemaCache {\n  return {\n\tfunctions: null,\n\tdatabases: null,\n\ttables: new Map<string, string[]>(),\n\tcolumns: new Map<string, TableColumn[]>(),\n  }\n}\n\n/**\n * Provides an interface for the auto-complete to read schema data from.\n * This data is cached since the auto-complete is always looking for schema data.\n * \n * Sometimes another CH datasource's suggestions will show up.\n * There's no way to detect this (tried using datasource.uid), it could be monaco caching suggestions since it does show a mix\n */\nexport function useSchemaSuggestionsProvider(datasource: Datasource): Schema {\n  const cache = useRef<SchemaCache>(defaultSchemaCache());\n\n  async function fetchFunctions() {\n\tif (cache.current.functions === null) {\n\t  cache.current.functions = await datasource.fetchSqlFunctions();\n\t}\n\n\treturn cache.current.functions;\n  }\n\n  async function fetchDatabases() {\n\tif (cache.current.databases === null) {\n\t  cache.current.databases = await datasource.fetchDatabases();\n\t}\n\n\treturn cache.current.databases;\n  }\n\n  async function fetchTables(db?: string) {\n\tif (db === undefined) {\n\t  db = '';\n\t}\n\n\tif (!cache.current.tables.has(db)) {\n\t  const tables = await datasource.fetchTables(db);\n\t  cache.current.tables.set(db, tables);\n\n\t  return tables;\n\t}\n\n\treturn cache.current.tables.get(db)!;\n  }\n\n  async function fetchColumns(db: string, table: string) {\n\tconst key = `${db || ''}.${table || ''}`;\n\n\tif (!cache.current.columns.has(key)) {\n\t  const columns = await datasource.fetchColumnsFromTable(db, table);\n\t  cache.current.columns.set(key, columns);\n\n\t  return columns;\n\t}\n\n\treturn cache.current.columns.get(key)!;\n  }\n\n  return {\n\tfunctions: fetchFunctions,\n\tdatabases: fetchDatabases,\n\ttables: fetchTables,\n\tcolumns: fetchColumns,\n\tdefaultDatabase: datasource.getDefaultDatabase(),\n  };\n}\n","import React, { useMemo } from 'react';\nimport { css } from '@emotion/css';\n\nimport { Icon, IconButton, Stack, Tooltip, useTheme2 } from '@grafana/ui';\n\ninterface QueryToolboxProps {\n  showTools?: boolean;\n  onFormatCode?: () => void;\n}\n\nexport function QueryToolbox({ showTools, onFormatCode }: QueryToolboxProps) {\n  const theme = useTheme2();\n\n  const styles = useMemo(() => {\n    return {\n      container: css({\n        border: `1px solid ${theme.colors.border.medium}`,\n        borderTop: 'none',\n        padding: theme.spacing(0.5, 0.5, 0.5, 0.5),\n        display: 'flex',\n        flexGrow: 1,\n        justifyContent: 'space-between',\n        fontSize: theme.typography.bodySmall.fontSize,\n      }),\n      error: css({\n        color: theme.colors.error.text,\n        fontSize: theme.typography.bodySmall.fontSize,\n        fontFamily: theme.typography.fontFamilyMonospace,\n      }),\n      valid: css({\n        color: theme.colors.success.text,\n      }),\n      info: css({\n        color: theme.colors.text.secondary,\n      }),\n      hint: css({\n        color: theme.colors.text.disabled,\n        whiteSpace: 'nowrap',\n        cursor: 'help',\n      }),\n    };\n  }, [theme]);\n\n  let style = {};\n\n  if (!showTools) {\n    style = { height: 0, padding: 0, visibility: 'hidden' };\n  }\n\n  return (\n    <div className={styles.container} style={style}>\n      {showTools && (\n        <div>\n          <Stack>\n            {onFormatCode && (\n              <IconButton\n                onClick={() => {\n                  onFormatCode();\n                }}\n                name=\"brackets-curly\"\n                size=\"xs\"\n                tooltip=\"Format query\"\n              />\n            )}\n            <Tooltip content=\"Hit CTRL/CMD+Return to run query\">\n              <Icon className={styles.hint} name=\"keyboard\" />\n            </Tooltip>\n          </Stack>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { CodeEditor, monacoTypes } from '@grafana/ui';\nimport { Datasource } from 'data/CHDatasource';\nimport { registerSQL, Range, Fetcher } from './sqlProvider';\nimport { CHConfig } from 'types/config';\nimport { CHQuery, EditorType, CHSqlQuery } from 'types/sql';\nimport { styles } from 'styles';\nimport { getSuggestions } from './suggestions';\nimport { validate } from 'data/validate';\nimport { mapQueryTypeToGrafanaFormat } from 'data/utils';\nimport { QueryType } from 'types/queryBuilder';\nimport { QueryTypeSwitcher } from 'components/queryBuilder/QueryTypeSwitcher';\nimport { pluginVersion } from 'utils/version';\nimport { useSchemaSuggestionsProvider } from 'hooks/useSchemaSuggestionsProvider';\nimport { QueryToolbox } from './QueryToolbox';\n\ntype SqlEditorProps = QueryEditorProps<Datasource, CHQuery, CHConfig>;\n\nfunction setupAutoSize(editor: monacoTypes.editor.IStandaloneCodeEditor) {\n  const container = editor.getDomNode();\n  const updateHeight = () => {\n    if (container) {\n      const contentHeight = Math.max(100, Math.min(1000, editor.getContentHeight()));\n      const width = parseInt(container.style.width, 10);\n      container.style.width = `${width}px`;\n      container.style.height = `${contentHeight}px`;\n      editor.layout({ width, height: contentHeight });\n    }\n  };\n  editor.onDidContentSizeChange(updateHeight);\n  updateHeight();\n}\n\nexport const SqlEditor = (props: SqlEditorProps) => {\n  const { query, onChange, datasource } = props;\n  const editorRef = useRef<monacoTypes.editor.IStandaloneCodeEditor | null>(null);\n  const sqlQuery = query as CHSqlQuery;\n  const queryType = sqlQuery.queryType || QueryType.Table;\n\n  const saveChanges = (changes: Partial<CHSqlQuery>) => {\n    onChange({\n      ...sqlQuery,\n      pluginVersion,\n      editorType: EditorType.SQL,\n      format: mapQueryTypeToGrafanaFormat(changes.queryType || queryType),\n      ...changes,\n    });\n  };\n\n  const schema = useSchemaSuggestionsProvider(datasource);\n\n  const _getSuggestions: Fetcher = async (text: string, range: Range, cursorPosition: number) => {\n    const suggestions = await getSuggestions(text, schema, range, cursorPosition);\n    return { suggestions };\n  };\n\n  const validateSql = (sql: string, model: any, me: any) => {\n    const v = validate(sql);\n    const errorSeverity = 8;\n    if (v.valid) {\n      me.setModelMarkers(model, 'clickhouse', []);\n    } else {\n      const err = v.error!;\n      me.setModelMarkers(model, 'clickhouse', [\n        {\n          startLineNumber: err.startLine,\n          startColumn: err.startCol,\n          endLineNumber: err.endLine,\n          endColumn: err.endCol,\n          message: err.expected,\n          severity: errorSeverity,\n        },\n      ]);\n    }\n  };\n\n  const handleMount = (editor: monacoTypes.editor.IStandaloneCodeEditor, monaco: typeof monacoTypes) => {\n    editorRef.current = editor;\n    const me = registerSQL('sql', editor, _getSuggestions);\n    setupAutoSize(editor);\n    editor.onKeyUp((e: any) => {\n      if (datasource.settings.jsonData.validateSql) {\n        const sql = editor.getValue();\n        validateSql(sql, editor.getModel(), me);\n      }\n    });\n\n    editor.addAction({\n      id: 'run-query',\n      label: 'Run Query',\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\n      contextMenuGroupId: 'navigation',\n      contextMenuOrder: 1.5,\n      run: (editor: monacoTypes.editor.IStandaloneCodeEditor) => {\n        saveChanges({ rawSql: editor.getValue() });\n        props.onRunQuery();\n      },\n    });\n  };\n\n  const onEditorWillUnmount = () => {\n    editorRef.current = null\n  };\n  const triggerFormat = () => {\n    if (editorRef.current !== null) {\n      editorRef.current.trigger(\"editor\", \"editor.action.formatDocument\", \"\");\n    }\n  };\n\n  return (\n    <>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <QueryTypeSwitcher queryType={queryType} onChange={(queryType) => saveChanges({ queryType })} sqlEditor />\n      </div>\n      <div className={styles.Common.wrapper}>\n        <CodeEditor\n          aria-label=\"SQL Editor\"\n          language=\"sql\"\n          value={query.rawSql}\n          onSave={(sql) => saveChanges({ rawSql: sql })}\n          showMiniMap={false}\n          showLineNumbers={true}\n          onBlur={(sql) => saveChanges({ rawSql: sql })}\n          onEditorDidMount={handleMount}\n          onEditorWillUnmount={onEditorWillUnmount}\n        />\n        <QueryToolbox\n          showTools\n          onFormatCode={triggerFormat}\n        />\n      </div>\n    </>\n  );\n};\n","import { ColumnHint, Filter, QueryBuilderOptions, QueryType, SelectedColumn } from \"types/queryBuilder\";\nimport { CHBuilderQuery, CHQuery, CHSqlQuery, EditorType } from \"types/sql\";\nimport { isVersionGtOrEq, pluginVersion } from \"utils/version\";\nimport { mapGrafanaFormatToQueryType } from \"./utils\";\n\nexport type AnyCHQuery = Partial<CHQuery> & {[k: string]: any};\nexport type AnyQueryBuilderOptions = Partial<QueryBuilderOptions> & {[k: string]: any};\n\n/**\n * Takes a CHQuery and transforms it to the latest interface.\n */\nexport const migrateCHQuery = (savedQuery: CHQuery): CHQuery => {\n  const isGrafanaDefaultQuery = savedQuery.rawSql === undefined;\n  if (isGrafanaDefaultQuery) {\n    return savedQuery;\n  }\n\n  if (isV3CHQuery(savedQuery)) {\n    return migrateV3CHQuery(savedQuery);\n  }\n\n  return savedQuery;\n};\n\n/**\n * Takes v3 CHQuery and returns a version compatible with the latest editor.\n */\nconst migrateV3CHQuery = (savedQuery: AnyCHQuery): CHQuery => {\n  // Builder Query\n  if (savedQuery['queryType'] === 'builder') {\n    const builderQuery: CHBuilderQuery = {\n      ...savedQuery,\n      pluginVersion,\n      editorType: EditorType.Builder,\n      builderOptions: migrateV3QueryBuilderOptions(savedQuery['builderOptions'] || {}),\n      rawSql: savedQuery.rawSql || '',\n      refId: savedQuery.refId || '',\n      format: savedQuery.format,\n    };\n\n    if (savedQuery?.meta?.timezone) {\n      builderQuery.meta = {\n        timezone: savedQuery.meta.timezone\n      };\n    }\n\n    // delete unwanted properties from v3\n    delete (builderQuery as any)['queryType'];\n    delete (builderQuery as any)['selectedFormat'];\n\n    return builderQuery;\n  }\n\n  // Raw SQL Query\n  const rawSqlQuery: CHSqlQuery = {\n    ...savedQuery,\n    pluginVersion,\n    editorType: EditorType.SQL,\n    rawSql: savedQuery.rawSql || '',\n    refId: savedQuery.refId || '',\n    format: savedQuery.format,\n    queryType: mapGrafanaFormatToQueryType(savedQuery.format),\n    meta: {}\n  };\n\n  if (savedQuery.expand) {\n    rawSqlQuery.expand = savedQuery.expand;\n  }\n\n  if (savedQuery.meta) {\n    const meta = (savedQuery.meta as any);\n    if (meta.timezone) {\n      rawSqlQuery.meta!.timezone = meta.timezone;\n    }\n\n    if (meta.builderOptions) {\n      // When changing from builder to raw editor, the builder options are saved and also require migration\n      rawSqlQuery.meta!.builderOptions = migrateV3QueryBuilderOptions(meta.builderOptions);\n    }\n  }\n\n  // delete unwanted properties from v3\n  delete (rawSqlQuery as any)['builderOptions'];\n  delete (rawSqlQuery as any)['selectedFormat'];\n\n  return rawSqlQuery;\n};\n\n/**\n * Takes v3 options and returns a version compatible with the latest builder.\n */\nconst migrateV3QueryBuilderOptions = (savedOptions: AnyQueryBuilderOptions): QueryBuilderOptions => {\n  const mapped: QueryBuilderOptions = {\n    database: savedOptions.database || '',\n    table: savedOptions.table || '',\n    queryType: getV3QueryType(savedOptions),\n    columns: []\n  };\n\n  if (savedOptions.mode) {\n    mapped.mode = savedOptions.mode;\n  }\n\n  if (savedOptions['fields'] || Array.isArray(savedOptions['fields'])) {\n    const oldColumns: string[] = savedOptions['fields'];\n    mapped.columns = oldColumns.map((name: string) => ({ name }));\n  }\n\n\n  const timeField: string = savedOptions['timeField'];\n  const timeFieldType: string = savedOptions['timeFieldType'];\n  if (timeField) {\n    const timeColumn: SelectedColumn = {\n      name: timeField,\n      type: timeFieldType,\n      hint: ColumnHint.Time\n    };\n\n    mapped.columns!.push(timeColumn);\n  }\n  \n  const logLevelField: string = savedOptions['logLevelField'];\n  if (logLevelField) {\n    const logLevelColumn: SelectedColumn = {\n      name: logLevelField,\n      hint: ColumnHint.LogLevel\n    };\n\n    mapped.columns!.push(logLevelColumn);\n  }\n\n  if (savedOptions['metrics'] || Array.isArray(savedOptions['metrics'])) {\n    const oldAggregates: any[] = savedOptions['metrics'];\n    mapped.aggregates = oldAggregates.map(agg => ({\n      aggregateType: agg['aggregation'],\n      column: agg['field'],\n      alias: agg['alias']\n    }));\n  }\n\n  if (savedOptions.filters || Array.isArray(savedOptions.filters)) {\n    const oldFilters: Filter[] = savedOptions.filters;\n\n    mapped.filters = oldFilters.map((filter: Filter) => {\n      const result: Filter = {\n        ...filter\n      };\n\n      if (filter.key === timeField) {\n        result.hint = ColumnHint.Time;\n      } else if (filter.key === logLevelField) {\n        result.hint = ColumnHint.LogLevel;\n      }\n\n      return result;\n    });\n  }\n\n  if (savedOptions.groupBy || Array.isArray(savedOptions.groupBy)) {\n    mapped.groupBy = savedOptions.groupBy;\n  }\n\n  if (savedOptions.orderBy || Array.isArray(savedOptions.orderBy)) {\n    mapped.orderBy = savedOptions.orderBy;\n  }\n\n  if (savedOptions.limit !== undefined && savedOptions.limit >= 0) {\n    mapped.limit = savedOptions.limit;\n  }\n\n  return mapped;\n};\n\n\n/**\n * Checks if CHQuery is from <= v3 options.\n */\nconst isV3CHQuery = (savedQuery: AnyCHQuery): boolean => {\n  // pluginVersion was added in v4\n  const oldPluginVersion = !savedQuery['pluginVersion'] || !isVersionGtOrEq(savedQuery.pluginVersion, '4.0.0');\n  const oldQueryType = savedQuery['queryType'] === 'sql' || savedQuery['queryType'] === 'builder';\n  return oldPluginVersion || oldQueryType;\n};\n\n/**\n * Takes v3 options and returns the optimal QueryType. Defaults to QueryType.Table.\n */\nconst getV3QueryType = (savedOptions: AnyQueryBuilderOptions): QueryType => {\n  if (savedOptions['timeField']) {\n    return QueryType.TimeSeries;\n  } else if (savedOptions['logLevelField']) {\n    return QueryType.Logs;\n  }\n\n  return QueryType.Table;\n};\n","import React, { useEffect, useRef } from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { Datasource } from 'data/CHDatasource';\nimport { EditorTypeSwitcher } from 'components/queryBuilder/EditorTypeSwitcher';\nimport { styles } from 'styles';\nimport { Button } from '@grafana/ui';\nimport { CHBuilderQuery, CHQuery, EditorType } from 'types/sql';\nimport { CHConfig } from 'types/config';\nimport { QueryBuilder } from 'components/queryBuilder/QueryBuilder';\nimport { generateSql } from 'data/sqlGenerator';\nimport { SqlEditor } from 'components/SqlEditor';\nimport { isBuilderOptionsRunnable, mapQueryBuilderOptionsToGrafanaFormat } from 'data/utils';\nimport { setAllOptions, useBuilderOptionsState } from 'hooks/useBuilderOptionsState';\nimport { pluginVersion } from 'utils/version';\nimport { migrateCHQuery } from 'data/migration';\n\nexport type CHQueryEditorProps = QueryEditorProps<Datasource, CHQuery, CHConfig>;\n\n/**\n * Top level query editor component\n */\nexport const CHQueryEditor = (props: CHQueryEditorProps) => {\n  const { datasource, query: savedQuery, onRunQuery } = props;\n  const query = migrateCHQuery(savedQuery);\n\n  return (\n    <>\n      <div className={'gf-form ' + styles.QueryEditor.queryType}>\n        <EditorTypeSwitcher {...props} query={query} datasource={datasource} />\n        <Button onClick={() => onRunQuery()}>Run Query</Button>\n      </div>\n      <CHEditorByType {...props} query={query} />\n    </>\n  );\n};\n\nconst CHEditorByType = (props: CHQueryEditorProps) => {\n  const { query, onChange, app } = props;\n  const [builderOptions, builderOptionsDispatch] = useBuilderOptionsState((query as CHBuilderQuery).builderOptions);\n\n  /**\n   * Grafana will sometimes replace the builder options directly, so we need to sync in both directions.\n   * For example, selecting an entry from the query history will cause the local state to fall out of sync.\n   * The \"key\" property is present on these historical entries.\n   */\n  const queryKey = query.key || ''\n  const lastKey = useRef<string>(queryKey);\n  if (queryKey !== lastKey.current && query.editorType === EditorType.Builder) {\n    builderOptionsDispatch(setAllOptions((query as CHBuilderQuery).builderOptions || {}));\n    lastKey.current = queryKey;\n  }\n\n  /**\n   * Sync builder options when switching from SQL Editor to Query Builder\n   */\n  const lastEditorType = useRef<EditorType>();\n  if (query.editorType !== lastEditorType.current && query.editorType === EditorType.Builder) {\n    builderOptionsDispatch(setAllOptions((query as CHBuilderQuery).builderOptions || {}));\n    lastEditorType.current = query.editorType;\n  }\n\n  // Prevent trying to run empty query on load\n  const shouldSkipChanges = useRef<boolean>(true);\n  if (isBuilderOptionsRunnable(builderOptions)) {\n    shouldSkipChanges.current = false;\n  }\n\n  useEffect(() => {\n    if (shouldSkipChanges.current || query.editorType === EditorType.SQL) {\n      return;\n    }\n\n    onChange({\n      ...query,\n      pluginVersion,\n      editorType: EditorType.Builder,\n      rawSql: generateSql(builderOptions),\n      builderOptions,\n      format: mapQueryBuilderOptionsToGrafanaFormat(builderOptions)\n    });\n\n    // TODO: fix dependency warning with \"useEffectEvent\" once added to stable version of react\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [builderOptions]);\n\n  if (query.editorType === EditorType.SQL) {\n    return (\n      <div data-testid=\"query-editor-section-sql\">\n        <SqlEditor {...props} />\n      </div>\n    );\n  }\n\n  return (\n    <QueryBuilder\n      datasource={props.datasource}\n      builderOptions={builderOptions}\n      builderOptionsDispatch={builderOptionsDispatch}\n      generatedSql={query.rawSql}\n      app={app}\n    />\n  );\n};\n","import { DataSourcePlugin, DashboardLoadedEvent } from '@grafana/data';\nimport { Datasource } from './data/CHDatasource';\nimport { ConfigEditor } from './views/CHConfigEditor';\nimport { CHQueryEditor } from './views/CHQueryEditor';\nimport { CHConfig } from 'types/config';\nimport { CHQuery } from 'types/sql';\nimport { getAppEvents } from '@grafana/runtime';\nimport { analyzeQueries, trackClickhouseDashboardLoaded } from 'tracking';\nimport pluginJson from './plugin.json';\nimport clickhouseVersion from '../package.json';\n\nexport const plugin = new DataSourcePlugin<Datasource, CHQuery, CHConfig>(Datasource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(CHQueryEditor);\n\n// Track dashboard loads to RudderStack\ngetAppEvents().subscribe<DashboardLoadedEvent<CHQuery>>(\n  DashboardLoadedEvent,\n  ({ payload: { dashboardId, orgId, grafanaVersion, queries } }) => {\n    const clickhouseQueries = queries[pluginJson.id]?.filter((q) => !q.hide);\n    if (!clickhouseQueries?.length) {\n      return;\n    }\n\n    trackClickhouseDashboardLoaded({\n      clickhouse_plugin_version: clickhouseVersion.version,\n      grafana_version: grafanaVersion,\n      dashboard_id: dashboardId,\n      org_id: orgId,\n      ...analyzeQueries(clickhouseQueries),\n    });\n  }\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport {\n  DataSourcePluginOptionsEditorProps,\n  onUpdateDatasourceJsonDataOption,\n  onUpdateDatasourceSecureJsonDataOption,\n} from '@grafana/data';\nimport { RadioButtonGroup, Switch, Input, SecretInput, Button, Field, Alert, Stack } from '@grafana/ui';\nimport { CertificationKey } from '../components/ui/CertificationKey';\nimport {\n  CHConfig,\n  CHCustomSetting,\n  CHSecureConfig,\n  CHLogsConfig,\n  Protocol,\n  CHTracesConfig,\n  AliasTableEntry\n} from 'types/config';\nimport { gte as versionGte } from 'semver';\nimport { ConfigSection, ConfigSubSection, DataSourceDescription } from 'components/experimental/ConfigSection';\nimport { config } from '@grafana/runtime';\nimport { Divider } from 'components/Divider';\nimport { TimeUnit } from 'types/queryBuilder';\nimport { DefaultDatabaseTableConfig } from 'components/configEditor/DefaultDatabaseTableConfig';\nimport { QuerySettingsConfig } from 'components/configEditor/QuerySettingsConfig';\nimport { LogsConfig } from 'components/configEditor/LogsConfig';\nimport { TracesConfig } from 'components/configEditor/TracesConfig';\nimport { HttpHeadersConfig } from 'components/configEditor/HttpHeadersConfig';\nimport allLabels from 'labels';\nimport { onHttpHeadersChange, useConfigDefaults } from './CHConfigEditorHooks';\nimport {AliasTableConfig} from \"../components/configEditor/AliasTableConfig\";\n\nexport interface ConfigEditorProps extends DataSourcePluginOptionsEditorProps<CHConfig, CHSecureConfig> {}\n\nexport const ConfigEditor: React.FC<ConfigEditorProps> = (props) => {\n  const { options, onOptionsChange } = props;\n  const { jsonData, secureJsonFields } = options;\n  const labels = allLabels.components.Config.ConfigEditor;\n  const secureJsonData = (options.secureJsonData || {}) as CHSecureConfig;\n  const hasTLSCACert = secureJsonFields && secureJsonFields.tlsCACert;\n  const hasTLSClientCert = secureJsonFields && secureJsonFields.tlsClientCert;\n  const hasTLSClientKey = secureJsonFields && secureJsonFields.tlsClientKey;\n  const protocolOptions = [\n    { label: 'Native', value: Protocol.Native },\n    { label: 'HTTP', value: Protocol.Http },\n  ];\n\n  useConfigDefaults(options, onOptionsChange);\n\n  const onPortChange = (port: string) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        port: +port,\n      },\n    });\n  };\n  const onTLSSettingsChange = (\n    key: keyof Pick<CHConfig, 'tlsSkipVerify' | 'tlsAuth' | 'tlsAuthWithCACert'>,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onSwitchToggle = (\n    key: keyof Pick<CHConfig, 'secure' | 'validateSql' | 'enableSecureSocksProxy' | 'forwardGrafanaHeaders'>,\n    value: boolean\n  ) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n\n  const onProtocolToggle = (protocol: Protocol) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        protocol: protocol,\n      },\n    });\n  };\n\n  const onCertificateChangeFactory = (key: keyof Omit<CHSecureConfig, 'password'>, value: string) => {\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: value,\n      },\n    });\n  };\n  const onResetClickFactory = (key: keyof Omit<CHSecureConfig, 'password'>) => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...secureJsonFields,\n        [key]: false,\n      },\n      secureJsonData: {\n        ...secureJsonData,\n        [key]: '',\n      },\n    });\n  };\n  const onResetPassword = () => {\n    onOptionsChange({\n      ...options,\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        password: false,\n      },\n      secureJsonData: {\n        ...options.secureJsonData,\n        password: '',\n      },\n    });\n  };\n  const onCustomSettingsChange = (customSettings: CHCustomSetting[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        customSettings: customSettings.filter((s) => !!s.setting && !!s.value),\n      },\n    });\n  };\n  const onLogsConfigChange = (key: keyof CHLogsConfig, value: string | boolean | string[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        logs: {\n          ...options.jsonData.logs,\n          [key]: value\n        }\n      }\n    });\n  };\n  const onTracesConfigChange = (key: keyof CHTracesConfig, value: string | boolean) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        traces: {\n          ...options.jsonData.traces,\n          durationUnit: options.jsonData.traces?.durationUnit || TimeUnit.Nanoseconds,\n          [key]: value\n        }\n      }\n    });\n  };\n  const onAliasTableConfigChange = (aliasTables: AliasTableEntry[]) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        aliasTables\n      }\n    });\n  };\n\n  const [customSettings, setCustomSettings] = useState(jsonData.customSettings || []);\n\n  const hasAdditionalSettings = Boolean(\n    window.location.hash || // if trying to link to section on page, open all settings (React breaks this?)\n    options.jsonData.defaultDatabase ||\n    options.jsonData.defaultTable ||\n    options.jsonData.dialTimeout ||\n    options.jsonData.queryTimeout ||\n    options.jsonData.validateSql ||\n    options.jsonData.enableSecureSocksProxy ||\n    options.jsonData.customSettings ||\n    options.jsonData.logs ||\n    options.jsonData.traces\n  );\n\n  const defaultPort = jsonData.secure ?\n  (jsonData.protocol === Protocol.Native ? labels.serverPort.secureNativePort : labels.serverPort.secureHttpPort) :\n  (jsonData.protocol === Protocol.Native ? labels.serverPort.insecureNativePort : labels.serverPort.insecureHttpPort);\n  const portDescription = `${labels.serverPort.tooltip} (default for ${jsonData.secure ? 'secure' : ''} ${jsonData.protocol}: ${defaultPort})`\n\n  const uidWarning = (!options.uid) && (\n    <Alert title=\"\" severity=\"warning\" buttonContent=\"Close\">\n      <Stack>\n        <div>\n          {'This datasource is missing the'}\n          <code>uid</code>\n          {'field in its configuration. If your datasource is '}\n          <a\n            style={{ textDecoration: 'underline' }}\n            href='https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources'\n            target='_blank'\n            rel='noreferrer'\n          >provisioned via YAML</a>\n          {', please verify the UID is set. This is required to enable data linking between logs and traces.'}\n        </div>\n      </Stack>\n    </Alert>\n  );\n\n  return (\n    <>\n      {uidWarning}\n      <DataSourceDescription\n        dataSourceName=\"Clickhouse\"\n        docsLink=\"https://grafana.com/grafana/plugins/grafana-clickhouse-datasource/\"\n        hasRequiredFields\n      />\n      <Divider />\n      <ConfigSection title=\"Server\">\n        <Field\n          required\n          label={labels.serverAddress.label}\n          description={labels.serverAddress.tooltip}\n          invalid={!jsonData.host}\n          error={labels.serverAddress.error}\n        >\n          <Input\n            name=\"host\"\n            width={80}\n            value={jsonData.host || ''}\n            onChange={onUpdateDatasourceJsonDataOption(props, 'host')}\n            label={labels.serverAddress.label}\n            aria-label={labels.serverAddress.label}\n            placeholder={labels.serverAddress.placeholder}\n          />\n        </Field>\n        <Field\n          required\n          label={labels.serverPort.label}\n          description={portDescription}\n          invalid={!jsonData.port}\n          error={labels.serverPort.error}\n        >\n          <Input\n            name=\"port\"\n            width={40}\n            type=\"number\"\n            value={jsonData.port || ''}\n            onChange={e => onPortChange(e.currentTarget.value)}\n            label={labels.serverPort.label}\n            aria-label={labels.serverPort.label}\n            placeholder={defaultPort}\n          />\n        </Field>\n\n        <Field label={labels.protocol.label} description={labels.protocol.tooltip}>\n          <RadioButtonGroup<Protocol>\n            options={protocolOptions}\n            disabledOptions={[]}\n            value={jsonData.protocol || Protocol.Native}\n            onChange={(e) => onProtocolToggle(e!)}\n          />\n        </Field>\n        <Field label={labels.secure.label} description={labels.secure.tooltip}>\n          <Switch\n            id=\"secure\"\n            className=\"gf-form\"\n            value={jsonData.secure || false}\n            onChange={(e) => onSwitchToggle('secure', e.currentTarget.checked)}\n          />\n        </Field>\n\n        { jsonData.protocol === Protocol.Http &&\n          <Field label={labels.path.label} description={labels.path.tooltip}>\n            <Input\n              value={jsonData.path || ''}\n              name=\"path\"\n              width={80}\n              onChange={onUpdateDatasourceJsonDataOption(props, 'path')}\n              label={labels.path.label}\n              aria-label={labels.path.label}\n              placeholder={labels.path.placeholder}\n            />\n          </Field>\n        }\n      </ConfigSection>\n\n      { jsonData.protocol === Protocol.Http &&\n        <HttpHeadersConfig\n          headers={options.jsonData.httpHeaders}\n          forwardGrafanaHeaders={options.jsonData.forwardGrafanaHeaders}\n          secureFields={options.secureJsonFields}\n          onHttpHeadersChange={headers => onHttpHeadersChange(headers, options, onOptionsChange)}\n          onForwardGrafanaHeadersChange={forwardGrafanaHeaders => onSwitchToggle('forwardGrafanaHeaders', forwardGrafanaHeaders)}\n        />\n      }\n\n      <Divider />\n      <ConfigSection title=\"TLS / SSL Settings\">\n        <Field\n          label={labels.tlsSkipVerify.label}\n          description={labels.tlsSkipVerify.tooltip}\n        >\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsSkipVerify || false}\n            onChange={(e) => onTLSSettingsChange('tlsSkipVerify', e.currentTarget.checked)}\n          />\n        </Field>\n        <Field\n          label={labels.tlsClientAuth.label}\n          description={labels.tlsClientAuth.tooltip}\n        >\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsAuth || false}\n            onChange={(e) => onTLSSettingsChange('tlsAuth', e.currentTarget.checked)}\n          />\n        </Field>\n        <Field\n          label={labels.tlsAuthWithCACert.label}\n          description={labels.tlsAuthWithCACert.tooltip}\n        >\n          <Switch\n            className=\"gf-form\"\n            value={jsonData.tlsAuthWithCACert || false}\n            onChange={(e) => onTLSSettingsChange('tlsAuthWithCACert', e.currentTarget.checked)}\n          />\n        </Field>\n        {jsonData.tlsAuthWithCACert && (\n          <CertificationKey\n            hasCert={!!hasTLSCACert}\n            onChange={(e) => onCertificateChangeFactory('tlsCACert', e.currentTarget.value)}\n            placeholder={labels.tlsCACert.placeholder}\n            label={labels.tlsCACert.label}\n            onClick={() => onResetClickFactory('tlsCACert')}\n          />\n        )}\n        {jsonData.tlsAuth && (\n          <>\n            <CertificationKey\n              hasCert={!!hasTLSClientCert}\n              onChange={(e) => onCertificateChangeFactory('tlsClientCert', e.currentTarget.value)}\n              placeholder={labels.tlsClientCert.placeholder}\n              label={labels.tlsClientCert.label}\n              onClick={() => onResetClickFactory('tlsClientCert')}\n            />\n            <CertificationKey\n              hasCert={!!hasTLSClientKey}\n              placeholder={labels.tlsClientKey.placeholder}\n              label={labels.tlsClientKey.label}\n              onChange={(e) => onCertificateChangeFactory('tlsClientKey', e.currentTarget.value)}\n              onClick={() => onResetClickFactory('tlsClientKey')}\n            />\n          </>\n        )}\n      </ConfigSection>\n\n      <Divider />\n      <ConfigSection title=\"Credentials\">\n        <Field\n          label={labels.username.label}\n          description={labels.username.tooltip}\n        >\n          <Input\n            name=\"user\"\n            width={40}\n            value={jsonData.username || ''}\n            onChange={onUpdateDatasourceJsonDataOption(props, 'username')}\n            label={labels.username.label}\n            aria-label={labels.username.label}\n            placeholder={labels.username.placeholder}\n          />\n        </Field>\n        <Field label={labels.password.label} description={labels.password.tooltip}>\n          <SecretInput\n            name=\"pwd\"\n            width={40}\n            label={labels.password.label}\n            aria-label={labels.password.label}\n            placeholder={labels.password.placeholder}\n            value={secureJsonData.password || ''}\n            isConfigured={(secureJsonFields && secureJsonFields.password) as boolean}\n            onReset={onResetPassword}\n            onChange={onUpdateDatasourceSecureJsonDataOption(props, 'password')}\n          />\n        </Field>\n      </ConfigSection>\n\n      <Divider />\n      <ConfigSection\n        title=\"Additional settings\"\n        description=\"Additional settings are optional settings that can be configured for more control over your data source. This includes the default database, dial and query timeouts, SQL validation, and custom ClickHouse settings.\"\n        isCollapsible\n        isInitiallyOpen={hasAdditionalSettings}\n      >\n        <Divider />\n        <DefaultDatabaseTableConfig\n          defaultDatabase={jsonData.defaultDatabase}\n          defaultTable={jsonData.defaultTable}\n          onDefaultDatabaseChange={onUpdateDatasourceJsonDataOption(props, 'defaultDatabase')}\n          onDefaultTableChange={onUpdateDatasourceJsonDataOption(props, 'defaultTable')}\n        />\n        \n        <Divider />\n        <QuerySettingsConfig\n          connMaxLifetime={jsonData.connMaxLifetime}\n          dialTimeout={jsonData.dialTimeout}\n          maxIdleConns={jsonData.maxIdleConns}\n          maxOpenConns={jsonData.maxOpenConns}\n          queryTimeout={jsonData.queryTimeout}\n          validateSql={jsonData.validateSql}\n          onConnMaxIdleConnsChange={onUpdateDatasourceJsonDataOption(props, 'maxIdleConns')}\n          onConnMaxLifetimeChange={onUpdateDatasourceJsonDataOption(props, 'connMaxLifetime')}\n          onConnMaxOpenConnsChange={onUpdateDatasourceJsonDataOption(props, 'maxOpenConns')}\n          onDialTimeoutChange={onUpdateDatasourceJsonDataOption(props, 'dialTimeout')}\n          onQueryTimeoutChange={onUpdateDatasourceJsonDataOption(props, 'queryTimeout')}\n          onValidateSqlChange={e => onSwitchToggle('validateSql', e.currentTarget.checked)}\n        />\n\n        <Divider />\n        <LogsConfig\n          logsConfig={jsonData.logs}\n          onDefaultDatabaseChange={db => onLogsConfigChange('defaultDatabase', db)}\n          onDefaultTableChange={table => onLogsConfigChange('defaultTable', table)}\n          onOtelEnabledChange={v => onLogsConfigChange('otelEnabled', v)}\n          onOtelVersionChange={v => onLogsConfigChange('otelVersion', v)}\n          onTimeColumnChange={c => onLogsConfigChange('timeColumn', c)}\n          onLevelColumnChange={c => onLogsConfigChange('levelColumn', c)}\n          onMessageColumnChange={c => onLogsConfigChange('messageColumn', c)}\n          onSelectContextColumnsChange={c => onLogsConfigChange('selectContextColumns', c)}\n          onContextColumnsChange={c => onLogsConfigChange('contextColumns', c)}\n        />\n\n        <Divider />\n        <TracesConfig\n          tracesConfig={jsonData.traces}\n          onDefaultDatabaseChange={db => onTracesConfigChange('defaultDatabase', db)}\n          onDefaultTableChange={table => onTracesConfigChange('defaultTable', table)}\n          onOtelEnabledChange={v => onTracesConfigChange('otelEnabled', v)}\n          onOtelVersionChange={v => onTracesConfigChange('otelVersion', v)}\n          onTraceIdColumnChange={c => onTracesConfigChange('traceIdColumn', c)}\n          onSpanIdColumnChange={c => onTracesConfigChange('spanIdColumn', c)}\n          onOperationNameColumnChange={c => onTracesConfigChange('operationNameColumn', c)}\n          onParentSpanIdColumnChange={c => onTracesConfigChange('parentSpanIdColumn', c)}\n          onServiceNameColumnChange={c => onTracesConfigChange('serviceNameColumn', c)}\n          onDurationColumnChange={c => onTracesConfigChange('durationColumn', c)}\n          onDurationUnitChange={c => onTracesConfigChange('durationUnit', c)}\n          onStartTimeColumnChange={c => onTracesConfigChange('startTimeColumn', c)}\n          onTagsColumnChange={c => onTracesConfigChange('tagsColumn', c)}\n          onServiceTagsColumnChange={c => onTracesConfigChange('serviceTagsColumn', c)}\n          onKindColumnChange={c => onTracesConfigChange('kindColumn', c)}\n          onStatusCodeColumnChange={c => onTracesConfigChange('statusCodeColumn', c)}\n          onStatusMessageColumnChange={c => onTracesConfigChange('statusMessageColumn', c)}\n          onStateColumnChange={c => onTracesConfigChange('stateColumn', c)}\n          onInstrumentationLibraryNameColumnChange={c => onTracesConfigChange('instrumentationLibraryNameColumn', c)}\n          onInstrumentationLibraryVersionColumnChange={c => onTracesConfigChange('instrumentationLibraryVersionColumn', c)}\n          onFlattenNestedChange={c => onTracesConfigChange('flattenNested', c)}\n          onEventsColumnPrefixChange={c => onTracesConfigChange('traceEventsColumnPrefix', c)}\n          onLinksColumnPrefixChange={c => onTracesConfigChange('traceLinksColumnPrefix', c)}\n        />\n\n        <Divider />\n        <AliasTableConfig aliasTables={jsonData.aliasTables} onAliasTablesChange={onAliasTableConfigChange} />\n        <Divider />\n        {config.secureSocksDSProxyEnabled && versionGte(config.buildInfo.version, '10.0.0') && (\n          <Field\n            label={labels.secureSocksProxy.label}\n            description={labels.secureSocksProxy.tooltip}\n          >\n            <Switch\n              className=\"gf-form\"\n              value={jsonData.enableSecureSocksProxy || false}\n              onChange={(e) => onSwitchToggle('enableSecureSocksProxy', e.currentTarget.checked)}\n            />\n          </Field>\n        )}\n        <ConfigSubSection title=\"Custom Settings\">\n          {customSettings.map(({ setting, value }, i) => {\n            return (\n              <Stack key={i} direction='row'>\n                <Field label={`Setting`} aria-label={`Setting`}>\n                  <Input\n                    value={setting}\n                    placeholder={'Setting'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting: changeEvent.target.value, value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n                <Field label={'Value'} aria-label={`Value`}>\n                  <Input\n                    value={value}\n                    placeholder={'Value'}\n                    onChange={(changeEvent: ChangeEvent<HTMLInputElement>) => {\n                      let newSettings = customSettings.concat();\n                      newSettings[i] = { setting, value: changeEvent.target.value };\n                      setCustomSettings(newSettings);\n                    }}\n                    onBlur={() => {\n                      onCustomSettingsChange(customSettings);\n                    }}\n                  ></Input>\n                </Field>\n              </Stack>\n            );\n          })}\n          <Button\n            variant=\"secondary\"\n            icon=\"plus\"\n            type=\"button\"\n            onClick={() => {\n              setCustomSettings([...customSettings, { setting: '', value: '' }]);\n            }}\n          >\n            Add custom setting\n          </Button>\n        </ConfigSubSection>\n      </ConfigSection>\n    </>\n  );\n};\n","import { reportInteraction } from '@grafana/runtime';\nimport { CHQuery, EditorType } from 'types/sql';\nimport { QueryType, BuilderMode } from 'types/queryBuilder';\n\nexport const trackClickhouseDashboardLoaded = (props: ClickhouseDashboardLoadedProps) => {\n  reportInteraction('grafana_ds_clickhouse_dashboard_loaded', props);\n};\n\nexport type ClickhouseCounters = {\n  sql_queries: number;\n  sql_query_type_table: number;\n  sql_query_type_logs: number;\n  sql_query_type_timeseries: number;\n  sql_query_type_traces: number;\n\n  builder_queries: number;\n  builder_query_type_table: number;\n  builder_query_type_table_simple: number;\n  builder_query_type_table_aggregate: number;\n  builder_query_type_logs: number;\n  builder_query_type_timeseries: number;\n  builder_query_type_timeseries_simple: number;\n  builder_query_type_timeseries_aggregate: number;\n  builder_query_type_traces: number;\n  builder_query_type_traces_search: number;\n  builder_query_type_traces_id: number;\n  builder_minimized_queries: number;\n  builder_otel_queries: number;\n};\n\nexport interface ClickhouseDashboardLoadedProps extends ClickhouseCounters {\n  clickhouse_plugin_version?: string;\n  grafana_version?: string;\n  dashboard_id: string;\n  org_id?: number;\n  [key: string]: any;\n}\n\nexport const analyzeQueries = (queries: CHQuery[]): ClickhouseCounters => {\n  const c: ClickhouseCounters = {\n    sql_queries: 0,\n    sql_query_type_table: 0,\n    sql_query_type_logs: 0,\n    sql_query_type_timeseries: 0,\n    sql_query_type_traces: 0,\n\n    builder_queries: 0,\n    builder_query_type_table: 0,\n    builder_query_type_table_simple: 0,\n    builder_query_type_table_aggregate: 0,\n    builder_query_type_logs: 0,\n    builder_query_type_timeseries: 0,\n    builder_query_type_timeseries_simple: 0,\n    builder_query_type_timeseries_aggregate: 0,\n    builder_query_type_traces: 0,\n    builder_query_type_traces_search: 0,\n    builder_query_type_traces_id: 0,\n    builder_minimized_queries: 0,\n    builder_otel_queries: 0\n  };\n\n  queries.forEach(q => {\n    if (q.editorType === EditorType.SQL) {\n      c.sql_queries++;\n\n      if (q.queryType === QueryType.Table) {\n        c.sql_query_type_table++;\n      } else if (q.queryType === QueryType.Logs) {\n        c.sql_query_type_logs++;\n      } else if (q.queryType === QueryType.TimeSeries) {\n        c.sql_query_type_timeseries++;\n      } else if (q.queryType === QueryType.Traces) {\n        c.sql_query_type_traces++;\n      }\n    } else if (q.editorType === EditorType.Builder) {\n      c.builder_queries++;\n\n      if (!q.builderOptions) {\n        return;\n      }\n\n      if (q.builderOptions.queryType === QueryType.Table) {\n        c.builder_query_type_table++;\n\n        if (q.builderOptions.mode === BuilderMode.Aggregate) {\n          c.builder_query_type_table_aggregate++;\n        } else {\n          c.builder_query_type_table_simple++;\n        }\n      } else if (q.builderOptions.queryType === QueryType.Logs) {\n        c.builder_query_type_logs++;\n      } else if (q.builderOptions.queryType === QueryType.TimeSeries) {\n        c.builder_query_type_timeseries++;\n\n        if (q.builderOptions.mode === BuilderMode.Trend) {\n          c.builder_query_type_timeseries_aggregate++;\n        } else {\n          c.builder_query_type_timeseries_simple++;\n        }\n      } else if (q.builderOptions.queryType === QueryType.Traces) {\n        c.builder_query_type_traces++;\n\n        if (q.builderOptions.meta?.isTraceIdMode) {\n          c.builder_query_type_traces_id++;\n        } else {\n          c.builder_query_type_traces_search++;\n        }\n      }\n\n      if (q.builderOptions.meta?.minimized) {\n        c.builder_minimized_queries++;\n      }\n\n      if (q.builderOptions.meta?.otelEnabled) {\n        c.builder_otel_queries++;\n      }\n    }\n  });\n\n  return c;\n};\n"],"names":["sqlParser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","$Ve1","$Vf1","$Vg1","$Vh1","$Vi1","$Vj1","$Vk1","$Vl1","$Vm1","$Vn1","$Vo1","$Vp1","$Vq1","$Vr1","$Vs1","$Vt1","$Vu1","$Vv1","$Vw1","$Vx1","$Vy1","$Vz1","$VA1","$VB1","$VC1","$VD1","$VE1","$VF1","$VG1","$VH1","$VI1","$VJ1","$VK1","$VL1","$VM1","$VN1","$VO1","$VP1","$VQ1","$VR1","$VS1","$VT1","$VU1","$VV1","$VW1","$VX1","$VY1","$VZ1","$V_1","$V$1","$V02","parser","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","nodeType","value","hasSemicolon","this","$","orderBy","limit","type","left","distinctOpt","right","highPriorityOpt","maxStateMentTimeOpt","straightJoinOpt","sqlSmallResultOpt","sqlBigResultOpt","sqlBufferResultOpt","sqlCacheOpt","sqlCalcFoundRowsOpt","selectItems","from","partition","where","groupBy","having","procedure","updateLockMode","push","alias","hasAs","$01","name","params","when","then","caseExprOpt","whenThenList","else","prefix","hasRow","hasExists","identifier","operator","hasNot","escape","subQueryOpt","rollUp","sortOpt","offsetMode","hasOj","leftRight","outOpt","innerCrossOpt","condition","forOpt","indexOrKey","indexHintOpt","hasParentheses","param","slice","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","args","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","Sql","buffer","stringify","ast","sql","travelMain","travel","append","noSuffixFlag","appendKeyword","keyword","noPrefix","noSuffix","toUpperCase","word","travelSelect","travelSelectExpr","exprList","travelIsExpression","travelNotExpression","travelOrExpression","travelAndExpression","travelXORExpression","travelNull","travelBoolean","travelBooleanExtra","travelNumber","travelString","travelFunctionCall","travelFunctionCallParam","travelIdentifier","travelIdentifierList","list","travelWhenThenList","travelCaseWhen","travelPrefix","travelSimpleExprParentheses","travelSubQuery","travelIdentifierExpr","travelBitExpression","travelInSubQueryPredicate","travelInExpressionListPredicate","travelBetweenPredicate","travelSoundsLikePredicate","travelLikePredicate","travelRegexpPredicate","travelIsNullBooleanPrimary","travelComparisonBooleanPrimary","travelComparisonSubQueryBooleanPrimary","travelExpressionList","travelGroupBy","travelOrderBy","travelGroupByOrderByItem","travelLimit","travelTableReferences","TableReferences","travelTableReference","travelInnerCrossJoinTable","travelStraightJoinTable","travelLeftRightJoinTable","travelNaturalJoinTable","travelOnJoinCondition","travelUsingJoinCondition","travelPartitions","travelForOptIndexHint","travelIndexList","travelUseIndexHint","travelIgnoreIndexHint","travelForceIndexHint","travelTableFactor","travelUnion","travelSelectParenthesized","travelPlaceHolder","toString","hasSticky","RegExp","sticky","isRegExp","isObject","isArray","reEscape","s","reGroups","exec","reCapture","reUnion","regexps","map","regexpOrLiteral","obj","ignoreCase","global","multiline","source","pad","lastNLines","string","numLines","position","lineBreaks","idx","lastIndexOf","startPosition","substring","objectToRules","object","keys","getOwnPropertyNames","result","key","thing","forEach","rule","ruleOptions","j","include","arrayToRules","array","JSON","defaultType","fallback","shouldThrow","sort","a","b","toRules","spec","defaultErrorRule","compileRules","hasStates","errorRule","fast","fastAllowed","unicodeFlag","groups","parts","shift","charCodeAt","unicode","pat","regexp","test","fallbackRule","flags","suffix","compile","Lexer","start","checkStateGroup","g","compileStates","states","all","$all","ruleMap","included","splice","newRules","newRule","indexOf","fastKeys","keywordTransform","isMap","Map","reverseMap","types","tokenType","item","set","get","startState","reset","data","info","col","queuedToken","queuedText","queuedThrow","setState","save","re","eat","tokenToString","_getGroup","groupCount","undefined","queuedGroup","_token","group","charAt","lastIndex","matchNL","nl","size","formatError","Symbol","iterator","LexerIterator","message","numLinesAround","firstDisplayedLine","max","lastDisplayedLine","lastLineDigits","String","displayedLines","errorLines","lineNo","clone","has","freeze","keywords","root","factory","Rule","symbols","postprocess","id","highestId","State","dot","reference","wantedBy","isComplete","Column","grammar","wants","scannable","completed","Grammar","byName","StreamLexer","fromCompiled","keepHistory","lexerState","column","predict","process","current","getSymbolShortDisplay","literal","withCursorAt","symbolSequence","nextState","child","build","children","node","reverse","finish","fail","nextColumn","w","complete","exp","nulls","copy","ParserStart","ParserRules","lastLineBreak","nextLineBreak","feed","chunk","e","err","reportLexerError","constructor","expect","isToken","reportError","results","lexerError","tokenDisplay","lexerMessage","reportErrorCommon","lastColumnIndex","lastColumn","expectantStates","filter","nextSymbol","displayStateStack","buildFirstStateStack","stateStack","symbolDisplay","getSymbolDisplay","lastDisplay","sameDisplayCount","display","getSymbolLongDisplay","visited","prevState","childVisited","childResult","restore","rewind","considerations","t","module","exports","nearley","modules","installedModules","moduleId","m","d","getter","defineProperty","enumerable","toStringTag","mode","__esModule","ns","bind","property","unbox","doubleQuoted","box","track","tracking","trackingComments","lexerAny","moo_1","keywords_1","keywordsMap","sqlKeywords","toLowerCase","transform","caseInsensitiveKeywords","x","wordQuoted","eString","_","qparam","commentLine","commentFullOpen","commentFullClose","star","comma","space","int","float","lparen","rparen","lbracket","rbracket","semicolon","op_cast","op_colon","op_plus","op_eq","op_neq","op_membertext","op_member","op_minus","op_div","op_not_ilike","op_not_like","op_ilike","op_like","op_mod","op_exp","op_additive","op_compare","ops_others","codeblock","tok","commentFull","nested","comments","makeComment","trackingLoc","end","_location","comment","act","xs","ret","seek","doubleQuotedSym","unwrapNoBox","diff","uw","_a","AstDefaultMapper","arrayNilMap","assignChanged","astMapper","utils_1","orig","assign","changed","trimNullish","collection","mapper","val","withAccepts","modifierBuilder","instance","wrapped","super","SkipModifier","statement","alterTable","alterIndex","transaction","createIndex","createTable","truncateTable","delete","insert","with","withRecursive","selection","update","createExtension","tablespace","setGlobal","setTimezone","setNames","createSequence","alterSequence","drop","createEnum","alterEnum","createCompositeType","union","show","prepare","deallocate","createView","createMaterializedView","refreshMaterializedView","createSchema","raise","do","createFunction","dropFunction","values","NotSupported","never","query","select","ref","tableRef","dataType","returns","kind","columns","attributes","seq","change","as","expr","sets","returning","selectionColumn","_b","into","on","onConflict","exprs","ocdo","formatExprs","using","u","createColumn","likeTable","like","constraint","def","default","foreignTable","st","expressions","expression","changes","hasChanged","currentChange","tableAlteration","addColumn","addConstraint","alterColumn","renameTable","renameColumn","renameConstraint","dropColumn","dropConstraint","setTableOwner","inTable","alter","setColumnDefault","setColumnType","alterColumnSimple","alterColumnAddGenerated","inColumn","constraints","by","_in","in","fromTable","fromStatement","fromCall","y","nfrom","binary","unary","constant","arraySelect","cast","case","member","arrayIndex","ternary","valueKeyword","parameter","extract","callOverlay","callSubstring","lo","hi","operand","whens","withinGroupList","withinGroup","for","placing","proto","configurable","skipNext","impl","parent","__webpack_require__","intervalToString","normalizeInterval","buildInterval","unwrap","_c","_d","_e","_f","_g","_h","_j","mul","floor","ceil","nk","months","years","hours","minutes","seconds","milliseconds","sign","round","num","neg","vals","days","time","astVisitor","ast_mapper_1","Visitor","SkipVisitor","mapperProto","visitor","visitorBuilder","what","msg","depth","Date","__createBinding","k2","desc","getOwnPropertyDescriptor","writable","__exportStar","toSql","parseWithComments","parseIntervalLiteral","parseGeometricLiteral","parseArrayLiteral","parseFirst","parser_1","ast_visitor_1","to_sql_1","interval_builder_1","__importDefault","mod","nearley_1","main_ne_1","array_ne_1","geometric_ne_1","interval_ne_1","interval_iso_ne_1","lexer_1","sqlCompiled","arrayCompiled","geometricCompiled","intervalTextCompiled","intervalIsoCompiled","optEntry","entry","opts","doParse","_parse","parsed","locationTracking","asts","reg","startsWith","low","lexer_2","asName","asNameWithColumns","toStr","asLit","last","flatten","asStr","flattenStr","trim","fromEntries","kwSensitivity","sensitivity","notReservedKw","kw","rej","localeCompare","anyKw","kwSet","Set","setSeqOpts","defs","unboxed","add","parseFloat","parseInt","kw_primary","kw_unique","quoted_word","head","tail","kw_not","kw_with","kw_null","kw_array","asArray","config","arrayOf","kw_precision","kw_as","schema","kw_current_schema","kw_all","kw_analyse","kw_analyze","kw_and","kw_any","kw_asc","kw_asymmetric","kw_authorization","kw_binary","kw_both","kw_case","kw_cast","kw_check","kw_collate","kw_collation","kw_concurrently","kw_constraint","kw_create","kw_cross","kw_current_catalog","kw_current_date","kw_current_role","kw_current_time","kw_current_timestamp","kw_current_user","kw_default","kw_deferrable","kw_desc","kw_distinct","kw_do","kw_else","kw_end","kw_except","kw_false","kw_fetch","kw_for","kw_foreign","kw_freeze","kw_from","kw_full","kw_grant","kw_group","kw_having","kw_ilike","kw_in","kw_initially","kw_inner","kw_intersect","kw_into","kw_is","kw_isnull","kw_join","kw_lateral","kw_leading","kw_left","kw_like","kw_limit","kw_localtime","kw_localtimestamp","kw_natural","kw_notnull","kw_offset","kw_on","kw_only","kw_or","kw_order","kw_outer","kw_overlaps","kw_placing","kw_references","kw_returning","kw_right","kw_select","kw_session_user","kw_similar","kw_some","kw_symmetric","kw_table","kw_tablesample","kw_then","kw_to","kw_trailing","kw_true","kw_union","kw_user","kw_using","kw_variadic","kw_verbose","kw_when","kw_where","kw_window","_groupBy","_selectFor","selectFor","skip","columnNames","lateral","withOrdinality","distinct","order","op","opSchema","to","function","over","partitionBy","field","cols","ifNotExists","unlogged","locality","temporary","constraintName","localColumns","foreignColumns","reduce","onDelete","onUpdate","collate","verb","option","inherits","unique","concurrently","indexName","opclass","extension","version","variable","scope","format","level","isolationLevel","writeable","deferrable","overriding","_t","ifExists","only","behaviour","always","sequence","tables","identity","cascade","temp","owner","newName","newSchema","names","target","orReplace","recursive","parameters","checkOption","withData","specs","language","purity","code","leakproof","onNullInput","_tail","array_lexer_1","start_list","end_list","valueString","valueRaw","geometric_lexer_1","arg","lcurl","rcurl","path","closed","lcomp","rcomp","interval_lexer_1","elts","colon","interval_iso_lexer_1","T","P","Y","M","W","D","H","S","pg_escape_1","nm","ident","forceDoubleQuote","elems","addParen","first","visitGenerated","visitQualifiedName","cs","visitQualifiedNameAliased","visitOrderBy","visitSetVal","visitSeqOpts","incrementBy","minValue","maxValue","startWith","cache","cycle","ownedBy","visitQColumn","restart","tbl","visitOp","cname","updateExisting","Number","isInteger","cst","beg","appendConfig","ix","vlist","entries","tblCnt","f","locationOf","ANY","Comparator","comp","parseOptions","loose","debug","semver","COMPARATORLOOSE","COMPARATOR","TypeError","SemVer","er","cmp","intersects","Range","includePrerelease","includes","safeRe","SPACE_CHARACTERS","raw","formatted","parseRange","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","comparators","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","compare","other","compareMain","comparePre","compareBuild","inc","release","identifierBase","PRERELEASELOOSE","PRERELEASE","base","isNaN","eq","neq","gt","gte","lt","lte","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","throwErrors","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","env","NODE_DEBUG","console","numeric","anum","bnum","firstKey","looseOption","emptyOpts","safeSrc","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","BUILD","FULLPLAIN","MAINVERSIONLOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","prev","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__1308__","__WEBPACK_EXTERNAL_MODULE__5959__","__WEBPACK_EXTERNAL_MODULE__1269__","__webpack_module_cache__","cachedModule","__webpack_modules__","definition","prop","BuilderMode","QueryType","AggregateType","ColumnHint","TimeUnit","OrderByDirection","FilterOperator","EditorType","defaultCHBuilderQuery","pluginVersion","editorType","rawSql","builderOptions","database","queryType","Table","List","meta","getReplacementKey","isVariable","random","sqlToStatement","replaceVars","variableSql","replaceVariables","variableRegex","regExpArray","startIndex","replacementName","si","replaceMacroVariables","replaceFuncs","keywordRegex","replaceMacroFunctions","replaceParts","rfs","find","rft","rf","getTable","stm","tableName","AdHocFilter","setTargetTableFromQuery","_targetTable","adHocFilters","filters","isValid","warn","endsWith","escapeKey","escapeValueBasedOnOperator","convertOperatorToClickHouseOperator","GraphDrawStyle","GraphDrawStyle2","StackingMode","StackingMode2","BarAlignment","BarAlignment2","SECOND","MINUTE","HOUR","LogLevelColor","LogLevel","critical","colors","warning","unknown","dark","light","bootData","user","lightTheme","queryLogsVolume","datasource","logsVolumeRequest","Observable","observer","rawLogsVolume","LoadingState","Loading","queryResponse","subscription","isObservable","subscribe","aggregatedLogsVolume","timeField","levelFields","fields","TIME_FIELD_ALIAS","oneLevelDetected","DEFAULT_LOGS_ALIAS","totalLength","logLevel","df","MutableDataFrame","addField","FieldType","number","getLogVolumeFieldConfig","aggregateRawLogsVolume","custom","targets","absoluteRange","valueOf","Done","dataQueryResponse","toDataFrame","unsubscribe","color","displayNameFromDS","FieldColorModeId","Fixed","fixedColor","drawStyle","Bars","barAlignment","Center","lineColor","pointColor","fillColor","lineWidth","fillOpacity","stacking","Normal","getTimeFieldRoundingClause","scopedVars","interval","__interval_ms","intervalMs","LOG_LEVEL_TO_IN_CLAUSE","levels","allLevels","defaultLogsTable","defaultTraceTable","otel129","specUrl","logsTable","logColumnMap","Time","LogMessage","LogLabels","TraceId","logLevels","traceTable","traceColumnMap","TraceSpanId","TraceParentSpanId","TraceServiceName","TraceOperationName","TraceDurationTime","TraceTags","TraceServiceTags","TraceStatusCode","TraceKind","TraceStatusMessage","TraceState","flattenNested","traceDurationUnit","Nanoseconds","traceEventsColumnPrefix","traceLinksColumnPrefix","traceTimestampTableSuffix","getLatestVersion","getVersion","generateSql","hasTraceIdFilter","isTraceIdMode","traceId","Traces","generateTraceIdQuery","generateTraceSearchQuery","Logs","generateLogsQuery","TimeSeries","Trend","generateSimpleTimeSeriesQuery","generateAggregateTimeSeriesQuery","generateTableQuery","queryParts","selectParts","getColumnByHint","escapeIdentifier","traceServiceName","traceOperationName","traceStartTime","traceDurationTime","timeUnit","getTraceDurationSelectSql","selectPartsSql","getTableIdentifier","filterParts","getFilters","getOrderBy","getLimit","concatQueryParts","traceSpanId","traceParentSpanId","convertTimeFieldToMilliseconds","traceTags","traceServiceTags","traceStatusCode","Boolean","traceEventsPrefix","traceLinksPrefix","traceKind","traceStatusMessage","traceInstrumentationLibraryName","TraceInstrumentationLibraryName","traceInstrumentationLibraryVersion","TraceInstrumentationLibraryVersion","traceState","otelVersion","otel","applyTraceIdOptimization","otelEnabled","timestampTable","_options","logTime","logColumnHintsToAlias","getColumnIdentifier","logMessage","logLabels","hint","hasLogMessageFilter","logMessageLike","selectNames","timeColumn","columnsExcludingTimeColumn","aggregateSelectParts","aggregates","agg","aggregateType","hasAggregates","hasGroupBy","groupByTime","isAggregateMode","Aggregate","colName","sep","escapeValue","columnIdentifier","Seconds","Milliseconds","Microseconds","orderByParts","hintedColumn","dir","builtFilters","IsAnything","mapKey","negate","IsEmpty","IsNotEmpty","NotLike","OutsideGrafanaTimeRange","WithInGrafanaTimeRange","isNullFilter","isBooleanFilter","isNumberFilter","isDateFilter","isDateFilterWithoutValue","isDateType","isStringFilter","Like","isMultiFilter","unshift","builtFilter","isBooleanType","numberTypes","isNumberType","isStringType","stripTypeModifiers","IsNull","IsNotNull","In","NotIn","logAliasToColumnHintsEntries","logAliasToColumnHints","pluginPackage","versionPattern","SemVersion","isGtOrEq","compared","comparable","isNumber","isVersionGtOrEq","isBuilderOptionsRunnable","mapQueryBuilderOptionsToGrafanaFormat","mapQueryTypeToGrafanaFormat","mapGrafanaFormatToQueryType","tryApplyColumnHints","hintsToColumns","columnsToHints","columnLabelToPlaceholder","label","Components","QueryEditor","CodeEditor","container","Expand","Format","tooltip","AUTO","TABLE","TIME_SERIES","LOGS","TRACE","Types","SQLEditor","QueryBuilder","switcher","title","body","confirmText","dismissText","cannotConvert","TYPES","LIST","AGGREGATE","TREND","DATABASE","FROM","SELECT","tooltipTable","tooltipAggregate","ALIAS","AddLabel","RemoveLabel","AGGREGATES","WHERE","GROUP_BY","ORDER_BY","LIMIT","TIME_FIELD","LOGS_VOLUME_TIME_FIELD","LOG_LEVEL_FIELD","PREVIEW","Config","HttpHeaderConfig","headerEditor","addHeaderButton","removeHeaderButton","headerSecureSwitch","headerNameInput","headerValueInput","forwardGrafanaHeadersSwitch","AliasTableConfig","aliasEditor","addEntryButton","removeEntryButton","targetDatabaseInput","targetTableInput","aliasDatabaseInput","aliasTableInput","LogsContextPanel","alert","LogsContextKey","expandBuilderButton","LogsQueryBuilder","LogMessageLikeInput","AggregateEditor","sectionLabel","itemWrapper","itemRemoveButton","addButton","ColumnsEditor","multiSelectWrapper","GroupByEditor","LimitEditor","TraceIdInput","selectors","LogsContextPanelStyles","css","iconMatcher","contextName","LogContextKey","props","primaryColor","primaryTextColor","secondaryColor","secondaryTextColor","styles","containerLeft","contextValue","div","className","data-testid","Icon","span","datasourceUid","theme","useTheme2","secondary","main","primary","background","Alert","severity","Stack","direction","style","textDecoration","href","encodeURIComponent","Datasource","DataSourceWithBackend","getDataProvider","request","getSupportedSupplementaryQueryTypes","SupplementaryQueryType","LogsVolume","cloneDeep","intervalInfo","getIntervalInfo","__interval","hideFromInspector","supplementaryQuery","getSupplementaryLogsVolumeQuery","Builder","logLevelColumn","llf","Sum","Count","originalColumn","logVolumeSqlBuilderOptions","ASC","logVolumeSupplementaryQuery","refId","getSupplementaryQuery","originalQuery","metricFindQuery","frame","adHocFiltersStatus","canUseAdhocFilters","chQuery","isString","SQL","runQuery","ids","applyTemplateVariables","scoped","rawQuery","templateSrv","getTemplateSrv","applyConditionalAll","getVariables","skipAdHocFilter","getAdhocFilters","adHocCHVerReq","adHocFilter","templateVars","macro","macroIndex","getMacroArgs","templateVarParam","templateVar","phrase","modifyQuery","columnName","actionFrame","actionValue","lookupByAlias","lookupByName","lookupByLogsAlias","lookupByLogLabels","logLabelsFieldName","labels","dataFrameHasLogLabelWithName","nextFilters","Equals","NotEquals","filterType","nextOptions","argsIndex","bracketCount","lastArgEndIndex","argsSubstr","foundNode","getDefaultDatabase","settings","jsonData","defaultDatabase","getDefaultTable","defaultTable","getDefaultLogsDatabase","logs","getDefaultLogsTable","getDefaultLogsColumns","logsConfig","otelConfig","levelColumn","messageColumn","shouldSelectLogContextColumns","selectContextColumns","getLogContextColumnNames","contextColumns","getLogsOtelVersion","logConfig","getDefaultTraceDatabase","traces","getDefaultTraceTable","getDefaultTraceColumns","traceConfig","traceIdColumn","spanIdColumn","operationNameColumn","parentSpanIdColumn","serviceNameColumn","durationColumn","startTimeColumn","tagsColumn","serviceTagsColumn","kindColumn","statusCodeColumn","statusMessageColumn","instrumentationLibraryNameColumn","instrumentationLibraryVersionColumn","stateColumn","getTraceOtelVersion","getDefaultTraceDurationUnit","durationUnit","getDefaultTraceFlattenNested","getDefaultTraceEventsColumnPrefix","getDefaultTraceLinksColumnPrefix","fetchDatabases","fetchData","fetchTables","db","mapColumn","fetchEntities","fetchFields","jsonColumnName","view","DataFrameView","jsonPathsAndTypes","kv","pathAndTypes","picklistValues","Promise","fetchPathsForJSONColumns","flat","isAggregate","caseInsensitive","aliasTo","origin","description","syntax","returnedValue","examples","categories","fullTableName","getAliasTable","targetDatabase","targetTable","matchedEntry","aliasTables","matchDatabase","matchTable","aliasDatabase","aliasTable","fetchColumns","fullAliasTableName","fetchColumnsFromAliasTable","fetchColumnsFromTable","getTimezone","timezone","localTimezoneInfo","getTimeZoneInfo","getTimeZone","now","ianaName","hide","pipe","res","req","traceIdQuery","traceLogsQuery","traceField","minimized","defaultColumns","openInNewWindow","app","CoreApp","Explore","links","targetBlank","url","internal","uid","datasourceName","panelsState","spanId","transformQueryResponseWithTraceAndLogLinks","resolve","timeRange","getTagKeys","fetchTags","getTagValues","getTagSource","fetchTagValuesFromQuery","fetchTagValuesFromSchema","tagSource","ADHOC_VAR","isEmpty","verString","ver","getLogContextColumnsFromLogRow","row","contextColumnNames","isMapKey","mapName","keyName","dataFrame","contextColumnName","rowIndex","cacheFilters","contextQuery","LogRowContextQueryDirection","Forward","DESC","GreaterThanOrEqual","LessThanOrEqual","timeEpochNs","contextColumnFilters","firstValueFrom","showContextToggle","getLogRowContextUi","runContextQuery","createReactElement","instanceSettings","annotations","TagType","AdHocFilterStatus","CertificationKey","hasCert","onChange","onClick","placeholder","Field","Input","disabled","width","Button","variant","marginLeft","TextArea","rows","required","Protocol","GenericConfigSection","isCollapsible","isInitiallyOpen","typography","spacing","isOpen","setIsOpen","useState","iconName","isSubSection","collapsibleButtonAriaLabel","header","justifyContent","alignItems","margin","subtitle","fontWeight","fontWeightRegular","descriptionText","marginTop","marginBottom","bodySmall","content","h3","h6","IconButton","aria-label","ConfigSection","ConfigSubSection","DataSourceDescription","dataSourceName","docsLink","hasRequiredFields","link","cx","rel","Divider","buildInfo","GrafanaDivider","borderTop","border","weak","components","ConfigEditor","serverAddress","serverPort","insecureNativePort","insecureHttpPort","secureNativePort","secureHttpPort","protocol","username","password","tlsSkipVerify","tlsClientAuth","tlsAuthWithCACert","tlsCACert","tlsClientCert","tlsClientKey","secure","secureSocksProxy","HttpHeadersConfig","headerNameLabel","headerNamePlaceholder","insecureHeaderValueLabel","secureHeaderValueLabel","secureLabel","addHeaderLabel","forwardGrafanaHeaders","descriptionParts","addTableLabel","targetDatabaseLabel","targetDatabasePlaceholder","targetTableLabel","aliasDatabaseLabel","aliasDatabasePlaceholder","aliasTableLabel","DefaultDatabaseTableConfig","QuerySettingsConfig","connMaxLifetime","dialTimeout","maxIdleConns","maxOpenConns","queryTimeout","validateSql","TracesConfig","parentSpanId","serviceName","operationName","startTime","durationTime","tags","serviceTags","eventsPrefix","linksPrefix","statusCode","statusMessage","instrumentationLibraryName","instrumentationLibraryVersion","LogsConfig","EditorTypeSwitcher","QueryTypeSwitcher","sqlTooltip","DatabaseSelect","empty","TableSelect","OtelVersionSelect","SqlPreview","AggregatesEditor","aliasLabel","aliasTooltip","addLabel","OrderByEditor","FilterEditor","mapKeyPlaceholder","logTimeColumn","logMessageColumn","logLabelsColumn","liveView","logMessageFilter","clearButton","logLevelFilter","TimeSeriesQueryBuilder","simpleQueryModeLabel","aggregateQueryModeLabel","builderModeLabel","builderModeTooltip","TableQueryBuilder","TraceQueryBuilder","traceIdModeLabel","traceSearchModeLabel","traceModeLabel","traceModeTooltip","columnsSection","filtersSection","traceIdFilter","builder","timeseries","onDefaultDatabaseChange","onDefaultTableChange","allLabels","onConnMaxIdleConnsChange","onConnMaxLifetimeChange","onConnMaxOpenConnsChange","onDialTimeoutChange","onQueryTimeoutChange","onValidateSqlChange","Switch","role","enabled","onEnabledChange","selectedVersion","onVersionChange","wide","useEffect","useTheme","switchContainerStyle","padding","sm","height","formInputHeight","InlineFormLabel","GrafanaSwitch","currentTarget","checked","Select","menuPlacement","LabeledInput","Common","check","wrapper","smallBtn","selectWrapper","inlineSelect","firstLabel","expand","subHeader","inlineField","FormatSelector","formatSelector","VariablesEditor","inline","labelStyle","onOtelEnabledChange","onOtelVersionChange","onTimeColumnChange","onLevelColumnChange","onMessageColumnChange","onSelectContextColumnsChange","onContextColumnsChange","br","TagsInput","durationUnitOptions","DurationUnitSelect","unit","onTraceIdColumnChange","onSpanIdColumnChange","onOperationNameColumnChange","onParentSpanIdColumnChange","onServiceNameColumnChange","onDurationColumnChange","onDurationUnitChange","onStartTimeColumnChange","onTagsColumnChange","onServiceTagsColumnChange","onKindColumnChange","onStatusCodeColumnChange","onStatusMessageColumnChange","onStateColumnChange","onInstrumentationLibraryNameColumnChange","onInstrumentationLibraryVersionColumnChange","onFlattenNestedChange","onEventsColumnPrefixChange","onLinksColumnPrefixChange","tracesConfig","secureFields","onHttpHeadersChange","configuredSecureHeaders","useConfiguredSecureHttpHeaders","headers","setHeaders","setForwardGrafanaHeaders","allSelectors","HttpHeaderEditor","isSecureConfigured","onHeaderChange","nextHeaders","updateHeader","onRemove","removeHeader","icon","onForwardGrafanaHeadersChange","updateForwardGrafanaHeaders","setName","setValue","setSecure","setSecureConfigured","valueInput","SecretInput","isConfigured","onReset","onBlur","headerValueLabel","HorizontalGroup","secureJsonFields","useMemo","secureHeaders","onAliasTablesChange","setEntries","entryToUniqueKey","removeDuplicateEntries","duplicateKeys","AliasTableEditor","onEntryChange","nextEntries","updateEntry","removeEntry","setTargetDatabase","setTargetTable","setAliasDatabase","setAliasTable","normalizedName","getQueryOptionsFromSql","columnsAndAggregates","selectClauses","columnOrAggregate","selectCallFunc","getAggregatesFromAst","notFlag","getBinaryFilter","getRefFilter","getStringFilter","getIntFilter","getUnaryFilter","getCallFilter","getListFilter","getFiltersFromAst","ob","gb","confirmModalState","setConfirmModalState","cannotConvertModalState","setCannotConvertModalState","errorMessage","setErrorMessage","onEditorTypeChange","confirmed","onConfirmEditorTypeChange","RadioButtonGroup","ConfirmModal","onConfirm","onDismiss","allColumns","selectedColumns","onSelectedColumnsChange","showAllOption","customColumns","setCustomColumns","allColumnNames","selectedColumnNames","columnNamesSet","getCustomColumns","MultiSelect","onOpenMenu","onCloseMenu","selected","customColumnNames","columnMap","currentColumnMap","excludeAllColumn","nextSelectedColumns","tableColumn","existingColumn","allowCustomValue","defaultFilterFn","ColumnSelect","selectedColumn","onColumnChange","columnFilterFn","columnHint","invalid","clearable","selectedColumnName","staleOption","isClearable","sortOptions","OrderByItem","columnOptions","orderByItem","updateOrderByItem","removeOrderByItem","orderByOptions","onOrderByChange","nextOrderBy","fieldLabel","fieldSpacer","getOrderByOptions","allOptions","isAggregateQuery","allValues","customValues","setLimit","valueAsNumber","onLimitChange","boolValues","filterOperators","LessThan","GreaterThan","standardTimeOptions","defaultNewFilter","FilterValueNumberItem","FilterValueSingleStringItem","defaultValue","FilterValueMultiStringItem","FilterValueEditor","onFilterChange","fieldsList","getOptions","matchedFilter","utils","onBoolFilterValueChange","onDateFilterValueChange","dateOptions","onStringFilterValueChange","onMultiFilterValueChange","removeFilter","isMapType","mapKeys","setKeys","ignore","fetchUniqueMapKeys","catch","ex","lastDatabase","useRef","lastTable","useUniqueMapKeys","mapKeyOptions","wrap","align","justify","newFilter","onFilterConditionChange","restrictToFields","getFields","fieldName","matchingField","filterData","onFilterNameChange","onFilterMapKeyChange","getFilterOperatorsByType","onFilterOperatorChange","FiltersEditor","onFiltersChange","addFilter","newFilters","columnFilterDateTime","columnFilterString","useBuilderOptionChanges","nextValue","setColumns","lastDbTable","dbTable","BuilderOptionsActionType","createAction","payload","createGenericAction","setOptions","setAllOptions","setOtelEnabled","setOtelVersion","setColumnByHint","reducer","actionFn","actions","mergeBuilderOptionsState","buildInitialState","nextQueryType","nextColumns","savedOptions","defaultOptions","builderOptionsDispatch","useColumns","isNewQuery","useIsNewQuery","builderState","labelsColumn","showConfigWarning","setConfigWarningOpen","onOptionChange","didSetDefaults","defaultDb","includedColumns","useLogDefaultsOnMount","didSetColumns","useOtelColumns","hasDefaultColumnConfigured","didSetDefaultTime","useDefaultTimeColumn","appliedDefaultFilters","defaultFilters","defaultOrderBy","useDefaultFilters","configWarning","buttonContent","VerticalGroup","ModeSwitch","labelA","labelB","allAggregateOptions","Min","Max","Average","Any","aggregate","updateAggregate","removeAggregate","setAlias","aggregateOptions","onAggregatesChange","nextAggregates","aggregatesItem","onGroupByChange","onDatabaseChange","databases","setDatabases","useDatabases","onTableChange","setTables","useTables","DatabaseTableSelect","sqlEditor","inputId","setInputId","isColumnsOpen","setColumnsOpen","isFiltersOpen","setFiltersOpen","durationTimeColumn","defaultDurationUnit","defaultFlattenNested","defaultEventsColumnPrefix","defaultLinksColumnPrefix","useTraceDefaultsOnMount","Collapse","collapsible","onToggle","generatedSql","MinimizedQueryViewer","setDatabase","setTable","setQueryType","configQueryType","expandPhrases","phrases","flatMap","expandSinglePhrase","buildCombinations","parsePhrase","stripExtraWhitespace","items","parseAlteration","expectClosing","alterations","term","newIndex","parseConcatenation","parseTerm","parseMandatoryBlock","parseOptionalBlock","stringCombinations","ys","TokenType","createEofToken","EOF_TOKEN","Infinity","testToken","compareToken","ARRAY","RESERVED_DATA_TYPE","BY","RESERVED_KEYWORD","SET","RESERVED_CLAUSE","STRUCT","WINDOW","VALUES","isReserved","RESERVED_FUNCTION_NAME","RESERVED_PHRASE","RESERVED_SELECT","RESERVED_SET_OPERATION","RESERVED_JOIN","ARRAY_KEYWORD","CASE","END","WHEN","ELSE","THEN","BETWEEN","AND","OR","XOR","reservedSelect","reservedClauses","standardOnelineClauses","tabularOnelineClauses","reservedSetOperations","reservedJoins","reservedPhrases","bigquery","tokenizerOptions","reservedKeywords","reservedDataTypes","reservedFunctionNames","extraParens","stringTypes","quote","prefixes","requirePrefix","identTypes","identChars","dashes","paramTypes","positional","named","quoted","variableTypes","regex","lineCommentTypes","operators","postProcess","prevToken","detectArraySubscripts","processed","endIndex","findClosingAngleBracketIndex","typeDefTokens","IDENTIFIER","formatTypeDefToken","combineParameterizedTypes","formatOptions","onelineClauses","COMMA","db2","rest","paramChars","db2i","nestedBlockComments","duckdb","supportsXor","numbered","alwaysDenseOperators","hive","nextToken","mariadb","allowFirstCharNumber","mysql","tidb","n1ql","plsql","previousReservedToken","postgresql","operatorKeyword","redshift","spark","OPEN_PAREN","sqlite","trino","transactsql","propertyAccessOperators","singlestoredb","snowflake","arr","sortByLengthDesc","strings","equalizeWhitespace","isMultiline","escapeRegExp","WHITESPACE_REGEX","patternToRegex","pattern","toCaseInsensitivePattern","char","parenthesis","parens","pair","reservedWord","avoidIdentChars","rejectIdentCharsPattern","reservedKeywordsPattern","typesRegex","quotePatterns","specialDelimiterMap","patternList","specialDelimiters","buildQStringPatterns","singleQuotePattern","quoteTypes","prefixesPattern","stringPattern","specialChars","identifierPattern","letter","firstChars","restChars","withDashes","lineColFromIndex","TokenizerEngine","dialectName","tokenize","precedingWhitespace","getWhitespace","getNextToken","createParseError","dialectInfo","matchedText","START","ANY_CHAR","NestedComment","nestLevel","matchSection","Tokenizer","cfg","rulesBeforeParams","buildRulesBeforeParams","rulesAfterParams","buildRulesAfterParams","paramTypesOverrides","buildParamRules","validRules","BLOCK_COMMENT","LINE_COMMENT","QUOTED_IDENTIFIER","NUMBER","toCanonical","OPERATOR","varTypes","VARIABLE","varType","STRING","DELIMITER","CLOSE_PAREN","ASTERISK","PROPERTY_ACCESS_OPERATOR","NAMED_PARAMETER","QUOTED_PARAMETER","tokenKey","quoteChar","NUMBERED_PARAMETER","POSITIONAL_PARAMETER","customParam","CUSTOM_PARAMETER","dialectFromOptions","dialectOptions","tokenizer","processDialectFormatOptions","isTabularStyle","indentStyle","Params","getPositionalParameterIndex","setPositionalParameterIndex","propertyNameKeywordToIdent","prevNonCommentToken","nextNonCommentToken","funcNameToIdent","isOpenParen","dataTypeToParameterizedDataType","RESERVED_PARAMETERIZED_DATA_TYPE","identToArrayIdent","isOpenBracket","ARRAY_IDENTIFIER","dataTypeToArrayKeyword","isComment","LexerAdapter","_info","NodeType","el","toKeywordNode","toDataTypeNode","data_type","addComments","leading","trailing","leadingComments","trailingComments","addCommentsToArray","nodes","lead","statements","delimiter","clauses","limitToken","exp1","optional","exp2","limit_clause","limitKw","count","nameToken","clause","nameKw","all_columns_asterisk","set_operation","chain","arrayToken","brackets","array_subscript","function_call","open","close","openParen","closeParen","_1","_2","property_access","betweenToken","expr1","andToken","_3","expr2","between_predicate","betweenKw","andKw","caseToken","endToken","case_expression","caseKw","endKw","whenToken","cond","thenToken","case_when","whenKw","thenKw","elseToken","case_else","elseKw","parameterized_data_type","line_comment","block_comment","DISABLE_COMMENT","disable_comment","NearleyParser","WS","Layout","indentation","SPACE","NO_SPACE","trimHorizontalWhitespace","NO_NEWLINE","trimWhitespace","NEWLINE","addNewline","MANDATORY_NEWLINE","INDENT","addIndentation","SINGLE_INDENT","isHorizontalWhitespace","isRemovableWhitespace","newline","getLevel","itemToString","getLayoutItems","getSingleIndent","toTabularFormat","tokenText","padEnd","padStart","isTabularToken","isLogicalOperator","INDENT_TYPE_TOP_LEVEL","Indentation","indent","indentTypes","increaseTopLevel","increaseBlockLevel","decreaseTopLevel","decreaseBlockLevel","InlineLayout","expressionWidth","trailingSpace","addToLength","InlineLayoutError","ExpressionFormatter","dialectCfg","layout","formatNode","formatComments","formatNodeWithoutComments","formatFunctionCall","formatParameterizedDataType","formatArraySubscript","formatPropertyAccess","formatParenthesis","formatBetweenPredicate","formatCaseExpression","formatCaseWhen","formatCaseElse","formatClause","formatSetOperation","formatLimitClause","formatAllColumnsAsterisk","formatLiteral","formatIdentifier","formatParameter","formatOperator","formatComma","formatLineComment","formatBlockComment","formatDataType","formatKeywordNode","withComments","showFunctionKw","showDataType","formattedArray","showKw","showIdentifier","inlineLayout","formatInlineExpression","formatSubExpression","showNonTabularKw","isOnelineClause","formatClauseInOnelineStyle","formatClauseInTabularStyle","formatClauseInIndentedStyle","_node","denseOperators","fn","com","isMultilineBlockComment","splitBlockComment","isDocComment","oldParamIndex","formatJoin","formatLogicalOperator","formatKeyword","logicalOperatorNewline","keywordCase","showNonTabularFunctionKw","functionCase","identifierCase","dataTypeCase","Formatter","dialect","formatAst","trimEnd","createParser","stat","formatStatement","repeat","linesBetweenQueries","useTabs","tabWidth","newlineBeforeSemicolon","ConfigError","validateConfig","removedOptions","optionName","validateParamTypes","__rest","getOwnPropertySymbols","propertyIsEnumerable","dialectNameMap","tsql","supportedDialects","formatDialect","createDialect","formatSql","swapIdentifier","canonicalDialectName","replaceAll","registerSQL","lang","editor","fetchSuggestions","updateOptions","fixedOverflowWidgets","scrollBeyondLastLine","monaco","languages","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","getWordUntilPosition","startLineNumber","lineNumber","endLineNumber","startColumn","endColumn","getValue","getOffsetAt","registerDocumentFormattingEditProvider","provideDocumentFormattingEdits","getFullModelRange","tabSize","Token","isSignificant","matchKeyword","isKeyword","isError","isEnd","isWhitespaceASCII","isNumericASCII","isWordCharASCII","isHexDigit","isNumberSeparator","startOfBlock","hex","pos","nextTokenImpl","maxQuerySize","ErrorMaxQuerySizeExceeded","prevSignificantTokenType","successToken","errorToken","tokenBegin","nextQuotePos","nextEscapePos","isHex","findFirstNotSymbols","ErrorSingleQuoteIsNotClosed","StringLiteral","newlinePos","Comment","expectedEndByte","e2Pos","EndOfStream","currentChar","Whitespace","Dot","ErrorWrongNumber","BareWord","parseQuotedString","QuotedIdentifier","ErrorDoubleQuoteIsNotClosed","ErrorBackQuoteIsNotClosed","OpeningRoundBracket","ClosingRoundBracket","OpeningSquareBracket","ClosingSquareBracket","OpeningCurlyBrace","ClosingCurlyBrace","Comma","Semicolon","Plus","Arrow","commentUntilEndOfLine","Minus","Asterisk","nestingLevel","ErrorMultilineCommentIsNotClosed","Slash","Percent","ErrorSingleExclamationMark","Spaceship","LessOrEquals","Less","GreaterOrEquals","Greater","QuestionMark","Caret","DoubleColon","Colon","Concatenation","PipeMark","DoubleAt","At","VerticalDelimiter","parseUnicodeQuotedString","tokenStream","heredocNameEndPosition","heredocSize","heredoc","heredocEndPosition","HereDoc","DollarSign","parseQuotedHexOrBinString","newPos","fromCharCode","skipWhitespacesUTF8","pluginMacros","isFunction","documentation","example","columnType","QueryNodeParser","advance","hasNext","peek","nextIs","peekIs","parseSelectQueryNode","firstToken","parenDepth","endOfNode","fromNode","databaseOrTable","nestedNode","fullIdent","identToken","getCursorInSelectQueryNode","cursorPosition","cursorData","ClauseType","None","QueryNodeType","nestedCursorData","From","dbLen","extendedTokenLen","Identifier","getSuggestions","selectNode","getSuggestionsFromCursorData","mapping","With","Join","Where","GroupBy","Having","OrderBy","Limit","contextType","fetchDatabaseSuggestions","fetchTableSuggestions","macros","hasPrefix","nameNoPrefix","detail","CompletionItemKind","Function","Variable","sortText","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getMacroSuggestions","variables","getVariableSuggestions","Keyword","sqlFunctions","fetchFunctionSuggestions","fetchFieldSuggestions","quoteType","quoteClosed","Module","Class","functions","allow","useSchemaSuggestionsProvider","fetchFunctions","fetchSqlFunctions","QueryToolbox","showTools","onFormatCode","medium","flexGrow","fontSize","fontFamily","fontFamilyMonospace","success","whiteSpace","cursor","visibility","Tooltip","SqlEditor","editorRef","sqlQuery","saveChanges","_getSuggestions","suggestions","me","bad","nextLine","startLine","endLine","startCol","endCol","validate","setModelMarkers","onSave","showMiniMap","showLineNumbers","onEditorDidMount","getDomNode","updateHeight","contentHeight","getContentHeight","onDidContentSizeChange","setupAutoSize","onKeyUp","getModel","addAction","keybindings","KeyMod","CtrlCmd","KeyCode","Enter","contextMenuGroupId","contextMenuOrder","run","onRunQuery","onEditorWillUnmount","trigger","migrateV3CHQuery","savedQuery","builderQuery","migrateV3QueryBuilderOptions","rawSqlQuery","mapped","getV3QueryType","oldColumns","timeFieldType","logLevelField","oldAggregates","oldFilters","isV3CHQuery","oldPluginVersion","oldQueryType","CHEditorByType","dispatch","useReducer","useBuilderOptionsState","queryKey","lastKey","lastEditorType","shouldSkipChanges","plugin","DataSourcePlugin","setConfigEditor","onOptionsChange","secureJsonData","hasTLSCACert","hasTLSClientCert","hasTLSClientKey","protocolOptions","Native","Http","appliedDefaults","v3ServerField","host","v3TimeoutField","useConfigDefaults","onTLSSettingsChange","onSwitchToggle","onCertificateChangeFactory","onResetClickFactory","onCustomSettingsChange","customSettings","setting","onLogsConfigChange","onTracesConfigChange","setCustomSettings","hasAdditionalSettings","window","location","enableSecureSocksProxy","defaultPort","portDescription","uidWarning","onUpdateDatasourceJsonDataOption","port","onPortChange","disabledOptions","onProtocolToggle","httpHeaders","secureHttpHeaderKeys","secureHttpHeaderValues","currentSecureJsonFields","tlsAuth","onUpdateDatasourceSecureJsonDataOption","secureSocksDSProxyEnabled","versionGte","changeEvent","newSettings","setQueryEditor","migrateCHQuery","getAppEvents","DashboardLoadedEvent","dashboardId","orgId","grafanaVersion","queries","clickhouseQueries","pluginJson","q","clickhouse_plugin_version","clickhouseVersion","grafana_version","dashboard_id","org_id","sql_queries","sql_query_type_table","sql_query_type_logs","sql_query_type_timeseries","sql_query_type_traces","builder_queries","builder_query_type_table","builder_query_type_table_simple","builder_query_type_table_aggregate","builder_query_type_logs","builder_query_type_timeseries","builder_query_type_timeseries_simple","builder_query_type_timeseries_aggregate","builder_query_type_traces","builder_query_type_traces_search","builder_query_type_traces_id","builder_minimized_queries","builder_otel_queries","analyzeQueries","reportInteraction"],"sourceRoot":""}